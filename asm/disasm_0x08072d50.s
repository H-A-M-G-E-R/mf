    .include "asm/macros.inc"

    .syntax unified

	thumb_func_start LoadCommonGraphics
LoadCommonGraphics: @ 0x08072D50
	ldr r1, _08072D64 @ =0x040000D4
	ldr r0, _08072D68 @ =0x083E419C
	str r0, [r1]
	ldr r0, _08072D6C @ =0x06010800
	str r0, [r1, #4]
	ldr r0, _08072D70 @ =0x80001C00
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	bx lr
	.align 2, 0
_08072D64: .4byte 0x040000D4
_08072D68: .4byte 0x083E419C
_08072D6C: .4byte 0x06010800
_08072D70: .4byte 0x80001C00

	thumb_func_start CheckResetHudAndParticles
CheckResetHudAndParticles: @ 0x08072D74
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _08072DA4 @ =gUnk_03000be3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _08072DC8
	ldr r0, _08072DA8 @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _08072E1E
	ldr r4, _08072DAC @ =0x030007F8
	movs r5, #0xf
_08072D98:
	ldrb r0, [r4, #2]
	cmp r0, #0x42
	bhi _08072DB0
	movs r0, #0
	b _08072DBC
	.align 2, 0
_08072DA4: .4byte gUnk_03000be3
_08072DA8: .4byte gPauseScreenFlag
_08072DAC: .4byte 0x030007F8
_08072DB0:
	cmp r0, #0x46
	bne _08072DBE
	bl EventCheckOn_Escape
	cmp r0, #0
	bne _08072DBE
_08072DBC:
	strb r0, [r4]
_08072DBE:
	adds r4, #0xc
	subs r5, #1
	cmp r5, #0
	bge _08072D98
	b _08072E1E
_08072DC8:
	ldr r3, _08072E2C @ =gEnergyDigits
	ldr r4, _08072E30 @ =gMaxEnergyDigits
	ldr r5, _08072E34 @ =gMissileDigits
	ldr r6, _08072E38 @ =gPowerBombDigits
	ldr r0, _08072E3C @ =gMissileHighlightStatus
	mov ip, r0
	ldr r7, _08072E40 @ =gPowerBombHighlightStatus
	ldr r1, _08072E44 @ =gMinimapUpdateFlag
	mov r8, r1
	ldr r2, _08072E48 @ =gEscapeStatus
	mov sb, r2
	ldr r1, _08072E4C @ =0x030007F8
	movs r2, #0
	adds r0, r1, #0
	adds r0, #0xb4
_08072DE6:
	strb r2, [r0]
	subs r0, #0xc
	cmp r0, r1
	bge _08072DE6
	movs r0, #0
	movs r1, #9
	strb r1, [r3]
	strb r1, [r3, #1]
	strb r1, [r3, #2]
	strb r1, [r3, #3]
	strb r1, [r4]
	strb r1, [r4, #1]
	strb r1, [r4, #2]
	strb r1, [r4, #3]
	strb r1, [r5]
	strb r1, [r5, #1]
	strb r1, [r5, #2]
	strb r1, [r6]
	strb r1, [r6, #1]
	strb r1, [r6, #2]
	mov r1, ip
	strb r0, [r1]
	strb r0, [r7]
	movs r1, #3
	mov r2, r8
	strb r1, [r2]
	mov r1, sb
	strb r0, [r1]
_08072E1E:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08072E2C: .4byte gEnergyDigits
_08072E30: .4byte gMaxEnergyDigits
_08072E34: .4byte gMissileDigits
_08072E38: .4byte gPowerBombDigits
_08072E3C: .4byte gMissileHighlightStatus
_08072E40: .4byte gPowerBombHighlightStatus
_08072E44: .4byte gMinimapUpdateFlag
_08072E48: .4byte gEscapeStatus
_08072E4C: .4byte 0x030007F8

	thumb_func_start CheckParticleIsOnScreen
CheckParticleIsOnScreen: @ 0x08072E50
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r1, _08072E6C @ =0x030008B8
	ldrb r5, [r1]
	movs r0, #0x40
	ands r0, r5
	adds r4, r1, #0
	cmp r0, #0
	beq _08072E70
_08072E64:
	movs r0, #2
	orrs r0, r5
	b _08072ED6
	.align 2, 0
_08072E6C: .4byte 0x030008B8
_08072E70:
	ldr r0, _08072EE4 @ =gBg1YPosition
	ldr r3, _08072EE8 @ =gBg1XPosition
	movs r1, #0x80
	lsls r1, r1, #2
	adds r2, r1, #0
	ldrh r0, [r0]
	adds r1, r2, r0
	lsls r1, r1, #0x10
	ldrh r6, [r4, #8]
	adds r0, r2, r6
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r7, _08072EEC @ =0xFF800000
	adds r0, r1, r7
	lsrs r0, r0, #0x10
	mov ip, r0
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	lsrs r1, r1, #0x10
	mov r8, r1
	ldrh r3, [r3]
	adds r0, r2, r3
	lsls r0, r0, #0x10
	ldrh r1, [r4, #0xa]
	adds r2, r2, r1
	lsls r2, r2, #0x10
	adds r3, r7, #0
	adds r1, r0, r3
	lsrs r3, r2, #0x10
	movs r7, #0x88
	lsls r7, r7, #0x13
	adds r0, r0, r7
	lsrs r0, r0, #0x10
	cmp r1, r2
	bhs _08072EC4
	cmp r3, r0
	bhs _08072EC4
	cmp ip, r6
	bhs _08072EC4
	cmp r6, r8
	blo _08072E64
_08072EC4:
	ldrb r1, [r4]
	movs r0, #0x10
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	beq _08072ED6
	movs r0, #0xfd
	ands r0, r1
_08072ED6:
	strb r0, [r4]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08072EE4: .4byte gBg1YPosition
_08072EE8: .4byte gBg1XPosition
_08072EEC: .4byte 0xFF800000

	thumb_func_start DrawParticle
DrawParticle: @ 0x08072EF0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08072F28 @ =gNextOamSlot
	ldrb r3, [r0]
	ldr r1, _08072F2C @ =0x03000954
	ldr r4, [r1]
	ldrh r6, [r4]
	adds r4, #2
	adds r1, r6, r3
	cmp r1, #0x7f
	bgt _08072FE0
	lsls r1, r3, #3
	ldr r0, _08072F30 @ =gOamData
	adds r5, r1, r0
	ldr r2, _08072F34 @ =0x030008B8
	ldrb r1, [r2]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08072F38
	ldrh r0, [r2, #8]
	mov ip, r0
	ldrh r7, [r2, #0xa]
	b _08072F5A
	.align 2, 0
_08072F28: .4byte gNextOamSlot
_08072F2C: .4byte 0x03000954
_08072F30: .4byte gOamData
_08072F34: .4byte 0x030008B8
_08072F38:
	ldrh r1, [r2, #8]
	lsrs r1, r1, #2
	ldr r0, _08072F74 @ =gBg1YPosition
	ldrh r0, [r0]
	lsrs r0, r0, #2
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov ip, r1
	ldrh r1, [r2, #0xa]
	lsrs r1, r1, #2
	ldr r0, _08072F78 @ =gBg1XPosition
	ldrh r0, [r0]
	lsrs r0, r0, #2
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
_08072F5A:
	ldrb r1, [r2]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08072F80
	ldr r0, _08072F7C @ =gSamusOnTopOfBackgrounds
	ldrb r0, [r0]
	movs r2, #2
	cmp r0, #0
	beq _08072F82
	movs r2, #1
	b _08072F82
	.align 2, 0
_08072F74: .4byte gBg1YPosition
_08072F78: .4byte gBg1XPosition
_08072F7C: .4byte gSamusOnTopOfBackgrounds
_08072F80:
	movs r2, #0
_08072F82:
	adds r1, r6, r3
	mov sl, r1
	cmp r6, #0
	beq _08072FDA
	ldr r1, _08072FF0 @ =gOamData
	lsls r2, r2, #2
	mov r8, r2
	lsls r0, r3, #3
	adds r3, r0, r1
	movs r0, #0xd
	rsbs r0, r0, #0
	mov sb, r0
_08072F9A:
	ldrh r0, [r4]
	adds r4, #2
	strh r0, [r5]
	adds r5, #2
	add r0, ip
	strb r0, [r3]
	ldrh r1, [r4]
	adds r4, #2
	strh r1, [r5]
	adds r5, #2
	adds r1, r1, r7
	ldr r0, _08072FF4 @ =0x000001FF
	ands r1, r0
	ldrh r2, [r3, #2]
	ldr r0, _08072FF8 @ =0xFFFFFE00
	ands r0, r2
	orrs r0, r1
	strh r0, [r3, #2]
	ldrh r0, [r4]
	strh r0, [r5]
	adds r4, #2
	ldrb r1, [r3, #5]
	mov r0, sb
	ands r0, r1
	mov r1, r8
	orrs r0, r1
	strb r0, [r3, #5]
	adds r5, #4
	adds r3, #8
	subs r6, #1
	cmp r6, #0
	bne _08072F9A
_08072FDA:
	mov r1, sl
	ldr r0, _08072FFC @ =gNextOamSlot
	strb r1, [r0]
_08072FE0:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08072FF0: .4byte gOamData
_08072FF4: .4byte 0x000001FF
_08072FF8: .4byte 0xFFFFFE00
_08072FFC: .4byte gNextOamSlot

	thumb_func_start ParticleUpdate
ParticleUpdate: @ 0x08073000
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _080730D4 @ =gSubGameMode1
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #2
	bne _080730CA
	movs r6, #0
	ldr r2, _080730D8 @ =0x030007F8
	movs r5, #0
_08073016:
	adds r3, r5, r2
	ldrb r1, [r3]
	movs r0, #5
	ands r0, r1
	cmp r0, #5
	bne _08073062
	ldr r4, _080730DC @ =0x030008B8
	adds r1, r4, #0
	adds r0, r3, #0
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r1, _080730E0 @ =0x0879BCC0
	ldrb r0, [r4, #2]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl _call_via_r0
	ldrb r1, [r4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08073058
	bl CheckParticleIsOnScreen
	ldrb r1, [r4]
	movs r0, #0xa
	ands r0, r1
	cmp r0, #2
	bne _08073058
	adds r0, r6, #0
	bl DrawParticle
_08073058:
	ldr r2, _080730D8 @ =0x030007F8
	adds r1, r5, r2
	ldr r0, _080730DC @ =0x030008B8
	ldm r0!, {r3, r4, r7}
	stm r1!, {r3, r4, r7}
_08073062:
	adds r5, #0xc
	adds r6, #1
	cmp r6, #0xf
	ble _08073016
	movs r6, #0
	mov r8, r6
_0807306E:
	mov r0, r8
	adds r3, r0, r2
	ldrb r0, [r3]
	movs r4, #5
	ands r4, r0
	cmp r4, #1
	bne _080730BC
	ldr r5, _080730DC @ =0x030008B8
	adds r1, r5, #0
	adds r0, r3, #0
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r1, _080730E0 @ =0x0879BCC0
	ldrb r0, [r5, #2]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl _call_via_r0
	ldrb r0, [r5]
	ands r4, r0
	cmp r4, #0
	beq _080730B0
	bl CheckParticleIsOnScreen
	ldrb r1, [r5]
	movs r0, #0xa
	ands r0, r1
	cmp r0, #2
	bne _080730B0
	adds r0, r6, #0
	bl DrawParticle
_080730B0:
	ldr r2, _080730D8 @ =0x030007F8
	mov r0, r8
	adds r1, r0, r2
	ldr r0, _080730DC @ =0x030008B8
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
_080730BC:
	movs r7, #0xc
	add r8, r7
	adds r6, #1
	cmp r6, #0xf
	ble _0807306E
	bl EscapeUpdate
_080730CA:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080730D4: .4byte gSubGameMode1
_080730D8: .4byte 0x030007F8
_080730DC: .4byte 0x030008B8
_080730E0: .4byte 0x0879BCC0

	thumb_func_start ParticleSet
ParticleSet: @ 0x080730E4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov ip, r0
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov r8, r2
	movs r4, #0
	movs r2, #0
	ldr r0, _08073178 @ =0x030007F8
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	beq _0807314C
_08073108:
	adds r2, #1
	cmp r2, #0xf
	bgt _0807311E
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0]
	cmp r0, #0
	bne _08073108
	movs r4, #1
_0807311E:
	cmp r4, #0
	bne _0807314C
	movs r5, #0xff
	movs r2, #0
	ldr r0, _08073178 @ =0x030007F8
	adds r3, r0, #2
_0807312A:
	ldrb r0, [r3]
	movs r1, #0
	cmp r0, #0x42
	bhi _08073134
	ldrb r1, [r3, #2]
_08073134:
	cmp r4, r1
	bhs _0807313E
	adds r4, r1, #0
	lsls r0, r2, #0x18
	lsrs r5, r0, #0x18
_0807313E:
	adds r3, #0xc
	adds r2, #1
	cmp r2, #0xf
	ble _0807312A
	cmp r5, #0xff
	beq _0807316E
	adds r2, r5, #0
_0807314C:
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r2, #0
	movs r1, #1
	strb r1, [r0]
	movs r1, #0
	mov r3, ip
	strh r3, [r0, #8]
	strh r7, [r0, #0xa]
	strh r2, [r0, #6]
	strb r1, [r0, #1]
	mov r2, r8
	strb r2, [r0, #2]
	strb r1, [r0, #3]
	strb r1, [r0, #4]
_0807316E:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08073178: .4byte 0x030007F8

	thumb_func_start ParticleUpdateAnimation
ParticleUpdateAnimation: @ 0x0807317C
	push {lr}
	adds r3, r0, #0
	ldr r2, _080731C0 @ =0x030008B8
	ldrb r1, [r2, #1]
	adds r1, #1
	strb r1, [r2, #1]
	ldrh r0, [r2, #6]
	lsls r0, r0, #3
	adds r0, r0, r3
	ldrb r0, [r0, #4]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	cmp r0, r1
	bhi _080731B0
	movs r0, #0
	strb r0, [r2, #1]
	ldrh r0, [r2, #6]
	adds r0, #1
	strh r0, [r2, #6]
	ldrh r0, [r2, #6]
	lsls r0, r0, #3
	adds r0, r0, r3
	ldrb r0, [r0, #4]
	cmp r0, #0
	bne _080731B0
	strh r0, [r2, #6]
_080731B0:
	ldr r0, _080731C4 @ =0x03000954
	ldrh r1, [r2, #6]
	lsls r1, r1, #3
	adds r1, r1, r3
	ldr r1, [r1]
	str r1, [r0]
	pop {r0}
	bx r0
	.align 2, 0
_080731C0: .4byte 0x030008B8
_080731C4: .4byte 0x03000954

	thumb_func_start ParticleNone
ParticleNone: @ 0x080731C8
	push {r4, lr}
	ldr r4, _080731E4 @ =0x030008B8
	ldrb r0, [r4, #3]
	cmp r0, #0
	bne _080731EC
	ldr r0, _080731E8 @ =0x0858EAE8
	bl ParticleUpdateAnimation
	movs r0, #0x50
	strb r0, [r4, #3]
	ldrb r1, [r4]
	movs r0, #0x14
	orrs r0, r1
	b _0807321C
	.align 2, 0
_080731E4: .4byte 0x030008B8
_080731E8: .4byte 0x0858EAE8
_080731EC:
	subs r0, #1
	strb r0, [r4, #3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	bls _08073204
	ldr r0, _08073200 @ =0x0858EAE8
	bl ParticleUpdateAnimation
	b _0807321E
	.align 2, 0
_08073200: .4byte 0x0858EAE8
_08073204:
	cmp r0, #0x1e
	bne _08073210
	movs r1, #0
	movs r0, #0
	strh r0, [r4, #6]
	strb r1, [r4, #1]
_08073210:
	ldr r0, _08073224 @ =0x0858EB10
	bl ParticleUpdateAnimation
	ldrb r0, [r4, #3]
	cmp r0, #0
	bne _0807321E
_0807321C:
	strb r0, [r4]
_0807321E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073224: .4byte 0x0858EB10

	thumb_func_start ParticleBomb
ParticleBomb: @ 0x08073228
	push {r4, lr}
	ldr r4, _08073268 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _0807326C @ =0x083EA57C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073246
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073246
	strb r0, [r4]
_08073246:
	ldr r2, _08073268 @ =0x030008B8
	ldrb r0, [r2, #3]
	cmp r0, #0
	bne _08073260
	adds r0, #1
	strb r0, [r2, #3]
	ldrb r1, [r2]
	movs r0, #4
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0xde
	bl SoundPlay
_08073260:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073268: .4byte 0x030008B8
_0807326C: .4byte 0x083EA57C

	thumb_func_start ParticleFlareHit
ParticleFlareHit: @ 0x08073270
	push {r4, lr}
	ldr r4, _080732A8 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _080732AC @ =0x083EE3DC
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0807328E
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _0807328E
	strb r0, [r4]
_0807328E:
	ldr r1, _080732A8 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080732A0
	adds r0, #1
	strb r0, [r1, #3]
	movs r0, #0xf6
	bl SoundPlay
_080732A0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080732A8: .4byte 0x030008B8
_080732AC: .4byte 0x083EE3DC

	thumb_func_start ParticleNormalBeamHit
ParticleNormalBeamHit: @ 0x080732B0
	push {r4, lr}
	ldr r4, _080732E8 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _080732EC @ =0x083EE464
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080732CE
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080732CE
	strb r0, [r4]
_080732CE:
	ldr r1, _080732E8 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080732E0
	adds r0, #1
	strb r0, [r1, #3]
	movs r0, #0xf2
	bl SoundPlay
_080732E0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080732E8: .4byte 0x030008B8
_080732EC: .4byte 0x083EE464

	thumb_func_start ParticleChargeBeamHit
ParticleChargeBeamHit: @ 0x080732F0
	push {r4, lr}
	ldr r4, _08073328 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _0807332C @ =0x083EE4FC
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0807330E
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _0807330E
	strb r0, [r4]
_0807330E:
	ldr r1, _08073328 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073320
	adds r0, #1
	strb r0, [r1, #3]
	movs r0, #0xf3
	bl SoundPlay
_08073320:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073328: .4byte 0x030008B8
_0807332C: .4byte 0x083EE4FC

	thumb_func_start ParticleWideBeamHit
ParticleWideBeamHit: @ 0x08073330
	push {r4, lr}
	ldr r4, _08073368 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _0807336C @ =0x083EE5D0
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0807334E
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _0807334E
	strb r0, [r4]
_0807334E:
	ldr r1, _08073368 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073360
	adds r0, #1
	strb r0, [r1, #3]
	movs r0, #0xf4
	bl SoundPlay
_08073360:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073368: .4byte 0x030008B8
_0807336C: .4byte 0x083EE5D0

	thumb_func_start ParticlePlasmaBeamHit
ParticlePlasmaBeamHit: @ 0x08073370
	push {r4, lr}
	ldr r4, _080733A8 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _080733AC @ =0x083EE740
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0807338E
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _0807338E
	strb r0, [r4]
_0807338E:
	ldr r1, _080733A8 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080733A0
	adds r0, #1
	strb r0, [r1, #3]
	movs r0, #0xf5
	bl SoundPlay
_080733A0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080733A8: .4byte 0x030008B8
_080733AC: .4byte 0x083EE740

	thumb_func_start ParticleInvincibleHit
ParticleInvincibleHit: @ 0x080733B0
	push {r4, lr}
	ldr r4, _080733E8 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _080733EC @ =0x083EE7A0
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080733CE
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080733CE
	strb r0, [r4]
_080733CE:
	ldr r1, _080733E8 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080733E0
	adds r0, #1
	strb r0, [r1, #3]
	movs r0, #0xf8
	bl CheckPlayNotAlreadyPlayingSound
_080733E0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080733E8: .4byte 0x030008B8
_080733EC: .4byte 0x083EE7A0

	thumb_func_start ParticleNormalMissileExplosion
ParticleNormalMissileExplosion: @ 0x080733F0
	push {r4, lr}
	ldr r4, _0807342C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073430 @ =0x083EAA3C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0807340E
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _0807340E
	strb r0, [r4]
_0807340E:
	ldr r1, _0807342C @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073426
	adds r0, #1
	strb r0, [r1, #3]
	movs r0, #0xcf
	bl StopSound
	movs r0, #0xd0
	bl SoundPlay
_08073426:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807342C: .4byte 0x030008B8
_08073430: .4byte 0x083EAA3C

	thumb_func_start ParticleSuperMissileExplosion
ParticleSuperMissileExplosion: @ 0x08073434
	push {r4, lr}
	ldr r4, _08073480 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073484 @ =0x083EAA0C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073452
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073452
	strb r0, [r4]
_08073452:
	ldr r1, _08073480 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _0807347A
	adds r0, #1
	strb r0, [r1, #3]
	movs r0, #0xd2
	bl StopSound
	movs r0, #0xd3
	bl SoundPlay
	movs r0, #0xa
	movs r1, #0x81
	bl ScreenShakeStartHorizontal
	movs r0, #0xa
	movs r1, #0x81
	bl ScreenShakeStartVertical
_0807347A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073480: .4byte 0x030008B8
_08073484: .4byte 0x083EAA0C

	thumb_func_start ParticleIceMissileExplosion
ParticleIceMissileExplosion: @ 0x08073488
	push {r4, lr}
	ldr r4, _080734D4 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _080734D8 @ =0x083EAC4C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080734A6
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080734A6
	strb r0, [r4]
_080734A6:
	ldr r1, _080734D4 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080734CE
	adds r0, #1
	strb r0, [r1, #3]
	movs r0, #0xd5
	bl StopSound
	movs r0, #0xd6
	bl SoundPlay
	movs r0, #0x14
	movs r1, #0x81
	bl ScreenShakeStartHorizontal
	movs r0, #0x14
	movs r1, #0x81
	bl ScreenShakeStartVertical
_080734CE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080734D4: .4byte 0x030008B8
_080734D8: .4byte 0x083EAC4C

	thumb_func_start ParticleDiffusionMissileExplosion
ParticleDiffusionMissileExplosion: @ 0x080734DC
	push {r4, lr}
	ldr r4, _08073528 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _0807352C @ =0x083EAC7C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080734FA
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080734FA
	strb r0, [r4]
_080734FA:
	ldr r1, _08073528 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073522
	adds r0, #1
	strb r0, [r1, #3]
	movs r0, #0xd8
	bl StopSound
	movs r0, #0xd9
	bl SoundPlay
	movs r0, #0x1e
	movs r1, #0x81
	bl ScreenShakeStartHorizontal
	movs r0, #0x1e
	movs r1, #0x81
	bl ScreenShakeStartVertical
_08073522:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073528: .4byte 0x030008B8
_0807352C: .4byte 0x083EAC7C

	thumb_func_start ParticleChargedDiffusionMissileExplosion
ParticleChargedDiffusionMissileExplosion: @ 0x08073530
	push {r4, lr}
	ldr r4, _0807357C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073580 @ =0x083EACAC
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0807354E
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _0807354E
	strb r0, [r4]
_0807354E:
	ldr r1, _0807357C @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073576
	adds r0, #1
	strb r0, [r1, #3]
	movs r0, #0xdb
	bl StopSound
	movs r0, #0xdc
	bl unk_3b1c
	movs r0, #0x28
	movs r1, #0x81
	bl ScreenShakeStartHorizontal
	movs r0, #0x28
	movs r1, #0x81
	bl ScreenShakeStartVertical
_08073576:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807357C: .4byte 0x030008B8
_08073580: .4byte 0x083EACAC

	thumb_func_start ParticleSuperMissileExplosionNoScreenShake
ParticleSuperMissileExplosionNoScreenShake: @ 0x08073584
	push {r4, lr}
	ldr r4, _080735B4 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _080735B8 @ =0x083EAA0C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080735A2
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080735A2
	strb r0, [r4]
_080735A2:
	ldr r1, _080735B4 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080735AE
	adds r0, #1
	strb r0, [r1, #3]
_080735AE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080735B4: .4byte 0x030008B8
_080735B8: .4byte 0x083EAA0C

	thumb_func_start ParticleIceBeamTrail
ParticleIceBeamTrail: @ 0x080735BC
	push {r4, lr}
	ldr r4, _080735EC @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _080735F0 @ =0x0858E238
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080735DA
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080735DA
	strb r0, [r4]
_080735DA:
	ldr r1, _080735EC @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080735E6
	adds r0, #1
	strb r0, [r1, #3]
_080735E6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080735EC: .4byte 0x030008B8
_080735F0: .4byte 0x0858E238

	thumb_func_start ParticleChargedNormalBeamTrail
ParticleChargedNormalBeamTrail: @ 0x080735F4
	push {r4, lr}
	ldr r4, _08073624 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073628 @ =0x0858D83C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073612
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073612
	strb r0, [r4]
_08073612:
	ldr r1, _08073624 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _0807361E
	adds r0, #1
	strb r0, [r1, #3]
_0807361E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073624: .4byte 0x030008B8
_08073628: .4byte 0x0858D83C

	thumb_func_start ParticleChargedChargeBeamTrail
ParticleChargedChargeBeamTrail: @ 0x0807362C
	push {r4, lr}
	ldr r4, _0807365C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073660 @ =0x0858DA80
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0807364A
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _0807364A
	strb r0, [r4]
_0807364A:
	ldr r1, _0807365C @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073656
	adds r0, #1
	strb r0, [r1, #3]
_08073656:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807365C: .4byte 0x030008B8
_08073660: .4byte 0x0858DA80

	thumb_func_start ParticleChargedWideBeamTrail
ParticleChargedWideBeamTrail: @ 0x08073664
	push {r4, lr}
	ldr r4, _08073694 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073698 @ =0x0858DCE4
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073682
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073682
	strb r0, [r4]
_08073682:
	ldr r1, _08073694 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _0807368E
	adds r0, #1
	strb r0, [r1, #3]
_0807368E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073694: .4byte 0x030008B8
_08073698: .4byte 0x0858DCE4

	thumb_func_start ParticleChargedPlasmaBeamTrail
ParticleChargedPlasmaBeamTrail: @ 0x0807369C
	push {r4, lr}
	ldr r4, _080736CC @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _080736D0 @ =0x0858DE84
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080736BA
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080736BA
	strb r0, [r4]
_080736BA:
	ldr r1, _080736CC @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080736C6
	adds r0, #1
	strb r0, [r1, #3]
_080736C6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080736CC: .4byte 0x030008B8
_080736D0: .4byte 0x0858DE84

	thumb_func_start ParticleChargedWaveBeamTrail
ParticleChargedWaveBeamTrail: @ 0x080736D4
	push {r4, lr}
	ldr r4, _08073704 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073708 @ =0x0858DFDC
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080736F2
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080736F2
	strb r0, [r4]
_080736F2:
	ldr r1, _08073704 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080736FE
	adds r0, #1
	strb r0, [r1, #3]
_080736FE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073704: .4byte 0x030008B8
_08073708: .4byte 0x0858DFDC

	thumb_func_start ParticleChargedIceBeamTrail
ParticleChargedIceBeamTrail: @ 0x0807370C
	push {r4, lr}
	ldr r4, _0807373C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073740 @ =0x0858E278
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0807372A
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _0807372A
	strb r0, [r4]
_0807372A:
	ldr r1, _0807373C @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073736
	adds r0, #1
	strb r0, [r1, #3]
_08073736:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807373C: .4byte 0x030008B8
_08073740: .4byte 0x0858E278

	thumb_func_start ParticleNormalMissileTrail
ParticleNormalMissileTrail: @ 0x08073744
	push {r4, lr}
	ldr r4, _0807377C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073780 @ =0x0858E888
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073762
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073762
	strb r0, [r4]
_08073762:
	ldr r2, _0807377C @ =0x030008B8
	ldrb r0, [r2, #3]
	cmp r0, #0
	bne _08073776
	adds r0, #1
	strb r0, [r2, #3]
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08073776:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807377C: .4byte 0x030008B8
_08073780: .4byte 0x0858E888

	thumb_func_start ParticleSuperMissileTrail
ParticleSuperMissileTrail: @ 0x08073784
	push {r4, lr}
	ldr r4, _080737BC @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _080737C0 @ =0x0858E7F0
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080737A2
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080737A2
	strb r0, [r4]
_080737A2:
	ldr r2, _080737BC @ =0x030008B8
	ldrb r0, [r2, #3]
	cmp r0, #0
	bne _080737B6
	adds r0, #1
	strb r0, [r2, #3]
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_080737B6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080737BC: .4byte 0x030008B8
_080737C0: .4byte 0x0858E7F0

	thumb_func_start ParticleIceMissileTrail
ParticleIceMissileTrail: @ 0x080737C4
	push {r4, lr}
	ldr r4, _080737FC @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073800 @ =0x0858E8D8
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080737E2
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080737E2
	strb r0, [r4]
_080737E2:
	ldr r2, _080737FC @ =0x030008B8
	ldrb r0, [r2, #3]
	cmp r0, #0
	bne _080737F6
	adds r0, #1
	strb r0, [r2, #3]
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_080737F6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080737FC: .4byte 0x030008B8
_08073800: .4byte 0x0858E8D8

	thumb_func_start ParticleDiffusionMissileTrail
ParticleDiffusionMissileTrail: @ 0x08073804
	push {r4, lr}
	ldr r4, _0807383C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073840 @ =0x0858E928
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073822
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073822
	strb r0, [r4]
_08073822:
	ldr r2, _0807383C @ =0x030008B8
	ldrb r0, [r2, #3]
	cmp r0, #0
	bne _08073836
	adds r0, #1
	strb r0, [r2, #3]
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08073836:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807383C: .4byte 0x030008B8
_08073840: .4byte 0x0858E928

	thumb_func_start ParticleChargedDiffusionMissileTrail
ParticleChargedDiffusionMissileTrail: @ 0x08073844
	push {r4, lr}
	ldr r4, _0807387C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073880 @ =0x0858E9C8
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073862
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073862
	strb r0, [r4]
_08073862:
	ldr r2, _0807387C @ =0x030008B8
	ldrb r0, [r2, #3]
	cmp r0, #0
	bne _08073876
	adds r0, #1
	strb r0, [r2, #3]
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08073876:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807387C: .4byte 0x030008B8
_08073880: .4byte 0x0858E9C8

	thumb_func_start ParticleAbsordHealthX
ParticleAbsordHealthX: @ 0x08073884
	push {r4, r5, r6, lr}
	ldr r3, _080738B8 @ =0x030008B8
	ldrb r0, [r3, #4]
	adds r5, r0, #1
	strb r5, [r3, #4]
	ldr r2, _080738BC @ =gSamusData
	movs r1, #0x26
	ldrsh r0, [r2, r1]
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	ldrh r1, [r2, #0x18]
	adds r0, r0, r1
	movs r6, #0
	strh r0, [r3, #8]
	ldrh r0, [r2, #0x16]
	strh r0, [r3, #0xa]
	ldrb r0, [r3, #3]
	adds r4, r3, #0
	cmp r0, #1
	beq _080738CC
	cmp r0, #1
	bgt _080738C0
	cmp r0, #0
	beq _080738C6
	b _08073914
	.align 2, 0
_080738B8: .4byte 0x030008B8
_080738BC: .4byte gSamusData
_080738C0:
	cmp r0, #2
	beq _080738F8
	b _08073914
_080738C6:
	movs r0, #1
	strb r0, [r4, #3]
	b _080738EC
_080738CC:
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1b
	bls _080738EC
	movs r0, #2
	strb r0, [r4, #3]
	movs r0, #0
	strh r0, [r4, #6]
	strb r6, [r4, #1]
	ldr r0, _080738E8 @ =0x083EA76C
	bl ParticleUpdateAnimation
	b _08073918
	.align 2, 0
_080738E8: .4byte 0x083EA76C
_080738EC:
	ldr r0, _080738F4 @ =0x083EA664
	bl ParticleUpdateAnimation
	b _08073918
	.align 2, 0
_080738F4: .4byte 0x083EA664
_080738F8:
	ldr r0, _08073910 @ =0x083EA76C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073918
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073918
	strb r6, [r4]
	b _08073918
	.align 2, 0
_08073910: .4byte 0x083EA76C
_08073914:
	movs r0, #0
	strb r0, [r4]
_08073918:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ParticleAbsorbMissileX
ParticleAbsorbMissileX: @ 0x08073920
	push {r4, r5, r6, lr}
	ldr r3, _08073954 @ =0x030008B8
	ldrb r0, [r3, #4]
	adds r5, r0, #1
	strb r5, [r3, #4]
	ldr r2, _08073958 @ =gSamusData
	movs r1, #0x26
	ldrsh r0, [r2, r1]
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	ldrh r1, [r2, #0x18]
	adds r0, r0, r1
	movs r6, #0
	strh r0, [r3, #8]
	ldrh r0, [r2, #0x16]
	strh r0, [r3, #0xa]
	ldrb r0, [r3, #3]
	adds r4, r3, #0
	cmp r0, #1
	beq _08073968
	cmp r0, #1
	bgt _0807395C
	cmp r0, #0
	beq _08073962
	b _080739B0
	.align 2, 0
_08073954: .4byte 0x030008B8
_08073958: .4byte gSamusData
_0807395C:
	cmp r0, #2
	beq _08073994
	b _080739B0
_08073962:
	movs r0, #1
	strb r0, [r4, #3]
	b _08073988
_08073968:
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1b
	bls _08073988
	movs r0, #2
	strb r0, [r4, #3]
	movs r0, #0
	strh r0, [r4, #6]
	strb r6, [r4, #1]
	ldr r0, _08073984 @ =0x083EA8F4
	bl ParticleUpdateAnimation
	b _080739B4
	.align 2, 0
_08073984: .4byte 0x083EA8F4
_08073988:
	ldr r0, _08073990 @ =0x083EA7EC
	bl ParticleUpdateAnimation
	b _080739B4
	.align 2, 0
_08073990: .4byte 0x083EA7EC
_08073994:
	ldr r0, _080739AC @ =0x083EA8F4
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080739B4
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080739B4
	strb r6, [r4]
	b _080739B4
	.align 2, 0
_080739AC: .4byte 0x083EA8F4
_080739B0:
	movs r0, #0
	strb r0, [r4]
_080739B4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ParticleAbsorbRedX
ParticleAbsorbRedX: @ 0x080739BC
	push {r4, r5, r6, lr}
	ldr r3, _080739F0 @ =0x030008B8
	ldrb r0, [r3, #4]
	adds r5, r0, #1
	strb r5, [r3, #4]
	ldr r2, _080739F4 @ =gSamusData
	movs r1, #0x26
	ldrsh r0, [r2, r1]
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	ldrh r1, [r2, #0x18]
	adds r0, r0, r1
	movs r6, #0
	strh r0, [r3, #8]
	ldrh r0, [r2, #0x16]
	strh r0, [r3, #0xa]
	ldrb r0, [r3, #3]
	adds r4, r3, #0
	cmp r0, #1
	beq _08073A04
	cmp r0, #1
	bgt _080739F8
	cmp r0, #0
	beq _080739FE
	b _08073A4C
	.align 2, 0
_080739F0: .4byte 0x030008B8
_080739F4: .4byte gSamusData
_080739F8:
	cmp r0, #2
	beq _08073A30
	b _08073A4C
_080739FE:
	movs r0, #1
	strb r0, [r4, #3]
	b _08073A24
_08073A04:
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1b
	bls _08073A24
	movs r0, #2
	strb r0, [r4, #3]
	movs r0, #0
	strh r0, [r4, #6]
	strb r6, [r4, #1]
	ldr r0, _08073A20 @ =0x083EABCC
	bl ParticleUpdateAnimation
	b _08073A50
	.align 2, 0
_08073A20: .4byte 0x083EABCC
_08073A24:
	ldr r0, _08073A2C @ =0x083EAAC4
	bl ParticleUpdateAnimation
	b _08073A50
	.align 2, 0
_08073A2C: .4byte 0x083EAAC4
_08073A30:
	ldr r0, _08073A48 @ =0x083EABCC
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073A50
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073A50
	strb r6, [r4]
	b _08073A50
	.align 2, 0
_08073A48: .4byte 0x083EABCC
_08073A4C:
	movs r0, #0
	strb r0, [r4]
_08073A50:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ParticleAbsorbCoreX
ParticleAbsorbCoreX: @ 0x08073A58
	push {r4, r5, r6, lr}
	ldr r3, _08073A8C @ =0x030008B8
	ldrb r0, [r3, #4]
	adds r5, r0, #1
	strb r5, [r3, #4]
	ldr r2, _08073A90 @ =gSamusData
	movs r1, #0x26
	ldrsh r0, [r2, r1]
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	ldrh r1, [r2, #0x18]
	adds r0, r0, r1
	movs r6, #0
	strh r0, [r3, #8]
	ldrh r0, [r2, #0x16]
	strh r0, [r3, #0xa]
	ldrb r0, [r3, #3]
	adds r4, r3, #0
	cmp r0, #1
	beq _08073AA0
	cmp r0, #1
	bgt _08073A94
	cmp r0, #0
	beq _08073A9A
	b _08073AE8
	.align 2, 0
_08073A8C: .4byte 0x030008B8
_08073A90: .4byte gSamusData
_08073A94:
	cmp r0, #2
	beq _08073ACC
	b _08073AE8
_08073A9A:
	movs r0, #1
	strb r0, [r4, #3]
	b _08073AC0
_08073AA0:
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1b
	bls _08073AC0
	movs r0, #2
	strb r0, [r4, #3]
	movs r0, #0
	strh r0, [r4, #6]
	strb r6, [r4, #1]
	ldr r0, _08073ABC @ =0x083EAEDC
	bl ParticleUpdateAnimation
	b _08073AEC
	.align 2, 0
_08073ABC: .4byte 0x083EAEDC
_08073AC0:
	ldr r0, _08073AC8 @ =0x083EADD4
	bl ParticleUpdateAnimation
	b _08073AEC
	.align 2, 0
_08073AC8: .4byte 0x083EADD4
_08073ACC:
	ldr r0, _08073AE4 @ =0x083EAEDC
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073AEC
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073AEC
	strb r6, [r4]
	b _08073AEC
	.align 2, 0
_08073AE4: .4byte 0x083EAEDC
_08073AE8:
	movs r0, #0
	strb r0, [r4]
_08073AEC:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ParticleAbsorbIceXPreVaria
ParticleAbsorbIceXPreVaria: @ 0x08073AF4
	push {r4, lr}
	ldr r4, _08073B3C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r2, _08073B40 @ =gSamusData
	movs r1, #0x26
	ldrsh r0, [r2, r1]
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	ldrh r1, [r2, #0x18]
	adds r0, r0, r1
	strh r0, [r4, #8]
	ldrh r0, [r2, #0x16]
	strh r0, [r4, #0xa]
	ldr r0, _08073B44 @ =0x083EAD14
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073B2A
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073B2A
	movs r0, #0
	strb r0, [r4]
_08073B2A:
	ldr r1, _08073B3C @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073B36
	adds r0, #1
	strb r0, [r1, #3]
_08073B36:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073B3C: .4byte 0x030008B8
_08073B40: .4byte gSamusData
_08073B44: .4byte 0x083EAD14

	thumb_func_start ParticleIceXTrail
ParticleIceXTrail: @ 0x08073B48
	push {r4, lr}
	ldr r4, _08073B80 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073B84 @ =0x083EAF5C
	bl ParticleUpdateAnimation
	ldrb r0, [r4]
	movs r1, #0x20
	eors r0, r1
	strb r0, [r4]
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073B6E
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073B6E
	strb r0, [r4]
_08073B6E:
	ldr r1, _08073B80 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073B7A
	adds r0, #1
	strb r0, [r1, #3]
_08073B7A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073B80: .4byte 0x030008B8
_08073B84: .4byte 0x083EAF5C

	thumb_func_start ParticleDiffusion
ParticleDiffusion: @ 0x08073B88
	push {r4, lr}
	ldr r4, _08073BB8 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073BBC @ =0x083EAF94
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073BA6
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073BA6
	strb r0, [r4]
_08073BA6:
	ldr r1, _08073BB8 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073BB2
	adds r0, #1
	strb r0, [r1, #3]
_08073BB2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073BB8: .4byte 0x030008B8
_08073BBC: .4byte 0x083EAF94

	thumb_func_start ParticleFireBeam
ParticleFireBeam: @ 0x08073BC0
	push {r4, lr}
	ldr r4, _08073BF8 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073BFC @ =0x083EA61C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073BDE
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073BDE
	strb r0, [r4]
_08073BDE:
	ldr r2, _08073BF8 @ =0x030008B8
	ldrb r0, [r2, #3]
	cmp r0, #0
	bne _08073BF2
	adds r0, #1
	strb r0, [r2, #3]
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08073BF2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073BF8: .4byte 0x030008B8
_08073BFC: .4byte 0x083EA61C

	thumb_func_start ParticleExplosion1
ParticleExplosion1: @ 0x08073C00
	push {r4, lr}
	ldr r4, _08073C30 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073C34 @ =0x083EA5E4
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073C1E
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073C1E
	strb r0, [r4]
_08073C1E:
	ldr r1, _08073C30 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073C2A
	adds r0, #1
	strb r0, [r1, #3]
_08073C2A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073C30: .4byte 0x030008B8
_08073C34: .4byte 0x083EA5E4

	thumb_func_start ParticleExplosion2
ParticleExplosion2: @ 0x08073C38
	push {r4, lr}
	ldr r4, _08073C68 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073C6C @ =0x083EA5AC
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073C56
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073C56
	strb r0, [r4]
_08073C56:
	ldr r1, _08073C68 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073C62
	adds r0, #1
	strb r0, [r1, #3]
_08073C62:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073C68: .4byte 0x030008B8
_08073C6C: .4byte 0x083EA5AC

	thumb_func_start ParticleExplosion3
ParticleExplosion3: @ 0x08073C70
	push {r4, lr}
	ldr r4, _08073CA0 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073CA4 @ =0x083EA9D4
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073C8E
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073C8E
	strb r0, [r4]
_08073C8E:
	ldr r1, _08073CA0 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073C9A
	adds r0, #1
	strb r0, [r1, #3]
_08073C9A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073CA0: .4byte 0x030008B8
_08073CA4: .4byte 0x083EA9D4

	thumb_func_start ParticleExplosion4
ParticleExplosion4: @ 0x08073CA8
	push {r4, lr}
	ldr r4, _08073CD8 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073CDC @ =0x083EA99C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073CC6
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073CC6
	strb r0, [r4]
_08073CC6:
	ldr r1, _08073CD8 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073CD2
	adds r0, #1
	strb r0, [r1, #3]
_08073CD2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073CD8: .4byte 0x030008B8
_08073CDC: .4byte 0x083EA99C

	thumb_func_start ParticleExplosion5
ParticleExplosion5: @ 0x08073CE0
	push {r4, lr}
	ldr r4, _08073D10 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073D14 @ =0x083EAA9C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073CFE
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073CFE
	strb r0, [r4]
_08073CFE:
	ldr r1, _08073D10 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073D0A
	adds r0, #1
	strb r0, [r1, #3]
_08073D0A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073D10: .4byte 0x030008B8
_08073D14: .4byte 0x083EAA9C

	thumb_func_start ParticleExplosion6
ParticleExplosion6: @ 0x08073D18
	push {r4, lr}
	ldr r4, _08073D50 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073D54 @ =0x083EAA74
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073D36
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073D36
	strb r0, [r4]
_08073D36:
	ldr r2, _08073D50 @ =0x030008B8
	ldrb r0, [r2, #3]
	cmp r0, #0
	bne _08073D4A
	adds r0, #1
	strb r0, [r2, #3]
	ldrb r1, [r2]
	movs r0, #4
	orrs r0, r1
	strb r0, [r2]
_08073D4A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073D50: .4byte 0x030008B8
_08073D54: .4byte 0x083EAA74

	thumb_func_start ParticleHeavyDust1
ParticleHeavyDust1: @ 0x08073D58
	push {r4, lr}
	ldr r4, _08073D88 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073D8C @ =0x083EC1A8
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073D76
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073D76
	strb r0, [r4]
_08073D76:
	ldr r1, _08073D88 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073D82
	adds r0, #1
	strb r0, [r1, #3]
_08073D82:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073D88: .4byte 0x030008B8
_08073D8C: .4byte 0x083EC1A8

	thumb_func_start ParticleHeavyDust2
ParticleHeavyDust2: @ 0x08073D90
	push {r4, lr}
	ldr r4, _08073DC8 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073DCC @ =0x083EC1A8
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073DAE
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073DAE
	strb r0, [r4]
_08073DAE:
	ldr r2, _08073DC8 @ =0x030008B8
	ldrb r0, [r2, #3]
	cmp r0, #0
	bne _08073DC2
	adds r0, #1
	strb r0, [r2, #3]
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08073DC2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073DC8: .4byte 0x030008B8
_08073DCC: .4byte 0x083EC1A8

	thumb_func_start ParticleEnterOrExitWater
ParticleEnterOrExitWater: @ 0x08073DD0
	push {r4, lr}
	ldr r4, _08073E08 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073E0C @ =0x083EC1F8
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073DEE
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073DEE
	strb r0, [r4]
_08073DEE:
	ldr r2, _08073E08 @ =0x030008B8
	ldrb r0, [r2, #3]
	cmp r0, #0
	bne _08073E02
	adds r0, #1
	strb r0, [r2, #3]
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08073E02:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073E08: .4byte 0x030008B8
_08073E0C: .4byte 0x083EC1F8

	thumb_func_start ParticleEnterOrExitWaterBig
ParticleEnterOrExitWaterBig: @ 0x08073E10
	push {r4, lr}
	ldr r4, _08073E48 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073E4C @ =0x083EC348
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073E2E
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073E2E
	strb r0, [r4]
_08073E2E:
	ldr r2, _08073E48 @ =0x030008B8
	ldrb r0, [r2, #3]
	cmp r0, #0
	bne _08073E42
	adds r0, #1
	strb r0, [r2, #3]
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08073E42:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073E48: .4byte 0x030008B8
_08073E4C: .4byte 0x083EC348

	thumb_func_start ParticleSpriteEnterOrExitWater
ParticleSpriteEnterOrExitWater: @ 0x08073E50
	push {r4, lr}
	ldr r4, _08073E88 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073E8C @ =0x083EC390
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073E6E
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073E6E
	strb r0, [r4]
_08073E6E:
	ldr r2, _08073E88 @ =0x030008B8
	ldrb r0, [r2, #3]
	cmp r0, #0
	bne _08073E82
	adds r0, #1
	strb r0, [r2, #3]
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08073E82:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073E88: .4byte 0x030008B8
_08073E8C: .4byte 0x083EC390

	thumb_func_start unk_73e90
unk_73e90: @ 0x08073E90
	push {r4, lr}
	ldr r4, _08073EC8 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073ECC @ =0x083EC280
	bl ParticleUpdateAnimation
	ldr r0, _08073ED0 @ =gEffectYPosition
	ldrh r0, [r0]
	strh r0, [r4, #8]
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073EB6
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073EB6
	movs r0, #0
	strb r0, [r4]
_08073EB6:
	ldr r1, _08073EC8 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073EC2
	adds r0, #1
	strb r0, [r1, #3]
_08073EC2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073EC8: .4byte 0x030008B8
_08073ECC: .4byte 0x083EC280
_08073ED0: .4byte gEffectYPosition

	thumb_func_start ParticleExplosionSmoke
ParticleExplosionSmoke: @ 0x08073ED4
	push {r4, lr}
	ldr r4, _08073F04 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073F08 @ =0x083EC1D0
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073EF2
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073EF2
	strb r0, [r4]
_08073EF2:
	ldr r1, _08073F04 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073EFE
	adds r0, #1
	strb r0, [r1, #3]
_08073EFE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073F04: .4byte 0x030008B8
_08073F08: .4byte 0x083EC1D0

	thumb_func_start ParticleTailExplosionSmoke
ParticleTailExplosionSmoke: @ 0x08073F0C
	push {r4, lr}
	ldr r4, _08073F3C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073F40 @ =0x083EDEE4
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073F2A
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073F2A
	strb r0, [r4]
_08073F2A:
	ldr r1, _08073F3C @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073F36
	adds r0, #1
	strb r0, [r1, #3]
_08073F36:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073F3C: .4byte 0x030008B8
_08073F40: .4byte 0x083EDEE4

	thumb_func_start ParticleExplosion7
ParticleExplosion7: @ 0x08073F44
	push {r4, lr}
	ldr r4, _08073F74 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073F78 @ =0x083EDF14
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073F62
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073F62
	strb r0, [r4]
_08073F62:
	ldr r1, _08073F74 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073F6E
	adds r0, #1
	strb r0, [r1, #3]
_08073F6E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073F74: .4byte 0x030008B8
_08073F78: .4byte 0x083EDF14

	thumb_func_start ParticleExplosion10
ParticleExplosion10: @ 0x08073F7C
	push {r4, lr}
	ldr r4, _08073FAC @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073FB0 @ =0x083EE0B4
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073F9A
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073F9A
	strb r0, [r4]
_08073F9A:
	ldr r1, _08073FAC @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073FA6
	adds r0, #1
	strb r0, [r1, #3]
_08073FA6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073FAC: .4byte 0x030008B8
_08073FB0: .4byte 0x083EE0B4

	thumb_func_start ParticleExplosion8
ParticleExplosion8: @ 0x08073FB4
	push {r4, lr}
	ldr r4, _08073FE4 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08073FE8 @ =0x083EDD9C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08073FD2
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08073FD2
	strb r0, [r4]
_08073FD2:
	ldr r1, _08073FE4 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08073FDE
	adds r0, #1
	strb r0, [r1, #3]
_08073FDE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073FE4: .4byte 0x030008B8
_08073FE8: .4byte 0x083EDD9C

	thumb_func_start ParticleSmoke
ParticleSmoke: @ 0x08073FEC
	push {r4, lr}
	ldr r4, _0807401C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08074020 @ =0x083EDC9C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0807400A
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _0807400A
	strb r0, [r4]
_0807400A:
	ldr r1, _0807401C @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08074016
	adds r0, #1
	strb r0, [r1, #3]
_08074016:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807401C: .4byte 0x030008B8
_08074020: .4byte 0x083EDC9C

	thumb_func_start ParticleExplosion9
ParticleExplosion9: @ 0x08074024
	push {r4, lr}
	ldr r4, _08074054 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08074058 @ =0x083EDCD4
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08074042
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08074042
	strb r0, [r4]
_08074042:
	ldr r1, _08074054 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _0807404E
	adds r0, #1
	strb r0, [r1, #3]
_0807404E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08074054: .4byte 0x030008B8
_08074058: .4byte 0x083EDCD4

	thumb_func_start ParticleTailSmoke1
ParticleTailSmoke1: @ 0x0807405C
	push {r4, lr}
	ldr r4, _0807408C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08074090 @ =0x083EDD0C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0807407A
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _0807407A
	strb r0, [r4]
_0807407A:
	ldr r1, _0807408C @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08074086
	adds r0, #1
	strb r0, [r1, #3]
_08074086:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807408C: .4byte 0x030008B8
_08074090: .4byte 0x083EDD0C

	thumb_func_start ParticleTailExplosion
ParticleTailExplosion: @ 0x08074094
	push {r4, lr}
	ldr r4, _080740C4 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _080740C8 @ =0x083EDD3C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080740B2
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080740B2
	strb r0, [r4]
_080740B2:
	ldr r1, _080740C4 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080740BE
	adds r0, #1
	strb r0, [r1, #3]
_080740BE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080740C4: .4byte 0x030008B8
_080740C8: .4byte 0x083EDD3C

	thumb_func_start ParticleTailSmoke2
ParticleTailSmoke2: @ 0x080740CC
	push {r4, lr}
	ldr r4, _080740FC @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08074100 @ =0x083EDEA4
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080740EA
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080740EA
	strb r0, [r4]
_080740EA:
	ldr r1, _080740FC @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080740F6
	adds r0, #1
	strb r0, [r1, #3]
_080740F6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080740FC: .4byte 0x030008B8
_08074100: .4byte 0x083EDEA4

	thumb_func_start ParticleOutwardIceExplosion
ParticleOutwardIceExplosion: @ 0x08074104
	push {r4, lr}
	ldr r4, _08074134 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08074138 @ =0x083EC3E8
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08074122
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08074122
	strb r0, [r4]
_08074122:
	ldr r1, _08074134 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _0807412E
	adds r0, #1
	strb r0, [r1, #3]
_0807412E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08074134: .4byte 0x030008B8
_08074138: .4byte 0x083EC3E8

	thumb_func_start ParticleOutwardSmoke
ParticleOutwardSmoke: @ 0x0807413C
	push {r4, lr}
	ldr r4, _0807416C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08074170 @ =0x083EC4C0
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0807415A
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _0807415A
	strb r0, [r4]
_0807415A:
	ldr r1, _0807416C @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08074166
	adds r0, #1
	strb r0, [r1, #3]
_08074166:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807416C: .4byte 0x030008B8
_08074170: .4byte 0x083EC4C0

	thumb_func_start ParticleScrewAttackKilled
ParticleScrewAttackKilled: @ 0x08074174
	push {r4, lr}
	ldr r4, _080741AC @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _080741B0 @ =0x083EC0C0
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08074192
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08074192
	strb r0, [r4]
_08074192:
	ldr r1, _080741AC @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080741A6
	adds r0, #1
	strb r0, [r1, #3]
	movs r0, #0xa4
	lsls r0, r0, #1
	bl SoundPlay
_080741A6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080741AC: .4byte 0x030008B8
_080741B0: .4byte 0x083EC0C0

	thumb_func_start ParticleSpeedboosterKilled
ParticleSpeedboosterKilled: @ 0x080741B4
	push {r4, lr}
	ldr r4, _080741EC @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _080741F0 @ =0x083EC430
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080741D2
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080741D2
	strb r0, [r4]
_080741D2:
	ldr r1, _080741EC @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080741E4
	adds r0, #1
	strb r0, [r1, #3]
	ldr r0, _080741F4 @ =0x00000149
	bl SoundPlay
_080741E4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080741EC: .4byte 0x030008B8
_080741F0: .4byte 0x083EC430
_080741F4: .4byte 0x00000149

	thumb_func_start ParticleShinesparkKilled
ParticleShinesparkKilled: @ 0x080741F8
	push {r4, lr}
	ldr r4, _08074230 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08074234 @ =0x083EC108
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08074216
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08074216
	strb r0, [r4]
_08074216:
	ldr r1, _08074230 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _0807422A
	adds r0, #1
	strb r0, [r1, #3]
	movs r0, #0xa4
	lsls r0, r0, #1
	bl SoundPlay
_0807422A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08074230: .4byte 0x030008B8
_08074234: .4byte 0x083EC108

	thumb_func_start ParticleSudoScrewKilled
ParticleSudoScrewKilled: @ 0x08074238
	push {r4, lr}
	ldr r4, _08074270 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08074274 @ =0x083EC478
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08074256
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08074256
	strb r0, [r4]
_08074256:
	ldr r1, _08074270 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08074268
	adds r0, #1
	strb r0, [r1, #3]
	ldr r0, _08074278 @ =0x00000147
	bl SoundPlay
_08074268:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08074270: .4byte 0x030008B8
_08074274: .4byte 0x083EC478
_08074278: .4byte 0x00000147

	thumb_func_start PlayBeamChargingSound
PlayBeamChargingSound: @ 0x0807427C
	push {lr}
	ldr r0, _08074294 @ =gEquipment
	ldrb r1, [r0, #0xa]
	adds r2, r1, #0
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08074298
	movs r0, #0xe9
	bl SoundPlay
	b _080742CE
	.align 2, 0
_08074294: .4byte gEquipment
_08074298:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080742A8
	movs r0, #0xe7
	bl SoundPlay
	b _080742CE
_080742A8:
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _080742B8
	movs r0, #0xe5
	bl SoundPlay
	b _080742CE
_080742B8:
	movs r0, #2
	ands r2, r0
	cmp r2, #0
	beq _080742C8
	movs r0, #0xe3
	bl SoundPlay
	b _080742CE
_080742C8:
	movs r0, #0xe1
	bl SoundPlay
_080742CE:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start StopBeamChargingSound
StopBeamChargingSound: @ 0x080742D4
	push {lr}
	ldr r0, _080742EC @ =gEquipment
	ldrb r1, [r0, #0xa]
	adds r2, r1, #0
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080742F0
	movs r0, #0xe9
	bl StopSound
	b _08074326
	.align 2, 0
_080742EC: .4byte gEquipment
_080742F0:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08074300
	movs r0, #0xe7
	bl StopSound
	b _08074326
_08074300:
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _08074310
	movs r0, #0xe5
	bl StopSound
	b _08074326
_08074310:
	movs r0, #2
	ands r2, r0
	cmp r2, #0
	beq _08074320
	movs r0, #0xe3
	bl StopSound
	b _08074326
_08074320:
	movs r0, #0xe1
	bl StopSound
_08074326:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start PlayBeamChargedSound
PlayBeamChargedSound: @ 0x0807432C
	push {lr}
	ldr r0, _08074344 @ =gEquipment
	ldrb r1, [r0, #0xa]
	adds r2, r1, #0
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08074348
	movs r0, #0xea
	bl SoundPlay
	b _0807437E
	.align 2, 0
_08074344: .4byte gEquipment
_08074348:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08074358
	movs r0, #0xe8
	bl SoundPlay
	b _0807437E
_08074358:
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _08074368
	movs r0, #0xe6
	bl SoundPlay
	b _0807437E
_08074368:
	movs r0, #2
	ands r2, r0
	cmp r2, #0
	beq _08074378
	movs r0, #0xe4
	bl SoundPlay
	b _0807437E
_08074378:
	movs r0, #0xe2
	bl SoundPlay
_0807437E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ParticleChargingBeam
ParticleChargingBeam: @ 0x08074384
	push {r4, r5, lr}
	ldr r1, _080743B0 @ =0x030008B8
	ldr r0, _080743B4 @ =gArmCannonY
	ldrh r0, [r0]
	strh r0, [r1, #8]
	ldr r0, _080743B8 @ =gArmCannonX
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	ldr r0, _080743BC @ =gSamusData
	ldrb r2, [r0, #0xc]
	adds r3, r1, #0
	adds r5, r0, #0
	cmp r2, #0xf
	bhi _080743C0
	movs r0, #0
	strb r0, [r3]
	ldrb r0, [r3, #3]
	cmp r0, #1
	bhi _08074464
	bl StopBeamChargingSound
	b _08074464
	.align 2, 0
_080743B0: .4byte 0x030008B8
_080743B4: .4byte gArmCannonY
_080743B8: .4byte gArmCannonX
_080743BC: .4byte gSamusData
_080743C0:
	ldrb r0, [r5, #1]
	cmp r0, #0x16
	beq _080743D8
	cmp r0, #0x16
	bgt _080743D0
	cmp r0, #0xb
	beq _080743D8
	b _080743E0
_080743D0:
	cmp r0, #0x1e
	bgt _080743E0
	cmp r0, #0x1d
	blt _080743E0
_080743D8:
	ldrb r1, [r3]
	movs r0, #8
	orrs r0, r1
	b _080743E6
_080743E0:
	ldrb r1, [r3]
	movs r0, #0xf7
	ands r0, r1
_080743E6:
	strb r0, [r3]
	adds r4, r3, #0
	ldrb r0, [r4, #3]
	cmp r0, #0
	beq _08074410
	cmp r0, #1
	beq _08074430
	ldr r0, _0807440C @ =0x083EEBC0
	bl ParticleUpdateAnimation
	ldrb r1, [r4, #4]
	movs r0, #0xf
	ands r0, r1
	cmp r0, #0
	bne _0807445C
	bl PlayBeamChargedSound
	b _0807445C
	.align 2, 0
_0807440C: .4byte 0x083EEBC0
_08074410:
	ldrb r1, [r4]
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r4]
	ldrb r0, [r4, #3]
	adds r0, #1
	strb r0, [r4, #3]
	ldr r0, _0807442C @ =0x083EEB28
	bl ParticleUpdateAnimation
	bl PlayBeamChargingSound
	b _08074464
	.align 2, 0
_0807442C: .4byte 0x083EEB28
_08074430:
	ldrb r0, [r5, #0xc]
	cmp r0, #0x3f
	bls _08074450
	movs r0, #2
	movs r1, #0
	strb r0, [r3, #3]
	movs r0, #0
	strh r1, [r3, #6]
	strb r0, [r3, #1]
	strb r0, [r3, #4]
	ldr r0, _0807444C @ =0x083EEBC0
	bl ParticleUpdateAnimation
	b _08074464
	.align 2, 0
_0807444C: .4byte 0x083EEBC0
_08074450:
	ldr r0, _08074458 @ =0x083EEB28
	bl ParticleUpdateAnimation
	b _08074464
	.align 2, 0
_08074458: .4byte 0x083EEB28
_0807445C:
	ldr r1, _0807446C @ =0x030008B8
	ldrb r0, [r1, #4]
	adds r0, #1
	strb r0, [r1, #4]
_08074464:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807446C: .4byte 0x030008B8

	thumb_func_start ParticleChargingMissiles
ParticleChargingMissiles: @ 0x08074470
	push {r4, lr}
	ldr r1, _08074494 @ =0x030008B8
	ldr r0, _08074498 @ =gArmCannonY
	ldrh r0, [r0]
	strh r0, [r1, #8]
	ldr r0, _0807449C @ =gArmCannonX
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	ldr r0, _080744A0 @ =gSamusData
	ldrb r2, [r0, #0xc]
	adds r3, r1, #0
	adds r4, r0, #0
	cmp r2, #0xf
	bhi _080744A4
	movs r0, #0
	strb r0, [r3]
	b _0807450A
	.align 2, 0
_08074494: .4byte 0x030008B8
_08074498: .4byte gArmCannonY
_0807449C: .4byte gArmCannonX
_080744A0: .4byte gSamusData
_080744A4:
	ldrb r0, [r4, #1]
	cmp r0, #0x16
	beq _080744BC
	cmp r0, #0x16
	bgt _080744B4
	cmp r0, #0xb
	beq _080744BC
	b _080744C4
_080744B4:
	cmp r0, #0x1e
	bgt _080744C4
	cmp r0, #0x1d
	blt _080744C4
_080744BC:
	ldrb r1, [r3]
	movs r0, #8
	orrs r0, r1
	b _080744CA
_080744C4:
	ldrb r1, [r3]
	movs r0, #0xf7
	ands r0, r1
_080744CA:
	strb r0, [r3]
	adds r2, r3, #0
	ldrb r0, [r2, #3]
	cmp r0, #0
	beq _080744DA
	cmp r0, #1
	beq _080744EA
	b _080744FC
_080744DA:
	ldrb r1, [r2]
	movs r0, #0x14
	orrs r0, r1
	strb r0, [r2]
	ldrb r0, [r2, #3]
	adds r0, #1
	strb r0, [r2, #3]
	b _08074504
_080744EA:
	ldrb r0, [r4, #0xc]
	cmp r0, #0x3f
	bls _08074504
	movs r0, #2
	movs r1, #0
	strb r0, [r3, #3]
	movs r0, #0
	strh r1, [r3, #6]
	strb r0, [r3, #1]
_080744FC:
	ldr r0, _08074500 @ =0x083EEBE8
	b _08074506
	.align 2, 0
_08074500: .4byte 0x083EEBE8
_08074504:
	ldr r0, _08074510 @ =0x083EEC18
_08074506:
	bl ParticleUpdateAnimation
_0807450A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08074510: .4byte 0x083EEC18

	thumb_func_start ParticleAbsorbingSuit
ParticleAbsorbingSuit: @ 0x08074514
	push {r4, lr}
	ldr r4, _0807454C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08074550 @ =gArmCannonY
	ldrh r0, [r0]
	strh r0, [r4, #8]
	ldr r0, _08074554 @ =gArmCannonX
	ldrh r0, [r0]
	strh r0, [r4, #0xa]
	ldr r0, _08074558 @ =0x083ED26C
	bl ParticleUpdateAnimation
	ldr r0, _0807455C @ =gSamusData
	ldrb r0, [r0, #0xb]
	cmp r0, #0
	bne _0807453C
	movs r0, #0
	strb r0, [r4]
_0807453C:
	ldrb r0, [r4, #3]
	cmp r0, #0
	bne _08074546
	adds r0, #1
	strb r0, [r4, #3]
_08074546:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807454C: .4byte 0x030008B8
_08074550: .4byte gArmCannonY
_08074554: .4byte gArmCannonX
_08074558: .4byte 0x083ED26C
_0807455C: .4byte gSamusData

	thumb_func_start unk_74560
unk_74560: @ 0x08074560
	push {r4, r5, lr}
	ldr r1, _08074590 @ =0x030008B8
	ldr r0, _08074594 @ =gArmCannonY
	ldrh r0, [r0]
	strh r0, [r1, #8]
	ldr r0, _08074598 @ =gArmCannonX
	ldrh r0, [r0]
	strh r0, [r1, #0xa]
	ldr r0, _0807459C @ =0x030012F0
	ldrb r2, [r0, #0x13]
	adds r3, r1, #0
	adds r5, r0, #0
	cmp r2, #0xf
	bhi _080745A0
	movs r0, #0
	strb r0, [r3]
	ldrb r0, [r3, #3]
	cmp r0, #1
	bhi _08074650
	movs r0, #0xeb
	bl StopSound
	b _08074650
	.align 2, 0
_08074590: .4byte 0x030008B8
_08074594: .4byte gArmCannonY
_08074598: .4byte gArmCannonX
_0807459C: .4byte 0x030012F0
_080745A0:
	ldr r0, _080745B4 @ =gSamusData
	ldrb r0, [r0, #1]
	cmp r0, #0x16
	beq _080745C0
	cmp r0, #0x16
	bgt _080745B8
	cmp r0, #0xb
	beq _080745C0
	b _080745C8
	.align 2, 0
_080745B4: .4byte gSamusData
_080745B8:
	cmp r0, #0x1e
	bgt _080745C8
	cmp r0, #0x1d
	blt _080745C8
_080745C0:
	ldrb r1, [r3]
	movs r0, #8
	orrs r0, r1
	b _080745CE
_080745C8:
	ldrb r1, [r3]
	movs r0, #0xf7
	ands r0, r1
_080745CE:
	strb r0, [r3]
	adds r4, r3, #0
	ldrb r0, [r4, #3]
	cmp r0, #0
	beq _080745F8
	cmp r0, #1
	beq _08074618
	ldr r0, _080745F4 @ =0x083EED58
	bl ParticleUpdateAnimation
	ldrb r1, [r4, #4]
	movs r0, #0xf
	ands r0, r1
	cmp r0, #0
	bne _08074648
	movs r0, #0xec
	bl SoundPlay
	b _08074648
	.align 2, 0
_080745F4: .4byte 0x083EED58
_080745F8:
	ldrb r1, [r4]
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r4]
	ldrb r0, [r4, #3]
	adds r0, #1
	strb r0, [r4, #3]
	ldr r0, _08074614 @ =0x083EEC40
	bl ParticleUpdateAnimation
	movs r0, #0xeb
	bl SoundPlay
	b _08074650
	.align 2, 0
_08074614: .4byte 0x083EEC40
_08074618:
	movs r0, #0x13
	ldrsb r0, [r5, r0]
	cmp r0, #0
	bge _0807463C
	movs r0, #2
	movs r1, #0
	strb r0, [r3, #3]
	movs r0, #0
	strh r1, [r3, #6]
	strb r0, [r3, #1]
	strb r0, [r3, #4]
	ldr r0, _08074638 @ =0x083EED58
	bl ParticleUpdateAnimation
	b _08074650
	.align 2, 0
_08074638: .4byte 0x083EED58
_0807463C:
	ldr r0, _08074644 @ =0x083EEC40
	bl ParticleUpdateAnimation
	b _08074650
	.align 2, 0
_08074644: .4byte 0x083EEC40
_08074648:
	ldr r1, _08074658 @ =0x030008B8
	ldrb r0, [r1, #4]
	adds r0, #1
	strb r0, [r1, #4]
_08074650:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08074658: .4byte 0x030008B8

	thumb_func_start ParticleDust1
ParticleDust1: @ 0x0807465C
	push {r4, lr}
	ldr r4, _0807468C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _08074690 @ =0x083EE164
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0807467A
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _0807467A
	strb r0, [r4]
_0807467A:
	ldr r1, _0807468C @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _08074686
	adds r0, #1
	strb r0, [r1, #3]
_08074686:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807468C: .4byte 0x030008B8
_08074690: .4byte 0x083EE164

	thumb_func_start ParticleDust2
ParticleDust2: @ 0x08074694
	push {r4, lr}
	ldr r4, _080746C4 @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r0, _080746C8 @ =0x083EE194
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _080746B2
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _080746B2
	strb r0, [r4]
_080746B2:
	ldr r1, _080746C4 @ =0x030008B8
	ldrb r0, [r1, #3]
	cmp r0, #0
	bne _080746BE
	adds r0, #1
	strb r0, [r1, #3]
_080746BE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080746C4: .4byte 0x030008B8
_080746C8: .4byte 0x083EE194

	thumb_func_start ParticleEscape
ParticleEscape: @ 0x080746CC
	push {r4, r5, lr}
	ldr r5, _080746E0 @ =0x030008B8
	ldrb r0, [r5, #3]
	cmp r0, #1
	beq _08074704
	cmp r0, #1
	bgt _080746E4
	cmp r0, #0
	beq _080746EA
	b _08074758
	.align 2, 0
_080746E0: .4byte 0x030008B8
_080746E4:
	cmp r0, #2
	beq _08074742
	b _08074758
_080746EA:
	movs r4, #1
	strb r4, [r5, #3]
	ldrb r1, [r5]
	movs r0, #0x50
	orrs r0, r1
	strb r0, [r5]
	bl EscapeSetDigits
	ldr r0, _08074700 @ =gEscapeStatus
	strb r4, [r0]
	b _08074758
	.align 2, 0
_08074700: .4byte gEscapeStatus
_08074704:
	ldr r0, _08074724 @ =gEscapeStatus
	ldrb r0, [r0]
	cmp r0, #2
	bne _0807472C
	ldr r1, _08074728 @ =gPreventMovementTimer
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r2, #0
	strh r0, [r1]
	movs r0, #3
	strb r0, [r5, #3]
	movs r0, #0xff
	strb r0, [r5, #4]
	bl unk_6dee8
	b _08074758
	.align 2, 0
_08074724: .4byte gEscapeStatus
_08074728: .4byte gPreventMovementTimer
_0807472C:
	cmp r0, #1
	bne _08074758
	bl EventCheckOn_EndEscape
	cmp r0, #0
	beq _08074758
	movs r0, #2
	strb r0, [r5, #3]
	movs r0, #0x20
	strb r0, [r5, #4]
	b _08074758
_08074742:
	ldrh r0, [r5, #8]
	subs r0, #2
	strh r0, [r5, #8]
	ldrb r0, [r5, #4]
	subs r0, #1
	strb r0, [r5, #4]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08074758
	movs r0, #0
	strb r0, [r5]
_08074758:
	bl EscapeUpdateOam
	ldr r1, _08074768 @ =0x03000954
	ldr r0, _0807476C @ =gEscapeDigitsOam
	str r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08074768: .4byte 0x03000954
_0807476C: .4byte gEscapeDigitsOam

	thumb_func_start ParticleGettingSuit
ParticleGettingSuit: @ 0x08074770
	push {r4, r5, lr}
	ldr r3, _080747A8 @ =0x030008B8
	ldrb r0, [r3, #4]
	adds r0, #1
	strb r0, [r3, #4]
	ldr r2, _080747AC @ =gSamusData
	movs r1, #0x26
	ldrsh r0, [r2, r1]
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	ldrh r1, [r2, #0x18]
	adds r0, r0, r1
	subs r0, #0x20
	movs r5, #0
	strh r0, [r3, #8]
	ldrh r0, [r2, #0x16]
	strh r0, [r3, #0xa]
	ldrb r0, [r3, #3]
	adds r4, r3, #0
	cmp r0, #1
	beq _080747BC
	cmp r0, #1
	bgt _080747B0
	cmp r0, #0
	beq _080747B6
	b _08074804
	.align 2, 0
_080747A8: .4byte 0x030008B8
_080747AC: .4byte gSamusData
_080747B0:
	cmp r0, #2
	beq _080747E8
	b _08074804
_080747B6:
	movs r0, #1
	strb r0, [r4, #3]
	b _080747DC
_080747BC:
	ldr r0, _080747D4 @ =gPoseLock
	ldrb r1, [r0]
	cmp r1, #0
	bne _080747DC
	movs r0, #2
	strb r0, [r4, #3]
	strh r1, [r4, #6]
	strb r5, [r4, #1]
	ldr r0, _080747D8 @ =0x083ED26C
	bl ParticleUpdateAnimation
	b _08074808
	.align 2, 0
_080747D4: .4byte gPoseLock
_080747D8: .4byte 0x083ED26C
_080747DC:
	ldr r0, _080747E4 @ =0x083ED1E4
	bl ParticleUpdateAnimation
	b _08074808
	.align 2, 0
_080747E4: .4byte 0x083ED1E4
_080747E8:
	ldr r0, _08074800 @ =0x083ED26C
	bl ParticleUpdateAnimation
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08074808
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _08074808
	strb r5, [r4]
	b _08074808
	.align 2, 0
_08074800: .4byte 0x083ED26C
_08074804:
	movs r0, #0
	strb r0, [r4]
_08074808:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ParticleGettingSuitBeams
ParticleGettingSuitBeams: @ 0x08074810
	push {r4, lr}
	ldr r4, _0807485C @ =0x030008B8
	ldrb r0, [r4, #4]
	adds r0, #1
	strb r0, [r4, #4]
	ldr r2, _08074860 @ =gSamusData
	movs r1, #0x26
	ldrsh r0, [r2, r1]
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	ldrh r1, [r2, #0x18]
	adds r0, r0, r1
	subs r0, #0x20
	strh r0, [r4, #8]
	ldrh r0, [r2, #0x16]
	strh r0, [r4, #0xa]
	ldr r0, _08074864 @ =0x083ED18C
	bl ParticleUpdateAnimation
	ldr r0, _08074868 @ =gPoseLock
	ldrb r0, [r0]
	cmp r0, #0
	bne _08074844
	movs r0, #0
	strb r0, [r4]
_08074844:
	ldrb r0, [r4, #3]
	cmp r0, #0
	bne _08074856
	adds r0, #1
	strb r0, [r4, #3]
	ldrb r0, [r4]
	movs r1, #4
	orrs r0, r1
	strb r0, [r4]
_08074856:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807485C: .4byte 0x030008B8
_08074860: .4byte gSamusData
_08074864: .4byte 0x083ED18C
_08074868: .4byte gPoseLock

	thumb_func_start UpdateMenuOamDataID
UpdateMenuOamDataID: @ 0x0807486C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r3, _0807488C @ =gNonGameplayRam
	lsls r2, r0, #1
	adds r2, r2, r0
	lsls r2, r2, #2
	adds r3, r2, r3
	adds r0, r3, #0
	adds r0, #0x36
	movs r2, #0
	strb r1, [r0]
	subs r0, #2
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	bx lr
	.align 2, 0
_0807488C: .4byte gNonGameplayRam

	thumb_func_start EventSet
EventSet: @ 0x08074890
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	ldr r0, _080748AC @ =gEventCounter
	strb r1, [r0]
	movs r4, #0
	cmp r1, #0x6b
	bls _080748A2
	b _08074B3A
_080748A2:
	lsls r0, r1, #2
	ldr r1, _080748B0 @ =_080748B4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080748AC: .4byte gEventCounter
_080748B0: .4byte _080748B4
_080748B4: @ jump table
	.4byte _08074A64 @ case 0
	.4byte _08074B3A @ case 1
	.4byte _08074B3A @ case 2
	.4byte _08074A80 @ case 3
	.4byte _08074B3A @ case 4
	.4byte _08074B3A @ case 5
	.4byte _08074B3A @ case 6
	.4byte _08074B38 @ case 7
	.4byte _08074B3A @ case 8
	.4byte _08074B3A @ case 9
	.4byte _08074B38 @ case 10
	.4byte _08074B3A @ case 11
	.4byte _08074B3A @ case 12
	.4byte _08074B3A @ case 13
	.4byte _08074B3A @ case 14
	.4byte _08074B38 @ case 15
	.4byte _08074B3A @ case 16
	.4byte _08074B3A @ case 17
	.4byte _08074B3A @ case 18
	.4byte _08074A8C @ case 19
	.4byte _08074B3A @ case 20
	.4byte _08074B3A @ case 21
	.4byte _08074B38 @ case 22
	.4byte _08074B3A @ case 23
	.4byte _08074B3A @ case 24
	.4byte _08074B38 @ case 25
	.4byte _08074B3A @ case 26
	.4byte _08074B3A @ case 27
	.4byte _08074B3A @ case 28
	.4byte _08074B38 @ case 29
	.4byte _08074B3A @ case 30
	.4byte _08074B3A @ case 31
	.4byte _08074B3A @ case 32
	.4byte _08074B3A @ case 33
	.4byte _08074B3A @ case 34
	.4byte _08074AA0 @ case 35
	.4byte _08074B3A @ case 36
	.4byte _08074B3A @ case 37
	.4byte _08074B38 @ case 38
	.4byte _08074B3A @ case 39
	.4byte _08074B3A @ case 40
	.4byte _08074B3A @ case 41
	.4byte _08074B3A @ case 42
	.4byte _08074B3A @ case 43
	.4byte _08074B3A @ case 44
	.4byte _08074B3A @ case 45
	.4byte _08074B3A @ case 46
	.4byte _08074B3A @ case 47
	.4byte _08074B3A @ case 48
	.4byte _08074B3A @ case 49
	.4byte _08074B3A @ case 50
	.4byte _08074B38 @ case 51
	.4byte _08074B3A @ case 52
	.4byte _08074B3A @ case 53
	.4byte _08074B3A @ case 54
	.4byte _08074AB4 @ case 55
	.4byte _08074B3A @ case 56
	.4byte _08074B3A @ case 57
	.4byte _08074B38 @ case 58
	.4byte _08074B3A @ case 59
	.4byte _08074B38 @ case 60
	.4byte _08074B3A @ case 61
	.4byte _08074B3A @ case 62
	.4byte _08074B3A @ case 63
	.4byte _08074B3A @ case 64
	.4byte _08074B3A @ case 65
	.4byte _08074B38 @ case 66
	.4byte _08074B3A @ case 67
	.4byte _08074B3A @ case 68
	.4byte _08074B3A @ case 69
	.4byte _08074AEE @ case 70
	.4byte _08074B3A @ case 71
	.4byte _08074B3A @ case 72
	.4byte _08074B38 @ case 73
	.4byte _08074B3A @ case 74
	.4byte _08074B3A @ case 75
	.4byte _08074AE4 @ case 76
	.4byte _08074B3A @ case 77
	.4byte _08074B10 @ case 78
	.4byte _08074B3A @ case 79
	.4byte _08074B3A @ case 80
	.4byte _08074B38 @ case 81
	.4byte _08074B3A @ case 82
	.4byte _08074AC8 @ case 83
	.4byte _08074B3A @ case 84
	.4byte _08074B3A @ case 85
	.4byte _08074B38 @ case 86
	.4byte _08074B3A @ case 87
	.4byte _08074B3A @ case 88
	.4byte _08074B3A @ case 89
	.4byte _08074B3A @ case 90
	.4byte _08074B38 @ case 91
	.4byte _08074B3A @ case 92
	.4byte _08074B3A @ case 93
	.4byte _08074B3A @ case 94
	.4byte _08074B3A @ case 95
	.4byte _08074B38 @ case 96
	.4byte _08074B3A @ case 97
	.4byte _08074B3A @ case 98
	.4byte _08074B3A @ case 99
	.4byte _08074B3A @ case 100
	.4byte _08074B3A @ case 101
	.4byte _08074B3A @ case 102
	.4byte _08074B3A @ case 103
	.4byte _08074B3A @ case 104
	.4byte _08074B3A @ case 105
	.4byte _08074B3A @ case 106
	.4byte _08074B38 @ case 107
_08074A64:
	ldr r0, _08074A78 @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _08074B3A
	ldr r1, _08074A7C @ =gEquipment
	movs r0, #0xff
	strb r0, [r1, #0xd]
	b _08074B3E
	.align 2, 0
_08074A78: .4byte gPauseScreenFlag
_08074A7C: .4byte gEquipment
_08074A80:
	ldr r0, _08074A88 @ =gEquipment
	movs r1, #0
	strb r1, [r0, #0xd]
	b _08074AFC
	.align 2, 0
_08074A88: .4byte gEquipment
_08074A8C:
	ldr r2, _08074A98 @ =gEquipment
	ldr r1, _08074A9C @ =0x085760C8
	ldrb r0, [r1]
	strb r0, [r2, #0xd]
	ldrb r0, [r1, #4]
	b _08074AD2
	.align 2, 0
_08074A98: .4byte gEquipment
_08074A9C: .4byte 0x085760C8
_08074AA0:
	ldr r2, _08074AAC @ =gEquipment
	ldr r1, _08074AB0 @ =0x085760C8
	ldrb r0, [r1, #8]
	strb r0, [r2, #0xd]
	ldrb r0, [r1, #0xc]
	b _08074AD2
	.align 2, 0
_08074AAC: .4byte gEquipment
_08074AB0: .4byte 0x085760C8
_08074AB4:
	ldr r2, _08074AC0 @ =gEquipment
	ldr r1, _08074AC4 @ =0x085760C8
	ldrb r0, [r1, #0x10]
	strb r0, [r2, #0xd]
	ldrb r0, [r1, #0x14]
	b _08074AD2
	.align 2, 0
_08074AC0: .4byte gEquipment
_08074AC4: .4byte 0x085760C8
_08074AC8:
	ldr r2, _08074ADC @ =gEquipment
	ldr r1, _08074AE0 @ =0x085760C8
	ldrb r0, [r1, #0x18]
	strb r0, [r2, #0xd]
	ldrb r0, [r1, #0x1c]
_08074AD2:
	movs r1, #0xa
	bl SetSubEventAndUpdateMusic
	b _08074B3A
	.align 2, 0
_08074ADC: .4byte gEquipment
_08074AE0: .4byte 0x085760C8
_08074AE4:
	movs r0, #0x71
	movs r1, #0xb
	bl SetSubEventAndUpdateMusic
	b _08074B3A
_08074AEE:
	ldr r1, _08074B04 @ =gSecurityHatchLevelBackup
	ldr r2, _08074B08 @ =gEquipment
	ldrb r0, [r2, #0xd]
	strb r0, [r1]
	movs r1, #0xff
	orrs r0, r1
	strb r0, [r2, #0xd]
_08074AFC:
	ldr r0, _08074B0C @ =gSecurityHatchLevel
	strb r1, [r0]
	b _08074B3A
	.align 2, 0
_08074B04: .4byte gSecurityHatchLevelBackup
_08074B08: .4byte gEquipment
_08074B0C: .4byte gSecurityHatchLevel
_08074B10:
	ldr r2, _08074B2C @ =gSecurityHatchLevelBackup
	ldrb r1, [r2]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _08074B3E
	ldr r0, _08074B30 @ =gEquipment
	strb r1, [r0, #0xd]
	movs r0, #0xff
	strb r0, [r2]
	ldr r1, _08074B34 @ =gCurrentEventBasedEffect
	movs r0, #2
	strb r0, [r1]
	b _08074B3E
	.align 2, 0
_08074B2C: .4byte gSecurityHatchLevelBackup
_08074B30: .4byte gEquipment
_08074B34: .4byte gCurrentEventBasedEffect
_08074B38:
	movs r4, #1
_08074B3A:
	cmp r4, #0
	beq _08074BA0
_08074B3E:
	movs r4, #0x12
	ldr r3, _08074B78 @ =gEventCounter
	ldr r2, _08074B7C @ =0x08575FA0
_08074B44:
	adds r1, r4, r2
	ldrb r0, [r3]
	ldrb r1, [r1]
	cmp r0, r1
	bne _08074B9A
	ldr r0, _08074B80 @ =gAbilityCount
	strb r4, [r0]
	ldr r3, _08074B84 @ =gEquipment
	ldr r1, _08074B88 @ =0x08575FB4
	lsls r0, r4, #3
	adds r2, r0, r1
	ldrb r0, [r3, #0xa]
	ldrb r1, [r2]
	orrs r0, r1
	strb r0, [r3, #0xa]
	ldrb r0, [r3, #0xb]
	ldrb r1, [r2, #1]
	orrs r0, r1
	strb r0, [r3, #0xb]
	ldrb r0, [r2, #3]
	cmp r0, #0
	beq _08074B8C
	bl RecoveringSuitInit
	b _08074B94
	.align 2, 0
_08074B78: .4byte gEventCounter
_08074B7C: .4byte 0x08575FA0
_08074B80: .4byte gAbilityCount
_08074B84: .4byte gEquipment
_08074B88: .4byte 0x08575FB4
_08074B8C:
	ldrb r0, [r3, #0xc]
	ldrb r1, [r2, #2]
	orrs r0, r1
	strb r0, [r3, #0xc]
_08074B94:
	bl UpdateSubEventCounterAfterAbility
	b _08074BA0
_08074B9A:
	subs r4, #1
	cmp r4, #0
	bne _08074B44
_08074BA0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CheckPlayCutsceneDuringTransition
CheckPlayCutsceneDuringTransition: @ 0x08074BA8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	movs r0, #0
	mov r8, r0
	ldr r0, _08074BEC @ =gSamusData
	ldrb r0, [r0, #1]
	cmp r0, #0x17
	beq _08074BFC
	ldr r0, _08074BF0 @ =gEventCounter
	ldrb r0, [r0]
	cmp r0, #0x5d
	beq _08074BC8
	b _08074CE0
_08074BC8:
	cmp r6, #0x4d
	beq _08074BCE
	b _08074CE0
_08074BCE:
	ldr r0, _08074BF4 @ =gCurrentArea
	ldrb r0, [r0]
	cmp r0, #0
	beq _08074BD8
	b _08074CE0
_08074BD8:
	ldr r1, _08074BF8 @ =gCurrentCutscene
	movs r0, #0xa
	strb r0, [r1]
	movs r0, #0x8d
	movs r1, #4
	bl SetSubEventAndUpdateMusic
	movs r1, #3
	mov r8, r1
	b _08074CE0
	.align 2, 0
_08074BEC: .4byte gSamusData
_08074BF0: .4byte gEventCounter
_08074BF4: .4byte gCurrentArea
_08074BF8: .4byte gCurrentCutscene
_08074BFC:
	movs r5, #0
	movs r1, #0
	ldr r7, _08074C34 @ =gEventCounter
	mov ip, r7
	ldr r2, _08074C38 @ =0x083C8BFC
	ldr r4, _08074C3C @ =0x08576098
	ldr r3, _08074C40 @ =gCurrentArea
_08074C0A:
	mov r7, ip
	ldrb r0, [r7]
	ldrb r7, [r4]
	cmp r0, r7
	bne _08074CB4
	ldrb r0, [r4, #2]
	cmp r0, #0
	beq _08074C44
	ldrb r0, [r4, #1]
	lsls r0, r0, #2
	adds r1, r0, r2
	ldrb r0, [r1, #2]
	ldrb r3, [r3]
	cmp r0, r3
	bne _08074C5A
	ldrb r0, [r1, #3]
	cmp r0, r6
	bne _08074C5A
	movs r5, #1
	b _08074C5E
	.align 2, 0
_08074C34: .4byte gEventCounter
_08074C38: .4byte 0x083C8BFC
_08074C3C: .4byte 0x08576098
_08074C40: .4byte gCurrentArea
_08074C44:
	ldrb r0, [r4, #1]
	lsls r0, r0, #2
	adds r1, r0, r2
	ldrb r0, [r1]
	ldrb r3, [r3]
	cmp r0, r3
	bne _08074C5A
	ldrb r0, [r1, #1]
	cmp r0, r6
	bne _08074C5A
	movs r5, #1
_08074C5A:
	cmp r5, #0
	beq _08074CE0
_08074C5E:
	ldr r0, _08074CA4 @ =gPreviousCutscene
	ldrb r2, [r4, #3]
	ldrb r0, [r0]
	adds r1, r2, #0
	cmp r0, r1
	beq _08074CBC
	ldr r0, _08074CA8 @ =gCurrentCutscene
	strb r2, [r0]
	movs r0, #1
	mov r8, r0
	cmp r1, #9
	bne _08074C90
	mov r1, ip
	ldrb r0, [r1]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl EventSet
	ldr r1, _08074CAC @ =gPreviousNavigationConversation
	movs r0, #0xfe
	strb r0, [r1]
	ldr r1, _08074CB0 @ =0x03000B85
	movs r0, #0
	strb r0, [r1]
_08074C90:
	ldrh r0, [r4, #4]
	cmp r0, #0
	beq _08074CBC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #4
	bl SetSubEventAndUpdateMusic
	b _08074CBC
	.align 2, 0
_08074CA4: .4byte gPreviousCutscene
_08074CA8: .4byte gCurrentCutscene
_08074CAC: .4byte gPreviousNavigationConversation
_08074CB0: .4byte 0x03000B85
_08074CB4:
	adds r4, #8
	adds r1, #1
	cmp r1, #5
	ble _08074C0A
_08074CBC:
	cmp r5, #0
	bne _08074CE0
	ldr r0, _08074CEC @ =gEventCounter
	ldrb r0, [r0]
	cmp r0, #0xc
	bne _08074CE0
	cmp r6, #0x22
	bne _08074CE0
	ldr r0, _08074CF0 @ =gCurrentArea
	ldrb r0, [r0]
	cmp r0, #0
	bne _08074CE0
	movs r0, #0x11
	movs r1, #4
	bl SetSubEventAndUpdateMusic
	movs r7, #2
	mov r8, r7
_08074CE0:
	mov r0, r8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08074CEC: .4byte gEventCounter
_08074CF0: .4byte gCurrentArea

	thumb_func_start CheckUpdateEventAfterCutscene
CheckUpdateEventAfterCutscene: @ 0x08074CF4
	push {r4, lr}
	ldr r0, _08074D18 @ =gPreviousCutscene
	ldr r2, _08074D1C @ =gCurrentCutscene
	ldrb r1, [r2]
	strb r1, [r0]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r4, r2, #0
	cmp r1, #7
	bne _08074D0E
	movs r0, #0x62
	bl EventSet
_08074D0E:
	ldrb r0, [r4]
	cmp r0, #0xa
	bne _08074D20
	movs r0, #0x8e
	b _08074D36
	.align 2, 0
_08074D18: .4byte gPreviousCutscene
_08074D1C: .4byte gCurrentCutscene
_08074D20:
	movs r2, #0
	ldr r1, _08074D40 @ =0x08576098
_08074D24:
	ldrb r0, [r4]
	ldrb r3, [r1, #3]
	cmp r0, r3
	bne _08074D44
	ldrh r0, [r1, #6]
	cmp r0, #0
	beq _08074D4C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_08074D36:
	movs r1, #5
	bl SetSubEventAndUpdateMusic
	b _08074D4C
	.align 2, 0
_08074D40: .4byte 0x08576098
_08074D44:
	adds r1, #8
	adds r2, #1
	cmp r2, #5
	ble _08074D24
_08074D4C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CheckRoomHasEventTrigger
CheckRoomHasEventTrigger: @ 0x08074D54
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, _08074D9C @ =gEventCounter
	ldrb r0, [r0]
	adds r3, r0, #1
	ldr r1, _08074DA0 @ =gRoomEventTrigger
	movs r0, #0
	strb r0, [r1]
	movs r5, #0
	ldr r4, _08074DA4 @ =0x08575A60
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r2, r0, r4
_08074D72:
	ldrb r0, [r2, #7]
	cmp r0, #0
	bne _08074DAC
	ldrb r0, [r2, #8]
	lsls r0, r0, #0x1f
	cmp r0, #0
	bne _08074DAC
	ldr r0, _08074DA8 @ =gCurrentArea
	ldrb r0, [r0]
	ldrb r4, [r2]
	cmp r0, r4
	bne _08074DAC
	ldrb r0, [r2, #1]
	cmp r6, r0
	bne _08074DAC
	ldrb r0, [r2, #2]
	cmp r0, #0xff
	beq _08074DF4
	strb r3, [r1]
	b _08074DBC
	.align 2, 0
_08074D9C: .4byte gEventCounter
_08074DA0: .4byte gRoomEventTrigger
_08074DA4: .4byte 0x08575A60
_08074DA8: .4byte gCurrentArea
_08074DAC:
	ldrb r0, [r2, #8]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _08074DBC
	adds r2, #0xc
	adds r3, #1
	adds r5, #1
	b _08074D72
_08074DBC:
	cmp r5, #0
	beq _08074E1C
	ldr r0, _08074DE8 @ =gEventCounter
	ldrb r3, [r0]
	cmp r3, #0
	ble _08074E1C
	ldr r0, _08074DEC @ =0x08575A60
	lsls r1, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrb r2, [r1, #6]
	ldrb r1, [r1, #6]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r4, r0, #0
	cmp r1, #0
	beq _08074DFE
	ldr r0, _08074DF0 @ =gPreviousNavigationConversation
	strb r2, [r0]
	b _08074E1C
	.align 2, 0
_08074DE8: .4byte gEventCounter
_08074DEC: .4byte 0x08575A60
_08074DF0: .4byte gPreviousNavigationConversation
_08074DF4:
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	bl EventSet
	b _08074DBC
_08074DFE:
	subs r3, #1
	cmp r3, #0
	ble _08074E1C
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r0, r0, r4
	ldrb r1, [r0, #6]
	ldrb r0, [r0, #6]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _08074DFE
	ldr r0, _08074E24 @ =gPreviousNavigationConversation
	strb r1, [r0]
_08074E1C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08074E24: .4byte gPreviousNavigationConversation

	thumb_func_start CheckRoomEventTrigger
CheckRoomEventTrigger: @ 0x08074E28
	push {r4, lr}
	ldr r2, _08074E7C @ =0x08575A60
	ldr r4, _08074E80 @ =gRoomEventTrigger
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r1, r0, r2
	ldrb r0, [r1, #2]
	lsls r0, r0, #6
	ldr r3, _08074E84 @ =gSamusData
	ldrh r2, [r3, #0x16]
	cmp r0, r2
	bgt _08074EA6
	ldrb r0, [r1, #4]
	lsls r0, r0, #6
	cmp r0, r2
	blt _08074EA6
	ldrb r0, [r1, #3]
	lsls r0, r0, #6
	ldrh r2, [r3, #0x18]
	cmp r0, r2
	bgt _08074EA6
	ldrb r0, [r1, #5]
	lsls r0, r0, #6
	cmp r0, r2
	blt _08074EA6
	ldrb r0, [r4]
	bl EventSet
	movs r0, #0
	strb r0, [r4]
	ldr r0, _08074E88 @ =gEventCounter
	ldrb r0, [r0]
	cmp r0, #0x5c
	bne _08074E8C
	movs r0, #0xfa
	bl SoundPlay
	movs r0, #0x8b
	b _08074E92
	.align 2, 0
_08074E7C: .4byte 0x08575A60
_08074E80: .4byte gRoomEventTrigger
_08074E84: .4byte gSamusData
_08074E88: .4byte gEventCounter
_08074E8C:
	cmp r0, #0x59
	bne _08074E9A
	movs r0, #0x85
_08074E92:
	movs r1, #0xb
	bl SetSubEventAndUpdateMusic
	b _08074EA6
_08074E9A:
	cmp r0, #0x5a
	bne _08074EA6
	movs r0, #0x86
	movs r1, #0xb
	bl SetSubEventAndUpdateMusic
_08074EA6:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start CheckSetNavigationRoomEvent
CheckSetNavigationRoomEvent: @ 0x08074EAC
	push {r4, r5, lr}
	movs r5, #0
	ldr r1, _08074F18 @ =0x08575A60
	ldr r0, _08074F1C @ =gEventCounter
	ldrb r0, [r0]
	adds r3, r0, #1
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r1, r0, r1
	ldrb r0, [r1, #7]
	cmp r0, #0
	beq _08074EF6
	ldr r4, _08074F20 @ =0x0857604C
	lsls r2, r0, #1
	adds r0, r2, r4
	ldr r1, _08074F24 @ =gCurrentArea
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	beq _08074EDA
	cmp r0, #0xff
	bne _08074EF6
_08074EDA:
	adds r0, r4, #1
	adds r0, r2, r0
	ldrb r2, [r0]
	subs r1, r2, #1
	ldr r0, _08074F28 @ =gCurrentRoom
	ldrb r0, [r0]
	cmp r1, r0
	beq _08074EEE
	cmp r2, #0xff
	bne _08074EF6
_08074EEE:
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	bl EventSet
_08074EF6:
	ldr r0, _08074F24 @ =gCurrentArea
	movs r2, #1
	ldrb r0, [r0]
	lsls r2, r0
	ldr r3, _08074F2C @ =gEquipment
	ldrb r1, [r3, #0xe]
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _08074F10
	orrs r1, r2
	strb r1, [r3, #0xe]
	movs r5, #1
_08074F10:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08074F18: .4byte 0x08575A60
_08074F1C: .4byte gEventCounter
_08074F20: .4byte 0x0857604C
_08074F24: .4byte gCurrentArea
_08074F28: .4byte gCurrentRoom
_08074F2C: .4byte gEquipment

	thumb_func_start CheckDownloadedDataItem
CheckDownloadedDataItem: @ 0x08074F30
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	movs r4, #0
	ldr r1, _08074F68 @ =0x08575A60
	ldr r0, _08074F6C @ =gEventCounter
	ldrb r0, [r0]
	adds r2, r0, #1
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrb r0, [r0, #8]
	lsls r0, r0, #0x1f
	cmp r0, #0
	beq _08074F5E
	cmp r3, #0
	beq _08074F5C
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	bl EventSet
_08074F5C:
	movs r4, #1
_08074F5E:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08074F68: .4byte 0x08575A60
_08074F6C: .4byte gEventCounter

	thumb_func_start CheckOrUnlockSecurityLevel
CheckOrUnlockSecurityLevel: @ 0x08074F70
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov ip, r0
	ldr r0, _08074F98 @ =gEquipment
	ldrb r4, [r0, #0xd]
	cmp r4, #0xff
	bne _08074F82
	movs r4, #0
_08074F82:
	movs r5, #0
	movs r3, #0
	ldr r0, _08074F9C @ =gCurrentArea
	ldr r1, _08074FA0 @ =0x085760C8
	ldrb r2, [r0]
	adds r6, r0, #0
	ldrb r0, [r1, #1]
	cmp r2, r0
	bne _08074FA4
	ldrb r5, [r1]
	b _08074FB8
	.align 2, 0
_08074F98: .4byte gEquipment
_08074F9C: .4byte gCurrentArea
_08074FA0: .4byte 0x085760C8
_08074FA4:
	adds r3, #1
	cmp r3, #3
	bgt _08074FB8
	lsls r0, r3, #3
	adds r2, r0, r1
	ldrb r0, [r6]
	ldrb r7, [r2, #1]
	cmp r0, r7
	bne _08074FA4
	ldrb r5, [r2]
_08074FB8:
	cmp r4, r5
	blt _08074FC0
	movs r0, #0
	b _08074FF4
_08074FC0:
	ldr r2, _08074FEC @ =gEventCounter
	lsls r0, r3, #3
	adds r1, r0, r1
	ldrb r0, [r2]
	ldrb r3, [r1, #2]
	cmp r0, r3
	bne _08074FF0
	mov r7, ip
	cmp r7, #0
	beq _08074FF2
	adds r0, #1
	ldrb r1, [r1, #3]
	cmp r0, r1
	bne _08074FF2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl EventSet
	movs r0, #2
	bl SetCurrentEventBasedEffect
	b _08074FF2
	.align 2, 0
_08074FEC: .4byte gEventCounter
_08074FF0:
	movs r5, #0
_08074FF2:
	adds r0, r5, #0
_08074FF4:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start LoadInitialMinimap
LoadInitialMinimap: @ 0x08074FFC
	push {r4, r5, lr}
	ldr r5, _08075060 @ =gPreviousArea
	ldrb r0, [r5]
	ldr r4, _08075064 @ =0x02034000
	adds r1, r4, #0
	bl GetMinimapData
	ldr r1, _08075068 @ =0x040000D4
	str r4, [r1]
	ldr r0, _0807506C @ =0x02034800
	str r0, [r1, #4]
	ldr r0, _08075070 @ =0x80000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldrb r0, [r5]
	bl MinimapSetVisitedTilesAndCollectedItems
	ldr r1, _08075074 @ =gSamusData
	ldrh r0, [r1, #0x16]
	subs r0, #0x80
	asrs r0, r0, #6
	ldrh r4, [r1, #0x18]
	subs r4, #0x80
	asrs r4, r4, #6
	movs r1, #0xf
	bl __divsi3
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0xa
	bl __divsi3
	ldr r3, _08075078 @ =0x03000031
	ldr r1, _0807507C @ =0x0879B8BC
	ldr r2, [r1]
	adds r1, r2, #0
	adds r1, #0x35
	ldrb r1, [r1]
	adds r1, r1, r5
	strb r1, [r3]
	ldr r3, _08075080 @ =0x03000032
	adds r2, #0x36
	ldrb r1, [r2]
	adds r1, r1, r0
	strb r1, [r3]
	bl MinimapSetTileAsExplored
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08075060: .4byte gPreviousArea
_08075064: .4byte 0x02034000
_08075068: .4byte 0x040000D4
_0807506C: .4byte 0x02034800
_08075070: .4byte 0x80000400
_08075074: .4byte gSamusData
_08075078: .4byte 0x03000031
_0807507C: .4byte 0x0879B8BC
_08075080: .4byte 0x03000032

	thumb_func_start MinimapUpdate
MinimapUpdate: @ 0x08075084
	push {lr}
	bl MinimapCheckForUnexploredTile
	ldr r0, _080750A4 @ =gMinimapUpdateFlag
	ldrb r0, [r0]
	cmp r0, #3
	bne _0807509A
	bl MinimapSetTileAsExplored
	bl MinimapUpdateForExploredTiles
_0807509A:
	bl MinimapDraw
	pop {r0}
	bx r0
	.align 2, 0
_080750A4: .4byte gMinimapUpdateFlag

	thumb_func_start MinimapSetTileAsExplored
MinimapSetTileAsExplored: @ 0x080750A8
	push {lr}
	ldr r1, _080750D8 @ =gCurrentArea
	ldrb r0, [r1]
	cmp r0, #6
	bhi _080750D4
	adds r2, r0, #0
	ldr r0, _080750DC @ =0x03000032
	lsls r2, r2, #5
	ldrb r0, [r0]
	adds r2, r2, r0
	lsls r2, r2, #2
	ldr r0, _080750E0 @ =0x02037C00
	adds r2, r2, r0
	ldr r1, _080750E4 @ =0x0879BDDC
	ldr r0, _080750E8 @ =0x03000031
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r2]
	ldr r0, [r0]
	orrs r1, r0
	str r1, [r2]
_080750D4:
	pop {r0}
	bx r0
	.align 2, 0
_080750D8: .4byte gCurrentArea
_080750DC: .4byte 0x03000032
_080750E0: .4byte 0x02037C00
_080750E4: .4byte 0x0879BDDC
_080750E8: .4byte 0x03000031

	thumb_func_start MinimapCheckForUnexploredTile
MinimapCheckForUnexploredTile: @ 0x080750EC
	push {r4, r5, r6, lr}
	ldr r0, _0807511C @ =gMinimapUpdateFlag
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	bne _080751AC
	ldr r1, _08075120 @ =gSamusData
	ldrh r3, [r1, #0x16]
	adds r0, r3, #0
	subs r0, #0x80
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldrh r0, [r1, #0x18]
	subs r0, #0x80
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r0, #0x80
	lsls r0, r0, #8
	ands r0, r4
	cmp r0, #0
	beq _08075124
	movs r4, #0
	b _0807513C
	.align 2, 0
_0807511C: .4byte gMinimapUpdateFlag
_08075120: .4byte gSamusData
_08075124:
	ldr r0, _0807514C @ =gBackgroundsData
	ldrh r0, [r0, #0x1c]
	lsls r0, r0, #0x16
	movs r2, #0xff
	lsls r2, r2, #0x18
	adds r0, r0, r2
	lsrs r2, r0, #0x10
	cmp r3, r2
	blo _0807513C
	subs r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_0807513C:
	movs r0, #0x80
	lsls r0, r0, #8
	ands r0, r5
	cmp r0, #0
	beq _08075150
	movs r5, #0
	b _0807516A
	.align 2, 0
_0807514C: .4byte gBackgroundsData
_08075150:
	ldr r0, _080751B4 @ =gBackgroundsData
	ldrh r0, [r0, #0x1e]
	lsls r0, r0, #0x16
	movs r2, #0xff
	lsls r2, r2, #0x18
	adds r0, r0, r2
	lsrs r2, r0, #0x10
	ldrh r0, [r1, #0x18]
	cmp r0, r2
	blo _0807516A
	subs r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_0807516A:
	lsrs r4, r4, #6
	lsrs r5, r5, #6
	adds r0, r4, #0
	movs r1, #0xf
	bl __udivsi3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r5, #0
	movs r1, #0xa
	bl __udivsi3
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r2, _080751B8 @ =0x03000031
	ldrb r1, [r2]
	ldr r3, _080751BC @ =gCurrentRoomEntry
	ldrb r0, [r3, #0xe]
	adds r0, r4, r0
	cmp r1, r0
	beq _0807519A
	strb r0, [r2]
	movs r0, #3
	strb r0, [r6]
_0807519A:
	ldr r2, _080751C0 @ =0x03000032
	ldrb r1, [r2]
	ldrb r0, [r3, #0xf]
	adds r0, r5, r0
	cmp r1, r0
	beq _080751AC
	strb r0, [r2]
	movs r0, #3
	strb r0, [r6]
_080751AC:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080751B4: .4byte gBackgroundsData
_080751B8: .4byte 0x03000031
_080751BC: .4byte gCurrentRoomEntry
_080751C0: .4byte 0x03000032

	thumb_func_start MinimapCheckOnTransition
MinimapCheckOnTransition: @ 0x080751C4
	push {r4, r5, lr}
	ldr r0, _0807524C @ =gCurrentArea
	ldrb r1, [r0]
	adds r2, r0, #0
	ldr r5, _08075250 @ =gPreviousArea
	cmp r1, #0
	bne _080751E2
	ldr r0, _08075254 @ =gCurrentCutscene
	ldrb r0, [r0]
	cmp r0, #0
	beq _080751E2
	cmp r0, #0xa
	bne _080751E2
	movs r0, #0x80
	strb r0, [r5]
_080751E2:
	ldrb r1, [r2]
	ldrb r0, [r5]
	cmp r0, r1
	beq _08075214
	strb r1, [r5]
	ldrb r0, [r5]
	ldr r4, _08075258 @ =0x02034000
	adds r1, r4, #0
	bl GetMinimapData
	ldr r1, _0807525C @ =0x040000D4
	str r4, [r1]
	ldr r0, _08075260 @ =0x02034800
	str r0, [r1, #4]
	ldr r0, _08075264 @ =0x80000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldrb r0, [r5]
	bl MinimapSetVisitedTilesAndCollectedItems
	ldr r0, _08075268 @ =0x03000031
	movs r1, #0xff
	strb r1, [r0]
	ldr r0, _0807526C @ =0x03000032
	strb r1, [r0]
_08075214:
	ldr r4, _08075270 @ =gMinimapUpdateFlag
	movs r0, #0
	strb r0, [r4]
	bl MinimapCheckForUnexploredTile
	ldrb r0, [r4]
	cmp r0, #3
	bne _0807522C
	bl MinimapSetTileAsExplored
	bl MinimapUpdateForExploredTiles
_0807522C:
	movs r0, #1
	strb r0, [r4]
	bl MinimapDraw
	movs r0, #2
	strb r0, [r4]
	bl MinimapDraw
	movs r0, #3
	strb r0, [r4]
	bl MinimapDraw
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807524C: .4byte gCurrentArea
_08075250: .4byte gPreviousArea
_08075254: .4byte gCurrentCutscene
_08075258: .4byte 0x02034000
_0807525C: .4byte 0x040000D4
_08075260: .4byte 0x02034800
_08075264: .4byte 0x80000400
_08075268: .4byte 0x03000031
_0807526C: .4byte 0x03000032
_08075270: .4byte gMinimapUpdateFlag

	thumb_func_start MinimapDraw
MinimapDraw: @ 0x08075274
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	ldr r0, _08075298 @ =gMinimapUpdateFlag
	ldrb r1, [r0]
	adds r2, r0, #0
	cmp r1, #0
	beq _0807535A
	ldr r0, _0807529C @ =0x02034000
	mov r8, r0
	ldr r0, _080752A0 @ =0x02035C00
	str r0, [sp]
	adds r0, r1, #0
	cmp r0, #3
	bne _080752A4
	movs r6, #1
	b _080752B4
	.align 2, 0
_08075298: .4byte gMinimapUpdateFlag
_0807529C: .4byte 0x02034000
_080752A0: .4byte 0x02035C00
_080752A4:
	cmp r0, #2
	bne _080752AC
	movs r6, #0
	b _080752B4
_080752AC:
	cmp r1, #1
	bne _080752B4
	movs r6, #1
	rsbs r6, r6, #0
_080752B4:
	ldrb r0, [r2]
	subs r0, #1
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #5
	ldr r0, [sp]
	adds r0, r0, r1
	str r0, [sp]
	movs r5, #1
	rsbs r5, r5, #0
	add r4, sp, #4
_080752CA:
	ldr r0, _0807531C @ =0x03000031
	ldrb r0, [r0]
	adds r1, r0, r5
	cmp r1, #0x1f
	bls _080752D6
	movs r1, #0xff
_080752D6:
	ldr r0, _08075320 @ =0x03000032
	ldrb r0, [r0]
	adds r0, r0, r6
	cmp r0, #0x1f
	bls _080752E2
	movs r0, #0xff
_080752E2:
	cmp r0, #0xff
	beq _080752EA
	cmp r1, #0xff
	bne _080752EE
_080752EA:
	movs r1, #0x1f
	movs r0, #0x1f
_080752EE:
	lsls r0, r0, #5
	adds r0, r0, r1
	lsls r0, r0, #1
	add r0, r8
	ldrh r1, [r0]
	movs r2, #0xc0
	lsls r2, r2, #4
	adds r0, r2, #0
	adds r3, r0, #0
	ands r3, r1
	lsrs r2, r1, #0xc
	ldr r7, _08075324 @ =0x000003FF
	adds r0, r7, #0
	ands r0, r1
	lsls r0, r0, #5
	str r0, [sp, #4]
	cmp r3, #0
	bne _08075328
	mov r0, sp
	adds r1, r4, #0
	bl MinimapCopyTileGfx
	b _08075354
	.align 2, 0
_0807531C: .4byte 0x03000031
_08075320: .4byte 0x03000032
_08075324: .4byte 0x000003FF
_08075328:
	movs r0, #0x80
	lsls r0, r0, #3
	cmp r3, r0
	bne _0807533A
	mov r0, sp
	adds r1, r4, #0
	bl MinimapCopyTileXFlippedGfx
	b _08075354
_0807533A:
	movs r0, #0x80
	lsls r0, r0, #4
	cmp r3, r0
	bne _0807534C
	mov r0, sp
	adds r1, r4, #0
	bl MinimapCopyTileYFlippedGfx
	b _08075354
_0807534C:
	mov r0, sp
	adds r1, r4, #0
	bl MinimapCopyTileXYFlippedGfx
_08075354:
	adds r5, #1
	cmp r5, #1
	ble _080752CA
_0807535A:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start MinimapCopyTileGfx
MinimapCopyTileGfx: @ 0x08075368
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r2, r2, #0x18
	ldr r0, _080753C0 @ =0x08561FA8
	mov r8, r0
	ldr r0, _080753C4 @ =0x085761C0
	mov ip, r0
	lsrs r2, r2, #0x14
	ldr r7, _080753C8 @ =0x08576190
	movs r6, #0x1f
_08075382:
	ldr r0, [r4]
	add r0, r8
	ldrb r3, [r0]
	adds r1, r3, #0
	lsrs r0, r1, #4
	adds r0, r0, r2
	add r0, ip
	ldrb r3, [r0]
	movs r0, #0xf
	ands r0, r1
	adds r0, r0, r2
	adds r0, r0, r7
	ldrb r0, [r0]
	ldr r1, [r5]
	orrs r3, r0
	strb r3, [r1]
	subs r6, #1
	ldr r0, [r4]
	adds r0, #1
	str r0, [r4]
	ldr r0, [r5]
	adds r0, #1
	str r0, [r5]
	cmp r6, #0
	bge _08075382
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080753C0: .4byte 0x08561FA8
_080753C4: .4byte 0x085761C0
_080753C8: .4byte 0x08576190

	thumb_func_start MinimapCopyTileXFlippedGfx
MinimapCopyTileXFlippedGfx: @ 0x080753CC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r2, r2, #0x18
	movs r1, #0
	lsrs r6, r2, #0x14
	ldr r0, _0807543C @ =0x08561FA8
	mov sb, r0
	ldr r0, _08075440 @ =0x085761C0
	mov r8, r0
	ldr r0, _08075444 @ =0x08576190
	mov ip, r0
_080753EA:
	ldr r0, [r4]
	adds r0, #3
	str r0, [r4]
	adds r7, r1, #1
	movs r2, #3
_080753F4:
	ldr r0, [r4]
	add r0, sb
	ldrb r3, [r0]
	adds r1, r3, #0
	movs r0, #0xf
	ands r0, r1
	adds r0, r0, r6
	add r0, r8
	ldrb r3, [r0]
	lsrs r1, r1, #4
	adds r1, r1, r6
	add r1, ip
	ldrb r0, [r1]
	ldr r1, [r5]
	orrs r3, r0
	strb r3, [r1]
	subs r2, #1
	ldr r0, [r5]
	adds r0, #1
	str r0, [r5]
	ldr r1, [r4]
	subs r0, r1, #1
	str r0, [r4]
	cmp r2, #0
	bge _080753F4
	adds r0, r1, #4
	str r0, [r4]
	adds r1, r7, #0
	cmp r1, #7
	ble _080753EA
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807543C: .4byte 0x08561FA8
_08075440: .4byte 0x085761C0
_08075444: .4byte 0x08576190

	thumb_func_start MinimapCopyTileYFlippedGfx
MinimapCopyTileYFlippedGfx: @ 0x08075448
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r2, r2, #0x18
	ldr r0, [r4]
	adds r0, #0x1c
	str r0, [r4]
	movs r0, #0
	lsrs r6, r2, #0x14
	ldr r1, _080754B8 @ =0x08561FA8
	mov sb, r1
	ldr r1, _080754BC @ =0x085761C0
	mov r8, r1
	ldr r1, _080754C0 @ =0x08576190
	mov ip, r1
_0807546C:
	adds r7, r0, #1
	movs r2, #3
_08075470:
	ldr r0, [r4]
	add r0, sb
	ldrb r3, [r0]
	adds r1, r3, #0
	lsrs r0, r1, #4
	adds r0, r0, r6
	add r0, r8
	ldrb r3, [r0]
	movs r0, #0xf
	ands r0, r1
	adds r0, r0, r6
	add r0, ip
	ldrb r0, [r0]
	ldr r1, [r5]
	orrs r3, r0
	strb r3, [r1]
	subs r2, #1
	ldr r0, [r5]
	adds r0, #1
	str r0, [r5]
	ldr r1, [r4]
	adds r0, r1, #1
	str r0, [r4]
	cmp r2, #0
	bge _08075470
	subs r0, r1, #7
	str r0, [r4]
	adds r0, r7, #0
	cmp r0, #7
	ble _0807546C
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080754B8: .4byte 0x08561FA8
_080754BC: .4byte 0x085761C0
_080754C0: .4byte 0x08576190

	thumb_func_start MinimapCopyTileXYFlippedGfx
MinimapCopyTileXYFlippedGfx: @ 0x080754C4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r2, r2, #0x18
	ldr r0, [r4]
	adds r0, #0x1f
	str r0, [r4]
	ldr r0, _08075520 @ =0x08561FA8
	mov r8, r0
	ldr r0, _08075524 @ =0x085761C0
	mov ip, r0
	lsrs r2, r2, #0x14
	ldr r7, _08075528 @ =0x08576190
	movs r6, #0x1f
_080754E4:
	ldr r0, [r4]
	add r0, r8
	ldrb r3, [r0]
	adds r1, r3, #0
	movs r0, #0xf
	ands r0, r1
	adds r0, r0, r2
	add r0, ip
	ldrb r3, [r0]
	lsrs r1, r1, #4
	adds r1, r1, r2
	adds r1, r1, r7
	ldrb r0, [r1]
	ldr r1, [r5]
	orrs r3, r0
	strb r3, [r1]
	subs r6, #1
	ldr r0, [r5]
	adds r0, #1
	str r0, [r5]
	ldr r0, [r4]
	subs r0, #1
	str r0, [r4]
	cmp r6, #0
	bge _080754E4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08075520: .4byte 0x08561FA8
_08075524: .4byte 0x085761C0
_08075528: .4byte 0x08576190

	thumb_func_start MapScreenSubroutine
MapScreenSubroutine: @ 0x0807552C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	movs r7, #0
	ldr r0, _080755F8 @ =gButtonInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08075548
	b _080756CA
_08075548:
	ldr r2, _080755FC @ =gNonGameplayRam
	ldr r0, _08075600 @ =0x00000259
	adds r0, r0, r2
	mov r8, r0
	ldr r1, _08075604 @ =0x00000256
	adds r0, r2, r1
	mov r3, r8
	ldrb r1, [r3]
	mov r3, sp
	strb r1, [r3, #0x10]
	mov r1, r8
	movs r3, #0
	ldrsb r3, [r1, r3]
	movs r1, #0
	ldrsb r1, [r0, r1]
	eors r1, r3
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	mov sl, r0
	movs r1, #0x98
	lsls r1, r1, #2
	adds r0, r2, r1
	mov r1, sl
	strb r1, [r0]
	movs r0, #0
	mov ip, r0
	ldr r1, _08075608 @ =0x00000257
	adds r0, r2, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r6, r2, #0
	cmp r0, r3
	ble _08075592
	movs r3, #1
	mov ip, r3
_08075592:
	ldr r1, _0807560C @ =0x00000261
	adds r0, r6, r1
	mov r3, ip
	strb r3, [r0]
	movs r4, #0
	subs r1, #0xd
	adds r0, r6, r1
	movs r3, #0x96
	lsls r3, r3, #2
	adds r5, r6, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrb r1, [r5]
	mov sb, r1
	movs r2, #0
	ldrsb r2, [r5, r2]
	cmp r0, r2
	ble _080755BA
	movs r4, #1
_080755BA:
	ldr r3, _08075610 @ =0x0000025E
	adds r0, r6, r3
	strb r4, [r0]
	ldr r1, _08075614 @ =0x00000255
	adds r0, r6, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	eors r1, r2
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r3, r0, #0x1f
	ldr r1, _08075618 @ =0x0000025F
	adds r0, r6, r1
	strb r3, [r0]
	ldr r0, _0807561C @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	mov r2, sb
	cmp r0, #0
	beq _08075620
	mov r1, sl
	cmp r1, #0
	beq _0807565E
	mov r3, sp
	ldrb r0, [r3, #0x10]
	subs r0, #1
	mov r1, r8
	strb r0, [r1]
	b _0807565C
	.align 2, 0
_080755F8: .4byte gButtonInput
_080755FC: .4byte gNonGameplayRam
_08075600: .4byte 0x00000259
_08075604: .4byte 0x00000256
_08075608: .4byte 0x00000257
_0807560C: .4byte 0x00000261
_08075610: .4byte 0x0000025E
_08075614: .4byte 0x00000255
_08075618: .4byte 0x0000025F
_0807561C: .4byte gChangedInput
_08075620:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0807563A
	mov r3, ip
	cmp r3, #0
	beq _0807565E
	mov r1, sp
	ldrb r0, [r1, #0x10]
	adds r0, #1
	mov r3, r8
	strb r0, [r3]
	b _0807565C
_0807563A:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0807564A
	cmp r4, #0
	beq _0807565E
	adds r0, r2, #1
	b _0807565A
_0807564A:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0807565E
	cmp r3, #0
	beq _0807565E
	mov r0, sb
	subs r0, #1
_0807565A:
	strb r0, [r5]
_0807565C:
	movs r7, #1
_0807565E:
	ldr r2, _080756AC @ =gBackgroundPositions
	adds r4, r6, #0
	movs r1, #0x96
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	movs r0, #0xf
	subs r0, r0, r1
	lsls r0, r0, #3
	movs r1, #0x80
	lsls r1, r1, #2
	adds r3, r1, #0
	subs r0, r3, r0
	movs r5, #0
	strh r0, [r2, #0xc]
	adds r1, #0x59
	adds r0, r4, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	movs r0, #0xa
	subs r0, r0, r1
	lsls r0, r0, #3
	subs r0, r3, r0
	strh r0, [r2, #0xe]
	ldr r0, _080756B0 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080756B4
	adds r1, r4, #0
	adds r1, #0x28
	movs r0, #6
	strb r0, [r1]
	strb r5, [r4, #6]
	strb r5, [r4, #7]
	b _080756C8
	.align 2, 0
_080756AC: .4byte gBackgroundPositions
_080756B0: .4byte gChangedInput
_080756B4:
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _080756CA
	adds r1, r6, #0
	adds r1, #0x28
	movs r0, #0xb
	strb r0, [r1]
	strb r5, [r6, #6]
	strb r5, [r6, #7]
_080756C8:
	movs r7, #3
_080756CA:
	ldr r3, _080756E8 @ =gChangedInput
	ldrh r1, [r3]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080756D8
	movs r7, #2
_080756D8:
	cmp r7, #0
	beq _08075710
	cmp r7, #1
	bne _080756EC
	movs r0, #1
	bl unk_77840
	b _0807572C
	.align 2, 0
_080756E8: .4byte gChangedInput
_080756EC:
	cmp r7, #2
	bne _0807572C
	ldr r0, _0807570C @ =gNonGameplayRam
	ldrb r0, [r0, #1]
	cmp r0, #4
	beq _08075700
	cmp r0, #5
	beq _08075702
	cmp r0, #9
	bne _08075702
_08075700:
	movs r7, #1
_08075702:
	adds r0, r7, #0
	bl unk_77840
	b _0807572C
	.align 2, 0
_0807570C: .4byte gNonGameplayRam
_08075710:
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0807572C
	ldr r0, _0807573C @ =gNonGameplayRam
	movs r1, #0x9d
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807572C
	movs r0, #1
	bl PauseScreenDrawIgtAndTanks
_0807572C:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807573C: .4byte gNonGameplayRam

	thumb_func_start SetMapScreenSamusHeadPosition
SetMapScreenSamusHeadPosition: @ 0x08075740
	ldr r2, _08075760 @ =gNonGameplayRam
	ldr r0, _08075764 @ =0x03000031
	ldrb r0, [r0]
	lsls r0, r0, #3
	movs r3, #0xd7
	lsls r3, r3, #1
	adds r1, r2, r3
	strh r0, [r1]
	ldr r0, _08075768 @ =0x03000032
	ldrb r0, [r0]
	lsls r0, r0, #3
	subs r3, #2
	adds r1, r2, r3
	strh r0, [r1]
	bx lr
	.align 2, 0
_08075760: .4byte gNonGameplayRam
_08075764: .4byte 0x03000031
_08075768: .4byte 0x03000032

	thumb_func_start MinimapSetVisitedTilesAndCollectedItems
MinimapSetVisitedTilesAndCollectedItems: @ 0x0807576C
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r0, #0
	cmp r0, #7
	bls _0807577A
	movs r4, #7
_0807577A:
	adds r0, r4, #0
	bl MinimapSetVisitedTiles
	adds r0, r4, #0
	bl MinimapSetCollectedItems
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start MinimapSetVisitedTiles
MinimapSetVisitedTiles: @ 0x0807578C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #7
	cmp r0, #6
	bhi _080757A2
	adds r1, r0, #0
_080757A2:
	lsls r0, r1, #7
	ldr r3, _080757F0 @ =0x02037C00
	adds r2, r0, r3
	ldr r3, _080757F4 @ =0x02034000
	ldr r0, _080757F8 @ =gEquipment
	ldrb r0, [r0, #0xe]
	asrs r0, r1
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08075822
	movs r1, #0
	ldr r5, _080757FC @ =0x0879BDDC
	mov r8, r5
	movs r0, #0x80
	lsls r0, r0, #6
	mov ip, r0
_080757C4:
	ldm r2!, {r0}
	adds r6, r1, #1
	adds r7, r2, #0
	mov sb, r0
	mov r2, r8
	movs r4, #0x1f
_080757D0:
	ldr r0, [r2]
	mov r1, sb
	ands r0, r1
	cmp r0, #0
	beq _08075800
	ldrh r1, [r3]
	mov r0, ip
	ands r0, r1
	cmp r0, #0
	bne _0807580E
	movs r5, #0x80
	lsls r5, r5, #5
	adds r0, r5, #0
	orrs r0, r1
	b _0807580C
	.align 2, 0
_080757F0: .4byte 0x02037C00
_080757F4: .4byte 0x02034000
_080757F8: .4byte gEquipment
_080757FC: .4byte 0x0879BDDC
_08075800:
	ldrh r1, [r3]
	mov r0, ip
	ands r0, r1
	cmp r0, #0
	beq _0807580E
	movs r0, #0xa0
_0807580C:
	strh r0, [r3]
_0807580E:
	adds r2, #4
	subs r4, #1
	adds r3, #2
	cmp r4, #0
	bge _080757D0
	adds r1, r6, #0
	adds r2, r7, #0
	cmp r1, #0x1f
	ble _080757C4
	b _08075876
_08075822:
	movs r1, #0
	ldr r0, _0807585C @ =0x0879BDDC
	mov sl, r0
	movs r5, #0x80
	lsls r5, r5, #6
	mov sb, r5
	movs r0, #0x80
	lsls r0, r0, #5
	mov r8, r0
	movs r5, #0xa0
	mov ip, r5
_08075838:
	ldm r2!, {r0}
	adds r6, r1, #1
	adds r7, r2, #0
	adds r5, r0, #0
	mov r2, sl
	movs r4, #0x1f
_08075844:
	ldr r0, [r2]
	ands r0, r5
	cmp r0, #0
	beq _08075860
	ldrh r1, [r3]
	mov r0, sb
	ands r0, r1
	cmp r0, #0
	bne _08075864
	mov r0, r8
	orrs r0, r1
	b _08075862
	.align 2, 0
_0807585C: .4byte 0x0879BDDC
_08075860:
	mov r0, ip
_08075862:
	strh r0, [r3]
_08075864:
	adds r2, #4
	subs r4, #1
	adds r3, #2
	cmp r4, #0
	bge _08075844
	adds r1, r6, #0
	adds r2, r7, #0
	cmp r1, #0x1f
	ble _08075838
_08075876:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start MinimapSetCollectedItems
MinimapSetCollectedItems: @ 0x08075884
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	movs r6, #7
	cmp r2, #6
	bhi _08075898
	adds r6, r2, #0
_08075898:
	ldr r0, _080758A8 @ =0x02034000
	mov sb, r0
	movs r7, #0x40
	cmp r6, #0
	beq _080758AC
	adds r6, #1
	b _080758AE
	.align 2, 0
_080758A8: .4byte 0x02034000
_080758AC:
	movs r7, #0x80
_080758AE:
	lsls r0, r6, #8
	ldr r1, _08075920 @ =0x02037200
	adds r5, r0, r1
	movs r6, #0
	cmp r6, r7
	bge _08075914
	ldrb r0, [r5]
	cmp r0, #0xff
	beq _08075914
	ldr r1, _08075924 @ =0x0879B8BC
	lsls r0, r2, #2
	adds r0, r0, r1
	ldr r0, [r0]
	mov r8, r0
_080758CA:
	ldrb r0, [r5, #2]
	subs r0, #2
	movs r1, #0xf
	bl __divsi3
	adds r4, r0, #0
	ldrb r0, [r5, #3]
	subs r0, #2
	movs r1, #0xa
	bl __divsi3
	ldrb r2, [r5]
	lsls r1, r2, #4
	subs r1, r1, r2
	lsls r1, r1, #2
	add r1, r8
	adds r2, r1, #0
	adds r2, #0x35
	ldrb r2, [r2]
	adds r4, r4, r2
	adds r1, #0x36
	ldrb r1, [r1]
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r4
	lsls r0, r0, #1
	add r0, sb
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	adds r6, #1
	adds r5, #4
	cmp r6, r7
	bge _08075914
	ldrb r0, [r5]
	cmp r0, #0xff
	bne _080758CA
_08075914:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08075920: .4byte 0x02037200
_08075924: .4byte 0x0879B8BC

	thumb_func_start MinimapUpdateForExploredTiles
MinimapUpdateForExploredTiles: @ 0x08075928
	push {lr}
	ldr r0, _0807596C @ =gCurrentArea
	ldrb r0, [r0]
	cmp r0, #6
	bhi _08075982
	ldr r1, _08075970 @ =0x03000031
	ldr r0, _08075974 @ =0x03000032
	ldrb r0, [r0]
	lsls r0, r0, #5
	ldrb r1, [r1]
	adds r0, r0, r1
	lsls r3, r0, #1
	ldr r0, _08075978 @ =0x02034000
	adds r2, r3, r0
	ldrh r1, [r2]
	movs r0, #0xc0
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08075982
	ldr r1, _0807597C @ =0x02034800
	adds r0, r3, r1
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08075980
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	b _08075982
	.align 2, 0
_0807596C: .4byte gCurrentArea
_08075970: .4byte 0x03000031
_08075974: .4byte 0x03000032
_08075978: .4byte 0x02034000
_0807597C: .4byte 0x02034800
_08075980:
	strh r1, [r2]
_08075982:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_75988
unk_75988: @ 0x08075988
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r1, _080759EC @ =gNonGameplayRam
	ldr r2, _080759F0 @ =0x0000025E
	adds r0, r1, r2
	movs r3, #0
	strb r3, [r0]
	ldr r4, _080759F4 @ =0x0000025F
	adds r0, r1, r4
	strb r3, [r0]
	adds r2, #2
	adds r0, r1, r2
	strb r3, [r0]
	adds r4, #2
	adds r0, r1, r4
	strb r3, [r0]
	subs r2, #0xb
	adds r0, r1, r2
	movs r2, #0x1f
	strb r2, [r0]
	ldr r0, _080759F8 @ =0x00000256
	adds r4, r1, r0
	strb r2, [r4]
	movs r2, #0x95
	lsls r2, r2, #2
	adds r0, r1, r2
	strb r3, [r0]
	adds r2, #3
	adds r0, r1, r2
	strb r3, [r0]
	ldr r6, _080759FC @ =0x02034000
	movs r5, #0
	mov ip, r1
	ldr r0, _08075A00 @ =gBackgroundPositions
	mov sb, r0
	adds r7, r4, #0
	adds r4, r6, #0
_080759DC:
	movs r2, #0
	ldrh r0, [r4]
	lsls r1, r3, #5
	cmp r0, #0xa0
	beq _08075A04
	strb r3, [r7]
	b _08075A26
	.align 2, 0
_080759EC: .4byte gNonGameplayRam
_080759F0: .4byte 0x0000025E
_080759F4: .4byte 0x0000025F
_080759F8: .4byte 0x00000256
_080759FC: .4byte 0x02034000
_08075A00: .4byte gBackgroundPositions
_08075A04:
	adds r2, #1
	cmp r2, #0x1f
	bgt _08075A1A
	adds r0, r1, r2
	lsls r0, r0, #1
	adds r0, r0, r6
	ldrh r0, [r0]
	cmp r0, #0xa0
	beq _08075A04
	strb r3, [r7]
	movs r5, #1
_08075A1A:
	cmp r5, #0
	bne _08075A26
	adds r4, #0x40
	adds r3, #1
	cmp r3, #0x1f
	ble _080759DC
_08075A26:
	movs r5, #0
	movs r3, #0x20
	ldr r4, _08075A44 @ =0x030016DB
	movs r0, #0x80
	lsls r0, r0, #4
	adds r1, r6, r0
_08075A32:
	subs r1, #0x40
	subs r3, #1
	movs r2, #0
	ldrh r0, [r1]
	cmp r0, #0xa0
	beq _08075A48
	strb r3, [r4]
	b _08075A68
	.align 2, 0
_08075A44: .4byte 0x030016DB
_08075A48:
	adds r2, #1
	cmp r2, #0x1f
	bgt _08075A60
	lsls r0, r3, #5
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r0, r6
	ldrh r0, [r0]
	cmp r0, #0xa0
	beq _08075A48
	strb r3, [r4]
	movs r5, #1
_08075A60:
	cmp r5, #0
	bne _08075A68
	cmp r3, #0
	bgt _08075A32
_08075A68:
	movs r5, #0
	movs r3, #0
	ldr r4, _08075A7C @ =0x030016D9
	adds r1, r6, #0
_08075A70:
	movs r2, #0
	ldrh r0, [r1]
	cmp r0, #0xa0
	beq _08075A80
	strb r3, [r4]
	b _08075AA4
	.align 2, 0
_08075A7C: .4byte 0x030016D9
_08075A80:
	adds r2, #1
	cmp r2, #0x13
	bgt _08075A98
	lsls r0, r2, #5
	adds r0, r0, r3
	lsls r0, r0, #1
	adds r0, r0, r6
	ldrh r0, [r0]
	cmp r0, #0xa0
	beq _08075A80
	strb r3, [r4]
	movs r5, #1
_08075A98:
	cmp r5, #0
	bne _08075AA4
	adds r1, #2
	adds r3, #1
	cmp r3, #0x1f
	ble _08075A70
_08075AA4:
	movs r5, #0
	movs r3, #0x20
	ldr r4, _08075AC0 @ =0x030016D8
	adds r1, r6, #0
	adds r1, #0x40
_08075AAE:
	subs r1, #2
	subs r3, #1
	movs r2, #0
	ldrh r0, [r1]
	cmp r0, #0xa0
	beq _08075AC4
	strb r3, [r4]
	b _08075AE4
	.align 2, 0
_08075AC0: .4byte 0x030016D8
_08075AC4:
	adds r2, #1
	cmp r2, #0x13
	bgt _08075ADC
	lsls r0, r2, #5
	adds r0, r0, r3
	lsls r0, r0, #1
	adds r0, r0, r6
	ldrh r0, [r0]
	cmp r0, #0xa0
	beq _08075AC4
	strb r3, [r4]
	movs r5, #1
_08075ADC:
	cmp r5, #0
	bne _08075AE4
	cmp r3, #0
	bgt _08075AAE
_08075AE4:
	ldr r6, _08075B50 @ =0x00000255
	add r6, ip
	movs r4, #0x95
	lsls r4, r4, #2
	add r4, ip
	ldrb r2, [r6]
	movs r1, #0
	ldrsb r1, [r6, r1]
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r1, r0
	ble _08075AFE
	strb r2, [r4]
_08075AFE:
	ldr r5, _08075B54 @ =0x00000256
	add r5, ip
	ldr r3, _08075B58 @ =0x00000257
	add r3, ip
	ldrb r2, [r5]
	movs r1, #0
	ldrsb r1, [r5, r1]
	movs r0, #0
	ldrsb r0, [r3, r0]
	cmp r1, r0
	ble _08075B16
	strb r2, [r3]
_08075B16:
	ldrb r1, [r4]
	ldr r0, _08075B5C @ =0x0000025A
	add r0, ip
	strb r1, [r0]
	ldrb r1, [r6]
	ldr r0, _08075B60 @ =0x0000025B
	add r0, ip
	strb r1, [r0]
	ldrb r1, [r5]
	movs r0, #0x97
	lsls r0, r0, #2
	add r0, ip
	strb r1, [r0]
	ldrb r1, [r3]
	ldr r0, _08075B64 @ =0x0000025D
	add r0, ip
	strb r1, [r0]
	mov r1, r8
	cmp r1, #0
	beq _08075B6C
	movs r0, #0x84
	lsls r0, r0, #2
	add r0, ip
	ldrb r4, [r0]
	ldr r0, _08075B68 @ =0x00000211
	add r0, ip
	ldrb r1, [r0]
	b _08075BC6
	.align 2, 0
_08075B50: .4byte 0x00000255
_08075B54: .4byte 0x00000256
_08075B58: .4byte 0x00000257
_08075B5C: .4byte 0x0000025A
_08075B60: .4byte 0x0000025B
_08075B64: .4byte 0x0000025D
_08075B68: .4byte 0x00000211
_08075B6C:
	movs r0, #0
	ldrsb r0, [r6, r0]
	movs r1, #0
	ldrsb r1, [r4, r1]
	adds r0, r0, r1
	asrs r4, r0, #1
	movs r0, #0
	ldrsb r0, [r5, r0]
	movs r1, #0
	ldrsb r1, [r3, r1]
	adds r0, r0, r1
	asrs r1, r0, #1
	adds r3, r1, #4
	subs r2, r1, #7
	ldr r0, _08075B98 @ =0x00000211
	add r0, ip
	ldrb r0, [r0]
	cmp r3, r0
	bge _08075B9C
	subs r0, r0, r3
	adds r1, r1, r0
	b _08075BA4
	.align 2, 0
_08075B98: .4byte 0x00000211
_08075B9C:
	cmp r2, r0
	ble _08075BA4
	subs r0, r2, r0
	subs r1, r1, r0
_08075BA4:
	adds r3, r4, #0
	adds r3, #0xc
	adds r2, r4, #0
	subs r2, #0xc
	movs r0, #0x84
	lsls r0, r0, #2
	add r0, ip
	ldrb r0, [r0]
	cmp r3, r0
	bge _08075BBE
	subs r0, r0, r3
	adds r4, r4, r0
	b _08075BC6
_08075BBE:
	cmp r2, r0
	ble _08075BC6
	subs r0, r2, r0
	subs r4, r4, r0
_08075BC6:
	mov r3, ip
	movs r2, #0x96
	lsls r2, r2, #2
	adds r0, r3, r2
	strb r4, [r0]
	ldr r4, _08075C54 @ =0x00000259
	adds r2, r3, r4
	strb r1, [r2]
	movs r1, #0
	ldrsb r1, [r0, r1]
	movs r0, #0xf
	subs r0, r0, r1
	lsls r0, r0, #3
	subs r4, #0x59
	adds r1, r4, #0
	subs r0, r1, r0
	mov r4, sb
	strh r0, [r4, #0xc]
	ldrb r2, [r2]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	movs r0, #0xa
	subs r0, r0, r2
	lsls r0, r0, #3
	subs r1, r1, r0
	strh r1, [r4, #0xe]
	ldr r0, _08075C58 @ =0x00000257
	adds r4, r3, r0
	movs r0, #0
	ldrsb r0, [r4, r0]
	ldr r1, _08075C5C @ =0x00000256
	adds r2, r3, r1
	movs r1, #0
	ldrsb r1, [r2, r1]
	subs r0, r0, r1
	asrs r3, r0, #1
	cmp r3, #3
	ble _08075C14
	movs r3, #3
_08075C14:
	ldrb r0, [r2]
	adds r0, r0, r3
	strb r0, [r2]
	ldrb r0, [r4]
	subs r0, r0, r3
	strb r0, [r4]
	movs r4, #0x95
	lsls r4, r4, #2
	add r4, ip
	movs r0, #0
	ldrsb r0, [r4, r0]
	ldr r2, _08075C60 @ =0x00000255
	add r2, ip
	movs r1, #0
	ldrsb r1, [r2, r1]
	subs r0, r0, r1
	asrs r3, r0, #1
	cmp r3, #3
	ble _08075C3C
	movs r3, #3
_08075C3C:
	ldrb r0, [r2]
	adds r0, r0, r3
	strb r0, [r2]
	ldrb r0, [r4]
	subs r0, r0, r3
	strb r0, [r4]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08075C54: .4byte 0x00000259
_08075C58: .4byte 0x00000257
_08075C5C: .4byte 0x00000256
_08075C60: .4byte 0x00000255

	thumb_func_start MinimapUpdateForCollectedItem
MinimapUpdateForCollectedItem: @ 0x08075C64
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	subs r0, #2
	movs r1, #0xf
	bl __divsi3
	adds r5, r0, #0
	ldr r6, _08075CB8 @ =gCurrentRoomEntry
	ldrb r0, [r6, #0xe]
	adds r5, r5, r0
	subs r4, #2
	adds r0, r4, #0
	movs r1, #0xa
	bl __divsi3
	ldrb r1, [r6, #0xf]
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r5, r5, r0
	lsls r5, r5, #1
	ldr r0, _08075CBC @ =0x02034000
	adds r1, r5, r0
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	ldr r0, _08075CC0 @ =0x02034800
	adds r5, r5, r0
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	ldr r1, _08075CC4 @ =gMinimapUpdateFlag
	movs r0, #3
	strb r0, [r1]
	bl MinimapDraw
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08075CB8: .4byte gCurrentRoomEntry
_08075CBC: .4byte 0x02034000
_08075CC0: .4byte 0x02034800
_08075CC4: .4byte gMinimapUpdateFlag

	thumb_func_start MinimapCheckIsTileExplored
MinimapCheckIsTileExplored: @ 0x08075CC8
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
	ldr r1, _08075D10 @ =gCurrentArea
	ldrb r0, [r1]
	cmp r0, #6
	bhi _08075D20
	adds r5, r0, #0
	lsls r5, r5, #5
	subs r0, r2, #2
	movs r1, #0xf
	bl __divsi3
	adds r4, r0, #0
	ldr r6, _08075D14 @ =gCurrentRoomEntry
	ldrb r0, [r6, #0xe]
	adds r4, r4, r0
	subs r0, r7, #2
	movs r1, #0xa
	bl __divsi3
	ldrb r1, [r6, #0xf]
	adds r0, r0, r1
	adds r0, r0, r5
	lsls r0, r0, #2
	ldr r1, _08075D18 @ =0x02037C00
	adds r0, r0, r1
	ldr r1, _08075D1C @ =0x0879BDDC
	lsls r4, r4, #2
	adds r4, r4, r1
	ldr r0, [r0]
	ldr r1, [r4]
	ands r0, r1
	b _08075D22
	.align 2, 0
_08075D10: .4byte gCurrentArea
_08075D14: .4byte gCurrentRoomEntry
_08075D18: .4byte 0x02037C00
_08075D1C: .4byte 0x0879BDDC
_08075D20:
	movs r0, #1
_08075D22:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start MapScreenCountTanks
MapScreenCountTanks: @ 0x08075D28
	push {r4, r5, r6, r7, lr}
	ldr r4, _08075DE4 @ =gNonGameplayRam
	ldr r7, _08075DE8 @ =0x08575F88
	ldrb r1, [r7, #0x15]
	ldr r2, _08075DEC @ =0x0000027B
	adds r0, r4, r2
	movs r6, #0
	strb r1, [r0]
	ldrb r1, [r7, #0x16]
	adds r2, #2
	adds r0, r4, r2
	strb r1, [r0]
	ldrb r1, [r7, #0x17]
	adds r2, #2
	adds r0, r4, r2
	strb r1, [r0]
	ldr r5, _08075DF0 @ =gEquipment
	ldrh r0, [r5, #2]
	subs r0, #0x63
	movs r1, #0x64
	bl __divsi3
	movs r2, #0x9f
	lsls r2, r2, #2
	adds r1, r4, r2
	strb r0, [r1]
	ldrh r0, [r5, #6]
	subs r0, #0xa
	movs r1, #5
	bl __divsi3
	ldr r2, _08075DF4 @ =0x0000027E
	adds r1, r4, r2
	strb r0, [r1]
	ldrb r0, [r5, #9]
	subs r0, #0xa
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	adds r2, #2
	adds r1, r4, r2
	strb r0, [r1]
	ldr r0, _08075DF8 @ =0x00000275
	adds r3, r4, r0
	strb r6, [r3]
	ldr r1, _08075DFC @ =0x00000277
	adds r5, r4, r1
	strb r6, [r5]
	subs r2, #7
	adds r2, r2, r4
	mov ip, r2
	strb r6, [r2]
	subs r1, #1
	adds r0, r4, r1
	strb r6, [r0]
	movs r2, #0x9e
	lsls r2, r2, #2
	adds r0, r4, r2
	strb r6, [r0]
	ldr r0, _08075E00 @ =0x0000027A
	adds r4, r4, r0
	strb r6, [r4]
	ldr r2, _08075E04 @ =gCurrentArea
	ldrb r0, [r2]
	cmp r0, #6
	bhi _08075E5C
	adds r1, r0, #0
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r0, r0, r7
	ldrb r0, [r0]
	strb r0, [r3]
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r1, r7, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r5]
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r1, r7, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	mov r1, ip
	strb r0, [r1]
	ldrb r1, [r2]
	movs r6, #0x40
	cmp r1, #0
	beq _08075E08
	adds r1, #1
	b _08075E0A
	.align 2, 0
_08075DE4: .4byte gNonGameplayRam
_08075DE8: .4byte 0x08575F88
_08075DEC: .4byte 0x0000027B
_08075DF0: .4byte gEquipment
_08075DF4: .4byte 0x0000027E
_08075DF8: .4byte 0x00000275
_08075DFC: .4byte 0x00000277
_08075E00: .4byte 0x0000027A
_08075E04: .4byte gCurrentArea
_08075E08:
	movs r6, #0x80
_08075E0A:
	lsls r0, r1, #8
	ldr r1, _08075E30 @ =0x02037200
	adds r2, r0, r1
	movs r1, #0
	cmp r1, r6
	bge _08075E5C
	ldrb r0, [r2]
	cmp r0, #0xff
	beq _08075E5C
	ldr r3, _08075E34 @ =0x030016FC
	subs r5, r3, #2
	adds r4, r3, #2
_08075E22:
	ldrb r0, [r2, #1]
	cmp r0, #1
	bne _08075E38
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	b _08075E4E
	.align 2, 0
_08075E30: .4byte 0x02037200
_08075E34: .4byte 0x030016FC
_08075E38:
	cmp r0, #2
	bne _08075E44
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	b _08075E4E
_08075E44:
	cmp r0, #3
	bne _08075E4E
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
_08075E4E:
	adds r1, #1
	adds r2, #4
	cmp r1, r6
	bge _08075E5C
	ldrb r0, [r2]
	cmp r0, #0xff
	bne _08075E22
_08075E5C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start PauseScreenDrawIgtAndTanks
PauseScreenDrawIgtAndTanks: @ 0x08075E64
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08075EA4
	ldr r0, _08075E90 @ =gNonGameplayRam
	movs r1, #0x9d
	lsls r1, r1, #2
	adds r3, r0, r1
	ldrb r1, [r3]
	cmp r1, #1
	bne _08075E94
	movs r0, #2
	strb r0, [r3]
	movs r2, #1
	str r2, [sp]
	b _08075EB4
	.align 2, 0
_08075E90: .4byte gNonGameplayRam
_08075E94:
	cmp r1, #2
	beq _08075E9A
	b _080761B4
_08075E9A:
	movs r0, #1
	strb r0, [r3]
	movs r0, #0
	str r0, [sp]
	b _08075EB4
_08075EA4:
	ldr r2, _08075F50 @ =gNonGameplayRam
	movs r0, #0x9d
	lsls r0, r0, #2
	adds r1, r2, r0
	movs r0, #1
	strb r0, [r1]
	movs r1, #0
	str r1, [sp]
_08075EB4:
	ldr r2, _08075F54 @ =gInGameTimer
	mov sb, r2
	ldrb r0, [r2]
	movs r1, #0xa
	bl __udivsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0xa
	bl __umodsi3
	lsls r0, r0, #0x18
	ldr r4, _08075F58 @ =0x040000D4
	lsrs r0, r0, #0x13
	ldr r1, _08075F5C @ =0x06017EC0
	mov r8, r1
	add r0, r8
	str r0, [r4]
	ldr r2, _08075F60 @ =0x085761F0
	mov sl, r2
	ldr r5, [r2, #0x18]
	str r5, [r4, #4]
	ldr r6, _08075F64 @ =0x84000008
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	mov r1, sb
	ldrb r0, [r1]
	movs r1, #0xa
	bl __umodsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x13
	add r0, r8
	str r0, [r4]
	adds r5, #0x20
	str r5, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	mov r2, sb
	ldrb r0, [r2, #1]
	movs r1, #0xa
	bl __udivsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0xa
	bl __umodsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x13
	add r0, r8
	str r0, [r4]
	mov r0, sl
	ldr r5, [r0, #0x1c]
	str r5, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	mov r1, sb
	ldrb r0, [r1, #1]
	movs r1, #0xa
	bl __umodsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x13
	add r0, r8
	str r0, [r4]
	adds r5, #0x20
	str r5, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	mov sb, sl
	ldr r2, [sp]
	cmp r2, #0
	bne _08075F68
	ldr r1, _08075F50 @ =gNonGameplayRam
	movs r2, #0x9f
	lsls r2, r2, #2
	b _08075F6C
	.align 2, 0
_08075F50: .4byte gNonGameplayRam
_08075F54: .4byte gInGameTimer
_08075F58: .4byte 0x040000D4
_08075F5C: .4byte 0x06017EC0
_08075F60: .4byte 0x085761F0
_08075F64: .4byte 0x84000008
_08075F68:
	ldr r1, _08075FB8 @ =gNonGameplayRam
	ldr r2, _08075FBC @ =0x00000276
_08075F6C:
	adds r0, r1, r2
	ldrb r7, [r0]
	adds r0, r7, #0
	movs r1, #0xa
	bl __divsi3
	movs r1, #0xa
	bl __modsi3
	ldr r4, _08075FC0 @ =0x040000D4
	lsls r0, r0, #5
	ldr r1, _08075FC4 @ =0x06017EC0
	mov r8, r1
	add r0, r8
	str r0, [r4]
	mov r2, sb
	ldr r5, [r2]
	str r5, [r4, #4]
	ldr r6, _08075FC8 @ =0x84000008
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	adds r0, r7, #0
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #5
	add r0, r8
	str r0, [r4]
	adds r5, #0x20
	str r5, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, [sp]
	cmp r0, #0
	bne _08075FD0
	ldr r1, _08075FB8 @ =gNonGameplayRam
	ldr r2, _08075FCC @ =0x0000027B
	b _08075FD4
	.align 2, 0
_08075FB8: .4byte gNonGameplayRam
_08075FBC: .4byte 0x00000276
_08075FC0: .4byte 0x040000D4
_08075FC4: .4byte 0x06017EC0
_08075FC8: .4byte 0x84000008
_08075FCC: .4byte 0x0000027B
_08075FD0:
	ldr r1, _08076020 @ =gNonGameplayRam
	ldr r2, _08076024 @ =0x00000275
_08075FD4:
	adds r0, r1, r2
	ldrb r7, [r0]
	adds r0, r7, #0
	movs r1, #0xa
	bl __divsi3
	movs r1, #0xa
	bl __modsi3
	ldr r4, _08076028 @ =0x040000D4
	lsls r0, r0, #5
	ldr r1, _0807602C @ =0x06017EC0
	mov r8, r1
	add r0, r8
	str r0, [r4]
	mov r2, sb
	ldr r5, [r2, #4]
	str r5, [r4, #4]
	ldr r6, _08076030 @ =0x84000008
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	adds r0, r7, #0
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #5
	add r0, r8
	str r0, [r4]
	adds r5, #0x20
	str r5, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, [sp]
	cmp r0, #0
	bne _08076038
	ldr r1, _08076020 @ =gNonGameplayRam
	ldr r2, _08076034 @ =0x0000027E
	b _0807603E
	.align 2, 0
_08076020: .4byte gNonGameplayRam
_08076024: .4byte 0x00000275
_08076028: .4byte 0x040000D4
_0807602C: .4byte 0x06017EC0
_08076030: .4byte 0x84000008
_08076034: .4byte 0x0000027E
_08076038:
	ldr r1, _0807608C @ =gNonGameplayRam
	movs r2, #0x9e
	lsls r2, r2, #2
_0807603E:
	adds r0, r1, r2
	ldrb r7, [r0]
	adds r0, r7, #0
	movs r1, #0xa
	bl __divsi3
	movs r1, #0xa
	bl __modsi3
	ldr r4, _08076090 @ =0x040000D4
	lsls r0, r0, #5
	ldr r1, _08076094 @ =0x06017EC0
	mov r8, r1
	add r0, r8
	str r0, [r4]
	mov r2, sb
	ldr r5, [r2, #8]
	str r5, [r4, #4]
	ldr r6, _08076098 @ =0x84000008
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	adds r0, r7, #0
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #5
	add r0, r8
	str r0, [r4]
	adds r5, #0x20
	str r5, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, [sp]
	cmp r0, #0
	bne _080760A0
	ldr r1, _0807608C @ =gNonGameplayRam
	ldr r2, _0807609C @ =0x0000027D
	b _080760A4
	.align 2, 0
_0807608C: .4byte gNonGameplayRam
_08076090: .4byte 0x040000D4
_08076094: .4byte 0x06017EC0
_08076098: .4byte 0x84000008
_0807609C: .4byte 0x0000027D
_080760A0:
	ldr r1, _080760F4 @ =gNonGameplayRam
	ldr r2, _080760F8 @ =0x00000277
_080760A4:
	adds r0, r1, r2
	ldrb r7, [r0]
	adds r0, r7, #0
	movs r1, #0xa
	bl __divsi3
	movs r1, #0xa
	bl __modsi3
	ldr r4, _080760FC @ =0x040000D4
	lsls r0, r0, #5
	ldr r1, _08076100 @ =0x06017EC0
	mov r8, r1
	add r0, r8
	str r0, [r4]
	mov r2, sb
	ldr r5, [r2, #0xc]
	str r5, [r4, #4]
	ldr r6, _08076104 @ =0x84000008
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	adds r0, r7, #0
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #5
	add r0, r8
	str r0, [r4]
	adds r5, #0x20
	str r5, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, [sp]
	cmp r0, #0
	bne _08076108
	ldr r1, _080760F4 @ =gNonGameplayRam
	movs r2, #0xa0
	lsls r2, r2, #2
	b _0807610C
	.align 2, 0
_080760F4: .4byte gNonGameplayRam
_080760F8: .4byte 0x00000277
_080760FC: .4byte 0x040000D4
_08076100: .4byte 0x06017EC0
_08076104: .4byte 0x84000008
_08076108:
	ldr r1, _08076158 @ =gNonGameplayRam
	ldr r2, _0807615C @ =0x0000027A
_0807610C:
	adds r0, r1, r2
	ldrb r7, [r0]
	adds r0, r7, #0
	movs r1, #0xa
	bl __divsi3
	movs r1, #0xa
	bl __modsi3
	ldr r4, _08076160 @ =0x040000D4
	lsls r0, r0, #5
	ldr r1, _08076164 @ =0x06017EC0
	mov r8, r1
	add r0, r8
	str r0, [r4]
	mov r2, sb
	ldr r5, [r2, #0x10]
	str r5, [r4, #4]
	ldr r6, _08076168 @ =0x84000008
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	adds r0, r7, #0
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #5
	add r0, r8
	str r0, [r4]
	adds r5, #0x20
	str r5, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, [sp]
	cmp r0, #0
	bne _08076170
	ldr r1, _08076158 @ =gNonGameplayRam
	ldr r2, _0807616C @ =0x0000027F
	b _08076174
	.align 2, 0
_08076158: .4byte gNonGameplayRam
_0807615C: .4byte 0x0000027A
_08076160: .4byte 0x040000D4
_08076164: .4byte 0x06017EC0
_08076168: .4byte 0x84000008
_0807616C: .4byte 0x0000027F
_08076170:
	ldr r1, _080761C4 @ =gNonGameplayRam
	ldr r2, _080761C8 @ =0x00000279
_08076174:
	adds r0, r1, r2
	ldrb r7, [r0]
	adds r0, r7, #0
	movs r1, #0xa
	bl __divsi3
	movs r1, #0xa
	bl __modsi3
	ldr r4, _080761CC @ =0x040000D4
	lsls r0, r0, #5
	ldr r1, _080761D0 @ =0x06017EC0
	mov r8, r1
	add r0, r8
	str r0, [r4]
	mov r2, sb
	ldr r5, [r2, #0x14]
	str r5, [r4, #4]
	ldr r6, _080761D4 @ =0x84000008
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	adds r0, r7, #0
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #5
	add r0, r8
	str r0, [r4]
	adds r5, #0x20
	str r5, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
_080761B4:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080761C4: .4byte gNonGameplayRam
_080761C8: .4byte 0x00000279
_080761CC: .4byte 0x040000D4
_080761D0: .4byte 0x06017EC0
_080761D4: .4byte 0x84000008

	thumb_func_start PauseScreenMapDownload
PauseScreenMapDownload: @ 0x080761D8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	movs r0, #0
	str r0, [sp]
	ldr r1, _08076210 @ =gNonGameplayRam
	movs r0, #0x8c
	lsls r0, r0, #2
	adds r2, r1, r0
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldr r2, _08076214 @ =0x00000231
	adds r0, r1, r2
	ldrb r0, [r0]
	adds r6, r1, #0
	cmp r0, #6
	bls _08076204
	b _080765E2
_08076204:
	lsls r0, r0, #2
	ldr r1, _08076218 @ =_0807621C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08076210: .4byte gNonGameplayRam
_08076214: .4byte 0x00000231
_08076218: .4byte _0807621C
_0807621C: @ jump table
	.4byte _08076238 @ case 0
	.4byte _08076350 @ case 1
	.4byte _080763C4 @ case 2
	.4byte _080764D0 @ case 3
	.4byte _0807650C @ case 4
	.4byte _08076540 @ case 5
	.4byte _080765C8 @ case 6
_08076238:
	movs r1, #0x8c
	lsls r1, r1, #2
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #8
	bhi _08076246
	b _080765E2
_08076246:
	movs r2, #0xdb
	lsls r2, r2, #1
	adds r0, r6, r2
	movs r1, #0
	strb r1, [r0]
	subs r2, #2
	adds r0, r6, r2
	strb r1, [r0]
	adds r2, #1
	adds r0, r6, r2
	strb r1, [r0]
	adds r2, r6, #0
	adds r2, #0x5a
	movs r0, #0x11
	strb r0, [r2]
	adds r0, r6, #0
	adds r0, #0x58
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x52
	movs r0, #0x74
	strh r0, [r1]
	adds r0, r6, #0
	adds r0, #0x50
	ldr r3, _08076344 @ =0x0000FFF8
	strh r3, [r0]
	adds r4, r6, #0
	adds r4, #0x5b
	ldrb r1, [r4]
	movs r2, #4
	rsbs r2, r2, #0
	adds r0, r2, #0
	ands r0, r1
	strb r0, [r4]
	movs r5, #4
	ldr r0, _08076348 @ =0x0879BEBC
	mov ip, r0
	adds r4, r6, #0
	movs r7, #0
	mov sb, r3
	mov sl, r2
	movs r1, #0xd
	rsbs r1, r1, #0
	mov r8, r1
_080762A2:
	subs r5, #1
	mov r2, ip
	adds r3, r5, r2
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0x36
	strb r7, [r0]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0x34
	strb r7, [r0]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0x35
	strb r7, [r0]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	movs r1, #0x74
	strh r1, [r0, #0x2e]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	mov r1, sb
	strh r1, [r0, #0x2c]
	ldrb r0, [r3]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r4
	adds r1, #0x37
	ldrb r2, [r1]
	mov r0, sl
	ands r0, r2
	strb r0, [r1]
	ldrb r0, [r3]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r4
	adds r1, #0x37
	ldrb r2, [r1]
	mov r0, r8
	ands r0, r2
	movs r2, #4
	orrs r0, r2
	strb r0, [r1]
	cmp r5, #0
	bgt _080762A2
	ldr r2, _0807634C @ =0x00000231
	adds r1, r6, r2
	ldrb r0, [r1]
	adds r0, #1
	movs r2, #0
	strb r0, [r1]
	movs r1, #0x8c
	lsls r1, r1, #2
	adds r0, r6, r1
	strb r2, [r0]
	adds r1, #2
	adds r0, r6, r1
	strb r2, [r0]
	movs r2, #0x8d
	lsls r2, r2, #2
	adds r1, r6, r2
	movs r0, #0x80
	strb r0, [r1]
	b _080765E2
	.align 2, 0
_08076344: .4byte 0x0000FFF8
_08076348: .4byte 0x0879BEBC
_0807634C: .4byte 0x00000231
_08076350:
	ldr r0, _08076374 @ =0x00000233
	adds r3, r6, r0
	movs r0, #0
	strb r0, [r3]
	ldr r2, _08076378 @ =gBackgroundPositions
	ldrh r1, [r2, #0xe]
	ldr r0, _0807637C @ =0x000001FF
	cmp r1, r0
	bhi _08076380
	adds r0, r1, #0
	movs r1, #0x80
	lsls r1, r1, #2
	subs r1, r1, r0
	asrs r1, r1, #3
	movs r0, #0x20
	subs r0, r0, r1
	b _08076390
	.align 2, 0
_08076374: .4byte 0x00000233
_08076378: .4byte gBackgroundPositions
_0807637C: .4byte 0x000001FF
_08076380:
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r1, r0
	bls _08076392
	ldrh r0, [r2, #0xe]
	ldr r1, _080763B4 @ =0xFFFFFE00
	adds r0, r0, r1
	asrs r0, r0, #3
_08076390:
	strb r0, [r3]
_08076392:
	ldr r2, _080763B8 @ =0x00000232
	adds r0, r6, r2
	movs r4, #0
	strb r4, [r0]
	ldr r0, _080763BC @ =0x0000011B
	bl SoundPlay
	ldr r0, _080763C0 @ =0x00000231
	adds r1, r6, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r1, #0x8c
	lsls r1, r1, #2
	adds r0, r6, r1
	strb r4, [r0]
	b _080765E2
	.align 2, 0
_080763B4: .4byte 0xFFFFFE00
_080763B8: .4byte 0x00000232
_080763BC: .4byte 0x0000011B
_080763C0: .4byte 0x00000231
_080763C4:
	movs r5, #1
	movs r2, #0x8c
	lsls r2, r2, #2
	adds r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #7
	bls _08076442
	ldr r0, _08076414 @ =0x00000232
	adds r7, r6, r0
	ldrb r4, [r7]
	cmp r4, #0x13
	bhi _0807642C
	ldr r2, _08076418 @ =0x040000D4
	ldr r1, _0807641C @ =0x00000233
	adds r3, r6, r1
	ldrb r0, [r3]
	lsls r0, r0, #6
	ldr r1, _08076420 @ =0x02034000
	adds r0, r0, r1
	str r0, [r2]
	ldrb r0, [r3]
	lsls r0, r0, #6
	ldr r1, _08076424 @ =0x0600E000
	adds r0, r0, r1
	str r0, [r2, #4]
	ldr r0, _08076428 @ =0x80000020
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	adds r0, r4, #1
	strb r0, [r7]
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1f
	bls _08076438
	movs r0, #0
	strb r0, [r3]
	b _08076438
	.align 2, 0
_08076414: .4byte 0x00000232
_08076418: .4byte 0x040000D4
_0807641C: .4byte 0x00000233
_08076420: .4byte 0x02034000
_08076424: .4byte 0x0600E000
_08076428: .4byte 0x80000020
_0807642C:
	ldr r2, _080764C4 @ =0x00000231
	adds r1, r6, r2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r5, #0
_08076438:
	movs r0, #0x8c
	lsls r0, r0, #2
	adds r1, r6, r0
	movs r0, #0
	strb r0, [r1]
_08076442:
	cmp r5, #0
	bne _08076448
	b _080765E2
_08076448:
	ldr r1, _080764C8 @ =0x00000232
	adds r0, r6, r1
	ldrb r0, [r0]
	movs r2, #0x8c
	lsls r2, r2, #2
	adds r1, r6, r2
	lsls r0, r0, #3
	ldrb r1, [r1]
	adds r0, r0, r1
	subs r0, #5
	adds r7, r6, #0
	adds r7, #0x50
	movs r4, #0
	strh r0, [r7]
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r3, r6, r0
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bls _0807647A
	strb r4, [r3]
_0807647A:
	ldrb r5, [r3]
	ldr r0, _080764CC @ =0x0879BEBC
	adds r2, r5, r0
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrh r1, [r7]
	subs r1, #1
	strh r1, [r0, #0x2c]
	cmp r5, #2
	ble _08076496
	b _080765E2
_08076496:
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	adds r0, #0x36
	movs r1, #0x10
	strb r1, [r0]
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	adds r0, #0x34
	strb r4, [r0]
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	adds r0, #0x35
	strb r4, [r0]
	b _080765E2
	.align 2, 0
_080764C4: .4byte 0x00000231
_080764C8: .4byte 0x00000232
_080764CC: .4byte 0x0879BEBC
_080764D0:
	ldr r1, _080764F8 @ =0x040000D4
	ldr r0, _080764FC @ =0x02034000
	str r0, [r1]
	ldr r0, _08076500 @ =0x0600E000
	str r0, [r1, #4]
	ldr r0, _08076504 @ =0x80000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _08076508 @ =0x00000231
	adds r1, r6, r2
	ldrb r0, [r1]
	adds r0, #1
	movs r2, #0
	strb r0, [r1]
	movs r1, #0x8c
	lsls r1, r1, #2
	adds r0, r6, r1
	strb r2, [r0]
	b _080765E2
	.align 2, 0
_080764F8: .4byte 0x040000D4
_080764FC: .4byte 0x02034000
_08076500: .4byte 0x0600E000
_08076504: .4byte 0x80000400
_08076508: .4byte 0x00000231
_0807650C:
	movs r5, #3
	ldr r4, _08076534 @ =gMinimapUpdateFlag
_08076510:
	strb r5, [r4]
	bl MinimapDraw
	subs r5, #1
	cmp r5, #0
	bgt _08076510
	ldr r1, _08076538 @ =gNonGameplayRam
	ldr r0, _0807653C @ =0x00000231
	adds r2, r1, r0
	ldrb r0, [r2]
	adds r0, #1
	movs r3, #0
	strb r0, [r2]
	movs r2, #0x8c
	lsls r2, r2, #2
	adds r1, r1, r2
	strb r3, [r1]
	b _080765E2
	.align 2, 0
_08076534: .4byte gMinimapUpdateFlag
_08076538: .4byte gNonGameplayRam
_0807653C: .4byte 0x00000231
_08076540:
	movs r0, #0xdb
	lsls r0, r0, #1
	adds r2, r6, r0
	movs r1, #0
	movs r0, #1
	strb r0, [r2]
	movs r2, #0xda
	lsls r2, r2, #1
	adds r0, r6, r2
	strb r1, [r0]
	adds r2, #1
	adds r0, r6, r2
	strb r1, [r0]
	adds r0, r6, #0
	adds r0, #0x5a
	strb r1, [r0]
	subs r0, #2
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	movs r5, #4
	ldr r0, _080765C0 @ =0x0879BEBC
	mov ip, r0
	adds r3, r6, #0
	movs r4, #0
	mov r2, ip
	adds r2, #4
_08076576:
	subs r2, #1
	subs r5, #1
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	adds r0, #0x36
	strb r4, [r0]
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	adds r0, #0x34
	strb r4, [r0]
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	adds r0, #0x35
	strb r4, [r0]
	cmp r5, #0
	bgt _08076576
	movs r2, #0x8c
	lsls r2, r2, #2
	adds r1, r6, r2
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080765C4 @ =0x00000231
	adds r1, r6, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _080765E2
	.align 2, 0
_080765C0: .4byte 0x0879BEBC
_080765C4: .4byte 0x00000231
_080765C8:
	movs r1, #0x8c
	lsls r1, r1, #2
	adds r2, r6, r1
	ldrb r0, [r2]
	cmp r0, #0x1d
	bls _080765E2
	movs r1, #0
	strb r1, [r2]
	ldr r2, _080765F4 @ =0x00000231
	adds r0, r6, r2
	strb r1, [r0]
	movs r0, #1
	str r0, [sp]
_080765E2:
	ldr r0, [sp]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080765F4: .4byte 0x00000231

	thumb_func_start PauseScreenSubroutine
PauseScreenSubroutine: @ 0x080765F8
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	ldr r0, _0807661C @ =gNextOamSlot
	movs r1, #0
	strb r1, [r0]
	movs r7, #0
	ldr r0, _08076620 @ =0x03000B85
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #4
	bls _08076610
	b _08076872
_08076610:
	lsls r0, r1, #2
	ldr r1, _08076624 @ =_08076628
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807661C: .4byte gNextOamSlot
_08076620: .4byte 0x03000B85
_08076624: .4byte _08076628
_08076628: @ jump table
	.4byte _0807663C @ case 0
	.4byte _08076644 @ case 1
	.4byte _08076720 @ case 2
	.4byte _080767A0 @ case 3
	.4byte _08076834 @ case 4
_0807663C:
	bl PauseScreenInit
	strb r0, [r5]
	b _08076872
_08076644:
	ldr r0, _08076678 @ =gNonGameplayRam
	ldrb r3, [r0]
	cmp r3, #0
	beq _080766E0
	ldr r0, _0807667C @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	bne _08076688
	ldr r3, _08076680 @ =0x03001222
	ldrh r0, [r3]
	lsls r0, r0, #8
	ldr r2, _08076684 @ =0x03001220
	ldrh r4, [r2]
	orrs r0, r4
	movs r1, #0xa1
	lsls r1, r1, #3
	adds r6, r3, #0
	cmp r0, r1
	beq _080766C8
	cmp r4, #8
	beq _080766B2
	adds r0, r4, #1
	b _080766A4
	.align 2, 0
_08076678: .4byte gNonGameplayRam
_0807667C: .4byte gPauseScreenFlag
_08076680: .4byte 0x03001222
_08076684: .4byte 0x03001220
_08076688:
	ldr r3, _080766C0 @ =0x03001222
	ldrh r0, [r3]
	lsls r0, r0, #8
	ldr r2, _080766C4 @ =0x03001220
	ldrh r4, [r2]
	orrs r0, r4
	movs r1, #0xa1
	lsls r1, r1, #3
	adds r6, r3, #0
	cmp r0, r1
	beq _080766C8
	cmp r4, #8
	beq _080766B2
	adds r0, r4, #2
_080766A4:
	strh r0, [r2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #8
	bls _080766B2
	movs r0, #8
	strh r0, [r2]
_080766B2:
	ldrh r0, [r6]
	cmp r0, #5
	bne _080766BA
	b _080767FA
_080766BA:
	adds r0, #1
	strh r0, [r6]
	b _080767FA
	.align 2, 0
_080766C0: .4byte 0x03001222
_080766C4: .4byte 0x03001220
_080766C8:
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	ldr r1, _080766D8 @ =0x04000050
	ldr r3, _080766DC @ =0x00003F44
	adds r0, r3, #0
	strh r0, [r1]
	b _080767FA
	.align 2, 0
_080766D8: .4byte 0x04000050
_080766DC: .4byte 0x00003F44
_080766E0:
	ldr r2, _080766F4 @ =gWrittenToBldy
	ldrh r0, [r2]
	adds r1, r0, #0
	cmp r1, #0
	beq _080766FC
	cmp r1, #4
	bls _080766F8
	subs r0, #4
	strh r0, [r2]
	b _08076872
	.align 2, 0
_080766F4: .4byte gWrittenToBldy
_080766F8:
	strh r3, [r2]
	b _08076872
_080766FC:
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	ldr r1, _08076718 @ =0x04000050
	movs r2, #0xfc
	lsls r2, r2, #6
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r3, _0807671C @ =0x0000040C
	adds r0, r3, #0
	strh r0, [r1]
	b _08076872
	.align 2, 0
_08076718: .4byte 0x04000050
_0807671C: .4byte 0x0000040C
_08076720:
	bl PauseScreenCallCurrentSubroutine
	cmp r0, #0
	beq _08076776
	ldr r0, _0807674C @ =gNonGameplayRam
	ldrb r1, [r0]
	cmp r1, #0
	beq _08076764
	ldr r1, _08076750 @ =0x04000050
	ldr r2, _08076754 @ =0x00003F7F
	adds r0, r2, #0
	strh r0, [r1]
	ldr r3, _08076758 @ =0x03001220
	ldr r0, _0807675C @ =0x04000052
	ldrh r2, [r0]
	ldr r1, _08076760 @ =0x03001222
	lsrs r0, r2, #8
	strh r0, [r1]
	movs r0, #0xff
	ands r0, r2
	strh r0, [r3]
	b _0807676E
	.align 2, 0
_0807674C: .4byte gNonGameplayRam
_08076750: .4byte 0x04000050
_08076754: .4byte 0x00003F7F
_08076758: .4byte 0x03001220
_0807675C: .4byte 0x04000052
_08076760: .4byte 0x03001222
_08076764:
	ldr r0, _08076790 @ =gWrittenToBldy
	strh r1, [r0]
	ldr r1, _08076794 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
_0807676E:
	ldr r1, _08076798 @ =0x03000B85
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_08076776:
	ldr r0, _0807679C @ =gNonGameplayRam
	movs r3, #0x99
	lsls r3, r3, #2
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08076872
	bl unk_7c440
	bl unk_7cfb0
	b _08076872
	.align 2, 0
_08076790: .4byte gWrittenToBldy
_08076794: .4byte 0x04000050
_08076798: .4byte 0x03000B85
_0807679C: .4byte gNonGameplayRam
_080767A0:
	ldr r0, _080767D4 @ =gNonGameplayRam
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807680C
	ldr r0, _080767D8 @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r4, #2
	cmp r0, #4
	bne _080767B8
	movs r4, #1
_080767B8:
	ldr r2, _080767DC @ =0x03001222
	ldr r3, _080767E0 @ =0x03001220
	ldrh r1, [r2]
	ldrh r0, [r3]
	orrs r0, r1
	adds r6, r2, #0
	adds r2, r3, #0
	cmp r0, #0
	beq _080767F4
	ldrh r0, [r2]
	cmp r0, r4
	blt _080767E4
	subs r0, r0, r4
	b _080767E6
	.align 2, 0
_080767D4: .4byte gNonGameplayRam
_080767D8: .4byte gPauseScreenFlag
_080767DC: .4byte 0x03001222
_080767E0: .4byte 0x03001220
_080767E4:
	movs r0, #0
_080767E6:
	strh r0, [r2]
	ldrh r0, [r6]
	cmp r0, #0
	beq _080767FA
	subs r0, #1
	strh r0, [r6]
	b _080767FA
_080767F4:
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
_080767FA:
	ldr r0, _08076808 @ =0x04000052
	ldrh r1, [r6]
	lsls r1, r1, #8
	ldrh r2, [r2]
	orrs r1, r2
	strh r1, [r0]
	b _08076872
	.align 2, 0
_08076808: .4byte 0x04000052
_0807680C:
	ldr r1, _08076828 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0807682C
	adds r0, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x10
	bls _08076872
	movs r0, #0x10
	strh r0, [r1]
	b _08076872
	.align 2, 0
_08076828: .4byte gWrittenToBldy
_0807682C:
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	b _08076872
_08076834:
	ldr r1, _08076888 @ =gPauseScreenFlag
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #3
	bne _0807686A
	ldr r0, _0807688C @ =gEventCounter
	ldrb r0, [r0]
	cmp r0, #0x61
	bne _0807686A
	ldr r0, _08076890 @ =gPreviousCutscene
	ldrb r0, [r0]
	cmp r0, #7
	beq _0807686A
	movs r0, #5
	strb r0, [r1]
	ldr r1, _08076894 @ =gCurrentCutscene
	movs r0, #7
	strb r0, [r1]
	ldr r1, _08076898 @ =0x0201C000
	ldr r2, _0807689C @ =0x06010000
	movs r3, #0x80
	lsls r3, r3, #8
	movs r0, #0x20
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
_0807686A:
	movs r7, #1
	ldr r1, _080768A0 @ =0x03000B85
	movs r0, #0
	strb r0, [r1]
_08076872:
	bl MapScreenUpdateArrowsAndBlinkingSquare
	bl PauseScreenProcessOam
	bl ResetFreeOam
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08076888: .4byte gPauseScreenFlag
_0807688C: .4byte gEventCounter
_08076890: .4byte gPreviousCutscene
_08076894: .4byte gCurrentCutscene
_08076898: .4byte 0x0201C000
_0807689C: .4byte 0x06010000
_080768A0: .4byte 0x03000B85

	thumb_func_start PauseScreenVBLank
PauseScreenVBLank: @ 0x080768A4
	ldr r1, _08076908 @ =0x040000D4
	ldr r0, _0807690C @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08076910 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	subs r1, #0xd4
	ldr r0, _08076914 @ =gNonGameplayRam
	movs r2, #0x9a
	lsls r2, r2, #2
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #0x54
	ldr r0, _08076918 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #8
	ldr r0, _0807691C @ =gWrittenToMosaic_L
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r2, _08076920 @ =0x04000010
	ldr r1, _08076924 @ =gBackgroundPositions
	ldrh r0, [r1]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #2]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #4]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #6]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #8]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #0xa]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #0xc]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #0xe]
	strh r0, [r2]
	bx lr
	.align 2, 0
_08076908: .4byte 0x040000D4
_0807690C: .4byte gOamData
_08076910: .4byte 0x84000100
_08076914: .4byte gNonGameplayRam
_08076918: .4byte gWrittenToBldy
_0807691C: .4byte gWrittenToMosaic_L
_08076920: .4byte 0x04000010
_08076924: .4byte gBackgroundPositions

	thumb_func_start PauseScreenVBLank_Unused
PauseScreenVBLank_Unused: @ 0x08076928
	push {lr}
	ldr r0, _08076968 @ =0x0400001C
	movs r2, #0
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	movs r1, #0x80
	lsls r1, r1, #0x13
	ldr r0, _0807696C @ =gNonGameplayRam
	movs r3, #0x9a
	lsls r3, r3, #2
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r3, _08076970 @ =0x0300000A
	ldrh r1, [r3]
	cmp r1, #0
	beq _08076952
	ldr r0, _08076974 @ =0x0400000E
	strh r1, [r0]
	strh r2, [r3]
_08076952:
	ldr r2, _08076978 @ =0x04000052
	ldr r0, _0807697C @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08076980 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	pop {r0}
	bx r0
	.align 2, 0
_08076968: .4byte 0x0400001C
_0807696C: .4byte gNonGameplayRam
_08076970: .4byte 0x0300000A
_08076974: .4byte 0x0400000E
_08076978: .4byte 0x04000052
_0807697C: .4byte 0x03001222
_08076980: .4byte 0x03001220

	thumb_func_start PauseScreenInitVBlank
PauseScreenInitVBlank: @ 0x08076984
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start PauseScreenInit
PauseScreenInit: @ 0x08076990
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	ldr r0, _08076A50 @ =PauseScreenInitVBlank
	bl CallbackSetVBlank
	movs r0, #1
	mov sb, r0
	ldr r1, _08076A54 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	ldr r2, _08076A58 @ =0x04000054
	ldr r1, _08076A5C @ =gWrittenToBldy
	movs r0, #0x10
	strh r0, [r1]
	strh r0, [r2]
	movs r0, #0x80
	lsls r0, r0, #0x13
	movs r5, #0
	strh r5, [r0]
	ldr r4, _08076A60 @ =gNonGameplayRam
	movs r2, #0x9a
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r0, #0
	strh r0, [r1]
	ldr r0, _08076A64 @ =gNextOamSlot
	strb r5, [r0]
	movs r3, #0xa8
	lsls r3, r3, #3
	movs r0, #0x20
	str r0, [sp]
	movs r0, #3
	movs r1, #0
	adds r2, r4, #0
	bl BitFill
	bl ResetFreeOam
	ldr r1, _08076A68 @ =0x040000D4
	ldr r0, _08076A6C @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08076A70 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r6, _08076A74 @ =gPauseScreenFlag
	movs r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #4
	beq _08076A10
	ldr r1, _08076A78 @ =0x06010000
	ldr r2, _08076A7C @ =0x0201C000
	movs r3, #0x80
	lsls r3, r3, #8
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
_08076A10:
	ldr r0, _08076A80 @ =gCurrentArea
	ldrb r2, [r0]
	ldr r3, _08076A84 @ =0x00000212
	adds r0, r4, r3
	strb r2, [r0]
	ldr r0, _08076A88 @ =0x03000031
	ldrb r1, [r0]
	subs r3, #2
	adds r0, r4, r3
	strb r1, [r0]
	ldr r0, _08076A8C @ =0x03000032
	ldrb r1, [r0]
	adds r3, #1
	adds r0, r4, r3
	strb r1, [r0]
	strb r5, [r4, #2]
	mov r0, sb
	strb r0, [r4]
	movs r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #3
	bne _08076A94
	lsls r0, r2, #0x18
	cmp r0, #0
	bne _08076AA8
	ldr r0, _08076A90 @ =gCurrentRoom
	ldrb r0, [r0]
	cmp r0, #0
	bne _08076AA8
	movs r0, #2
	strb r0, [r4]
	b _08076AA8
	.align 2, 0
_08076A50: .4byte PauseScreenInitVBlank
_08076A54: .4byte 0x04000050
_08076A58: .4byte 0x04000054
_08076A5C: .4byte gWrittenToBldy
_08076A60: .4byte gNonGameplayRam
_08076A64: .4byte gNextOamSlot
_08076A68: .4byte 0x040000D4
_08076A6C: .4byte gOamData
_08076A70: .4byte 0x84000100
_08076A74: .4byte gPauseScreenFlag
_08076A78: .4byte 0x06010000
_08076A7C: .4byte 0x0201C000
_08076A80: .4byte gCurrentArea
_08076A84: .4byte 0x00000212
_08076A88: .4byte 0x03000031
_08076A8C: .4byte 0x03000032
_08076A90: .4byte gCurrentRoom
_08076A94:
	cmp r0, #1
	bne _08076AA2
	movs r0, #2
	strb r0, [r4]
	bl unk_36c4
	b _08076AA8
_08076AA2:
	cmp r0, #4
	beq _08076AA8
	strb r5, [r4]
_08076AA8:
	ldr r4, _08076B04 @ =0x040000D4
	ldr r0, _08076B08 @ =0x085657A8
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _08076B0C @ =0x80000030
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08076B10 @ =0x0856F71C
	ldr r1, _08076B14 @ =0x06010000
	bl CallLZ77UncompVram
	ldr r1, _08076B18 @ =0x08561FA8
	ldr r2, _08076B1C @ =0x06008000
	movs r3, #0xe0
	lsls r3, r3, #6
	movs r5, #0x10
	str r5, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r0, _08076B20 @ =0x08565B48
	str r0, [r4]
	ldr r0, _08076B24 @ =0x05000200
	str r0, [r4, #4]
	ldr r0, _08076B28 @ =0x80000100
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08076B2C @ =gNonGameplayRam
	ldrb r0, [r0]
	cmp r0, #0
	bne _08076B40
	ldr r0, _08076B30 @ =0x0856A254
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl CallLZ77UncompVram
	ldr r0, _08076B34 @ =0x08565808
	str r0, [r4]
	ldr r0, _08076B38 @ =0x05000060
	str r0, [r4, #4]
	ldr r0, _08076B3C @ =0x800000D0
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	b _08076BAA
	.align 2, 0
_08076B04: .4byte 0x040000D4
_08076B08: .4byte 0x085657A8
_08076B0C: .4byte 0x80000030
_08076B10: .4byte 0x0856F71C
_08076B14: .4byte 0x06010000
_08076B18: .4byte 0x08561FA8
_08076B1C: .4byte 0x06008000
_08076B20: .4byte 0x08565B48
_08076B24: .4byte 0x05000200
_08076B28: .4byte 0x80000100
_08076B2C: .4byte gNonGameplayRam
_08076B30: .4byte 0x0856A254
_08076B34: .4byte 0x08565808
_08076B38: .4byte 0x05000060
_08076B3C: .4byte 0x800000D0
_08076B40:
	cmp r0, #1
	bne _08076BA0
	ldr r0, _08076B60 @ =0x0856C868
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl CallLZ77UncompVram
	ldr r0, _08076B64 @ =gEquipment
	ldrb r1, [r0, #0xc]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08076B68
	movs r3, #2
	b _08076B78
	.align 2, 0
_08076B60: .4byte 0x0856C868
_08076B64: .4byte gEquipment
_08076B68:
	adds r0, r5, #0
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r0, r0, #0
	lsrs r3, r0, #0x1f
	cmp r3, #0
	beq _08076BAA
_08076B78:
	ldr r2, _08076B90 @ =0x040000D4
	lsls r0, r3, #5
	ldr r1, _08076B94 @ =0x08565D48
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, _08076B98 @ =0x05000200
	str r0, [r2, #4]
	ldr r0, _08076B9C @ =0x80000010
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	b _08076BAA
	.align 2, 0
_08076B90: .4byte 0x040000D4
_08076B94: .4byte 0x08565D48
_08076B98: .4byte 0x05000200
_08076B9C: .4byte 0x80000010
_08076BA0:
	ldr r0, _08076C44 @ =0x0856DE80
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl CallLZ77UncompVram
_08076BAA:
	ldr r1, _08076C48 @ =gNonGameplayRam
	mov r8, r1
	ldrb r0, [r1]
	cmp r0, #0
	beq _08076BD2
	ldr r1, _08076C4C @ =0x040000D4
	ldr r0, _08076C50 @ =0x06009800
	str r0, [r1]
	ldr r0, _08076C54 @ =0x06009400
	str r0, [r1, #4]
	ldr r0, _08076C58 @ =0x80000200
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08076C5C @ =0x085659A8
	str r0, [r1]
	ldr r0, _08076C60 @ =0x05000060
	str r0, [r1, #4]
	ldr r0, _08076C64 @ =0x800000D0
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_08076BD2:
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r0, #0
	strh r0, [r1]
	ldr r6, _08076C68 @ =0x02034800
	movs r0, #0xa
	adds r1, r6, #0
	bl GetMinimapData
	ldr r5, _08076C4C @ =0x040000D4
	str r6, [r5]
	ldr r0, _08076C6C @ =0x0600E800
	str r0, [r5, #4]
	ldr r7, _08076C70 @ =0x80000400
	str r7, [r5, #8]
	ldr r0, [r5, #8]
	str r6, [r5]
	ldr r0, _08076C74 @ =0x0600F000
	str r0, [r5, #4]
	str r7, [r5, #8]
	ldr r0, [r5, #8]
	str r6, [r5]
	ldr r0, _08076C78 @ =0x0600F800
	str r0, [r5, #4]
	str r7, [r5, #8]
	ldr r0, [r5, #8]
	ldr r0, _08076C7C @ =gCurrentArea
	ldrb r3, [r0]
	ldr r0, _08076C80 @ =0x02034000
	str r0, [r5]
	ldr r0, _08076C84 @ =0x0600E000
	str r0, [r5, #4]
	str r7, [r5, #8]
	ldr r0, [r5, #8]
	ldr r0, _08076C88 @ =0x085742E8
	ldr r4, _08076C8C @ =0x0200F800
	adds r1, r4, #0
	bl CallLZ77UncompVram
	str r4, [r5]
	ldr r0, _08076C90 @ =0x0600C000
	str r0, [r5, #4]
	str r7, [r5, #8]
	ldr r0, [r5, #8]
	mov r2, r8
	ldrb r0, [r2]
	cmp r0, #0
	bne _08076CC8
	ldrb r0, [r2, #2]
	cmp r0, #0
	beq _08076C98
	ldr r0, _08076C94 @ =0x08573EA0
	adds r1, r6, #0
	bl CallLZ77UncompVram
	b _08076CA0
	.align 2, 0
_08076C44: .4byte 0x0856DE80
_08076C48: .4byte gNonGameplayRam
_08076C4C: .4byte 0x040000D4
_08076C50: .4byte 0x06009800
_08076C54: .4byte 0x06009400
_08076C58: .4byte 0x80000200
_08076C5C: .4byte 0x085659A8
_08076C60: .4byte 0x05000060
_08076C64: .4byte 0x800000D0
_08076C68: .4byte 0x02034800
_08076C6C: .4byte 0x0600E800
_08076C70: .4byte 0x80000400
_08076C74: .4byte 0x0600F000
_08076C78: .4byte 0x0600F800
_08076C7C: .4byte gCurrentArea
_08076C80: .4byte 0x02034000
_08076C84: .4byte 0x0600E000
_08076C88: .4byte 0x085742E8
_08076C8C: .4byte 0x0200F800
_08076C90: .4byte 0x0600C000
_08076C94: .4byte 0x08573EA0
_08076C98:
	ldr r0, _08076CB4 @ =0x085748AC
	adds r1, r6, #0
	bl CallLZ77UncompVram
_08076CA0:
	ldr r1, _08076CB8 @ =0x040000D4
	ldr r0, _08076CBC @ =0x02034800
	str r0, [r1]
	ldr r0, _08076CC0 @ =0x0600C800
	str r0, [r1, #4]
	ldr r0, _08076CC4 @ =0x80000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _08076CE6
	.align 2, 0
_08076CB4: .4byte 0x085748AC
_08076CB8: .4byte 0x040000D4
_08076CBC: .4byte 0x02034800
_08076CC0: .4byte 0x0600C800
_08076CC4: .4byte 0x80000400
_08076CC8:
	cmp r0, #1
	bne _08076CD4
	ldr r0, _08076CD0 @ =0x08574D48
	b _08076CD6
	.align 2, 0
_08076CD0: .4byte 0x08574D48
_08076CD4:
	ldr r0, _08076D10 @ =0x085753E8
_08076CD6:
	adds r1, r6, #0
	bl CallLZ77UncompVram
	str r6, [r5]
	ldr r0, _08076D14 @ =0x0600D800
	str r0, [r5, #4]
	str r7, [r5, #8]
	ldr r0, [r5, #8]
_08076CE6:
	ldr r0, _08076D18 @ =gNonGameplayRam
	ldrb r0, [r0]
	cmp r0, #0
	bne _08076D38
	ldr r0, _08076D1C @ =0x085740FC
	ldr r4, _08076D20 @ =0x02034800
	adds r1, r4, #0
	bl CallLZ77UncompVram
	ldr r1, _08076D24 @ =0x040000D4
	str r4, [r1]
	ldr r0, _08076D28 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _08076D2C @ =0x80000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08076D30 @ =0x085745A8
	ldr r1, _08076D34 @ =0x02010000
	bl CallLZ77UncompVram
	b _08076D74
	.align 2, 0
_08076D10: .4byte 0x085753E8
_08076D14: .4byte 0x0600D800
_08076D18: .4byte gNonGameplayRam
_08076D1C: .4byte 0x085740FC
_08076D20: .4byte 0x02034800
_08076D24: .4byte 0x040000D4
_08076D28: .4byte 0x0600D000
_08076D2C: .4byte 0x80000400
_08076D30: .4byte 0x085745A8
_08076D34: .4byte 0x02010000
_08076D38:
	ldr r0, _08076D50 @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	beq _08076D5C
	ldr r0, _08076D54 @ =0x08573DA4
	ldr r1, _08076D58 @ =0x02034800
	bl CallLZ77UncompVram
	b _08076D64
	.align 2, 0
_08076D50: .4byte gPauseScreenFlag
_08076D54: .4byte 0x08573DA4
_08076D58: .4byte 0x02034800
_08076D5C:
	ldr r0, _08076DBC @ =0x08573DA4
	ldr r1, _08076DC0 @ =0x02034800
	bl CallLZ77UncompVram
_08076D64:
	ldr r1, _08076DC4 @ =0x040000D4
	ldr r0, _08076DC0 @ =0x02034800
	str r0, [r1]
	ldr r0, _08076DC8 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _08076DCC @ =0x80000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_08076D74:
	ldr r0, _08076DD0 @ =gCurrentArea
	ldrb r0, [r0]
	ldr r1, _08076DC0 @ =0x02034800
	bl GetMinimapData
	movs r1, #0
	ldr r2, _08076DD4 @ =gBackgroundPositions
	adds r0, r2, #0
	movs r3, #3
_08076D86:
	strh r1, [r0]
	strh r1, [r0, #2]
	adds r0, #4
	subs r3, #1
	cmp r3, #0
	bge _08076D86
	ldr r1, _08076DD8 @ =gNonGameplayRam
	movs r0, #0
	strb r0, [r1, #7]
	strb r0, [r1, #9]
	strb r0, [r1, #6]
	strb r0, [r1, #8]
	ldr r0, _08076DDC @ =0x0879BE88
	ldr r0, [r0]
	str r0, [r1, #0x28]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r2, #6]
	movs r0, #3
	strb r0, [r1, #1]
	ldrb r0, [r1]
	adds r5, r1, #0
	cmp r0, #0
	beq _08076DE0
	movs r0, #1
	b _08076DF6
	.align 2, 0
_08076DBC: .4byte 0x08573DA4
_08076DC0: .4byte 0x02034800
_08076DC4: .4byte 0x040000D4
_08076DC8: .4byte 0x0600D000
_08076DCC: .4byte 0x80000400
_08076DD0: .4byte gCurrentArea
_08076DD4: .4byte gBackgroundPositions
_08076DD8: .4byte gNonGameplayRam
_08076DDC: .4byte 0x0879BE88
_08076DE0:
	ldr r0, _08076DF0 @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	bne _08076DF4
	movs r0, #0
	b _08076DF6
	.align 2, 0
_08076DF0: .4byte gPauseScreenFlag
_08076DF4:
	movs r0, #2
_08076DF6:
	strb r0, [r5, #1]
	ldrb r0, [r5]
	cmp r0, #0
	beq _08076E4C
	bl CheckSetNavigationRoomEvent
	cmp r0, #0
	beq _08076E28
	adds r1, r5, #0
	adds r1, #0x28
	movs r0, #4
	strb r0, [r1]
	ldr r4, _08076E20 @ =gCurrentArea
	ldrb r0, [r4]
	ldr r1, _08076E24 @ =0x02034000
	bl GetMinimapData
	ldrb r0, [r4]
	bl MinimapSetVisitedTilesAndCollectedItems
	b _08076E30
	.align 2, 0
_08076E20: .4byte gCurrentArea
_08076E24: .4byte 0x02034000
_08076E28:
	adds r1, r5, #0
	adds r1, #0x28
	movs r0, #0xa
	strb r0, [r1]
_08076E30:
	ldr r0, _08076E5C @ =gEventCounter
	ldrb r0, [r0]
	cmp r0, #0x5b
	bhi _08076E4C
	movs r0, #0
	str r0, [sp, #4]
	ldr r1, _08076E60 @ =0x040000D4
	add r3, sp, #4
	str r3, [r1]
	ldr r0, _08076E64 @ =0x06017C00
	str r0, [r1, #4]
	ldr r0, _08076E68 @ =0x85000010
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_08076E4C:
	ldr r0, _08076E6C @ =gNonGameplayRam
	ldrb r0, [r0, #2]
	cmp r0, #0
	beq _08076E70
	bl DebugMenuDrawEverything
	b _08076E74
	.align 2, 0
_08076E5C: .4byte gEventCounter
_08076E60: .4byte 0x040000D4
_08076E64: .4byte 0x06017C00
_08076E68: .4byte 0x85000010
_08076E6C: .4byte gNonGameplayRam
_08076E70:
	bl StatusScreenDrawEverything
_08076E74:
	movs r0, #0
	bl unk_75988
	bl ProcessPauseScreenText
	bl ProcessEasySleepText
	bl PauseScreenSetupOam
	bl NavigationConversationGetCurrentConversation
	bl NavigationConversationLoadPopUpGraphics
	bl NavigationConversationLoadSpecialGraphics
	movs r0, #0xff
	bl unk_77840
	bl unk_7ce6c
	ldr r2, _08076EF8 @ =0x04000010
	ldr r1, _08076EFC @ =gBackgroundPositions
	ldrh r0, [r1]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #2]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #4]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #6]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #8]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #0xa]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #0xc]
	strh r0, [r2]
	adds r2, #2
	ldrh r0, [r1, #0xe]
	strh r0, [r2]
	ldr r5, _08076F00 @ =gWrittenToBldy
	movs r1, #0
	strh r1, [r5]
	ldr r4, _08076F04 @ =0x03001222
	strh r1, [r4]
	ldr r3, _08076F08 @ =0x03001220
	movs r2, #0x10
	strh r2, [r3]
	ldr r0, _08076F0C @ =gNonGameplayRam
	ldrb r0, [r0]
	cmp r0, #0
	beq _08076F18
	strh r1, [r4]
	strh r1, [r3]
	ldr r1, _08076F10 @ =0x04000050
	ldr r4, _08076F14 @ =0x00003F7F
	adds r0, r4, #0
	strh r0, [r1]
	adds r1, #2
	movs r0, #0
	b _08076F1E
	.align 2, 0
_08076EF8: .4byte 0x04000010
_08076EFC: .4byte gBackgroundPositions
_08076F00: .4byte gWrittenToBldy
_08076F04: .4byte 0x03001222
_08076F08: .4byte 0x03001220
_08076F0C: .4byte gNonGameplayRam
_08076F10: .4byte 0x04000050
_08076F14: .4byte 0x00003F7F
_08076F18:
	strh r2, [r5]
	ldr r1, _08076F3C @ =0x04000050
	movs r0, #0xff
_08076F1E:
	strh r0, [r1]
	ldr r1, _08076F40 @ =0x04000040
	movs r0, #0xf0
	strh r0, [r1]
	ldr r0, _08076F44 @ =gNonGameplayRam
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	beq _08076F4C
	ldr r1, _08076F48 @ =0x0400004A
	movs r0, #0x37
	strb r0, [r1]
	subs r1, #1
	movs r0, #0x3f
	b _08076F56
	.align 2, 0
_08076F3C: .4byte 0x04000050
_08076F40: .4byte 0x04000040
_08076F44: .4byte gNonGameplayRam
_08076F48: .4byte 0x0400004A
_08076F4C:
	ldr r1, _08076FDC @ =0x0400004A
	movs r0, #0x35
	strb r0, [r1]
	subs r1, #1
	movs r0, #0x3d
_08076F56:
	strb r0, [r1]
	ldr r1, _08076FE0 @ =0x04000048
	movs r0, #0x3f
	strb r0, [r1]
	adds r4, r5, #0
	adds r0, r4, #0
	adds r0, #0x28
	ldrb r0, [r0]
	movs r3, #0
	cmp r0, #1
	beq _08076F6E
	movs r3, #0xa0
_08076F6E:
	ldr r1, _08076FE4 @ =0x04000044
	lsls r0, r3, #8
	movs r2, #0xa0
	orrs r0, r2
	strh r0, [r1]
	subs r1, #2
	movs r0, #0xf0
	strh r0, [r1]
	ldr r0, _08076FE8 @ =0x04000046
	strh r2, [r0]
	ldr r0, _08076FEC @ =gWrittenToMosaic_L
	movs r1, #0
	strh r1, [r0]
	ldr r0, _08076FF0 @ =0x0400004C
	strh r1, [r0]
	ldrb r0, [r4]
	cmp r0, #0
	beq _08077018
	ldr r1, _08076FF4 @ =0x0400000A
	ldr r2, _08076FF8 @ =0x00001B03
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	ldr r3, _08076FFC @ =0x0000DC49
	adds r0, r3, #0
	strh r0, [r1]
	subs r1, #6
	movs r2, #0xc0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r3, r4, r0
	movs r2, #0xbe
	lsls r2, r2, #7
	strh r2, [r3]
	ldr r0, _08077000 @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	bne _08077008
	adds r1, #4
	ldr r4, _08077004 @ =0x00001A0A
	adds r0, r4, #0
	strh r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #4
	adds r1, r0, #0
	adds r0, r2, #0
	eors r0, r1
	strh r0, [r3]
	b _08077046
	.align 2, 0
_08076FDC: .4byte 0x0400004A
_08076FE0: .4byte 0x04000048
_08076FE4: .4byte 0x04000044
_08076FE8: .4byte 0x04000046
_08076FEC: .4byte gWrittenToMosaic_L
_08076FF0: .4byte 0x0400004C
_08076FF4: .4byte 0x0400000A
_08076FF8: .4byte 0x00001B03
_08076FFC: .4byte 0x0000DC49
_08077000: .4byte gPauseScreenFlag
_08077004: .4byte 0x00001A0A
_08077008:
	ldr r1, _08077010 @ =0x0400000C
	ldr r2, _08077014 @ =0x00001A0A
	adds r0, r2, #0
	b _08077044
	.align 2, 0
_08077010: .4byte 0x0400000C
_08077014: .4byte 0x00001A0A
_08077018:
	ldr r1, _0807706C @ =0x0400000E
	ldr r3, _08077070 @ =0x0000DC4B
	adds r0, r3, #0
	strh r0, [r1]
	subs r1, #2
	ldr r4, _08077074 @ =0x00001A02
	adds r0, r4, #0
	strh r0, [r1]
	subs r1, #4
	ldr r2, _08077078 @ =0x00001801
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	movs r3, #0xc8
	lsls r3, r3, #5
	adds r0, r3, #0
	strh r0, [r1]
	movs r4, #0x9a
	lsls r4, r4, #2
	adds r1, r5, r4
	movs r0, #0xfc
	lsls r0, r0, #7
_08077044:
	strh r0, [r1]
_08077046:
	ldr r0, _0807707C @ =PauseScreenVBLank
	bl CallbackSetVBlank
	movs r1, #0x80
	lsls r1, r1, #0x13
	ldr r0, _08077080 @ =gNonGameplayRam
	movs r2, #0x9a
	lsls r2, r2, #2
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
	mov r0, sb
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807706C: .4byte 0x0400000E
_08077070: .4byte 0x0000DC4B
_08077074: .4byte 0x00001A02
_08077078: .4byte 0x00001801
_0807707C: .4byte PauseScreenVBLank
_08077080: .4byte gNonGameplayRam

	thumb_func_start GetMinimapData
GetMinimapData: @ 0x08077084
	push {lr}
	adds r2, r1, #0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	bne _0807709A
	ldr r0, _080770AC @ =gEventCounter
	ldrb r0, [r0]
	cmp r0, #0x5d
	bls _0807709A
	movs r1, #9
_0807709A:
	ldr r0, _080770B0 @ =0x0879BE5C
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1]
	adds r1, r2, #0
	bl CallLZ77UncompVram
	pop {r0}
	bx r0
	.align 2, 0
_080770AC: .4byte gEventCounter
_080770B0: .4byte 0x0879BE5C

	thumb_func_start PauseScreenCallCurrentSubroutine
PauseScreenCallCurrentSubroutine: @ 0x080770B4
	push {r4, r5, r6, lr}
	movs r6, #0
	ldr r4, _080770E8 @ =gNonGameplayRam
	adds r5, r4, #0
	adds r5, #0x28
	ldrb r0, [r5]
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _080770CE
	bl CheckForMaintainedInput
_080770CE:
	ldrb r0, [r4, #6]
	adds r0, #1
	strb r0, [r4, #6]
	ldrb r0, [r5]
	cmp r0, #0xc
	bls _080770DC
	b _08077262
_080770DC:
	lsls r0, r0, #2
	ldr r1, _080770EC @ =_080770F0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080770E8: .4byte gNonGameplayRam
_080770EC: .4byte _080770F0
_080770F0: @ jump table
	.4byte _08077124 @ case 0
	.4byte _0807714A @ case 1
	.4byte _08077136 @ case 2
	.4byte _08077166 @ case 3
	.4byte _08077196 @ case 4
	.4byte _080771AC @ case 5
	.4byte _080771C4 @ case 6
	.4byte _080771DC @ case 7
	.4byte _080771E2 @ case 8
	.4byte _08077208 @ case 9
	.4byte _080771E2 @ case 10
	.4byte _0807722C @ case 11
	.4byte _0807724C @ case 12
_08077124:
	ldr r2, _0807713C @ =gChangedInput
	ldr r0, _08077140 @ =gButtonAssignments
	ldrh r0, [r0, #6]
	movs r1, #2
	orrs r0, r1
	ldrh r1, [r2]
	ands r0, r1
	cmp r0, #0
	beq _08077144
_08077136:
	movs r6, #1
	b _08077262
	.align 2, 0
_0807713C: .4byte gChangedInput
_08077140: .4byte gButtonAssignments
_08077144:
	bl MapScreenSubroutine
	b _08077262
_0807714A:
	ldr r0, _0807715C @ =gNonGameplayRam
	ldrb r0, [r0, #2]
	cmp r0, #0
	beq _08077160
	bl PauseScreenMoveDebugCursor
	bl DebugMenuSubroutine
	b _08077262
	.align 2, 0
_0807715C: .4byte gNonGameplayRam
_08077160:
	bl StatusScreenSubroutine
	b _08077262
_08077166:
	ldr r4, _0807717C @ =gNonGameplayRam
	movs r1, #0x99
	lsls r1, r1, #2
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _08077180
	bl unk_7c630
	b _08077262
	.align 2, 0
_0807717C: .4byte gNonGameplayRam
_08077180:
	bl NavigationConversationUpdatePopUp
	bl NavigationConversationSubroutine
	cmp r0, #0
	beq _08077262
	adds r1, r4, #0
	adds r1, #0x28
	movs r0, #9
	strb r0, [r1]
	b _08077262
_08077196:
	bl PauseScreenMapDownload
	cmp r0, #0
	beq _08077262
	ldr r0, _080771A8 @ =gNonGameplayRam
	adds r0, #0x28
	movs r1, #8
	strb r1, [r0]
	b _08077262
	.align 2, 0
_080771A8: .4byte gNonGameplayRam
_080771AC:
	bl EasySleepMenuSubroutine
	cmp r0, #0
	beq _08077262
	ldr r0, _080771C0 @ =gNonGameplayRam
	adds r0, #0x28
	movs r1, #0xc
	strb r1, [r0]
	b _08077262
	.align 2, 0
_080771C0: .4byte gNonGameplayRam
_080771C4:
	bl DebugMenuWindowAppearing
	cmp r0, #0
	beq _08077262
	ldr r1, _080771D8 @ =gNonGameplayRam
	adds r3, r1, #0
	adds r3, #0x28
	movs r2, #0
	movs r0, #1
	b _0807723E
	.align 2, 0
_080771D8: .4byte gNonGameplayRam
_080771DC:
	bl DebugMenuWindowDisappearing
	b _08077250
_080771E2:
	ldr r0, _08077204 @ =gNonGameplayRam
	adds r3, r0, #0
	adds r3, #0x28
	movs r2, #0
	movs r1, #3
	strb r1, [r3]
	movs r1, #0
	strh r2, [r0, #0xc]
	strh r2, [r0, #0xe]
	strh r2, [r0, #0x10]
	strh r2, [r0, #0x12]
	strh r2, [r0, #0x14]
	strb r1, [r0, #8]
	strb r1, [r0, #9]
	strb r1, [r0, #0xa]
	strb r1, [r0, #0xb]
	b _0807725E
	.align 2, 0
_08077204: .4byte gNonGameplayRam
_08077208:
	ldr r0, _0807721C @ =gNonGameplayRam
	ldrb r2, [r0]
	cmp r2, #0
	beq _08077220
	adds r1, r0, #0
	adds r1, #0x28
	movs r0, #2
	strb r0, [r1]
	b _08077262
	.align 2, 0
_0807721C: .4byte gNonGameplayRam
_08077220:
	adds r0, #0x28
	strb r2, [r0]
	movs r0, #4
	bl unk_77840
	b _08077262
_0807722C:
	bl EasySleepMenuInit
	cmp r0, #0
	beq _08077262
	ldr r1, _08077248 @ =gNonGameplayRam
	adds r3, r1, #0
	adds r3, #0x28
	movs r2, #0
	movs r0, #5
_0807723E:
	strb r0, [r3]
	strb r2, [r1, #7]
	strb r2, [r1, #6]
	b _08077262
	.align 2, 0
_08077248: .4byte gNonGameplayRam
_0807724C:
	bl EasySleepMenuQuit
_08077250:
	cmp r0, #0
	beq _08077262
	ldr r0, _0807726C @ =gNonGameplayRam
	adds r2, r0, #0
	adds r2, #0x28
	movs r1, #0
	strb r1, [r2]
_0807725E:
	strb r1, [r0, #7]
	strb r1, [r0, #6]
_08077262:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0807726C: .4byte gNonGameplayRam

	thumb_func_start PauseScreenMoveDebugCursor
PauseScreenMoveDebugCursor: @ 0x08077270
	push {r4, lr}
	movs r2, #0
	ldr r0, _080772AC @ =gButtonInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0807728A
	ldr r0, _080772B0 @ =gNonGameplayRam
	ldrb r0, [r0, #7]
	cmp r0, #0
	bne _0807728A
	movs r2, #1
_0807728A:
	cmp r2, #0
	beq _0807730E
	ldr r1, _080772B4 @ =gChangedInput
	ldrh r2, [r1]
	movs r0, #0x40
	ands r0, r2
	cmp r0, #0
	beq _080772B8
	ldr r2, _080772B0 @ =gNonGameplayRam
	ldrh r3, [r2, #0x2c]
	movs r4, #0x2c
	ldrsh r0, [r2, r4]
	cmp r0, #0
	beq _080772D2
	adds r0, r3, #0
	subs r0, #8
	b _080772D0
	.align 2, 0
_080772AC: .4byte gButtonInput
_080772B0: .4byte gNonGameplayRam
_080772B4: .4byte gChangedInput
_080772B8:
	movs r0, #0x80
	ands r0, r2
	cmp r0, #0
	beq _080772D2
	ldr r2, _080772F0 @ =gNonGameplayRam
	ldrh r3, [r2, #0x2c]
	movs r4, #0x2c
	ldrsh r0, [r2, r4]
	cmp r0, #0x8f
	bgt _080772D2
	adds r0, r3, #0
	adds r0, #8
_080772D0:
	strh r0, [r2, #0x2c]
_080772D2:
	ldrh r1, [r1]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080772F4
	ldr r1, _080772F0 @ =gNonGameplayRam
	ldrh r2, [r1, #0x2e]
	movs r3, #0x2e
	ldrsh r0, [r1, r3]
	cmp r0, #0xe7
	bgt _0807730E
	adds r0, r2, #0
	adds r0, #8
	b _0807730C
	.align 2, 0
_080772F0: .4byte gNonGameplayRam
_080772F4:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0807730E
	ldr r1, _08077314 @ =gNonGameplayRam
	ldrh r2, [r1, #0x2e]
	movs r4, #0x2e
	ldrsh r0, [r1, r4]
	cmp r0, #0
	beq _0807730E
	adds r0, r2, #0
	subs r0, #8
_0807730C:
	strh r0, [r1, #0x2e]
_0807730E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08077314: .4byte gNonGameplayRam

	thumb_func_start PauseScreenMoveBackgroundToXPosition
PauseScreenMoveBackgroundToXPosition: @ 0x08077318
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	movs r7, #0
	ldr r1, _08077344 @ =gBackgroundPositions
	lsls r0, r5, #2
	adds r3, r0, r1
	ldrh r2, [r3]
	movs r6, #1
	cmp r2, r4
	bls _08077334
	subs r6, #2
_08077334:
	ldr r0, _08077348 @ =gNonGameplayRam
	ldrb r0, [r0, #6]
	adds r0, #4
	cmp r0, #0x1f
	bgt _0807734C
	muls r0, r6, r0
	b _0807734E
	.align 2, 0
_08077344: .4byte gBackgroundPositions
_08077348: .4byte gNonGameplayRam
_0807734C:
	lsls r0, r6, #5
_0807734E:
	adds r0, r2, r0
	strh r0, [r3]
	cmp r6, #0
	ble _08077364
	lsls r0, r5, #2
	adds r1, r0, r1
	ldrh r0, [r1]
	cmp r0, r4
	blo _0807737A
	strh r4, [r1]
	b _08077378
_08077364:
	lsls r0, r5, #2
	adds r1, r0, r1
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, r4
	bgt _0807737A
	subs r0, r4, r0
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r1]
_08077378:
	movs r7, #1
_0807737A:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start PauseScreenMoveBackgroundToYPosition
PauseScreenMoveBackgroundToYPosition: @ 0x08077384
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	movs r0, #0
	mov ip, r0
	ldr r1, _080773B4 @ =gBackgroundPositions
	lsls r0, r5, #2
	adds r3, r0, r1
	ldrh r2, [r3, #2]
	movs r4, #1
	adds r7, r1, #0
	cmp r2, r6
	bls _080773A4
	subs r4, #2
_080773A4:
	ldr r0, _080773B8 @ =gNonGameplayRam
	ldrb r0, [r0, #6]
	adds r0, #4
	cmp r0, #0x1f
	bgt _080773BC
	muls r0, r4, r0
	b _080773BE
	.align 2, 0
_080773B4: .4byte gBackgroundPositions
_080773B8: .4byte gNonGameplayRam
_080773BC:
	lsls r0, r4, #5
_080773BE:
	adds r0, r2, r0
	strh r0, [r3, #2]
	cmp r4, #0
	ble _080773D6
	lsls r0, r5, #2
	adds r1, r0, r7
	ldrh r1, [r1, #2]
	cmp r1, r6
	blo _080773E6
	movs r1, #1
	mov ip, r1
	b _080773EC
_080773D6:
	lsls r0, r5, #2
	adds r1, r0, r7
	movs r2, #2
	ldrsh r1, [r1, r2]
	cmp r1, r6
	bgt _080773E6
	movs r1, #1
	mov ip, r1
_080773E6:
	mov r2, ip
	cmp r2, #0
	beq _080773F0
_080773EC:
	adds r0, r0, r7
	strh r6, [r0, #2]
_080773F0:
	mov r0, ip
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start PauseScreenSetDebugMenuWindow
PauseScreenSetDebugMenuWindow: @ 0x080773F8
	push {lr}
	ldr r0, _08077418 @ =gBackgroundPositions
	ldrh r1, [r0, #6]
	movs r0, #0x80
	lsls r0, r0, #2
	subs r1, r0, r1
	cmp r1, #0xa0
	ble _0807740A
	movs r1, #0xa0
_0807740A:
	ldr r0, _0807741C @ =0x04000044
	lsls r1, r1, #8
	movs r2, #0xa0
	orrs r1, r2
	strh r1, [r0]
	pop {r0}
	bx r0
	.align 2, 0
_08077418: .4byte gBackgroundPositions
_0807741C: .4byte 0x04000044

	thumb_func_start DebugMenuWindowAppearing
DebugMenuWindowAppearing: @ 0x08077420
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _08077438 @ =gNonGameplayRam
	ldrb r0, [r4, #7]
	cmp r0, #1
	beq _08077454
	cmp r0, #1
	bgt _0807743C
	cmp r0, #0
	beq _08077442
	b _08077496
	.align 2, 0
_08077438: .4byte gNonGameplayRam
_0807743C:
	cmp r0, #2
	beq _08077462
	b _08077496
_08077442:
	movs r0, #0x80
	lsls r0, r0, #2
	bl SoundPlay
	movs r0, #0x10
	movs r1, #0x29
	bl UpdateMenuOamDataID
	b _0807745A
_08077454:
	ldrb r0, [r4, #6]
	cmp r0, #0x10
	bls _08077496
_0807745A:
	movs r0, #2
	strb r0, [r4, #7]
	strb r5, [r4, #6]
	b _08077496
_08077462:
	movs r1, #0x80
	lsls r1, r1, #2
	movs r0, #1
	bl PauseScreenMoveBackgroundToYPosition
	cmp r0, #0
	beq _08077492
	movs r0, #0x10
	movs r1, #0x28
	bl UpdateMenuOamDataID
	movs r0, #0x11
	movs r1, #0x2a
	bl UpdateMenuOamDataID
	movs r0, #3
	bl unk_77840
	ldrb r0, [r4, #2]
	cmp r0, #0
	beq _08077490
	bl DebugMenuSetupCursor
_08077490:
	movs r5, #1
_08077492:
	bl PauseScreenSetDebugMenuWindow
_08077496:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start DebugMenuWindowDisappearing
DebugMenuWindowDisappearing: @ 0x080774A0
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _080774B8 @ =gNonGameplayRam
	ldrb r0, [r4, #7]
	cmp r0, #1
	beq _080774D4
	cmp r0, #1
	bgt _080774BC
	cmp r0, #0
	beq _080774C2
	b _080774F6
	.align 2, 0
_080774B8: .4byte gNonGameplayRam
_080774BC:
	cmp r0, #2
	beq _080774E2
	b _080774F6
_080774C2:
	ldr r0, _080774D0 @ =0x00000201
	bl SoundPlay
	movs r0, #4
	bl unk_77840
	b _080774DA
	.align 2, 0
_080774D0: .4byte 0x00000201
_080774D4:
	ldrb r0, [r4, #6]
	cmp r0, #4
	bls _080774F6
_080774DA:
	movs r0, #2
	strb r0, [r4, #7]
	strb r5, [r4, #6]
	b _080774F6
_080774E2:
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #1
	bl PauseScreenMoveBackgroundToYPosition
	cmp r0, #0
	beq _080774F2
	movs r5, #1
_080774F2:
	bl PauseScreenSetDebugMenuWindow
_080774F6:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start EasySleepMenuInit
EasySleepMenuInit: @ 0x08077500
	push {r4, r5, lr}
	sub sp, #4
	movs r5, #0
	ldr r0, _0807751C @ =gNonGameplayRam
	ldrb r1, [r0, #7]
	adds r4, r0, #0
	cmp r1, #8
	bls _08077512
	b _080776FC
_08077512:
	lsls r0, r1, #2
	ldr r1, _08077520 @ =_08077524
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807751C: .4byte gNonGameplayRam
_08077520: .4byte _08077524
_08077524: @ jump table
	.4byte _08077548 @ case 0
	.4byte _08077564 @ case 1
	.4byte _08077588 @ case 2
	.4byte _080775A0 @ case 3
	.4byte _080775F8 @ case 4
	.4byte _08077658 @ case 5
	.4byte _08077668 @ case 6
	.4byte _08077684 @ case 7
	.4byte _080776EE @ case 8
_08077548:
	ldr r0, _08077560 @ =0x00000202
	bl SoundPlay
	movs r0, #0x11
	movs r1, #0x2b
	bl UpdateMenuOamDataID
	movs r0, #3
	bl unk_77840
	b _08077702
	.align 2, 0
_08077560: .4byte 0x00000202
_08077564:
	ldr r1, _08077578 @ =0x040000D4
	ldr r0, _0807757C @ =0x02010000
	str r0, [r1]
	ldr r0, _08077580 @ =0x0600C000
	str r0, [r1, #4]
	ldr r0, _08077584 @ =0x80000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _08077702
	.align 2, 0
_08077578: .4byte 0x040000D4
_0807757C: .4byte 0x02010000
_08077580: .4byte 0x0600C000
_08077584: .4byte 0x80000400
_08077588:
	ldr r1, _08077598 @ =0x04000050
	ldr r2, _0807759C @ =0x00003FFE
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x10
	strh r0, [r1]
	b _08077702
	.align 2, 0
_08077598: .4byte 0x04000050
_0807759C: .4byte 0x00003FFE
_080775A0:
	ldr r0, _080775D0 @ =0x040000D4
	ldr r1, _080775D4 @ =0x0200F000
	str r1, [r0]
	ldr r1, _080775D8 @ =0x0200D380
	str r1, [r0, #4]
	ldr r2, _080775DC @ =0x80000040
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	ldr r1, _080775E0 @ =0x0200F400
	str r1, [r0]
	ldr r1, _080775E4 @ =0x0200D780
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	ldr r1, _080775E8 @ =0x0200F080
	str r1, [r0]
	ldr r1, _080775EC @ =0x0200DB80
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	ldr r1, _080775F0 @ =0x0200F480
	str r1, [r0]
	ldr r1, _080775F4 @ =0x0200DF80
	b _08077626
	.align 2, 0
_080775D0: .4byte 0x040000D4
_080775D4: .4byte 0x0200F000
_080775D8: .4byte 0x0200D380
_080775DC: .4byte 0x80000040
_080775E0: .4byte 0x0200F400
_080775E4: .4byte 0x0200D780
_080775E8: .4byte 0x0200F080
_080775EC: .4byte 0x0200DB80
_080775F0: .4byte 0x0200F480
_080775F4: .4byte 0x0200DF80
_080775F8:
	ldr r0, _08077630 @ =0x040000D4
	ldr r1, _08077634 @ =0x0200F1C0
	str r1, [r0]
	ldr r1, _08077638 @ =0x0200E380
	str r1, [r0, #4]
	ldr r2, _0807763C @ =0x80000040
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	ldr r1, _08077640 @ =0x0200F5C0
	str r1, [r0]
	ldr r1, _08077644 @ =0x0200E780
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	ldr r1, _08077648 @ =0x0200F240
	str r1, [r0]
	ldr r1, _0807764C @ =0x0200EB80
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	ldr r1, _08077650 @ =0x0200F640
	str r1, [r0]
	ldr r1, _08077654 @ =0x0200EF80
_08077626:
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r0, [r0, #8]
	b _08077702
	.align 2, 0
_08077630: .4byte 0x040000D4
_08077634: .4byte 0x0200F1C0
_08077638: .4byte 0x0200E380
_0807763C: .4byte 0x80000040
_08077640: .4byte 0x0200F5C0
_08077644: .4byte 0x0200E780
_08077648: .4byte 0x0200F240
_0807764C: .4byte 0x0200EB80
_08077650: .4byte 0x0200F640
_08077654: .4byte 0x0200EF80
_08077658:
	ldr r1, _08077660 @ =0x0200D000
	ldr r2, _08077664 @ =0x06006000
	b _0807766C
	.align 2, 0
_08077660: .4byte 0x0200D000
_08077664: .4byte 0x06006000
_08077668:
	ldr r1, _0807767C @ =0x0200E000
	ldr r2, _08077680 @ =0x06007000
_0807766C:
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	b _08077702
	.align 2, 0
_0807767C: .4byte 0x0200E000
_08077680: .4byte 0x06007000
_08077684:
	ldrb r0, [r4, #6]
	cmp r0, #1
	bls _080776FC
	movs r0, #0
	strb r0, [r4, #6]
	ldr r1, _080776D8 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xb
	bhi _080776DC
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #6
	bne _080776FC
	movs r3, #0x9a
	lsls r3, r3, #2
	adds r2, r4, r3
	ldrh r1, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #1
	movs r1, #2
	bl UpdateMenuOamDataID
	movs r0, #0x8c
	strh r0, [r4, #0x3a]
	movs r0, #0x44
	strh r0, [r4, #0x38]
	adds r2, r4, #0
	adds r2, #0x43
	ldrb r1, [r2]
	subs r0, #0x51
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	b _080776FC
	.align 2, 0
_080776D8: .4byte gWrittenToBldy
_080776DC:
	movs r0, #0x10
	movs r1, #0x28
	bl UpdateMenuOamDataID
	movs r0, #0x11
	movs r1, #0x2a
	bl UpdateMenuOamDataID
	b _08077702
_080776EE:
	ldr r0, _08077718 @ =gDisableSoftReset
	movs r1, #1
	strb r1, [r0]
	movs r5, #1
	movs r0, #0
	strb r0, [r4, #7]
	strb r0, [r4, #6]
_080776FC:
	movs r0, #0
	cmp r0, #0
	beq _0807770E
_08077702:
	ldr r0, _0807771C @ =gNonGameplayRam
	ldrb r1, [r0, #7]
	adds r1, #1
	movs r2, #0
	strb r1, [r0, #7]
	strb r2, [r0, #6]
_0807770E:
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08077718: .4byte gDisableSoftReset
_0807771C: .4byte gNonGameplayRam

	thumb_func_start EasySleepMenuQuit
EasySleepMenuQuit: @ 0x08077720
	push {r4, r5, r6, lr}
	sub sp, #4
	movs r5, #0
	ldr r0, _0807773C @ =gNonGameplayRam
	ldrb r1, [r0, #7]
	adds r4, r0, #0
	cmp r1, #6
	bls _08077732
	b _08077820
_08077732:
	lsls r0, r1, #2
	ldr r1, _08077740 @ =_08077744
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807773C: .4byte gNonGameplayRam
_08077740: .4byte _08077744
_08077744: @ jump table
	.4byte _08077760 @ case 0
	.4byte _0807776C @ case 1
	.4byte _08077824 @ case 2
	.4byte _080777B8 @ case 3
	.4byte _080777D0 @ case 4
	.4byte _080777F4 @ case 5
	.4byte _08077818 @ case 6
_08077760:
	ldr r1, _08077768 @ =gDisableSoftReset
	movs r0, #0
	strb r0, [r1]
	b _08077824
	.align 2, 0
_08077768: .4byte gDisableSoftReset
_0807776C:
	ldrb r0, [r4, #6]
	cmp r0, #1
	bls _08077820
	movs r0, #0
	strb r0, [r4, #6]
	ldr r1, _080777B0 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _08077824
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #6
	bne _08077820
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r2, r4, r0
	ldrh r1, [r2]
	ldr r0, _080777B4 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	movs r1, #0
	bl UpdateMenuOamDataID
	adds r2, r4, #0
	adds r2, #0x43
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2]
	b _08077820
	.align 2, 0
_080777B0: .4byte gWrittenToBldy
_080777B4: .4byte 0x0000FEFF
_080777B8:
	ldr r2, _080777CC @ =0x06006000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x20
	str r0, [sp]
	movs r0, #3
	movs r1, #0
	bl BitFill
	b _08077824
	.align 2, 0
_080777CC: .4byte 0x06006000
_080777D0:
	ldr r1, _080777E4 @ =0x040000D4
	ldr r0, _080777E8 @ =0x0200F800
	str r0, [r1]
	ldr r0, _080777EC @ =0x0600C000
	str r0, [r1, #4]
	ldr r0, _080777F0 @ =0x80000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _08077824
	.align 2, 0
_080777E4: .4byte 0x040000D4
_080777E8: .4byte 0x0200F800
_080777EC: .4byte 0x0600C000
_080777F0: .4byte 0x80000400
_080777F4:
	ldr r1, _08077810 @ =0x04000050
	movs r2, #0xfc
	lsls r2, r2, #6
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _08077814 @ =0x0000040C
	adds r0, r2, #0
	strh r0, [r1]
	movs r0, #4
	bl unk_77840
	b _08077824
	.align 2, 0
_08077810: .4byte 0x04000050
_08077814: .4byte 0x0000040C
_08077818:
	movs r5, #1
	movs r0, #0
	strb r0, [r4, #7]
	strb r0, [r4, #6]
_08077820:
	cmp r6, #0
	beq _08077830
_08077824:
	ldr r0, _0807783C @ =gNonGameplayRam
	ldrb r1, [r0, #7]
	adds r1, #1
	movs r2, #0
	strb r1, [r0, #7]
	strb r2, [r0, #6]
_08077830:
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0807783C: .4byte gNonGameplayRam

	thumb_func_start unk_77840
unk_77840: @ 0x08077840
	push {r4, r5, r6, lr}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r6, #0
	ldr r1, _08077860 @ =gNonGameplayRam
	ldrb r0, [r1, #1]
	adds r5, r1, #0
	cmp r0, #0xb
	bls _08077856
	b _08077ADA
_08077856:
	lsls r0, r0, #2
	ldr r1, _08077864 @ =_08077868
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08077860: .4byte gNonGameplayRam
_08077864: .4byte _08077868
_08077868: @ jump table
	.4byte _08077898 @ case 0
	.4byte _08077ADA @ case 1
	.4byte _08077ADA @ case 2
	.4byte _080778C0 @ case 3
	.4byte _080778EC @ case 4
	.4byte _08077944 @ case 5
	.4byte _0807796A @ case 6
	.4byte _080779A4 @ case 7
	.4byte _080779DC @ case 8
	.4byte _08077A24 @ case 9
	.4byte _08077A78 @ case 10
	.4byte _08077AB0 @ case 11
_08077898:
	movs r6, #5
	ldr r1, _080778B4 @ =0x0200C000
	ldr r2, _080778B8 @ =0x06007000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _080778BC @ =gNonGameplayRam
	movs r0, #8
	strb r0, [r1, #1]
	b _08077ADA
	.align 2, 0
_080778B4: .4byte 0x0200C000
_080778B8: .4byte 0x06007000
_080778BC: .4byte gNonGameplayRam
_080778C0:
	movs r6, #1
	adds r1, r5, #0
	adds r1, #0xd1
	movs r0, #9
	strb r0, [r1]
	adds r1, #0xc
	strb r0, [r1]
	ldr r1, _080778E4 @ =0x0200C000
	ldr r2, _080778E8 @ =0x06007000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	movs r0, #4
	b _08077AD8
	.align 2, 0
_080778E4: .4byte 0x0200C000
_080778E8: .4byte 0x06007000
_080778EC:
	cmp r4, #1
	bne _08077908
	movs r6, #2
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r2, r5, r0
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	eors r0, r1
	strh r0, [r2]
	movs r0, #5
	b _08077AD8
_08077908:
	cmp r4, #3
	bne _08077924
	movs r6, #2
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r2, r5, r0
	ldrh r1, [r2]
	ldr r0, _08077920 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	movs r0, #6
	b _08077AD8
	.align 2, 0
_08077920: .4byte 0x0000FEFF
_08077924:
	cmp r4, #5
	beq _0807792A
	b _08077ADA
_0807792A:
	movs r6, #3
	movs r3, #0x9a
	lsls r3, r3, #2
	adds r2, r5, r3
	ldrh r1, [r2]
	ldr r0, _08077940 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	movs r0, #6
	b _08077AD8
	.align 2, 0
_08077940: .4byte 0x0000FEFF
_08077944:
	cmp r4, #2
	bne _08077960
	movs r6, #1
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r2, r5, r0
	ldrh r1, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #4
	b _080779F6
_08077960:
	cmp r4, #3
	beq _08077966
	b _08077ADA
_08077966:
	movs r0, #7
	b _08077AD8
_0807796A:
	cmp r4, #4
	beq _08077970
	b _08077ADA
_08077970:
	movs r6, #1
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r2, r5, r0
	ldrh r1, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0807799C @ =0x0200C000
	ldr r2, _080779A0 @ =0x06007000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	strb r4, [r5, #1]
	b _08077ADA
	.align 2, 0
_0807799C: .4byte 0x0200C000
_080779A0: .4byte 0x06007000
_080779A4:
	cmp r4, #4
	beq _080779AA
	b _08077ADA
_080779AA:
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r2, r5, r0
	ldrh r1, [r2]
	ldr r0, _080779D0 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	ldr r1, _080779D4 @ =0x0200C000
	ldr r2, _080779D8 @ =0x06007000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	movs r0, #5
	b _08077AD8
	.align 2, 0
_080779D0: .4byte 0x0000FEFF
_080779D4: .4byte 0x0200C000
_080779D8: .4byte 0x06007000
_080779DC:
	cmp r4, #2
	bne _08077A04
	movs r6, #4
	movs r3, #0x9a
	lsls r3, r3, #2
	adds r2, r5, r3
	ldrh r1, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #9
_080779F6:
	strb r0, [r5, #1]
	ldr r0, _08077A00 @ =0x00000203
	bl SoundPlay
	b _08077ADA
	.align 2, 0
_08077A00: .4byte 0x00000203
_08077A04:
	cmp r4, #3
	beq _08077A0C
	cmp r4, #5
	bne _08077ADA
_08077A0C:
	movs r6, #6
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r2, r5, r0
	ldrh r1, [r2]
	ldr r0, _08077A20 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	movs r0, #0xb
	b _08077AD8
	.align 2, 0
_08077A20: .4byte 0x0000FEFF
_08077A24:
	cmp r4, #1
	bne _08077A40
	movs r6, #5
	movs r3, #0x9a
	lsls r3, r3, #2
	adds r2, r5, r3
	ldrh r1, [r2]
	ldr r0, _08077A3C @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	b _08077AD6
	.align 2, 0
_08077A3C: .4byte 0x0000FEFF
_08077A40:
	cmp r4, #3
	bne _08077A5C
	movs r6, #6
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r2, r5, r0
	ldrh r1, [r2]
	ldr r0, _08077A58 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	movs r0, #0xa
	b _08077AD8
	.align 2, 0
_08077A58: .4byte 0x0000FEFF
_08077A5C:
	cmp r4, #5
	bne _08077ADA
	movs r6, #6
	movs r3, #0x9a
	lsls r3, r3, #2
	adds r2, r5, r3
	ldrh r1, [r2]
	ldr r0, _08077A74 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	movs r0, #0xa
	b _08077AD8
	.align 2, 0
_08077A74: .4byte 0x0000FEFF
_08077A78:
	cmp r4, #4
	bne _08077ADA
	movs r6, #4
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r2, r5, r0
	ldrh r1, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08077AA8 @ =0x0200C000
	ldr r2, _08077AAC @ =0x06007000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	movs r0, #9
	b _08077AD8
	.align 2, 0
_08077AA8: .4byte 0x0200C000
_08077AAC: .4byte 0x06007000
_08077AB0:
	cmp r4, #4
	bne _08077ADA
	movs r6, #5
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r2, r5, r0
	ldrh r1, [r2]
	ldr r0, _08077AEC @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	ldr r1, _08077AF0 @ =0x0200C000
	ldr r2, _08077AF4 @ =0x06007000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
_08077AD6:
	movs r0, #8
_08077AD8:
	strb r0, [r5, #1]
_08077ADA:
	subs r0, r6, #1
	cmp r0, #5
	bls _08077AE2
	b _08077C6E
_08077AE2:
	lsls r0, r0, #2
	ldr r1, _08077AF8 @ =_08077AFC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08077AEC: .4byte 0x0000FEFF
_08077AF0: .4byte 0x0200C000
_08077AF4: .4byte 0x06007000
_08077AF8: .4byte _08077AFC
_08077AFC: @ jump table
	.4byte _08077B14 @ case 0
	.4byte _08077B74 @ case 1
	.4byte _08077B94 @ case 2
	.4byte _08077BA8 @ case 3
	.4byte _08077C18 @ case 4
	.4byte _08077C60 @ case 5
_08077B14:
	ldr r4, _08077B70 @ =gNonGameplayRam
	adds r1, r4, #0
	adds r1, #0xd2
	movs r0, #0x59
	strb r0, [r1]
	adds r5, r4, #0
	adds r5, #0xd3
	ldrb r2, [r5]
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ands r0, r2
	movs r3, #2
	orrs r0, r3
	movs r2, #0xd
	rsbs r2, r2, #0
	ands r0, r2
	strb r0, [r5]
	adds r5, #0xb
	movs r0, #0x5c
	strb r0, [r5]
	adds r5, #1
	ldrb r0, [r5]
	ands r1, r0
	orrs r1, r3
	ands r1, r2
	movs r0, #4
	orrs r1, r0
	strb r1, [r5]
	adds r0, r4, #0
	adds r0, #0xca
	movs r2, #0x74
	strh r2, [r0]
	subs r0, #2
	movs r1, #0x84
	strh r1, [r0]
	adds r0, #0xe
	strh r2, [r0]
	subs r0, #2
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0xbe
	movs r0, #0x1c
	strh r0, [r1]
	b _08077C6E
	.align 2, 0
_08077B70: .4byte gNonGameplayRam
_08077B74:
	ldr r1, _08077B8C @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0xd2
	movs r0, #0
	strb r0, [r2]
	adds r2, #0xc
	strb r0, [r2]
	adds r1, #0xbe
	ldr r0, _08077B90 @ =0x0000FF9C
	strh r0, [r1]
	b _08077C6E
	.align 2, 0
_08077B8C: .4byte gNonGameplayRam
_08077B90: .4byte 0x0000FF9C
_08077B94:
	ldr r0, _08077BA4 @ =gNonGameplayRam
	adds r2, r0, #0
	adds r2, #0xd2
	movs r1, #0
	strb r1, [r2]
	adds r0, #0xde
	b _08077C6C
	.align 2, 0
_08077BA4: .4byte gNonGameplayRam
_08077BA8:
	ldr r4, _08077C14 @ =gNonGameplayRam
	adds r1, r4, #0
	adds r1, #0xd2
	movs r0, #0x59
	strb r0, [r1]
	adds r5, r4, #0
	adds r5, #0xd3
	ldrb r2, [r5]
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ands r0, r2
	movs r3, #2
	orrs r0, r3
	movs r2, #0xd
	rsbs r2, r2, #0
	ands r0, r2
	strb r0, [r5]
	adds r5, #0xb
	movs r0, #0x5c
	strb r0, [r5]
	adds r5, #1
	ldrb r0, [r5]
	ands r1, r0
	orrs r1, r3
	ands r1, r2
	movs r0, #4
	orrs r1, r0
	strb r1, [r5]
	adds r0, r4, #0
	adds r0, #0xca
	movs r3, #0
	movs r2, #0x74
	strh r2, [r0]
	subs r0, #2
	movs r1, #0x84
	strh r1, [r0]
	adds r0, #0xe
	strh r2, [r0]
	subs r0, #2
	strh r1, [r0]
	adds r1, r4, #0
	adds r1, #0xd1
	movs r0, #9
	strb r0, [r1]
	adds r1, #0xc
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0xd0
	strb r3, [r0]
	adds r0, #0xc
	strb r3, [r0]
	b _08077C6E
	.align 2, 0
_08077C14: .4byte gNonGameplayRam
_08077C18:
	ldr r3, _08077C5C @ =gNonGameplayRam
	adds r1, r3, #0
	adds r1, #0xde
	movs r0, #0
	strb r0, [r1]
	subs r1, #0xc
	movs r0, #0x34
	strb r0, [r1]
	subs r1, #8
	movs r2, #0
	movs r0, #0xca
	strh r0, [r1]
	subs r1, #2
	movs r0, #0x8e
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0xd1
	strb r2, [r0]
	subs r0, #1
	strb r2, [r0]
	adds r2, r3, #0
	adds r2, #0xd3
	ldrb r1, [r2]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #0xd
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r2]
	b _08077C6E
	.align 2, 0
_08077C5C: .4byte gNonGameplayRam
_08077C60:
	ldr r0, _08077C78 @ =gNonGameplayRam
	adds r2, r0, #0
	adds r2, #0xde
	movs r1, #0
	strb r1, [r2]
	adds r0, #0xd2
_08077C6C:
	strb r1, [r0]
_08077C6E:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08077C78: .4byte gNonGameplayRam

	thumb_func_start MapScreenUpdateArrowsAndBlinkingSquare
MapScreenUpdateArrowsAndBlinkingSquare: @ 0x08077C7C
	push {r4, r5, lr}
	ldr r3, _08077D4C @ =gNonGameplayRam
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r3, r1
	ldrb r0, [r0]
	lsls r0, r0, #3
	ldr r2, _08077D50 @ =gBackgroundPositions
	ldrh r1, [r2, #0xc]
	subs r0, r0, r1
	movs r4, #0xd7
	lsls r4, r4, #1
	adds r1, r3, r4
	strh r0, [r1]
	ldr r5, _08077D54 @ =0x00000211
	adds r0, r3, r5
	ldrb r0, [r0]
	lsls r0, r0, #3
	ldrh r1, [r2, #0xe]
	subs r0, r0, r1
	subs r4, #2
	adds r1, r3, r4
	strh r0, [r1]
	movs r1, #1
	subs r5, #0x67
	adds r0, r3, r5
	ldrb r0, [r0]
	adds r4, r3, #0
	cmp r0, #0x12
	beq _08077CCE
	cmp r0, #0x13
	beq _08077CCE
	cmp r0, #0x14
	beq _08077CCE
	cmp r0, #0x15
	beq _08077CCE
	cmp r0, #0xe
	beq _08077CCE
	cmp r0, #0xf
	beq _08077CCE
	movs r1, #0
_08077CCE:
	cmp r1, #0
	beq _08077CFC
	movs r1, #0x83
	lsls r1, r1, #2
	adds r0, r4, r1
	ldrb r0, [r0]
	lsls r0, r0, #3
	ldrh r1, [r2, #0xc]
	subs r0, r0, r1
	movs r3, #0xd1
	lsls r3, r3, #1
	adds r1, r4, r3
	strh r0, [r1]
	ldr r5, _08077D58 @ =0x0000020D
	adds r0, r4, r5
	ldrb r0, [r0]
	lsls r0, r0, #3
	ldrh r1, [r2, #0xe]
	subs r0, r0, r1
	movs r2, #0xd0
	lsls r2, r2, #1
	adds r1, r4, r2
	strh r0, [r1]
_08077CFC:
	ldr r0, _08077D5C @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	beq _08077D0A
	b _08077E38
_08077D0A:
	adds r0, r4, #0
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #0
	beq _08077D64
	ldr r3, _08077D60 @ =0x08576158
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r0, #0x2e]
	ldrb r1, [r3, #4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	strh r2, [r0, #0x2e]
	ldrb r1, [r3, #8]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	strh r2, [r0, #0x2e]
	ldrb r1, [r3, #0xc]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	strh r2, [r0, #0x2e]
	b _08077E38
	.align 2, 0
_08077D4C: .4byte gNonGameplayRam
_08077D50: .4byte gBackgroundPositions
_08077D54: .4byte 0x00000211
_08077D58: .4byte 0x0000020D
_08077D5C: .4byte gPauseScreenFlag
_08077D60: .4byte 0x08576158
_08077D64:
	ldr r2, _08077D8C @ =0x08576158
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r4
	ldr r5, _08077D90 @ =0x0000025A
	adds r0, r4, r5
	movs r1, #0
	ldrsb r1, [r0, r1]
	subs r5, #2
	adds r0, r4, r5
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r1, r1, r0
	cmp r1, #0xd
	ble _08077D94
	ldrb r0, [r2, #2]
	b _08077D9A
	.align 2, 0
_08077D8C: .4byte 0x08576158
_08077D90: .4byte 0x0000025A
_08077D94:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r1, #0
_08077D9A:
	strh r0, [r3, #0x2e]
	ldrb r1, [r2, #4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r4
	movs r5, #0x96
	lsls r5, r5, #2
	adds r0, r4, r5
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r5, #3
	adds r1, r4, r5
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	subs r0, r0, r1
	cmp r0, #0xe
	ble _08077DC6
	ldrb r0, [r2, #6]
	b _08077DCC
_08077DC6:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r1, #0
_08077DCC:
	strh r0, [r3, #0x2e]
	ldrb r1, [r2, #8]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r4
	ldr r5, _08077DF8 @ =0x00000259
	adds r0, r4, r5
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r5, #3
	adds r1, r4, r5
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	subs r0, r0, r1
	cmp r0, #8
	ble _08077DFC
	ldrb r0, [r2, #0xa]
	b _08077E02
	.align 2, 0
_08077DF8: .4byte 0x00000259
_08077DFC:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r1, #0
_08077E02:
	strh r0, [r3, #0x2e]
	ldrb r1, [r2, #0xc]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r4
	ldr r5, _08077E2C @ =0x0000025D
	adds r0, r4, r5
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r5, #4
	adds r1, r4, r5
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	subs r0, r0, r1
	cmp r0, #8
	ble _08077E30
	ldrb r0, [r2, #0xe]
	b _08077E36
	.align 2, 0
_08077E2C: .4byte 0x0000025D
_08077E30:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r1, #0
_08077E36:
	strh r0, [r3, #0x2e]
_08077E38:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start MapScreenDrawSpecialOam
MapScreenDrawSpecialOam: @ 0x08077E40
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r0, _08077E70 @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	bne _08077E5E
	b _080780E0
_08077E5E:
	mov r0, r8
	cmp r0, #1
	beq _08077EF0
	cmp r0, #1
	bgt _08077E74
	cmp r0, #0
	beq _08077E7C
	b _08077F5A
	.align 2, 0
_08077E70: .4byte gPauseScreenFlag
_08077E74:
	mov r1, r8
	cmp r1, #2
	beq _08077F3C
	b _08077F5A
_08077E7C:
	ldr r0, _08077EE0 @ =gNonGameplayRam
	ldrb r1, [r0]
	movs r2, #3
	cmp r1, #0
	beq _08077E88
	movs r2, #1
_08077E88:
	movs r4, #0
	ldr r7, _08077EE4 @ =gEquipment
	ldr r5, _08077EE8 @ =0x08576150
	mov sb, r2
	movs r2, #4
	rsbs r2, r2, #0
	mov sl, r2
_08077E96:
	movs r6, #0
	ldrb r0, [r7, #0xd]
	adds r3, r4, #1
	cmp r0, #0xff
	beq _08077EA6
	cmp r0, r3
	blt _08077EA6
	movs r6, #1
_08077EA6:
	lsls r2, r4, #1
	adds r0, r2, r5
	ldrb r0, [r0]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _08077EE0 @ =gNonGameplayRam
	adds r1, r1, r0
	ldr r0, _08077EEC @ =0x08576151
	adds r2, r2, r0
	ldrb r0, [r2]
	adds r0, r0, r6
	movs r2, #0x36
	strb r0, [r2, r1]
	movs r0, #0x24
	strh r0, [r1, #0x2c]
	movs r0, #0xd4
	strh r0, [r1, #0x2e]
	adds r1, #0x37
	ldrb r2, [r1]
	mov r0, sl
	ands r0, r2
	mov r2, sb
	orrs r0, r2
	strb r0, [r1]
	adds r4, r3, #0
	cmp r4, #3
	bls _08077E96
	b _08077F5A
	.align 2, 0
_08077EE0: .4byte gNonGameplayRam
_08077EE4: .4byte gEquipment
_08077EE8: .4byte 0x08576150
_08077EEC: .4byte 0x08576151
_08077EF0:
	movs r4, #0
	ldr r7, _08077F30 @ =gEquipment
	ldr r3, _08077F34 @ =gNonGameplayRam
	mov ip, r3
	ldr r5, _08077F38 @ =0x08576150
	adds r0, r5, #1
	mov sb, r0
_08077EFE:
	movs r6, #0
	ldrb r0, [r7, #0xd]
	adds r3, r4, #1
	cmp r0, #0xff
	beq _08077F0E
	cmp r0, r3
	blt _08077F0E
	movs r6, #1
_08077F0E:
	lsls r2, r4, #1
	adds r0, r2, r5
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	add r0, ip
	add r2, sb
	ldrb r1, [r2]
	adds r1, r1, r6
	adds r0, #0x36
	strb r1, [r0]
	adds r4, r3, #0
	cmp r4, #3
	bls _08077EFE
	b _08077F5A
	.align 2, 0
_08077F30: .4byte gEquipment
_08077F34: .4byte gNonGameplayRam
_08077F38: .4byte 0x08576150
_08077F3C:
	movs r4, #0
	ldr r5, _08077F84 @ =gNonGameplayRam
	movs r3, #0
	ldr r2, _08077F88 @ =0x08576150
_08077F44:
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x36
	strb r3, [r0]
	adds r2, #2
	adds r4, #1
	cmp r4, #3
	bls _08077F44
_08077F5A:
	movs r4, #0
	ldr r1, _08077F8C @ =0x03000014
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bne _08077F68
	movs r4, #1
_08077F68:
	ldr r2, _08077F84 @ =gNonGameplayRam
	ldrb r0, [r2]
	cmp r0, #0
	beq _08077F72
	movs r4, #1
_08077F72:
	cmp r4, #0
	beq _08077F90
	ldr r3, _08077F84 @ =gNonGameplayRam
	movs r0, #0x9d
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #0
	b _080780DE
	.align 2, 0
_08077F84: .4byte gNonGameplayRam
_08077F88: .4byte 0x08576150
_08077F8C: .4byte 0x03000014
_08077F90:
	mov r1, r8
	cmp r1, #0
	beq _08077F98
	b _080780E0
_08077F98:
	movs r4, #3
	cmp r0, #0
	beq _08077FA0
	movs r4, #1
_08077FA0:
	bl MapScreenCountTanks
	movs r0, #0
	bl PauseScreenDrawIgtAndTanks
	movs r6, #0
	ldr r7, _080780F0 @ =gNonGameplayRam
	ldr r2, _080780F4 @ =0x0879BE8C
	mov r8, r2
	movs r0, #3
	mov ip, r4
	mov r3, ip
	ands r3, r0
	mov ip, r3
	movs r0, #4
	rsbs r0, r0, #0
	mov sb, r0
	mov r5, r8
_08077FC4:
	lsls r3, r6, #2
	ldrb r0, [r5]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r7
	mov r0, r8
	adds r0, #1
	adds r0, r3, r0
	ldrb r0, [r0]
	adds r1, #0x36
	strb r0, [r1]
	ldrb r0, [r5]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r7
	adds r1, #0x37
	ldrb r2, [r1]
	mov r0, sb
	ands r0, r2
	mov r2, ip
	orrs r0, r2
	strb r0, [r1]
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	mov r1, r8
	adds r1, #2
	adds r3, r3, r1
	ldrb r1, [r3]
	strh r1, [r0, #0x2e]
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrb r1, [r5, #3]
	strh r1, [r0, #0x2c]
	adds r5, #4
	adds r6, #1
	cmp r6, #3
	bls _08077FC4
	movs r6, #0
	ldr r7, _080780F8 @ =0x0879BE9C
	ldr r5, _080780F0 @ =gNonGameplayRam
	mov ip, r7
	movs r0, #3
	ands r4, r0
	mov r8, r4
	movs r3, #4
	rsbs r3, r3, #0
	mov sb, r3
	adds r4, r7, #0
_08078034:
	lsls r3, r6, #2
	ldrb r0, [r4]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r5
	adds r1, #0x37
	ldrb r2, [r1]
	mov r0, sb
	ands r0, r2
	mov r2, r8
	orrs r0, r2
	strb r0, [r1]
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	mov r1, ip
	adds r1, #2
	adds r3, r3, r1
	ldrb r1, [r3]
	strh r1, [r0, #0x2e]
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	ldrb r1, [r4, #3]
	strh r1, [r0, #0x2c]
	adds r4, #4
	adds r6, #1
	cmp r6, #2
	bls _08078034
	ldr r2, _080780F0 @ =gNonGameplayRam
	ldr r3, _080780FC @ =0x00000275
	adds r0, r2, r3
	adds r3, #1
	adds r1, r2, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _0807809A
	ldrb r0, [r7]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	ldrb r0, [r7, #1]
	adds r1, #0x36
	strb r0, [r1]
_0807809A:
	ldr r1, _08078100 @ =0x00000277
	adds r0, r2, r1
	movs r3, #0x9e
	lsls r3, r3, #2
	adds r1, r2, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080780BC
	ldrb r0, [r7, #4]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	ldrb r0, [r7, #5]
	adds r1, #0x36
	strb r0, [r1]
_080780BC:
	ldr r1, _080780F0 @ =gNonGameplayRam
	ldr r2, _08078104 @ =0x00000279
	adds r0, r1, r2
	ldr r3, _08078108 @ =0x0000027A
	adds r1, r1, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080780E0
	ldrb r0, [r7, #8]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _080780F0 @ =gNonGameplayRam
	adds r1, r1, r0
	ldrb r0, [r7, #9]
	adds r1, #0x36
_080780DE:
	strb r0, [r1]
_080780E0:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080780F0: .4byte gNonGameplayRam
_080780F4: .4byte 0x0879BE8C
_080780F8: .4byte 0x0879BE9C
_080780FC: .4byte 0x00000275
_08078100: .4byte 0x00000277
_08078104: .4byte 0x00000279
_08078108: .4byte 0x0000027A

	thumb_func_start PauseScreenSetupOam
PauseScreenSetupOam: @ 0x0807810C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _080781A0 @ =gNonGameplayRam
	movs r2, #0
	movs r1, #0
	strh r1, [r0, #0xc]
	strh r1, [r0, #0xe]
	strh r1, [r0, #0x10]
	strh r1, [r0, #0x12]
	strh r1, [r0, #0x14]
	strb r2, [r0, #0x17]
	strb r2, [r0, #0x18]
	adds r7, r0, #0
	movs r3, #0
	movs r6, #4
	rsbs r6, r6, #0
	movs r5, #0xd
	rsbs r5, r5, #0
	adds r2, r7, #0
	adds r2, #0x2c
	movs r4, #0x27
_0807813A:
	strb r3, [r2, #0xa]
	strb r3, [r2, #8]
	strb r3, [r2, #9]
	strh r3, [r2, #2]
	strh r3, [r2]
	ldrb r1, [r2, #0xb]
	adds r0, r6, #0
	ands r0, r1
	ands r0, r5
	strb r0, [r2, #0xb]
	adds r2, #0xc
	subs r4, #1
	cmp r4, #0
	bge _0807813A
	adds r0, r7, #0
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #4
	beq _08078176
	ldr r0, _080781A4 @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	beq _08078176
	movs r0, #0xdb
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
_08078176:
	ldr r3, _080781A0 @ =gNonGameplayRam
	ldrb r0, [r3]
	cmp r0, #0
	beq _080781B0
	ldr r1, _080781A8 @ =0x000001B7
	adds r4, r3, r1
	ldrb r2, [r4]
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ands r0, r2
	movs r2, #1
	orrs r0, r2
	strb r0, [r4]
	ldr r0, _080781AC @ =0x000001AB
	adds r3, r3, r0
	ldrb r0, [r3]
	ands r1, r0
	orrs r1, r2
	strb r1, [r3]
	b _080781C6
	.align 2, 0
_080781A0: .4byte gNonGameplayRam
_080781A4: .4byte gPauseScreenFlag
_080781A8: .4byte 0x000001B7
_080781AC: .4byte 0x000001AB
_080781B0:
	ldr r1, _080781E4 @ =0x000001B7
	adds r2, r3, r1
	ldrb r0, [r2]
	movs r1, #3
	orrs r0, r1
	strb r0, [r2]
	ldr r0, _080781E8 @ =0x000001AB
	adds r2, r3, r0
	ldrb r0, [r2]
	orrs r0, r1
	strb r0, [r2]
_080781C6:
	bl MapScreenUpdateArrowsAndBlinkingSquare
	ldr r1, _080781EC @ =gNonGameplayRam
	adds r0, r1, #0
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #1
	bne _080781F0
	ldrb r0, [r1, #2]
	cmp r0, #0
	beq _080781FC
	bl DebugMenuSetupCursor
	b _080781FC
	.align 2, 0
_080781E4: .4byte 0x000001B7
_080781E8: .4byte 0x000001AB
_080781EC: .4byte gNonGameplayRam
_080781F0:
	adds r2, r1, #0
	adds r2, #0x36
	movs r0, #0
	strb r0, [r2]
	strh r0, [r1, #0x2c]
	strh r0, [r1, #0x2e]
_080781FC:
	ldr r1, _08078270 @ =gNonGameplayRam
	mov ip, r1
	ldrb r0, [r1]
	cmp r0, #0
	bne _080782AE
	adds r1, #0xf6
	movs r0, #0x28
	strb r0, [r1]
	mov r0, ip
	adds r0, #0xec
	movs r3, #2
	strh r3, [r0]
	mov r1, ip
	adds r1, #0xee
	movs r0, #0xd6
	strh r0, [r1]
	mov r4, ip
	adds r4, #0xf7
	ldrb r2, [r4]
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ands r0, r2
	movs r2, #2
	orrs r0, r2
	strb r0, [r4]
	movs r4, #0x81
	lsls r4, r4, #1
	add r4, ip
	movs r0, #0x2a
	strb r0, [r4]
	mov r0, ip
	adds r0, #0xf8
	strh r3, [r0]
	mov r3, ip
	adds r3, #0xfa
	movs r0, #0x12
	strh r0, [r3]
	ldr r3, _08078274 @ =0x00000103
	add r3, ip
	ldrb r0, [r3]
	ands r1, r0
	orrs r1, r2
	strb r1, [r3]
	ldr r1, _08078278 @ =gCurrentArea
	ldrb r0, [r1]
	cmp r0, #6
	bhi _08078280
	ldr r0, _0807827C @ =0x08576142
	ldrb r1, [r1]
	lsls r1, r1, #1
	adds r0, #1
	adds r1, r1, r0
	ldrb r1, [r1]
	movs r0, #0x12
	bl UpdateMenuOamDataID
	b _08078288
	.align 2, 0
_08078270: .4byte gNonGameplayRam
_08078274: .4byte 0x00000103
_08078278: .4byte gCurrentArea
_0807827C: .4byte 0x08576142
_08078280:
	movs r0, #0x12
	movs r1, #0
	bl UpdateMenuOamDataID
_08078288:
	ldr r2, _080783D4 @ =gNonGameplayRam
	movs r0, #0x82
	lsls r0, r0, #1
	adds r1, r2, r0
	movs r0, #0
	strh r0, [r1]
	movs r0, #0x83
	lsls r0, r0, #1
	adds r1, r2, r0
	movs r0, #0x74
	strh r0, [r1]
	ldr r1, _080783D8 @ =0x0000010F
	adds r2, r2, r1
	ldrb r1, [r2]
	subs r0, #0x78
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r2]
_080782AE:
	movs r0, #0
	bl MapScreenDrawSpecialOam
	ldr r3, _080783D4 @ =gNonGameplayRam
	adds r1, r3, #0
	adds r1, #0xe0
	movs r2, #0
	movs r0, #0x20
	strh r0, [r1]
	adds r1, #2
	movs r0, #0xc0
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0xea
	strb r2, [r0]
	adds r7, r3, #0
	adds r4, r7, #0
	ldr r5, _080783DC @ =0x08576158
	adds r3, r5, #0
	adds r3, #0x10
	movs r6, #4
	rsbs r6, r6, #0
_080782DA:
	subs r3, #4
	ldrb r0, [r4]
	cmp r0, #0
	bne _080782F2
	ldrb r0, [r3]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r4
	ldrb r0, [r3, #1]
	adds r1, #0x36
	strb r0, [r1]
_080782F2:
	ldrb r0, [r3]
	lsls r2, r0, #1
	adds r2, r2, r0
	lsls r2, r2, #2
	adds r2, r2, r4
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r2, #0x2e]
	ldrb r0, [r3, #3]
	strh r0, [r2, #0x2c]
	adds r2, #0x37
	ldrb r1, [r2]
	adds r0, r6, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r2]
	cmp r3, r5
	bgt _080782DA
	adds r5, r7, #0
	ldrb r6, [r5]
	cmp r6, #1
	bne _080783C6
	movs r2, #0xf4
	lsls r2, r2, #1
	adds r1, r5, r2
	movs r0, #0x7c
	strh r0, [r1]
	movs r0, #0xf5
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #0x74
	strh r0, [r1]
	movs r1, #0xf9
	lsls r1, r1, #1
	adds r1, r1, r5
	mov r8, r1
	movs r0, #0x3e
	strb r0, [r1]
	adds r2, #0xb
	adds r1, r5, r2
	ldrb r0, [r1]
	movs r2, #3
	mov sb, r2
	mov r2, sb
	orrs r0, r2
	strb r0, [r1]
	bl unk_65618
	adds r4, r0, #0
	ldr r0, _080783E0 @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	bne _0807836A
	movs r4, #3
	movs r0, #0x3d
	mov r1, r8
	strb r0, [r1]
_0807836A:
	movs r0, #2
	ands r0, r4
	cmp r0, #0
	beq _0807839A
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r1, r5, r2
	movs r0, #0x4c
	strh r0, [r1]
	movs r0, #0xfb
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #0x18
	strh r0, [r1]
	adds r2, #0xa
	adds r1, r5, r2
	movs r0, #0x3f
	strb r0, [r1]
	ldr r0, _080783E4 @ =0x000001FF
	adds r1, r5, r0
	ldrb r0, [r1]
	mov r2, sb
	orrs r0, r2
	strb r0, [r1]
_0807839A:
	ands r6, r4
	cmp r6, #0
	beq _080783C6
	movs r0, #0x80
	lsls r0, r0, #2
	adds r1, r7, r0
	movs r0, #0x4c
	strh r0, [r1]
	ldr r2, _080783E8 @ =0x00000202
	adds r1, r7, r2
	movs r0, #0xd0
	strh r0, [r1]
	ldr r0, _080783EC @ =0x0000020A
	adds r1, r7, r0
	movs r0, #0x40
	strb r0, [r1]
	adds r2, #9
	adds r1, r7, r2
	ldrb r0, [r1]
	mov r2, sb
	orrs r0, r2
	strb r0, [r1]
_080783C6:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080783D4: .4byte gNonGameplayRam
_080783D8: .4byte 0x0000010F
_080783DC: .4byte 0x08576158
_080783E0: .4byte gPauseScreenFlag
_080783E4: .4byte 0x000001FF
_080783E8: .4byte 0x00000202
_080783EC: .4byte 0x0000020A

	thumb_func_start PauseScreenProcessOam
PauseScreenProcessOam: @ 0x080783F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	ldr r0, _0807844C @ =gOamData
	str r0, [sp, #8]
	ldr r0, _08078450 @ =gNextOamSlot
	ldrb r1, [r0]
	lsls r0, r1, #3
	ldr r2, [sp, #8]
	adds r2, r0, r2
	str r2, [sp, #8]
	str r1, [sp]
	mov sb, r1
	movs r3, #0
	str r3, [sp, #0xc]
_08078414:
	ldr r1, [sp, #0xc]
	lsls r0, r1, #1
	adds r1, r0, r1
	lsls r1, r1, #2
	ldr r3, _08078454 @ =gNonGameplayRam
	adds r2, r1, r3
	adds r3, r2, #0
	adds r3, #0x36
	ldrb r1, [r3]
	adds r7, r0, #0
	cmp r1, #0
	bne _0807842E
	b _08078A36
_0807842E:
	adds r2, #0x37
	ldrb r1, [r2]
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2]
	ldrb r0, [r3]
	cmp r0, #0x8b
	bls _08078442
	b _0807868C
_08078442:
	lsls r0, r0, #2
	ldr r1, _08078458 @ =_0807845C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807844C: .4byte gOamData
_08078450: .4byte gNextOamSlot
_08078454: .4byte gNonGameplayRam
_08078458: .4byte _0807845C
_0807845C: @ jump table
	.4byte _08078962 @ case 0
	.4byte _080786B4 @ case 1
	.4byte _080786B4 @ case 2
	.4byte _080786B4 @ case 3
	.4byte _080786B4 @ case 4
	.4byte _080786B4 @ case 5
	.4byte _080786B4 @ case 6
	.4byte _080786B4 @ case 7
	.4byte _080786B4 @ case 8
	.4byte _080786B4 @ case 9
	.4byte _0807868C @ case 10
	.4byte _080786B4 @ case 11
	.4byte _080786B4 @ case 12
	.4byte _0807868C @ case 13
	.4byte _080786B4 @ case 14
	.4byte _080786B4 @ case 15
	.4byte _080787F0 @ case 16
	.4byte _0807868C @ case 17
	.4byte _08078708 @ case 18
	.4byte _08078708 @ case 19
	.4byte _08078708 @ case 20
	.4byte _08078708 @ case 21
	.4byte _080786B4 @ case 22
	.4byte _080786B4 @ case 23
	.4byte _080786B4 @ case 24
	.4byte _080786B4 @ case 25
	.4byte _0807868C @ case 26
	.4byte _0807890C @ case 27
	.4byte _0807868C @ case 28
	.4byte _0807890C @ case 29
	.4byte _0807868C @ case 30
	.4byte _0807890C @ case 31
	.4byte _0807868C @ case 32
	.4byte _0807890C @ case 33
	.4byte _0807868C @ case 34
	.4byte _0807890C @ case 35
	.4byte _0807868C @ case 36
	.4byte _0807890C @ case 37
	.4byte _0807868C @ case 38
	.4byte _0807890C @ case 39
	.4byte _080786B4 @ case 40
	.4byte _080786B4 @ case 41
	.4byte _080786B4 @ case 42
	.4byte _080786B4 @ case 43
	.4byte _0807868C @ case 44
	.4byte _0807868C @ case 45
	.4byte _0807868C @ case 46
	.4byte _0807868C @ case 47
	.4byte _0807868C @ case 48
	.4byte _0807868C @ case 49
	.4byte _0807868C @ case 50
	.4byte _0807868C @ case 51
	.4byte _0807868C @ case 52
	.4byte _0807890C @ case 53
	.4byte _0807868C @ case 54
	.4byte _0807868C @ case 55
	.4byte _0807868C @ case 56
	.4byte _0807868C @ case 57
	.4byte _0807868C @ case 58
	.4byte _0807868C @ case 59
	.4byte _0807868C @ case 60
	.4byte _080786B4 @ case 61
	.4byte _080786B4 @ case 62
	.4byte _0807868C @ case 63
	.4byte _0807868C @ case 64
	.4byte _08078780 @ case 65
	.4byte _080787F0 @ case 66
	.4byte _08078780 @ case 67
	.4byte _0807868C @ case 68
	.4byte _08078780 @ case 69
	.4byte _08078780 @ case 70
	.4byte _0807868C @ case 71
	.4byte _08078780 @ case 72
	.4byte _08078780 @ case 73
	.4byte _08078780 @ case 74
	.4byte _080786B4 @ case 75
	.4byte _080786B4 @ case 76
	.4byte _08078780 @ case 77
	.4byte _0807868C @ case 78
	.4byte _080787F0 @ case 79
	.4byte _08078780 @ case 80
	.4byte _0807868C @ case 81
	.4byte _080787F0 @ case 82
	.4byte _08078780 @ case 83
	.4byte _0807868C @ case 84
	.4byte _080787F0 @ case 85
	.4byte _08078780 @ case 86
	.4byte _0807868C @ case 87
	.4byte _080787F0 @ case 88
	.4byte _08078780 @ case 89
	.4byte _0807868C @ case 90
	.4byte _080787F0 @ case 91
	.4byte _08078780 @ case 92
	.4byte _0807868C @ case 93
	.4byte _080787F0 @ case 94
	.4byte _08078844 @ case 95
	.4byte _080786B4 @ case 96
	.4byte _0807868C @ case 97
	.4byte _080787F0 @ case 98
	.4byte _08078898 @ case 99
	.4byte _0807868C @ case 100
	.4byte _0807890C @ case 101
	.4byte _080787F0 @ case 102
	.4byte _080786B4 @ case 103
	.4byte _0807868C @ case 104
	.4byte _0807868C @ case 105
	.4byte _0807868C @ case 106
	.4byte _0807868C @ case 107
	.4byte _0807868C @ case 108
	.4byte _0807868C @ case 109
	.4byte _0807868C @ case 110
	.4byte _0807868C @ case 111
	.4byte _0807868C @ case 112
	.4byte _0807868C @ case 113
	.4byte _0807868C @ case 114
	.4byte _0807868C @ case 115
	.4byte _0807868C @ case 116
	.4byte _0807868C @ case 117
	.4byte _0807868C @ case 118
	.4byte _0807868C @ case 119
	.4byte _0807868C @ case 120
	.4byte _0807868C @ case 121
	.4byte _0807868C @ case 122
	.4byte _0807868C @ case 123
	.4byte _0807868C @ case 124
	.4byte _0807868C @ case 125
	.4byte _0807868C @ case 126
	.4byte _0807868C @ case 127
	.4byte _0807868C @ case 128
	.4byte _0807868C @ case 129
	.4byte _0807868C @ case 130
	.4byte _0807868C @ case 131
	.4byte _0807868C @ case 132
	.4byte _0807868C @ case 133
	.4byte _0807868C @ case 134
	.4byte _0807868C @ case 135
	.4byte _0807868C @ case 136
	.4byte _0807868C @ case 137
	.4byte _0807868C @ case 138
	.4byte _0807868C @ case 139
_0807868C:
	ldr r2, _080786AC @ =0x0879BEC0
	ldr r0, _080786B0 @ =gNonGameplayRam
	ldr r3, [sp, #0xc]
	adds r1, r7, r3
	lsls r1, r1, #2
	adds r1, r1, r0
	adds r0, r1, #0
	adds r0, #0x36
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r5, [r0]
	adds r1, #0x34
	movs r0, #0
	strb r0, [r1]
	b _08078962
	.align 2, 0
_080786AC: .4byte 0x0879BEC0
_080786B0: .4byte gNonGameplayRam
_080786B4:
	ldr r2, _08078700 @ =0x0879BEC0
	ldr r1, _08078704 @ =gNonGameplayRam
	ldr r3, [sp, #0xc]
	adds r0, r7, r3
	lsls r0, r0, #2
	adds r1, r0, r1
	adds r0, r1, #0
	adds r0, #0x36
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r5, [r0]
	adds r3, r1, #0
	adds r3, #0x34
	adds r2, r1, #0
	adds r2, #0x35
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r1, [r3]
	ldrb r0, [r0, #4]
	cmp r1, r0
	bhs _080786E4
	b _08078962
_080786E4:
	movs r0, #0
	strb r0, [r3]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r0, [r0, #4]
	cmp r0, #0
	beq _080786FC
	b _08078962
_080786FC:
	strb r0, [r2]
	b _08078962
	.align 2, 0
_08078700: .4byte 0x0879BEC0
_08078704: .4byte gNonGameplayRam
_08078708:
	ldr r1, _0807876C @ =0x0879BEC0
	ldr r4, _08078770 @ =gNonGameplayRam
	ldr r2, [sp, #0xc]
	adds r0, r7, r2
	lsls r0, r0, #2
	adds r2, r0, r4
	adds r0, r2, #0
	adds r0, #0x36
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r5, [r0]
	adds r3, r2, #0
	adds r3, #0x34
	adds r2, #0x35
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r1, [r3]
	ldrb r0, [r0, #4]
	cmp r1, r0
	bhs _08078736
	b _08078962
_08078736:
	movs r0, #0
	strb r0, [r3]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r0, [r0, #4]
	cmp r0, #0
	beq _0807874E
	b _08078962
_0807874E:
	strb r0, [r2]
	adds r0, r4, #0
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807875C
	b _08078962
_0807875C:
	ldrb r0, [r4]
	cmp r0, #0
	beq _08078774
	movs r0, #0x8d
	lsls r0, r0, #1
	bl SoundPlay
	b _08078962
	.align 2, 0
_0807876C: .4byte 0x0879BEC0
_08078770: .4byte gNonGameplayRam
_08078774:
	ldr r0, _0807877C @ =0x0000012B
	bl SoundPlay
	b _08078962
	.align 2, 0
_0807877C: .4byte 0x0000012B
_08078780:
	ldr r2, _080787E8 @ =0x0879BEC0
	ldr r1, _080787EC @ =gNonGameplayRam
	ldr r3, [sp, #0xc]
	adds r0, r7, r3
	lsls r0, r0, #2
	adds r3, r0, r1
	adds r0, r3, #0
	adds r0, #0x36
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r5, [r0]
	adds r4, r3, #0
	adds r4, #0x35
	ldrb r0, [r4]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r0, [r0, #0xc]
	cmp r0, #0
	bne _080787B4
	adds r2, r3, #0
	adds r2, #0x37
	ldrb r0, [r2]
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2]
_080787B4:
	adds r2, r3, #0
	adds r2, #0x34
	ldrb r0, [r4]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r1, [r2]
	ldrb r0, [r0, #4]
	cmp r1, r0
	bhs _080787C8
	b _08078962
_080787C8:
	movs r0, #0
	strb r0, [r2]
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	ldrb r1, [r4]
	lsls r0, r1, #3
	adds r0, r0, r5
	ldrb r0, [r0, #4]
	cmp r0, #0
	beq _080787E0
	b _08078962
_080787E0:
	subs r0, r1, #1
	strb r0, [r4]
	b _08078962
	.align 2, 0
_080787E8: .4byte 0x0879BEC0
_080787EC: .4byte gNonGameplayRam
_080787F0:
	ldr r1, _0807883C @ =0x0879BEC0
	ldr r2, [sp, #0xc]
	adds r0, r7, r2
	lsls r0, r0, #2
	ldr r3, _08078840 @ =gNonGameplayRam
	adds r2, r0, r3
	adds r4, r2, #0
	adds r4, #0x36
	ldrb r0, [r4]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r5, [r0]
	adds r3, r2, #0
	adds r3, #0x34
	adds r2, #0x35
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r1, [r3]
	ldrb r0, [r0, #4]
	cmp r1, r0
	bhs _0807881E
	b _08078962
_0807881E:
	movs r0, #0
	strb r0, [r3]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r0, [r0, #4]
	cmp r0, #0
	beq _08078836
	b _08078962
_08078836:
	strb r0, [r4]
	strb r0, [r2]
	b _08078A36
	.align 2, 0
_0807883C: .4byte 0x0879BEC0
_08078840: .4byte gNonGameplayRam
_08078844:
	ldr r6, _08078890 @ =0x0879BEC0
	ldr r1, _08078894 @ =gNonGameplayRam
	ldr r2, [sp, #0xc]
	adds r0, r7, r2
	lsls r0, r0, #2
	adds r1, r0, r1
	adds r3, r1, #0
	adds r3, #0x36
	ldrb r0, [r3]
	lsls r0, r0, #2
	adds r0, r0, r6
	ldr r5, [r0]
	adds r4, r1, #0
	adds r4, #0x34
	adds r2, r1, #0
	adds r2, #0x35
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r1, [r4]
	ldrb r0, [r0, #4]
	cmp r1, r0
	blo _08078962
	movs r0, #0
	strb r0, [r4]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r1, [r0, #4]
	cmp r1, #0
	bne _08078962
	ldrb r0, [r3]
	adds r0, #1
	b _08078954
	.align 2, 0
_08078890: .4byte 0x0879BEC0
_08078894: .4byte gNonGameplayRam
_08078898:
	ldr r3, _08078904 @ =0x0879BEC0
	mov r8, r3
	ldr r6, _08078908 @ =gNonGameplayRam
	ldr r1, [sp, #0xc]
	adds r0, r7, r1
	lsls r0, r0, #2
	adds r1, r0, r6
	adds r3, r1, #0
	adds r3, #0x36
	ldrb r0, [r3]
	lsls r0, r0, #2
	add r0, r8
	ldr r5, [r0]
	adds r4, r1, #0
	adds r4, #0x34
	adds r2, r1, #0
	adds r2, #0x35
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r1, [r4]
	ldrb r0, [r0, #4]
	cmp r1, r0
	blo _08078962
	movs r0, #0
	strb r0, [r4]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r1, [r0, #4]
	cmp r1, #0
	bne _08078962
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	ldrb r0, [r3]
	lsls r0, r0, #2
	add r0, r8
	ldr r5, [r0]
	strb r1, [r4]
	strb r1, [r2]
	adds r2, r6, #0
	adds r2, #0x7e
	movs r0, #0x67
	strb r0, [r2]
	adds r0, r6, #0
	adds r0, #0x7c
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	b _08078962
	.align 2, 0
_08078904: .4byte 0x0879BEC0
_08078908: .4byte gNonGameplayRam
_0807890C:
	ldr r6, _08078A5C @ =0x0879BEC0
	ldr r1, _08078A60 @ =gNonGameplayRam
	ldr r2, [sp, #0xc]
	adds r0, r7, r2
	lsls r0, r0, #2
	adds r1, r0, r1
	adds r3, r1, #0
	adds r3, #0x36
	ldrb r0, [r3]
	lsls r0, r0, #2
	adds r0, r0, r6
	ldr r5, [r0]
	adds r4, r1, #0
	adds r4, #0x34
	adds r2, r1, #0
	adds r2, #0x35
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r1, [r4]
	ldrb r0, [r0, #4]
	cmp r1, r0
	blo _08078962
	movs r0, #0
	strb r0, [r4]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r1, [r0, #4]
	cmp r1, #0
	bne _08078962
	ldrb r0, [r3]
	subs r0, #1
_08078954:
	strb r0, [r3]
	ldrb r0, [r3]
	lsls r0, r0, #2
	adds r0, r0, r6
	ldr r5, [r0]
	strb r1, [r4]
	strb r1, [r2]
_08078962:
	ldr r2, _08078A60 @ =gNonGameplayRam
	ldr r3, [sp, #0xc]
	adds r0, r7, r3
	lsls r0, r0, #2
	adds r3, r0, r2
	adds r1, r3, #0
	adds r1, #0x34
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrh r0, [r3, #0x2c]
	adds r0, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	ldrh r0, [r3, #0x2e]
	adds r0, #4
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	adds r0, r3, #0
	adds r0, #0x35
	ldrb r0, [r0]
	lsls r0, r0, #3
	adds r5, r5, r0
	ldr r4, [r5]
	adds r0, r3, #0
	adds r0, #0x37
	ldrb r1, [r0]
	lsls r0, r1, #0x1e
	lsrs r6, r0, #0x1e
	lsls r1, r1, #0x1c
	lsrs r3, r1, #0x1e
	ldrh r0, [r4]
	ldr r1, [sp]
	adds r0, r1, r0
	cmp r0, #0x7f
	bgt _08078A42
	str r0, [sp]
	adds r4, #2
	cmp sb, r0
	bge _08078A36
	ldr r0, _08078A64 @ =gOamData
	lsls r1, r7, #0x10
	asrs r1, r1, #0x10
	mov r8, r1
	lsls r6, r6, #2
	mov ip, r6
	lsls r7, r3, #2
	mov r2, sb
	lsls r1, r2, #3
	adds r3, r1, r0
	ldr r0, _08078A68 @ =0x000001FF
	mov sl, r0
	movs r6, #0xd
	rsbs r6, r6, #0
	ldr r1, [sp]
	subs r1, r1, r2
	mov sb, r1
_080789D6:
	ldrh r0, [r4]
	adds r4, #2
	ldr r2, [sp, #8]
	strh r0, [r2]
	adds r2, #2
	ldr r1, [sp, #4]
	adds r0, r1, r0
	strb r0, [r3]
	ldrh r1, [r4]
	adds r4, #2
	strh r1, [r2]
	adds r2, #2
	str r2, [sp, #8]
	add r1, r8
	mov r2, sl
	ands r1, r2
	ldrh r2, [r3, #2]
	ldr r0, _08078A6C @ =0xFFFFFE00
	ands r0, r2
	orrs r0, r1
	strh r0, [r3, #2]
	ldrh r0, [r4]
	ldr r1, [sp, #8]
	strh r0, [r1]
	adds r4, #2
	ldrb r1, [r3, #5]
	adds r0, r6, #0
	ands r0, r1
	mov r2, ip
	orrs r0, r2
	strb r0, [r3, #5]
	ldrb r1, [r3, #1]
	adds r0, r6, #0
	ands r0, r1
	orrs r0, r7
	strb r0, [r3, #1]
	ldr r0, [sp, #8]
	adds r0, #4
	str r0, [sp, #8]
	adds r3, #8
	movs r1, #1
	rsbs r1, r1, #0
	add sb, r1
	mov r2, sb
	cmp r2, #0
	bne _080789D6
	ldr r3, [sp]
	mov sb, r3
_08078A36:
	ldr r0, [sp, #0xc]
	adds r0, #1
	str r0, [sp, #0xc]
	cmp r0, #0x27
	bgt _08078A42
	b _08078414
_08078A42:
	ldr r0, _08078A70 @ =gNextOamSlot
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08078A5C: .4byte 0x0879BEC0
_08078A60: .4byte gNonGameplayRam
_08078A64: .4byte gOamData
_08078A68: .4byte 0x000001FF
_08078A6C: .4byte 0xFFFFFE00
_08078A70: .4byte gNextOamSlot

	thumb_func_start CheckForMaintainedInput
CheckForMaintainedInput: @ 0x08078A74
	push {lr}
	sub sp, #8
	ldr r1, _08078A9C @ =0x08576210
	mov r0, sp
	movs r2, #7
	bl memcpy
	ldr r0, _08078AA0 @ =gButtonInput
	ldrh r0, [r0]
	movs r1, #0xf0
	ands r1, r0
	cmp r1, #0
	beq _08078AA8
	ldr r1, _08078AA4 @ =0x03005400
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r3, r1, #0
	b _08078AB0
	.align 2, 0
_08078A9C: .4byte 0x08576210
_08078AA0: .4byte gButtonInput
_08078AA4: .4byte 0x03005400
_08078AA8:
	ldr r0, _08078AE4 @ =0x03005400
	strb r1, [r0]
	strb r1, [r0, #1]
	adds r3, r0, #0
_08078AB0:
	ldrb r0, [r3, #1]
	mov r2, sp
	adds r1, r2, r0
	ldrb r0, [r3]
	ldrb r1, [r1]
	cmp r0, r1
	blo _08078ADC
	ldr r2, _08078AE8 @ =gChangedInput
	ldr r0, _08078AEC @ =gButtonInput
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	ldrh r1, [r2]
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	strb r0, [r3]
	ldrb r0, [r3, #1]
	cmp r0, #5
	bhi _08078ADC
	adds r0, #1
	strb r0, [r3, #1]
_08078ADC:
	add sp, #8
	pop {r0}
	bx r0
	.align 2, 0
_08078AE4: .4byte 0x03005400
_08078AE8: .4byte gChangedInput
_08078AEC: .4byte gButtonInput

	thumb_func_start unk_78af0
unk_78af0: @ 0x08078AF0
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r6, r3, #0
	ldr r2, _08078B14 @ =gNonGameplayRam
	cmp r3, #0
	beq _08078B7A
	movs r4, #0
	ldrh r1, [r2, #4]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08078B0C
	movs r4, #3
_08078B0C:
	cmp r3, #1
	bne _08078B18
	movs r5, #0
	b _08078B38
	.align 2, 0
_08078B14: .4byte gNonGameplayRam
_08078B18:
	cmp r3, #2
	bne _08078B2C
	ldr r0, _08078B28 @ =0x0000020A
	bl SoundPlay
	movs r5, #1
	b _08078B38
	.align 2, 0
_08078B28: .4byte 0x0000020A
_08078B2C:
	cmp r6, #3
	bne _08078B38
	ldr r0, _08078B98 @ =0x0000020B
	bl SoundPlay
	movs r5, #2
_08078B38:
	adds r4, r4, r5
	ldr r0, _08078B9C @ =gNonGameplayRam
	mov ip, r0
	ldr r2, _08078BA0 @ =0x085767F0
	lsls r1, r4, #1
	adds r1, r1, r4
	adds r0, r1, r2
	ldrb r0, [r0]
	mov r4, ip
	adds r4, #0x96
	movs r3, #0
	strb r0, [r4]
	adds r0, r2, #1
	adds r0, r1, r0
	ldrb r0, [r0]
	adds r4, #0xc
	strb r0, [r4]
	adds r2, #2
	adds r1, r1, r2
	ldrb r0, [r1]
	mov r1, ip
	adds r1, #0x8a
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x94
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	adds r0, #0xb
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	mov r2, ip
_08078B7A:
	adds r0, r2, #0
	adds r0, #0x8e
	ldrh r0, [r0]
	adds r1, r2, #0
	adds r1, #0x9a
	strh r0, [r1]
	adds r0, r2, #0
	adds r0, #0x8c
	ldrh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08078B98: .4byte 0x0000020B
_08078B9C: .4byte gNonGameplayRam
_08078BA0: .4byte 0x085767F0

	thumb_func_start PauseScreenSetNavigationTextPanelOam
PauseScreenSetNavigationTextPanelOam: @ 0x08078BA4
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bne _08078BC4
	ldr r0, _08078BC0 @ =gNonGameplayRam
	adds r2, r0, #0
	adds r2, #0x66
	movs r1, #0x44
	strb r1, [r2]
	adds r0, #0x72
	movs r1, #0x47
	strb r1, [r0]
	b _08078C02
	.align 2, 0
_08078BC0: .4byte gNonGameplayRam
_08078BC4:
	cmp r4, #2
	bne _08078BE8
	ldr r1, _08078BE0 @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x66
	movs r0, #0x43
	strb r0, [r2]
	adds r1, #0x72
	movs r0, #0x46
	strb r0, [r1]
	ldr r0, _08078BE4 @ =0x0000020A
	bl SoundPlay
	b _08078C02
	.align 2, 0
_08078BE0: .4byte gNonGameplayRam
_08078BE4: .4byte 0x0000020A
_08078BE8:
	cmp r4, #3
	bne _08078C02
	ldr r1, _08078C3C @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x66
	movs r0, #0x45
	strb r0, [r2]
	adds r1, #0x72
	movs r0, #0x48
	strb r0, [r1]
	ldr r0, _08078C40 @ =0x0000020B
	bl SoundPlay
_08078C02:
	ldr r3, _08078C3C @ =gNonGameplayRam
	cmp r4, #0
	beq _08078C1C
	adds r0, r3, #0
	adds r0, #0x64
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #0xb
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
_08078C1C:
	adds r0, r3, #0
	adds r0, #0x5e
	ldrh r2, [r0]
	adds r0, #0xc
	strh r2, [r0]
	subs r0, #0xe
	ldrh r1, [r0]
	adds r0, #0xc
	strh r1, [r0]
	subs r0, #0x16
	strh r2, [r0]
	subs r0, #2
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08078C3C: .4byte gNonGameplayRam
_08078C40: .4byte 0x0000020B

	thumb_func_start unk_78c44
unk_78c44: @ 0x08078C44
	push {r4, r5, lr}
	ldr r2, _08078C60 @ =gNonGameplayRam
	ldrh r0, [r2, #4]
	movs r1, #6
	ands r1, r0
	cmp r1, #0
	bne _08078C64
	movs r3, #0x8f
	lsls r3, r3, #2
	adds r0, r2, r3
	strb r1, [r0]
	adds r3, #1
	adds r0, r2, r3
	b _08078E96
	.align 2, 0
_08078C60: .4byte gNonGameplayRam
_08078C64:
	ldr r1, _08078C88 @ =0x0000023D
	adds r0, r2, r1
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	movs r3, #0x8f
	lsls r3, r3, #2
	adds r0, r2, r3
	ldrb r0, [r0]
	cmp r0, #8
	bls _08078C7C
	b _08078E76
_08078C7C:
	lsls r0, r0, #2
	ldr r1, _08078C8C @ =_08078C90
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08078C88: .4byte 0x0000023D
_08078C8C: .4byte _08078C90
_08078C90: @ jump table
	.4byte _08078CB4 @ case 0
	.4byte _08078CDC @ case 1
	.4byte _08078D18 @ case 2
	.4byte _08078D50 @ case 3
	.4byte _08078DA8 @ case 4
	.4byte _08078DCC @ case 5
	.4byte _08078DFC @ case 6
	.4byte _08078E34 @ case 7
	.4byte _08078E76 @ case 8
_08078CB4:
	ldr r1, _08078CD4 @ =gNonGameplayRam
	ldr r0, _08078CD8 @ =0x0000023D
	adds r3, r1, r0
	ldrb r0, [r3]
	cmp r0, #0x10
	bhi _08078CC2
	b _08078E76
_08078CC2:
	movs r2, #0x8f
	lsls r2, r2, #2
	adds r0, r1, r2
	ldrb r1, [r0]
	adds r1, #1
	movs r2, #0
	strb r1, [r0]
	strb r2, [r3]
	b _08078E76
	.align 2, 0
_08078CD4: .4byte gNonGameplayRam
_08078CD8: .4byte 0x0000023D
_08078CDC:
	ldr r5, _08078D10 @ =gNonGameplayRam
	adds r1, r5, #0
	adds r1, #0x8e
	movs r4, #0
	movs r0, #0x74
	strh r0, [r1]
	subs r1, #2
	movs r0, #0x1c
	strh r0, [r1]
	movs r0, #2
	bl unk_78af0
	movs r0, #2
	bl MapScreenDrawSpecialOam
	movs r3, #0x8f
	lsls r3, r3, #2
	adds r1, r5, r3
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _08078D14 @ =0x0000023D
	adds r0, r5, r1
	strb r4, [r0]
	b _08078E76
	.align 2, 0
_08078D10: .4byte gNonGameplayRam
_08078D14: .4byte 0x0000023D
_08078D18:
	ldr r3, _08078D4C @ =gNonGameplayRam
	adds r0, r3, #0
	adds r0, #0x97
	ldrb r1, [r0]
	movs r2, #0x10
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _08078D2C
	b _08078E76
_08078D2C:
	adds r0, r3, #0
	adds r0, #0xa3
	ldrb r1, [r0]
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _08078D3C
	b _08078E76
_08078D3C:
	movs r2, #0x8f
	lsls r2, r2, #2
	adds r1, r3, r2
	ldrb r0, [r1]
	adds r0, #1
	movs r2, #0
	b _08078DEA
	.align 2, 0
_08078D4C: .4byte gNonGameplayRam
_08078D50:
	ldr r3, _08078D9C @ =gNonGameplayRam
	ldr r2, _08078DA0 @ =0x0000023D
	adds r4, r3, r2
	ldrb r0, [r4]
	cmp r0, #0x10
	bhi _08078D5E
	b _08078E76
_08078D5E:
	ldrh r1, [r3, #4]
	movs r0, #0x10
	movs r2, #0
	orrs r0, r1
	strh r0, [r3, #4]
	adds r1, r3, #0
	adds r1, #0x46
	movs r0, #8
	strh r0, [r1]
	ldr r0, _08078DA4 @ =0x085766E0
	ldrb r1, [r0, #2]
	adds r0, r3, #0
	adds r0, #0x44
	strh r1, [r0]
	adds r1, r3, #0
	adds r1, #0x4e
	movs r0, #0xb
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x4c
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	adds r1, r3, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	strb r2, [r4]
	b _08078E76
	.align 2, 0
_08078D9C: .4byte gNonGameplayRam
_08078DA0: .4byte 0x0000023D
_08078DA4: .4byte 0x085766E0
_08078DA8:
	ldr r3, _08078DC8 @ =gNonGameplayRam
	ldrh r1, [r3, #4]
	movs r0, #0x10
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	bne _08078E76
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r0, r3, r1
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	b _08078DEC
	.align 2, 0
_08078DC8: .4byte gNonGameplayRam
_08078DCC:
	movs r0, #3
	bl unk_78af0
	ldr r3, _08078DF4 @ =gNonGameplayRam
	adds r0, r3, #0
	adds r0, #0x4e
	movs r2, #0
	strb r2, [r0]
	adds r0, #0x30
	strb r2, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	adds r1, r3, r0
	ldrb r0, [r1]
	adds r0, #1
_08078DEA:
	strb r0, [r1]
_08078DEC:
	ldr r1, _08078DF8 @ =0x0000023D
	adds r0, r3, r1
	strb r2, [r0]
	b _08078E76
	.align 2, 0
_08078DF4: .4byte gNonGameplayRam
_08078DF8: .4byte 0x0000023D
_08078DFC:
	ldr r2, _08078E2C @ =gNonGameplayRam
	adds r0, r2, #0
	adds r0, #0x96
	ldrb r0, [r0]
	cmp r0, #0
	bne _08078E76
	adds r0, r2, #0
	adds r0, #0xa2
	ldrb r3, [r0]
	cmp r3, #0
	bne _08078E76
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	ldr r1, _08078E30 @ =0x0000023D
	adds r0, r2, r1
	strb r3, [r0]
	movs r0, #1
	bl MapScreenDrawSpecialOam
	b _08078E76
	.align 2, 0
_08078E2C: .4byte gNonGameplayRam
_08078E30: .4byte 0x0000023D
_08078E34:
	ldr r3, _08078E60 @ =gNonGameplayRam
	ldr r2, _08078E64 @ =0x0000023D
	adds r4, r3, r2
	ldrb r0, [r4]
	cmp r0, #0x10
	bls _08078E76
	movs r0, #0x8f
	lsls r0, r0, #2
	adds r2, r3, r0
	ldrb r0, [r2]
	adds r0, #1
	movs r1, #0
	strb r0, [r2]
	strb r1, [r4]
	ldrh r1, [r3, #4]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08078E68
	movs r0, #2
	b _08078E72
	.align 2, 0
_08078E60: .4byte gNonGameplayRam
_08078E64: .4byte 0x0000023D
_08078E68:
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08078E76
	movs r0, #4
_08078E72:
	eors r0, r1
	strh r0, [r3, #4]
_08078E76:
	ldr r2, _08078EA0 @ =gNonGameplayRam
	ldrb r0, [r2, #0x1b]
	cmp r0, #1
	bls _08078E98
	adds r3, r2, #0
	adds r3, #0x8a
	ldrb r0, [r3]
	cmp r0, #0x64
	bne _08078E98
	adds r0, #1
	movs r1, #0
	strb r0, [r3]
	adds r0, r2, #0
	adds r0, #0x88
	strb r1, [r0]
	adds r0, #1
_08078E96:
	strb r1, [r0]
_08078E98:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08078EA0: .4byte gNonGameplayRam

	thumb_func_start NavigationConversationUpdatePanel
NavigationConversationUpdatePanel: @ 0x08078EA4
	push {r4, r5, lr}
	ldr r1, _08078EC0 @ =gNonGameplayRam
	ldrh r0, [r1, #4]
	movs r2, #1
	ands r2, r0
	adds r5, r1, #0
	cmp r2, #0
	bne _08078EC4
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r5, r1
	strb r2, [r0]
	b _080790A8
	.align 2, 0
_08078EC0: .4byte gNonGameplayRam
_08078EC4:
	ldr r1, _08078EE8 @ =0x00000239
	adds r0, r5, r1
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	movs r2, #0x8e
	lsls r2, r2, #2
	adds r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #0xd
	bls _08078EDC
	b _0807910E
_08078EDC:
	lsls r0, r0, #2
	ldr r1, _08078EEC @ =_08078EF0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08078EE8: .4byte 0x00000239
_08078EEC: .4byte _08078EF0
_08078EF0: @ jump table
	.4byte _08078F28 @ case 0
	.4byte _08078F3E @ case 1
	.4byte _08078F60 @ case 2
	.4byte _0807908C @ case 3
	.4byte _08078F68 @ case 4
	.4byte _08078F90 @ case 5
	.4byte _08078FE0 @ case 6
	.4byte _08079038 @ case 7
	.4byte _08079060 @ case 8
	.4byte _08079066 @ case 9
	.4byte _0807908C @ case 10
	.4byte _080790B4 @ case 11
	.4byte _080790EC @ case 12
	.4byte _0807910E @ case 13
_08078F28:
	adds r1, r5, #0
	adds r1, #0x5c
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0x7c
	bne _08078F38
	b _080790D0
_08078F38:
	adds r0, r2, #0
	subs r0, #8
	b _080790C6
_08078F3E:
	ldr r2, _08078F5C @ =0x00000239
	adds r3, r5, r2
	ldrb r0, [r3]
	cmp r0, #8
	bhi _08078F4A
	b _0807910E
_08078F4A:
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r5, r1
	ldrb r1, [r0]
	adds r1, #1
	movs r2, #0
	strb r1, [r0]
	b _0807910C
	.align 2, 0
_08078F5C: .4byte 0x00000239
_08078F60:
	movs r0, #2
	bl PauseScreenSetNavigationTextPanelOam
	b _08079040
_08078F68:
	movs r0, #3
	movs r1, #0x49
	bl UpdateMenuOamDataID
	ldr r1, _08078F88 @ =gNonGameplayRam
	movs r0, #0x8e
	lsls r0, r0, #2
	adds r2, r1, r0
	ldrb r0, [r2]
	adds r0, #1
	movs r3, #0
	strb r0, [r2]
	ldr r2, _08078F8C @ =0x00000239
	adds r1, r1, r2
	strb r3, [r1]
	b _0807910E
	.align 2, 0
_08078F88: .4byte gNonGameplayRam
_08078F8C: .4byte 0x00000239
_08078F90:
	adds r0, r5, #0
	adds r0, #0x5b
	ldrb r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _08078FA0
	b _0807910E
_08078FA0:
	ldrh r1, [r5, #4]
	movs r0, #8
	movs r2, #0
	orrs r0, r1
	strh r0, [r5, #4]
	movs r0, #8
	strh r0, [r5, #0x3a]
	ldr r0, _08078FDC @ =0x085766E0
	ldrb r0, [r0]
	strh r0, [r5, #0x38]
	adds r0, r5, #0
	adds r0, #0x40
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	ldrb r0, [r5, #0x1c]
	cmp r0, #5
	beq _08078FCC
	adds r1, r5, #0
	adds r1, #0x42
	movs r0, #0xb
	strb r0, [r1]
_08078FCC:
	movs r3, #0x8e
	lsls r3, r3, #2
	adds r0, r5, r3
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	b _080790DE
	.align 2, 0
_08078FDC: .4byte 0x085766E0
_08078FE0:
	ldr r2, _08079004 @ =gNonGameplayRam
	ldrh r1, [r2, #4]
	movs r0, #8
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	bne _0807900C
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	ldr r1, _08079008 @ =0x00000239
	adds r0, r2, r1
	strb r3, [r0]
	b _0807901E
	.align 2, 0
_08079004: .4byte gNonGameplayRam
_08079008: .4byte 0x00000239
_0807900C:
	ldr r3, _08079030 @ =0x00000239
	adds r0, r2, r3
	ldrb r0, [r0]
	cmp r0, #0x10
	bne _0807901E
	movs r0, #3
	movs r1, #0x4c
	bl UpdateMenuOamDataID
_0807901E:
	ldr r0, _08079034 @ =gNonGameplayRam
	ldr r2, _08079030 @ =0x00000239
	adds r1, r0, r2
	ldrb r0, [r1]
	cmp r0, #0x3c
	bls _0807910E
	movs r0, #0x3c
	strb r0, [r1]
	b _0807910E
	.align 2, 0
_08079030: .4byte 0x00000239
_08079034: .4byte gNonGameplayRam
_08079038:
	movs r0, #3
	movs r1, #0x4a
	bl UpdateMenuOamDataID
_08079040:
	ldr r1, _08079058 @ =gNonGameplayRam
	movs r3, #0x8e
	lsls r3, r3, #2
	adds r2, r1, r3
	ldrb r0, [r2]
	adds r0, #1
	movs r3, #0
	strb r0, [r2]
	ldr r0, _0807905C @ =0x00000239
	adds r1, r1, r0
	strb r3, [r1]
	b _0807910E
	.align 2, 0
_08079058: .4byte gNonGameplayRam
_0807905C: .4byte 0x00000239
_08079060:
	adds r0, r5, #0
	adds r0, #0x5b
	b _08079090
_08079066:
	adds r0, r5, #0
	adds r0, #0x42
	movs r4, #0
	strb r4, [r0]
	movs r0, #3
	bl PauseScreenSetNavigationTextPanelOam
	movs r0, #0x8e
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _08079088 @ =0x00000239
	adds r0, r5, r1
	strb r4, [r0]
	b _0807910E
	.align 2, 0
_08079088: .4byte 0x00000239
_0807908C:
	adds r0, r5, #0
	adds r0, #0x67
_08079090:
	ldrb r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0807910E
	movs r2, #0x8e
	lsls r2, r2, #2
	adds r1, r5, r2
	ldrb r0, [r1]
	adds r0, #1
	movs r2, #0
	strb r0, [r1]
_080790A8:
	ldr r3, _080790B0 @ =0x00000239
	adds r0, r5, r3
	strb r2, [r0]
	b _0807910E
	.align 2, 0
_080790B0: .4byte 0x00000239
_080790B4:
	adds r1, r5, #0
	adds r1, #0x5c
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0xcc
	beq _080790D0
	adds r0, r2, #0
	adds r0, #8
_080790C6:
	strh r0, [r1]
	movs r0, #0
	bl PauseScreenSetNavigationTextPanelOam
	b _0807910E
_080790D0:
	movs r0, #0x8e
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrb r0, [r1]
	adds r0, #1
	movs r2, #0
	strb r0, [r1]
_080790DE:
	ldr r1, _080790E8 @ =0x00000239
	adds r0, r5, r1
	strb r2, [r0]
	b _0807910E
	.align 2, 0
_080790E8: .4byte 0x00000239
_080790EC:
	ldr r2, _08079114 @ =0x00000239
	adds r3, r5, r2
	ldrb r0, [r3]
	cmp r0, #8
	bls _0807910E
	ldrh r0, [r5, #4]
	movs r1, #1
	eors r0, r1
	movs r2, #0
	strh r0, [r5, #4]
	movs r0, #0x8e
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0807910C:
	strb r2, [r3]
_0807910E:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08079114: .4byte 0x00000239

	thumb_func_start GetCharacterWidth
GetCharacterWidth: @ 0x08079118
	push {lr}
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0807912C @ =0x0000049F
	cmp r1, r0
	bhi _08079134
	ldr r0, _08079130 @ =0x08576234
	adds r0, r1, r0
	ldrb r0, [r0]
	b _08079136
	.align 2, 0
_0807912C: .4byte 0x0000049F
_08079130: .4byte 0x08576234
_08079134:
	movs r0, #0xa
_08079136:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start DrawCharacter
DrawCharacter: @ 0x0807913C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	ldr r4, [sp, #0x3c]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	str r2, [sp, #4]
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	str r3, [sp, #8]
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	str r4, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r0, #0
	mov r8, r0
	adds r0, r2, #0
	subs r0, #8
	lsls r0, r0, #2
	str r0, [sp, #0x14]
_08079170:
	ldr r6, _080791D4 @ =0x02035DA0
	mov r1, r8
	cmp r1, #0
	beq _0807917A
	adds r6, #0x40
_0807917A:
	ldr r2, [sp]
	lsls r1, r2, #5
	mov r3, r8
	lsls r0, r3, #0xa
	adds r3, r1, r0
	movs r1, #0x20
	ldr r4, [sp, #4]
	cmp r4, #8
	bls _0807918E
	movs r1, #0x40
_0807918E:
	mov r0, r8
	lsls r0, r0, #8
	mov sb, r0
	mov r2, r8
	adds r2, #1
	str r2, [sp, #0x18]
	cmp r1, #0
	beq _080791E8
	ldr r7, _080791D8 @ =0x08682FAC
	adds r5, r1, #0
_080791A2:
	adds r0, r3, r7
	ldrb r4, [r0]
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _080791DC
	movs r2, #0xf
	ands r2, r4
	movs r1, #0xf0
	ands r1, r4
	subs r0, r2, #2
	cmp r0, #1
	bhi _080791C0
	ldr r4, [sp, #0xc]
	lsls r0, r4, #1
	adds r2, r2, r0
_080791C0:
	cmp r1, #0x20
	beq _080791C8
	cmp r1, #0x30
	bne _080791CE
_080791C8:
	ldr r4, [sp, #0xc]
	lsls r0, r4, #5
	adds r1, r1, r0
_080791CE:
	orrs r1, r2
	strb r1, [r6]
	b _080791DE
	.align 2, 0
_080791D4: .4byte 0x02035DA0
_080791D8: .4byte 0x08682FAC
_080791DC:
	strb r4, [r6]
_080791DE:
	subs r5, #1
	adds r6, #1
	adds r3, #1
	cmp r5, #0
	bne _080791A2
_080791E8:
	ldr r0, _08079290 @ =0x02035DA0
	mov sl, r0
	mov r1, r8
	cmp r1, #0
	beq _080791F6
	ldr r2, _08079294 @ =0x02035DE0
	mov sl, r2
_080791F6:
	ldr r3, [sp, #4]
	cmp r3, #8
	bls _08079216
	ldr r0, _08079298 @ =0x0879C128
	ldr r4, [sp, #0x14]
	adds r5, r4, r0
	mov r2, sl
	adds r2, #0x20
	movs r3, #7
_08079208:
	ldr r0, [r2]
	ldr r1, [r5]
	ands r0, r1
	stm r2!, {r0}
	subs r3, #1
	cmp r3, #0
	bge _08079208
_08079216:
	mov r4, sb
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _080792C4
	lsls r6, r0, #2
	ldr r1, [sp, #4]
	adds r1, r1, r0
	mov sb, r1
	mov ip, r6
	movs r0, #0x20
	subs r7, r0, r6
	mov r2, r8
	lsls r0, r2, #0xa
	ldr r3, [sp, #0x10]
	adds r2, r0, r3
	mov r5, sl
	movs r3, #7
_08079238:
	ldr r1, [r5]
	mov r0, ip
	lsls r1, r0
	ldr r0, [r2]
	orrs r0, r1
	str r0, [r2]
	ldm r5!, {r1}
	lsrs r1, r7
	ldr r0, [r2, #0x20]
	orrs r0, r1
	str r0, [r2, #0x20]
	adds r2, #4
	subs r3, #1
	cmp r3, #0
	bge _08079238
	mov r1, sb
	cmp r1, #0x10
	ble _0807929C
	adds r5, r6, #0
	movs r0, #0x20
	subs r6, r0, r5
	lsls r0, r4, #2
	ldr r2, [sp, #0x10]
	adds r0, r0, r2
	adds r2, r0, #0
	adds r2, #0x20
	mov r4, sl
	adds r4, #0x20
	movs r3, #7
_08079272:
	ldr r1, [r4]
	lsls r1, r5
	ldr r0, [r2]
	orrs r0, r1
	str r0, [r2]
	ldm r4!, {r1}
	lsrs r1, r6
	ldr r0, [r2, #0x20]
	orrs r0, r1
	str r0, [r2, #0x20]
	adds r2, #4
	subs r3, #1
	cmp r3, #0
	bge _08079272
	b _080792EC
	.align 2, 0
_08079290: .4byte 0x02035DA0
_08079294: .4byte 0x02035DE0
_08079298: .4byte 0x0879C128
_0807929C:
	ldr r3, [sp, #4]
	cmp r3, #8
	bls _080792EC
	lsls r0, r4, #2
	ldr r4, [sp, #0x10]
	adds r0, r0, r4
	adds r2, r0, #0
	adds r2, #0x20
	mov r5, sl
	adds r5, #0x20
	movs r3, #7
_080792B2:
	ldm r5!, {r1}
	lsls r1, r6
	ldr r0, [r2]
	orrs r0, r1
	stm r2!, {r0}
	subs r3, #1
	cmp r3, #0
	bge _080792B2
	b _080792EC
_080792C4:
	movs r1, #8
	ldr r0, [sp, #4]
	cmp r0, #8
	bls _080792CE
	movs r1, #0x10
_080792CE:
	cmp r1, #0
	beq _080792EC
	mov r2, r8
	lsls r0, r2, #0xa
	ldr r3, [sp, #0x10]
	adds r2, r0, r3
	mov r5, sl
	adds r3, r1, #0
_080792DE:
	ldr r0, [r2]
	ldm r5!, {r1}
	orrs r0, r1
	stm r2!, {r0}
	subs r3, #1
	cmp r3, #0
	bne _080792DE
_080792EC:
	ldr r4, [sp, #0x18]
	mov r8, r4
	cmp r4, #1
	bgt _080792F6
	b _08079170
_080792F6:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start DrawCharacterDebugMenu
DrawCharacterDebugMenu: @ 0x08079308
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	str r1, [sp]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r2, r2, #0x18
	lsrs r6, r2, #0x18
	cmp r6, #0
	beq _080793B4
	movs r3, #0
	lsls r0, r0, #5
	mov sb, r0
	ldr r0, _08079354 @ =0x08682FAC
	mov sl, r0
	ldr r1, _08079358 @ =0x040000D4
	mov r8, r1
_08079330:
	lsls r0, r3, #0xa
	mov r1, sb
	adds r2, r1, r0
	ldr r5, _0807935C @ =0x02035DA0
	adds r7, r0, #0
	adds r3, #1
	mov ip, r3
	movs r4, #0x1f
	add r2, sl
_08079342:
	ldrb r0, [r2]
	movs r1, #0xf
	ands r1, r0
	subs r0, r1, #2
	cmp r0, #1
	bhi _08079360
	lsls r0, r6, #1
	adds r1, r1, r0
	b _08079366
	.align 2, 0
_08079354: .4byte 0x08682FAC
_08079358: .4byte 0x040000D4
_0807935C: .4byte 0x02035DA0
_08079360:
	cmp r1, #0
	bne _08079366
	movs r1, #0xf
_08079366:
	ldrb r0, [r2]
	movs r3, #0xf0
	ands r3, r0
	cmp r3, #0x20
	beq _08079374
	cmp r3, #0x30
	bne _0807937A
_08079374:
	lsls r0, r6, #5
	adds r3, r3, r0
	b _08079380
_0807937A:
	cmp r3, #0
	bne _08079380
	movs r3, #0xf0
_08079380:
	orrs r3, r1
	strb r3, [r5]
	subs r4, #1
	adds r5, #1
	adds r2, #1
	cmp r4, #0
	bge _08079342
	ldr r0, _080793AC @ =0x02035DA0
	mov r1, r8
	str r0, [r1]
	ldr r1, [sp]
	adds r0, r1, r7
	mov r1, r8
	str r0, [r1, #4]
	ldr r0, _080793B0 @ =0x84000008
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	mov r3, ip
	cmp r3, #1
	ble _08079330
	b _08079416
	.align 2, 0
_080793AC: .4byte 0x02035DA0
_080793B0: .4byte 0x84000008
_080793B4:
	movs r3, #0
	lsls r0, r0, #5
	str r0, [sp, #4]
	ldr r0, _08079428 @ =0x08682FAC
	mov sl, r0
	ldr r6, _0807942C @ =0x040000D4
	movs r1, #0xf
	mov sb, r1
	movs r0, #0xf0
	mov r8, r0
_080793C8:
	lsls r0, r3, #0xa
	ldr r1, [sp, #4]
	adds r2, r1, r0
	ldr r5, _08079430 @ =0x02035DA0
	adds r7, r0, #0
	adds r3, #1
	mov ip, r3
	movs r4, #0x1f
_080793D8:
	mov r1, sl
	adds r0, r2, r1
	ldrb r0, [r0]
	mov r1, sb
	ands r1, r0
	cmp r1, #0
	bne _080793E8
	movs r1, #0xf
_080793E8:
	mov r3, r8
	ands r3, r0
	cmp r3, #0
	bne _080793F2
	movs r3, #0xf0
_080793F2:
	orrs r3, r1
	strb r3, [r5]
	subs r4, #1
	adds r5, #1
	adds r2, #1
	cmp r4, #0
	bge _080793D8
	ldr r0, _08079430 @ =0x02035DA0
	str r0, [r6]
	ldr r1, [sp]
	adds r0, r1, r7
	str r0, [r6, #4]
	ldr r0, _08079434 @ =0x84000008
	str r0, [r6, #8]
	ldr r0, [r6, #8]
	mov r3, ip
	cmp r3, #1
	ble _080793C8
_08079416:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08079428: .4byte 0x08682FAC
_0807942C: .4byte 0x040000D4
_08079430: .4byte 0x02035DA0
_08079434: .4byte 0x84000008

	thumb_func_start DrawCharacterForMessage
DrawCharacterForMessage: @ 0x08079438
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	ldr r4, [sp, #0x48]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	str r2, [sp, #4]
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	str r3, [sp, #8]
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	str r4, [sp, #0xc]
	str r1, [sp, #0x14]
	movs r0, #0
	mov ip, r0
	movs r0, #8
	subs r0, r0, r3
	lsls r0, r0, #2
	str r0, [sp, #0x18]
_0807946C:
	ldr r6, _080794C8 @ =0x02035DA0
	mov r1, ip
	cmp r1, #0
	beq _08079476
	adds r6, #0x40
_08079476:
	ldr r2, [sp]
	lsls r1, r2, #5
	mov r3, ip
	lsls r0, r3, #0xa
	adds r3, r1, r0
	movs r1, #0x20
	ldr r4, [sp, #4]
	cmp r4, #8
	bls _0807948A
	movs r1, #0x40
_0807948A:
	mov r7, ip
	lsls r7, r7, #8
	mov sb, r7
	mov r0, ip
	adds r0, #1
	str r0, [sp, #0x20]
	cmp r1, #0
	beq _08079508
	movs r7, #0xf
	movs r2, #0xf0
	mov r8, r2
	ldr r4, _080794CC @ =0x08682FAC
	mov sl, r4
	adds r5, r1, #0
_080794A6:
	mov r1, sl
	adds r0, r3, r1
	ldrb r4, [r0]
	ldr r2, [sp, #0xc]
	cmp r2, #0
	beq _080794E6
	adds r2, r4, #0
	ands r2, r7
	mov r1, r8
	ands r1, r4
	subs r0, r2, #2
	cmp r0, #1
	bhi _080794D0
	ldr r4, [sp, #0xc]
	lsls r0, r4, #1
	adds r2, r2, r0
	b _080794D6
	.align 2, 0
_080794C8: .4byte 0x02035DA0
_080794CC: .4byte 0x08682FAC
_080794D0:
	cmp r2, #0
	bne _080794D6
	movs r2, #0xf
_080794D6:
	cmp r1, #0x20
	beq _080794DE
	cmp r1, #0x30
	bne _080794F4
_080794DE:
	ldr r4, [sp, #0xc]
	lsls r0, r4, #5
	adds r1, r1, r0
	b _080794FA
_080794E6:
	adds r2, r4, #0
	ands r2, r7
	mov r1, r8
	ands r1, r4
	cmp r2, #0
	bne _080794F4
	movs r2, #0xf
_080794F4:
	cmp r1, #0
	bne _080794FA
	movs r1, #0xf0
_080794FA:
	orrs r1, r2
	strb r1, [r6]
	subs r5, #1
	adds r6, #1
	adds r3, #1
	cmp r5, #0
	bne _080794A6
_08079508:
	ldr r7, _080795C8 @ =0x02035DA0
	str r7, [sp, #0x10]
	mov r0, ip
	cmp r0, #0
	beq _08079516
	ldr r1, _080795CC @ =0x02035DE0
	str r1, [sp, #0x10]
_08079516:
	mov r4, sb
	ldr r2, [sp, #8]
	cmp r2, #0
	beq _08079610
	lsls r6, r2, #2
	ldr r3, [sp, #4]
	adds r3, r3, r2
	str r3, [sp, #0x1c]
	mov sl, r6
	ldr r7, _080795D0 @ =0x0879C128
	adds r7, r7, r6
	mov sb, r7
	movs r0, #0x20
	subs r0, r0, r6
	mov r8, r0
	ldr r0, [sp, #0x18]
	ldr r1, _080795D4 @ =0x0879C14C
	adds r0, r0, r1
	str r0, [sp, #0x24]
	mov r2, ip
	lsls r0, r2, #0xa
	ldr r3, [sp, #0x14]
	adds r2, r0, r3
	ldr r5, [sp, #0x10]
	movs r3, #7
_08079548:
	ldr r1, [r5]
	mov r7, sl
	lsls r1, r7
	mov r7, sb
	ldr r0, [r7]
	orrs r1, r0
	ldr r0, [r2]
	ands r0, r1
	str r0, [r2]
	ldm r5!, {r1}
	mov r0, r8
	lsrs r1, r0
	ldr r7, [sp, #0x24]
	ldr r0, [r7]
	orrs r1, r0
	ldr r0, [r2, #0x20]
	ands r0, r1
	str r0, [r2, #0x20]
	adds r2, #4
	subs r3, #1
	cmp r3, #0
	bge _08079548
	ldr r0, [sp, #0x1c]
	cmp r0, #0x10
	ble _080795D8
	adds r5, r6, #0
	ldr r1, _080795D0 @ =0x0879C128
	adds r1, r1, r5
	mov r8, r1
	movs r0, #0x20
	subs r0, r0, r5
	mov sb, r0
	ldr r2, [sp, #0x18]
	ldr r3, _080795D4 @ =0x0879C14C
	adds r6, r2, r3
	lsls r0, r4, #2
	ldr r4, [sp, #0x14]
	adds r0, r0, r4
	adds r2, r0, #0
	adds r2, #0x20
	ldr r4, [sp, #0x10]
	adds r4, #0x20
	movs r3, #7
_0807959E:
	ldr r1, [r4]
	lsls r1, r5
	mov r7, r8
	ldr r0, [r7]
	orrs r1, r0
	ldr r0, [r2]
	ands r0, r1
	str r0, [r2]
	ldm r4!, {r1}
	mov r0, sb
	lsrs r1, r0
	ldr r0, [r6]
	orrs r1, r0
	ldr r0, [r2, #0x20]
	ands r0, r1
	str r0, [r2, #0x20]
	adds r2, #4
	subs r3, #1
	cmp r3, #0
	bge _0807959E
	b _08079638
	.align 2, 0
_080795C8: .4byte 0x02035DA0
_080795CC: .4byte 0x02035DE0
_080795D0: .4byte 0x0879C128
_080795D4: .4byte 0x0879C14C
_080795D8:
	ldr r1, [sp, #4]
	cmp r1, #8
	bls _08079638
	adds r5, r6, #0
	ldr r2, _0807960C @ =0x0879C128
	adds r7, r5, r2
	lsls r0, r4, #2
	ldr r3, [sp, #0x14]
	adds r0, r0, r3
	adds r2, r0, #0
	adds r2, #0x20
	ldr r6, [sp, #0x10]
	adds r6, #0x20
	movs r3, #7
_080795F4:
	ldm r6!, {r0}
	lsls r0, r5
	ldr r1, [r7]
	orrs r0, r1
	ldr r1, [r2]
	ands r1, r0
	stm r2!, {r1}
	subs r3, #1
	cmp r3, #0
	bge _080795F4
	b _08079638
	.align 2, 0
_0807960C: .4byte 0x0879C128
_08079610:
	movs r1, #8
	ldr r4, [sp, #4]
	cmp r4, #8
	bls _0807961A
	movs r1, #0x10
_0807961A:
	cmp r1, #0
	beq _08079638
	mov r7, ip
	lsls r0, r7, #0xa
	ldr r3, [sp, #0x14]
	adds r2, r0, r3
	ldr r5, [sp, #0x10]
	adds r3, r1, #0
_0807962A:
	ldr r0, [r2]
	ldm r5!, {r1}
	ands r0, r1
	stm r2!, {r0}
	subs r3, #1
	cmp r3, #0
	bne _0807962A
_08079638:
	ldr r4, [sp, #0x20]
	mov ip, r4
	cmp r4, #1
	bgt _08079642
	b _0807946C
_08079642:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start DrawLocationTextCharacters
DrawLocationTextCharacters: @ 0x08079654
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r5, r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08079672
	movs r0, #0x80
	lsls r0, r0, #0x12
	mov sb, r0
	b _0807969C
_08079672:
	cmp r0, #2
	bne _08079730
	ldr r1, _080796D4 @ =0x02000800
	mov sb, r1
	ldr r2, [r5]
	ldrh r0, [r2]
	movs r1, #0xfe
	lsls r1, r1, #8
	cmp r0, r1
	beq _08079696
	adds r3, r1, #0
_08079688:
	adds r0, r2, #0
	adds r1, r0, #2
	adds r2, r1, #0
	ldrh r0, [r0, #2]
	cmp r0, r3
	bne _08079688
	str r1, [r5]
_08079696:
	ldr r0, [r5]
	adds r0, #2
	str r0, [r5]
_0807969C:
	movs r6, #0
	ldr r3, [r5]
	movs r2, #0xff
	lsls r2, r2, #8
	adds r7, r2, #0
	ldrh r1, [r3]
	cmp r1, r7
	beq _08079730
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r1, r0
	beq _08079730
	movs r4, #0x80
	lsls r4, r4, #8
	mov sl, r4
_080796BA:
	movs r4, #1
	ldrh r2, [r3]
	adds r1, r7, #0
	ands r1, r2
	cmp r1, sl
	bne _080796D8
	movs r0, #0xff
	mov r8, r0
	mov r1, r8
	ands r1, r2
	mov r8, r1
	b _08079712
	.align 2, 0
_080796D4: .4byte 0x02000800
_080796D8:
	movs r0, #0x83
	lsls r0, r0, #8
	cmp r1, r0
	bne _080796E8
	movs r4, #0
	mov r8, r4
	movs r6, #0xff
	ands r6, r2
_080796E8:
	cmp r4, #0
	beq _08079712
	ldrh r0, [r3]
	bl GetCharacterWidth
	mov r8, r0
	asrs r0, r6, #3
	lsls r4, r0, #5
	movs r3, #7
	ldr r0, [r5]
	ldrh r0, [r0]
	mov r2, sb
	adds r1, r2, r4
	mov r4, r8
	lsls r2, r4, #0x18
	lsrs r2, r2, #0x18
	ands r3, r6
	movs r4, #0
	str r4, [sp]
	bl DrawCharacterForMessage
_08079712:
	ldr r0, [r5]
	adds r2, r0, #2
	str r2, [r5]
	add r6, r8
	movs r1, #0xff
	lsls r1, r1, #8
	adds r7, r1, #0
	ldrh r1, [r0, #2]
	cmp r1, r7
	beq _08079730
	adds r3, r2, #0
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r1, r0
	bne _080796BA
_08079730:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start DrawLocationText
DrawLocationText: @ 0x08079740
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r1, #0
	lsls r0, r0, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	mov r2, sp
	ldr r3, _080797AC @ =0x0000FFFF
	adds r1, r3, #0
	strh r1, [r2]
	ldr r4, _080797B0 @ =0x040000D4
	str r2, [r4]
	movs r6, #0x80
	lsls r6, r6, #0x12
	str r6, [r4, #4]
	ldr r1, _080797B4 @ =0x81000400
	str r1, [r4, #8]
	ldr r1, [r4, #8]
	ldr r2, _080797B8 @ =0x0879CDD8
	ldr r1, _080797BC @ =0x03000011
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	lsls r1, r1, #2
	adds r1, r1, r2
	ldr r1, [r1]
	lsrs r0, r0, #0x16
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [sp, #4]
	add r1, sp, #4
	movs r0, #1
	bl DrawLocationTextCharacters
	str r6, [r4]
	lsls r5, r5, #0xb
	ldr r1, _080797C0 @ =0x06014000
	adds r0, r5, r1
	str r0, [r4, #4]
	ldr r1, _080797C4 @ =0x840000E0
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080797C8 @ =0x02000400
	str r0, [r4]
	ldr r3, _080797CC @ =0x06014400
	adds r5, r5, r3
	str r5, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080797AC: .4byte 0x0000FFFF
_080797B0: .4byte 0x040000D4
_080797B4: .4byte 0x81000400
_080797B8: .4byte 0x0879CDD8
_080797BC: .4byte 0x03000011
_080797C0: .4byte 0x06014000
_080797C4: .4byte 0x840000E0
_080797C8: .4byte 0x02000400
_080797CC: .4byte 0x06014400

	thumb_func_start TextDrawMessageBanner
TextDrawMessageBanner: @ 0x080797D0
	push {r4, lr}
	sub sp, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r3, r2, #0x18
	movs r1, #0xfc
	lsls r1, r1, #0x18
	adds r2, r2, r1
	lsrs r2, r2, #0x18
	cmp r2, #1
	bhi _0807980E
	adds r2, r0, #0
	cmp r2, #0x15
	ble _080797F4
	movs r2, #0x15
_080797F4:
	adds r2, #0x15
	ldr r1, _0807981C @ =0x0879CDF4
	ldr r0, _08079820 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	lsls r0, r2, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [sp, #4]
_0807980E:
	cmp r3, #7
	bne _08079828
	ldr r1, _08079824 @ =0x0000FFFF
	movs r2, #0x80
	lsls r2, r2, #0x12
	b _08079830
	.align 2, 0
_0807981C: .4byte 0x0879CDF4
_08079820: .4byte 0x03000011
_08079824: .4byte 0x0000FFFF
_08079828:
	cmp r3, #6
	bne _08079848
	ldr r1, _08079840 @ =0x0000FFFF
	ldr r2, _08079844 @ =0x02000800
_08079830:
	movs r3, #0x80
	lsls r3, r3, #4
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl BitFill
	b _080798C8
	.align 2, 0
_08079840: .4byte 0x0000FFFF
_08079844: .4byte 0x02000800
_08079848:
	cmp r3, #5
	bne _08079850
	movs r0, #1
	b _08079856
_08079850:
	cmp r3, #4
	bne _0807985E
	movs r0, #2
_08079856:
	add r1, sp, #4
	bl DrawLocationTextCharacters
	b _080798C8
_0807985E:
	cmp r3, #3
	bne _08079878
	ldr r1, _08079870 @ =0x040000D4
	movs r0, #0x80
	lsls r0, r0, #0x12
	str r0, [r1]
	lsls r0, r4, #0xb
	ldr r2, _08079874 @ =0x06014000
	b _080798BE
	.align 2, 0
_08079870: .4byte 0x040000D4
_08079874: .4byte 0x06014000
_08079878:
	cmp r3, #2
	bne _08079894
	ldr r1, _08079888 @ =0x040000D4
	ldr r0, _0807988C @ =0x02000400
	str r0, [r1]
	lsls r0, r4, #0xb
	ldr r2, _08079890 @ =0x06014400
	b _080798BE
	.align 2, 0
_08079888: .4byte 0x040000D4
_0807988C: .4byte 0x02000400
_08079890: .4byte 0x06014400
_08079894:
	cmp r3, #1
	bne _080798B0
	ldr r1, _080798A4 @ =0x040000D4
	ldr r0, _080798A8 @ =0x02000800
	str r0, [r1]
	lsls r0, r4, #0xb
	ldr r2, _080798AC @ =0x06014800
	b _080798BE
	.align 2, 0
_080798A4: .4byte 0x040000D4
_080798A8: .4byte 0x02000800
_080798AC: .4byte 0x06014800
_080798B0:
	cmp r3, #0
	bne _080798C8
	ldr r1, _080798D0 @ =0x040000D4
	ldr r0, _080798D4 @ =0x02000C00
	str r0, [r1]
	lsls r0, r4, #0xb
	ldr r2, _080798D8 @ =0x06014C00
_080798BE:
	adds r0, r0, r2
	str r0, [r1, #4]
	ldr r0, _080798DC @ =0x840000E0
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_080798C8:
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080798D0: .4byte 0x040000D4
_080798D4: .4byte 0x02000C00
_080798D8: .4byte 0x06014C00
_080798DC: .4byte 0x840000E0

	thumb_func_start DisplayMessage
DisplayMessage: @ 0x080798E0
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r3, r1, #0x18
	movs r0, #0xfc
	lsls r0, r0, #0x18
	adds r1, r1, r0
	lsrs r1, r1, #0x18
	cmp r1, #1
	bhi _08079964
	movs r2, #0x12
	ldr r0, _0807992C @ =gEventCounter
	ldr r1, _08079930 @ =0x08575FA0
	ldrb r0, [r0]
	ldr r7, _08079934 @ =0x0879CDF4
	ldr r6, _08079938 @ =0x03000011
	ldrb r4, [r1, #0x12]
	cmp r0, r4
	beq _0807991C
	adds r4, r1, #0
	adds r1, r0, #0
_0807990E:
	subs r2, #1
	cmp r2, #0
	beq _08079940
	adds r0, r2, r4
	ldrb r0, [r0]
	cmp r1, r0
	bne _0807990E
_0807991C:
	cmp r2, #0
	beq _08079940
	ldr r1, _0807993C @ =0x08575FB4
	lsls r0, r2, #3
	adds r0, r0, r1
	ldrb r2, [r0, #4]
	b _08079952
	.align 2, 0
_0807992C: .4byte gEventCounter
_08079930: .4byte 0x08575FA0
_08079934: .4byte 0x0879CDF4
_08079938: .4byte 0x03000011
_0807993C: .4byte 0x08575FB4
_08079940:
	ldr r1, _08079970 @ =gEquipment
	ldrb r0, [r1, #0xd]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bhi _08079952
	ldrb r0, [r1, #0xd]
	subs r2, r0, #1
_08079952:
	movs r0, #0
	ldrsb r0, [r6, r0]
	lsls r0, r0, #2
	adds r0, r0, r7
	ldr r1, [r0]
	lsls r0, r2, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [sp, #4]
_08079964:
	cmp r3, #7
	bne _08079978
	ldr r1, _08079974 @ =0x0000FFFF
	movs r2, #0x80
	lsls r2, r2, #0x12
	b _08079980
	.align 2, 0
_08079970: .4byte gEquipment
_08079974: .4byte 0x0000FFFF
_08079978:
	cmp r3, #6
	bne _08079998
	ldr r1, _08079990 @ =0x0000FFFF
	ldr r2, _08079994 @ =0x02000800
_08079980:
	movs r3, #0x80
	lsls r3, r3, #4
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl BitFill
	b _08079A20
	.align 2, 0
_08079990: .4byte 0x0000FFFF
_08079994: .4byte 0x02000800
_08079998:
	cmp r3, #5
	bne _080799A0
	movs r0, #1
	b _080799A6
_080799A0:
	cmp r3, #4
	bne _080799AE
	movs r0, #2
_080799A6:
	add r1, sp, #4
	bl DrawLocationTextCharacters
	b _08079A20
_080799AE:
	cmp r3, #3
	bne _080799CC
	ldr r1, _080799C4 @ =0x040000D4
	movs r0, #0x80
	lsls r0, r0, #0x12
	str r0, [r1]
	lsls r0, r5, #0xb
	ldr r2, _080799C8 @ =0x06014000
	adds r0, r0, r2
	b _08079A18
	.align 2, 0
_080799C4: .4byte 0x040000D4
_080799C8: .4byte 0x06014000
_080799CC:
	cmp r3, #2
	bne _080799E8
	ldr r1, _080799DC @ =0x040000D4
	ldr r0, _080799E0 @ =0x02000400
	str r0, [r1]
	lsls r0, r5, #0xb
	ldr r4, _080799E4 @ =0x06014400
	b _08079A16
	.align 2, 0
_080799DC: .4byte 0x040000D4
_080799E0: .4byte 0x02000400
_080799E4: .4byte 0x06014400
_080799E8:
	cmp r3, #1
	bne _08079A08
	ldr r1, _080799FC @ =0x040000D4
	ldr r0, _08079A00 @ =0x02000800
	str r0, [r1]
	lsls r0, r5, #0xb
	ldr r2, _08079A04 @ =0x06014800
	adds r0, r0, r2
	b _08079A18
	.align 2, 0
_080799FC: .4byte 0x040000D4
_08079A00: .4byte 0x02000800
_08079A04: .4byte 0x06014800
_08079A08:
	cmp r3, #0
	bne _08079A20
	ldr r1, _08079A28 @ =0x040000D4
	ldr r0, _08079A2C @ =0x02000C00
	str r0, [r1]
	lsls r0, r5, #0xb
	ldr r4, _08079A30 @ =0x06014C00
_08079A16:
	adds r0, r0, r4
_08079A18:
	str r0, [r1, #4]
	ldr r0, _08079A34 @ =0x840000E0
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_08079A20:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08079A28: .4byte 0x040000D4
_08079A2C: .4byte 0x02000C00
_08079A30: .4byte 0x06014C00
_08079A34: .4byte 0x840000E0

	thumb_func_start ClearTextGraphics
ClearTextGraphics: @ 0x08079A38
	push {r4, r5, r6, lr}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #1
	bne _08079A58
	ldr r0, _08079A54 @ =gNonGameplayRam
	ldrb r0, [r0, #0x18]
	movs r1, #3
	cmp r0, #0
	beq _08079A68
	movs r1, #5
	b _08079A68
	.align 2, 0
_08079A54: .4byte gNonGameplayRam
_08079A58:
	cmp r1, #2
	bne _08079A68
	ldr r0, _08079A70 @ =gNonGameplayRam
	ldrb r0, [r0, #0x18]
	movs r1, #4
	cmp r0, #0
	beq _08079A68
	movs r1, #6
_08079A68:
	cmp r1, #3
	bne _08079A78
	ldr r2, _08079A74 @ =0x06007000
	b _08079A92
	.align 2, 0
_08079A70: .4byte gNonGameplayRam
_08079A74: .4byte 0x06007000
_08079A78:
	cmp r1, #4
	bne _08079A8C
	ldr r6, _08079A84 @ =0x06007800
	ldr r2, _08079A88 @ =0x06007000
	b _08079AB0
	.align 2, 0
_08079A84: .4byte 0x06007800
_08079A88: .4byte 0x06007000
_08079A8C:
	cmp r1, #5
	bne _08079AA8
	ldr r2, _08079AA4 @ =0x06006000
_08079A92:
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x20
	str r0, [sp]
	movs r0, #3
	movs r1, #0
	bl BitFill
	b _08079AEE
	.align 2, 0
_08079AA4: .4byte 0x06006000
_08079AA8:
	cmp r1, #6
	bne _08079ADC
	ldr r6, _08079AD4 @ =0x06006800
	ldr r2, _08079AD8 @ =0x06006000
_08079AB0:
	movs r5, #0x80
	lsls r5, r5, #4
	movs r4, #0x20
	str r4, [sp]
	movs r0, #3
	adds r1, r6, #0
	adds r3, r5, #0
	bl DmaTransfer
	str r4, [sp]
	movs r0, #3
	movs r1, #0
	adds r2, r6, #0
	adds r3, r5, #0
	bl BitFill
	b _08079AEE
	.align 2, 0
_08079AD4: .4byte 0x06006800
_08079AD8: .4byte 0x06006000
_08079ADC:
	ldr r2, _08079AF8 @ =0x06006000
	movs r3, #0x80
	lsls r3, r3, #6
	movs r0, #0x20
	str r0, [sp]
	movs r0, #3
	movs r1, #0
	bl BitFill
_08079AEE:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08079AF8: .4byte 0x06006000

	thumb_func_start NavigationConversationProcessText
NavigationConversationProcessText: @ 0x08079AFC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	ldr r0, _08079B14 @ =gNonGameplayRam
	ldrb r1, [r0, #0x17]
	adds r5, r0, #0
	cmp r1, #0
	beq _08079B18
	ldrh r1, [r5, #4]
	movs r0, #0x10
	b _08079B1C
	.align 2, 0
_08079B14: .4byte gNonGameplayRam
_08079B18:
	ldrh r1, [r5, #4]
	movs r0, #8
_08079B1C:
	ands r0, r1
	cmp r0, #0
	bne _08079B24
	b _0807A0EC
_08079B24:
	ldrb r0, [r5, #0x18]
	ldr r1, _08079B70 @ =0x06007000
	mov r8, r1
	cmp r0, #0
	beq _08079B32
	ldr r2, _08079B74 @ =0x06006000
	mov r8, r2
_08079B32:
	movs r7, #0
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #1
	adds r4, r5, #0
	adds r4, #0xe
	adds r2, r0, r4
	ldrh r1, [r2]
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _08079B80
	ldr r0, _08079B78 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x83
	ands r0, r1
	cmp r0, #0
	bne _08079B56
	b _0807A0EC
_08079B56:
	ldr r0, _08079B7C @ =0x00000203
	bl SoundPlay
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r6, #0
	strh r7, [r0]
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #1
	adds r4, #4
	b _08079B94
	.align 2, 0
_08079B70: .4byte 0x06007000
_08079B74: .4byte 0x06006000
_08079B78: .4byte gChangedInput
_08079B7C: .4byte 0x00000203
_08079B80:
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r1, r0
	bne _08079BDA
	movs r6, #0
	strh r7, [r2]
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #1
	adds r4, r5, #0
	adds r4, #0x12
_08079B94:
	adds r0, r0, r4
	ldrh r0, [r0]
	cmp r0, #0xe0
	bls _08079BA2
	movs r0, #2
	bl ClearTextGraphics
_08079BA2:
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r1, #0xe0
	strh r1, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x36
	movs r1, #0xb
	strb r1, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x34
	strb r6, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x35
	strb r6, [r0]
	b _0807A0EC
_08079BDA:
	movs r0, #0xfd
	lsls r0, r0, #8
	cmp r1, r0
	bne _08079C48
	ldr r0, _08079C40 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x83
	ands r0, r1
	cmp r0, #0
	bne _08079BF0
	b _0807A0EC
_08079BF0:
	ldr r0, _08079C44 @ =0x00000203
	bl SoundPlay
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r4, #0
	strh r7, [r0]
	movs r0, #1
	bl ClearTextGraphics
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #1
	adds r1, r5, #0
	adds r1, #0x12
	adds r0, r0, r1
	strh r7, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x36
	movs r1, #0xb
	strb r1, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x34
	strb r4, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x35
	strb r4, [r0]
	b _0807A0EC
	.align 2, 0
_08079C40: .4byte gChangedInput
_08079C44: .4byte 0x00000203
_08079C48:
	ldr r0, _08079C60 @ =0x0000E001
	cmp r1, r0
	bne _08079C64
	ldrh r1, [r5, #4]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	beq _08079C5C
	b _0807A0EC
_08079C5C:
	strh r7, [r2]
	b _0807A0EC
	.align 2, 0
_08079C60: .4byte 0x0000E001
_08079C64:
	ldrb r0, [r5, #0x1f]
	cmp r0, #0
	beq _08079C70
	subs r0, #1
	strb r0, [r5, #0x1f]
	b _0807A0EC
_08079C70:
	ldrb r0, [r5, #0x1a]
	ldr r2, _08079CA8 @ =gButtonInput
	cmp r0, #0
	beq _08079C84
	ldrh r1, [r2]
	movs r0, #0x83
	ands r0, r1
	cmp r0, #0
	bne _08079C84
	strb r7, [r5, #0x1a]
_08079C84:
	ldrb r1, [r5, #0x18]
	lsls r1, r1, #1
	adds r0, r5, #0
	adds r0, #0xe
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	ldrh r1, [r2]
	movs r0, #0x83
	ands r0, r1
	cmp r0, #0
	beq _08079CAC
	ldrb r0, [r5, #0x1a]
	cmp r0, #0
	bne _08079CAC
	movs r7, #1
	b _08079CC0
	.align 2, 0
_08079CA8: .4byte gButtonInput
_08079CAC:
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #1
	adds r1, r5, #0
	adds r1, #0xe
	adds r0, r0, r1
	ldrh r0, [r0]
	ldrb r1, [r5, #0x1d]
	cmp r0, r1
	bhs _08079CC0
	b _0807A0EC
_08079CC0:
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #1
	adds r1, r5, #0
	adds r1, #0xe
	adds r0, r0, r1
	movs r1, #0
	strh r1, [r0]
	movs r2, #0x88
	lsls r2, r2, #2
	adds r0, r5, r2
	ldrb r1, [r0]
	subs r0, r1, #1
	lsls r3, r0, #1
	ldr r0, _08079D24 @ =gPreviousNavigationConversation
	ldrb r0, [r0]
	cmp r1, r0
	bne _08079CE4
	adds r3, #1
_08079CE4:
	ldr r1, _08079D28 @ =0x0879C0F0
	ldr r0, _08079D2C @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r6, [r0]
	ldrh r0, [r5, #0xc]
	lsls r1, r0, #1
	adds r6, r6, r1
	adds r0, #1
	strh r0, [r5, #0xc]
_08079D04:
	movs r3, #0
	ldrh r0, [r6]
	lsrs r1, r0, #0xc
	movs r4, #0xff
	lsls r4, r4, #8
	ands r4, r0
	subs r1, #8
	adds r2, r0, #0
	cmp r1, #7
	bls _08079D1A
	b _08079F9C
_08079D1A:
	lsls r0, r1, #2
	ldr r1, _08079D30 @ =_08079D34
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08079D24: .4byte gPreviousNavigationConversation
_08079D28: .4byte 0x0879C0F0
_08079D2C: .4byte 0x03000011
_08079D30: .4byte _08079D34
_08079D34: @ jump table
	.4byte _08079F2C @ case 0
	.4byte _08079F0C @ case 1
	.4byte _08079EEC @ case 2
	.4byte _08079E96 @ case 3
	.4byte _08079E90 @ case 4
	.4byte _08079F9C @ case 5
	.4byte _08079DCE @ case 6
	.4byte _08079D54 @ case 7
_08079D54:
	movs r0, #0xff
	lsls r0, r0, #8
	cmp r2, r0
	bne _08079D60
	movs r0, #1
	b _08079DB8
_08079D60:
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r2, r0
	bne _08079D78
_08079D68:
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #1
	adds r1, r5, #0
	adds r1, #0xe
	adds r0, r0, r1
	strh r2, [r0]
_08079D74:
	movs r3, #1
	b _08079F9C
_08079D78:
	movs r0, #0xfd
	lsls r0, r0, #8
	cmp r2, r0
	beq _08079D88
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r2, r0
	bne _08079DAC
_08079D88:
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #1
	adds r1, r5, #0
	adds r1, #0xe
	adds r0, r0, r1
	strh r2, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x36
	movs r1, #3
	strb r1, [r0]
	movs r0, #1
	strb r0, [r5, #0x1a]
	movs r3, #2
	b _08079F9C
_08079DAC:
	movs r0, #0xfb
	lsls r0, r0, #8
	cmp r2, r0
	beq _08079DB6
	b _08079F9C
_08079DB6:
	movs r0, #2
_08079DB8:
	strb r0, [r5, #0x1c]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x36
	movs r1, #3
	strb r1, [r0]
	movs r3, #2
	b _08079F9C
_08079DCE:
	movs r0, #0xe0
	lsls r0, r0, #8
	cmp r4, r0
	bne _08079E00
	lsls r0, r2, #0x10
	lsrs r2, r0, #0x10
	cmp r2, r4
	bne _08079DF4
	ldrh r1, [r5, #4]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08079D74
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r2, #0
	orrs r0, r1
	b _08079E82
_08079DF4:
	ldr r0, _08079DFC @ =0x0000E001
	cmp r2, r0
	bne _08079D74
	b _08079D68
	.align 2, 0
_08079DFC: .4byte 0x0000E001
_08079E00:
	movs r0, #0xe1
	lsls r0, r0, #8
	cmp r4, r0
	bne _08079E0C
	strb r2, [r5, #0x1f]
	b _08079D74
_08079E0C:
	movs r0, #0xe2
	lsls r0, r0, #8
	cmp r4, r0
	bne _08079E5C
	ldrh r1, [r6]
	adds r0, #1
	cmp r1, r0
	bne _08079E2C
	ldrh r0, [r5, #4]
	movs r1, #2
	orrs r0, r1
	strh r0, [r5, #4]
	movs r0, #1
	strb r0, [r5, #0x18]
	strb r1, [r5, #0x19]
	b _08079E56
_08079E2C:
	ldr r0, _08079E44 @ =0x0000E202
	cmp r1, r0
	bne _08079E48
	ldrh r1, [r5, #4]
	movs r0, #4
	orrs r0, r1
	strh r0, [r5, #4]
	movs r0, #1
	strb r0, [r5, #0x18]
	movs r0, #2
	strb r0, [r5, #0x19]
	b _08079E56
	.align 2, 0
_08079E44: .4byte 0x0000E202
_08079E48:
	ldrh r0, [r5, #4]
	movs r2, #1
	movs r1, #0
	orrs r0, r2
	strh r0, [r5, #4]
	strb r1, [r5, #0x18]
	strb r2, [r5, #0x19]
_08079E56:
	ldrh r0, [r6]
	strb r0, [r5, #0x17]
	b _08079D74
_08079E5C:
	movs r0, #0xe3
	lsls r0, r0, #8
	cmp r4, r0
	bne _08079D74
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	cmp r1, r4
	bne _08079E74
	ldrh r1, [r5, #4]
	movs r0, #0x40
	orrs r0, r1
	b _08079E82
_08079E74:
	ldr r0, _08079E88 @ =0x0000E301
	cmp r1, r0
	beq _08079E7C
	b _08079D74
_08079E7C:
	ldrh r1, [r5, #4]
	ldr r0, _08079E8C @ =0x0000FFBF
	ands r0, r1
_08079E82:
	strh r0, [r5, #4]
	b _08079D74
	.align 2, 0
_08079E88: .4byte 0x0000E301
_08079E8C: .4byte 0x0000FFBF
_08079E90:
	movs r0, #6
	strb r0, [r5, #0x1c]
	b _08079D74
_08079E96:
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _08079EA8 @ =0x0000B001
	cmp r1, r0
	bne _08079EAC
	movs r0, #0x99
	lsls r0, r0, #2
	adds r1, r5, r0
	b _08079EB8
	.align 2, 0
_08079EA8: .4byte 0x0000B001
_08079EAC:
	ldr r0, _08079EC0 @ =0x0000B002
	cmp r1, r0
	bne _08079EC4
	movs r2, #0x99
	lsls r2, r2, #2
	adds r1, r5, r2
_08079EB8:
	movs r0, #1
	strb r0, [r1]
	b _08079D74
	.align 2, 0
_08079EC0: .4byte 0x0000B002
_08079EC4:
	ldr r0, _08079EE8 @ =0x0000B003
	cmp r1, r0
	bne _08079F9C
	ldrb r0, [r5, #0x1c]
	cmp r0, #5
	beq _08079F9A
	cmp r0, #3
	beq _08079F9A
	movs r0, #0x2a
	movs r1, #2
	bl PlayMusic
	movs r0, #0
	movs r1, #0xb
	bl SetSubEventAndUpdateMusic
	b _08079F9A
	.align 2, 0
_08079EE8: .4byte 0x0000B003
_08079EEC:
	ldr r1, _08079F04 @ =0x00000221
	adds r0, r5, r1
	ldrb r0, [r0]
	rsbs r1, r0, #0
	orrs r1, r0
	ldr r0, _08079F08 @ =0x00000FFF
	ands r0, r2
	lsrs r1, r1, #0x1f
	bl unk_3c14
	b _08079F9A
	.align 2, 0
_08079F04: .4byte 0x00000221
_08079F08: .4byte 0x00000FFF
_08079F0C:
	ldr r1, _08079F24 @ =0x00000221
	adds r0, r5, r1
	ldrb r0, [r0]
	rsbs r1, r0, #0
	orrs r1, r0
	ldr r0, _08079F28 @ =0x00000FFF
	ands r0, r2
	lsrs r1, r1, #0x1f
	bl unk_3bd4
	b _08079F9A
	.align 2, 0
_08079F24: .4byte 0x00000221
_08079F28: .4byte 0x00000FFF
_08079F2C:
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r4, r0
	bne _08079F46
	ldrb r1, [r5, #0x18]
	lsls r1, r1, #1
	adds r0, r5, #0
	adds r0, #0x12
	adds r1, r1, r0
	movs r0, #0xff
	ands r0, r2
	ldrh r2, [r1]
	b _08079F96
_08079F46:
	movs r0, #0x81
	lsls r0, r0, #8
	cmp r4, r0
	bne _08079F52
	strb r2, [r5, #0x1e]
	b _08079F9A
_08079F52:
	movs r0, #0x82
	lsls r0, r0, #8
	cmp r4, r0
	bne _08079F68
	strb r2, [r5, #0x1d]
	lsls r0, r2, #0x18
	cmp r0, #0
	bne _08079F9A
	movs r0, #8
	strb r0, [r5, #0x1d]
	b _08079F9A
_08079F68:
	movs r0, #0x83
	lsls r0, r0, #8
	cmp r4, r0
	bne _08079F9A
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #1
	adds r1, r5, #0
	adds r1, #0x12
	adds r1, r0, r1
	ldrh r0, [r1]
	cmp r0, #0xdf
	bls _08079F84
	movs r0, #0xe0
	b _08079F86
_08079F84:
	movs r0, #0
_08079F86:
	strh r0, [r1]
	ldrb r1, [r5, #0x18]
	lsls r1, r1, #1
	adds r0, r5, #0
	adds r0, #0x12
	adds r1, r1, r0
	ldrh r0, [r1]
	ldrb r2, [r6]
_08079F96:
	adds r0, r0, r2
	strh r0, [r1]
_08079F9A:
	movs r3, #3
_08079F9C:
	cmp r3, #3
	bne _08079FB4
	ldr r1, _08079FB0 @ =gNonGameplayRam
	ldrh r0, [r1, #0xc]
	adds r0, #1
	strh r0, [r1, #0xc]
	adds r6, #2
	adds r5, r1, #0
	b _08079D04
	.align 2, 0
_08079FB0: .4byte gNonGameplayRam
_08079FB4:
	cmp r3, #2
	bne _08079FE0
	ldr r2, _08079FDC @ =gNonGameplayRam
	ldrb r1, [r2, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	adds r0, #0x34
	movs r3, #0
	strb r3, [r0]
	ldrb r1, [r2, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	adds r0, #0x35
	strb r3, [r0]
	b _0807A0EC
	.align 2, 0
_08079FDC: .4byte gNonGameplayRam
_08079FE0:
	cmp r3, #1
	bne _08079FE6
	b _0807A0EC
_08079FE6:
	ldrh r0, [r6]
	bl GetCharacterWidth
	ldr r4, _0807A01C @ =gNonGameplayRam
	strb r0, [r4, #0x16]
	ldrb r0, [r4, #0x18]
	lsls r0, r0, #1
	adds r5, r4, #0
	adds r5, #0x12
	adds r2, r0, r5
	ldrh r1, [r2]
	ldrb r0, [r4, #0x16]
	adds r3, r1, r0
	movs r0, #0xe0
	lsls r0, r0, #1
	cmp r3, r0
	ble _0807A020
	movs r0, #2
	bl ClearTextGraphics
	ldrb r0, [r4, #0x18]
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r1, #0xe0
	strh r1, [r0]
	b _0807A02C
	.align 2, 0
_0807A01C: .4byte gNonGameplayRam
_0807A020:
	cmp r3, #0xe0
	ble _0807A02C
	cmp r1, #0xdf
	bhi _0807A02C
	movs r0, #0xe0
	strh r0, [r2]
_0807A02C:
	ldr r0, _0807A098 @ =gNonGameplayRam
	ldrb r1, [r0, #0x18]
	lsls r1, r1, #1
	adds r2, r0, #0
	adds r2, #0x12
	adds r1, r1, r2
	ldrh r2, [r1]
	adds r5, r0, #0
	cmp r2, #0
	beq _0807A044
	cmp r2, #0xe0
	bne _0807A046
_0807A044:
	strh r2, [r1]
_0807A046:
	adds r4, r5, #0
	ldrb r0, [r4, #0x18]
	lsls r0, r0, #1
	adds r1, r4, #0
	adds r1, #0x12
	adds r1, r0, r1
	ldrh r3, [r1]
	cmp r3, #0xdf
	bls _0807A060
	movs r0, #0x80
	lsls r0, r0, #4
	add r8, r0
	subs r3, #0xe0
_0807A060:
	asrs r0, r3, #3
	lsls r3, r0, #5
	add r8, r3
	ldrh r1, [r1]
	movs r3, #7
	ldrh r0, [r6]
	ldrb r2, [r4, #0x16]
	ands r3, r1
	ldrb r1, [r4, #0x1e]
	str r1, [sp]
	mov r1, r8
	bl DrawCharacter
	cmp r7, #0
	bne _0807A0BA
	ldrh r0, [r6]
	cmp r0, #0x40
	beq _0807A0BA
	ldrb r0, [r4, #0x17]
	cmp r0, #1
	bne _0807A09C
	ldrh r0, [r6]
	movs r1, #0x21
	bl PlayCharacterAppearingSound
	movs r0, #2
	strb r0, [r4, #0x1b]
	b _0807A0BA
	.align 2, 0
_0807A098: .4byte gNonGameplayRam
_0807A09C:
	cmp r0, #2
	bne _0807A0AE
	ldrh r0, [r6]
	movs r1, #0x41
	bl PlayCharacterAppearingSound
	movs r0, #3
	strb r0, [r4, #0x1b]
	b _0807A0BA
_0807A0AE:
	ldrh r0, [r6]
	movs r1, #1
	bl PlayCharacterAppearingSound
	movs r0, #1
	strb r0, [r5, #0x1b]
_0807A0BA:
	movs r3, #1
	ldrh r2, [r6, #2]
	movs r0, #0x80
	lsls r0, r0, #8
	ands r0, r2
	cmp r0, #0
	beq _0807A0D4
	movs r1, #0xf0
	lsls r1, r1, #8
	bics r1, r2
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r3, r0, #0x1f
_0807A0D4:
	cmp r3, #0
	beq _0807A0EC
	ldr r2, _0807A0F8 @ =gNonGameplayRam
	ldrb r1, [r2, #0x18]
	lsls r1, r1, #1
	adds r0, r2, #0
	adds r0, #0x12
	adds r1, r1, r0
	ldrh r0, [r1]
	ldrb r2, [r2, #0x16]
	adds r0, r0, r2
	strh r0, [r1]
_0807A0EC:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807A0F8: .4byte gNonGameplayRam

	thumb_func_start unk_7a0fc
unk_7a0fc: @ 0x0807A0FC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldr r2, _0807A120 @ =gNonGameplayRam
	ldrh r1, [r2, #4]
	movs r0, #8
	ands r0, r1
	mov ip, r2
	cmp r0, #0
	bne _0807A124
	movs r0, #0
	b _0807A2C2
	.align 2, 0
_0807A120: .4byte gNonGameplayRam
_0807A124:
	movs r0, #0
	mov sl, r0
	mov sb, r0
	lsls r3, r3, #2
	str r3, [sp, #4]
	mov r5, ip
	mov r6, ip
	adds r6, #0x21
	movs r1, #0x20
	add r1, ip
	mov r8, r1
_0807A13A:
	ldr r1, _0807A174 @ =0x0879CDF4
	ldr r0, _0807A178 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r2, [sp, #4]
	adds r0, r2, r0
	adds r0, #0xac
	ldr r4, [r0]
	ldr r7, _0807A17C @ =0x06007000
	ldrb r0, [r6]
	lsls r0, r0, #1
	adds r4, r4, r0
	ldrh r1, [r4]
	adds r3, r1, #0
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r3, r0
	bne _0807A180
	movs r0, #0
	mov r1, r8
	strb r0, [r1]
	movs r0, #0xe0
	mov r2, ip
	b _0807A1D2
	.align 2, 0
_0807A174: .4byte 0x0879CDF4
_0807A178: .4byte 0x03000011
_0807A17C: .4byte 0x06007000
_0807A180:
	movs r2, #0xff
	lsls r2, r2, #8
	adds r0, r2, #0
	ands r1, r0
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r1, r0
	bne _0807A1A0
	movs r0, #0
	mov r1, r8
	strb r0, [r1]
	ldrh r0, [r5, #0x22]
	ldrb r4, [r4]
	adds r0, r0, r4
	strh r0, [r5, #0x22]
	b _0807A1D4
_0807A1A0:
	movs r0, #0x83
	lsls r0, r0, #8
	cmp r1, r0
	bne _0807A1E0
	movs r1, #0
	mov r2, r8
	strb r1, [r2]
	ldrh r0, [r5, #0x22]
	cmp r0, #0xdf
	bls _0807A1BA
	movs r0, #0xe0
	strh r0, [r5, #0x22]
	b _0807A1BC
_0807A1BA:
	strh r1, [r5, #0x22]
_0807A1BC:
	ldrb r1, [r4]
	mov r2, ip
	ldrh r0, [r2, #0x22]
	adds r3, r0, r1
	strh r3, [r2, #0x22]
	ldrh r1, [r4]
	ldr r0, _0807A1DC @ =0x000083A0
	cmp r1, r0
	bne _0807A1D4
	adds r0, r3, #0
	subs r0, #0x10
_0807A1D2:
	strh r0, [r2, #0x22]
_0807A1D4:
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	b _0807A13A
	.align 2, 0
_0807A1DC: .4byte 0x000083A0
_0807A1E0:
	mov r0, sb
	cmp r0, #0
	bne _0807A22E
	cmp r3, #0x40
	beq _0807A228
	ldrh r0, [r5, #0x22]
	cmp r0, #0xdf
	bhi _0807A228
	ldrb r0, [r5, #0x1a]
	ldr r2, _0807A2D4 @ =gButtonInput
	cmp r0, #0
	beq _0807A206
	ldrh r1, [r2]
	movs r0, #0x83
	ands r0, r1
	cmp r0, #0
	bne _0807A206
	mov r1, sb
	strb r1, [r5, #0x1a]
_0807A206:
	mov r1, r8
	ldrb r0, [r1]
	adds r3, r0, #1
	strb r3, [r1]
	ldrh r1, [r2]
	movs r0, #0x83
	ands r0, r1
	cmp r0, #0
	beq _0807A220
	mov r2, ip
	ldrb r0, [r2, #0x1a]
	cmp r0, #0
	beq _0807A228
_0807A220:
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _0807A2C0
_0807A228:
	movs r0, #0
	mov r1, r8
	strb r0, [r1]
_0807A22E:
	ldrh r0, [r4]
	bl GetCharacterWidth
	ldr r2, _0807A2D8 @ =gNonGameplayRam
	strb r0, [r2, #0x16]
	ldrh r1, [r2, #0x22]
	ldrb r0, [r2, #0x16]
	adds r0, r1, r0
	cmp r0, #0xe0
	ble _0807A24A
	cmp r1, #0xdf
	bhi _0807A24A
	movs r0, #0xe0
	strh r0, [r2, #0x22]
_0807A24A:
	ldr r1, _0807A2D8 @ =gNonGameplayRam
	ldrh r0, [r1, #0x22]
	cmp r0, #0
	beq _0807A256
	cmp r0, #0xe0
	bne _0807A258
_0807A256:
	strh r0, [r1, #0x22]
_0807A258:
	ldrh r0, [r4]
	cmp r0, #0x40
	beq _0807A292
	movs r1, #1
	bl PlayCharacterAppearingSound
	ldr r2, _0807A2D8 @ =gNonGameplayRam
	ldrh r0, [r2, #0x22]
	cmp r0, #0xdf
	bls _0807A278
	movs r1, #1
	mov sb, r1
	movs r1, #0x80
	lsls r1, r1, #4
	adds r7, r7, r1
	subs r0, #0xe0
_0807A278:
	asrs r0, r0, #3
	lsls r0, r0, #5
	adds r7, r7, r0
	ldrh r1, [r2, #0x22]
	movs r3, #7
	ldrh r0, [r4]
	ldrb r2, [r2, #0x16]
	ands r3, r1
	movs r1, #0
	str r1, [sp]
	adds r1, r7, #0
	bl DrawCharacter
_0807A292:
	ldrh r0, [r5, #0x22]
	ldrb r2, [r5, #0x16]
	adds r0, r0, r2
	strh r0, [r5, #0x22]
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	ldrh r0, [r4, #2]
	ldr r1, _0807A2D8 @ =gNonGameplayRam
	mov ip, r1
	movs r2, #0xff
	lsls r2, r2, #8
	cmp r0, r2
	bne _0807A2B2
	movs r0, #1
	mov sl, r0
_0807A2B2:
	mov r1, sb
	cmp r1, #0
	beq _0807A2C0
	mov r2, sl
	cmp r2, #0
	bne _0807A2C0
	b _0807A13A
_0807A2C0:
	mov r0, sl
_0807A2C2:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807A2D4: .4byte gButtonInput
_0807A2D8: .4byte gNonGameplayRam

	thumb_func_start NavigationConversationGetCurrentConversation
NavigationConversationGetCurrentConversation: @ 0x0807A2DC
	push {r4, r5, lr}
	ldr r0, _0807A330 @ =gEventCounter
	ldrb r2, [r0]
	ldr r3, _0807A334 @ =0x08575A60
	ldr r4, _0807A338 @ =gNonGameplayRam
	ldr r5, _0807A33C @ =gPreviousNavigationConversation
	cmp r2, #0
	ble _0807A310
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r1, r0, #2
	adds r0, r1, r3
	ldrb r0, [r0, #6]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0807A310
	adds r1, r1, r3
_0807A300:
	subs r1, #0xc
	subs r2, #1
	cmp r2, #0
	ble _0807A310
	movs r0, #6
	ldrsb r0, [r1, r0]
	cmp r0, #0
	beq _0807A300
_0807A310:
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrb r1, [r0, #6]
	movs r2, #0x88
	lsls r2, r2, #2
	adds r0, r4, r2
	strb r1, [r0]
	ldrb r5, [r5]
	cmp r1, r5
	bne _0807A344
	ldr r3, _0807A340 @ =0x00000221
	adds r1, r4, r3
	movs r0, #1
	b _0807A34A
	.align 2, 0
_0807A330: .4byte gEventCounter
_0807A334: .4byte 0x08575A60
_0807A338: .4byte gNonGameplayRam
_0807A33C: .4byte gPreviousNavigationConversation
_0807A340: .4byte 0x00000221
_0807A344:
	ldr r0, _0807A394 @ =0x00000221
	adds r1, r4, r0
	movs r0, #0
_0807A34A:
	strb r0, [r1]
	movs r0, #0
	bl ClearTextGraphics
	movs r0, #1
	bl NavigationConversationUpdateTarget
	bl NavigationConversationSetupOam
	ldr r0, _0807A398 @ =gNonGameplayRam
	movs r2, #0x8e
	lsls r2, r2, #2
	adds r1, r0, r2
	movs r2, #0
	strb r2, [r1]
	ldr r3, _0807A39C @ =0x00000239
	adds r1, r0, r3
	strb r2, [r1]
	adds r3, #3
	adds r1, r0, r3
	strb r2, [r1]
	adds r3, #1
	adds r1, r0, r3
	strb r2, [r1]
	adds r3, #0x13
	adds r1, r0, r3
	strb r2, [r1]
	adds r3, #1
	adds r1, r0, r3
	strb r2, [r1]
	ldr r1, _0807A3A0 @ =0x00000252
	adds r0, r0, r1
	strb r2, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807A394: .4byte 0x00000221
_0807A398: .4byte gNonGameplayRam
_0807A39C: .4byte 0x00000239
_0807A3A0: .4byte 0x00000252

	thumb_func_start NavigationConversationSubroutine
NavigationConversationSubroutine: @ 0x0807A3A4
	push {r4, r5, r6, r7, lr}
	bl unk_7b674
	bl NavigationConversionScrollToTarget
	bl unk_7b56c
	bl NavigationConversationUpdatePanel
	bl unk_78c44
	movs r7, #0
	ldr r0, _0807A3D4 @ =gNonGameplayRam
	ldrb r0, [r0, #7]
	cmp r0, #0x15
	bls _0807A3C8
	bl _0807AE42
_0807A3C8:
	lsls r0, r0, #2
	ldr r1, _0807A3D8 @ =_0807A3DC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807A3D4: .4byte gNonGameplayRam
_0807A3D8: .4byte _0807A3DC
_0807A3DC: @ jump table
	.4byte _0807A434 @ case 0
	.4byte _0807A468 @ case 1
	.4byte _0807A51A @ case 2
	.4byte _0807A6C0 @ case 3
	.4byte _0807A700 @ case 4
	.4byte _0807A718 @ case 5
	.4byte _0807A76C @ case 6
	.4byte _0807A79E @ case 7
	.4byte _0807A7B0 @ case 8
	.4byte _0807A890 @ case 9
	.4byte _0807A938 @ case 10
	.4byte _0807AA2A @ case 11
	.4byte _0807AA48 @ case 12
	.4byte _0807AA84 @ case 13
	.4byte _0807AAE0 @ case 14
	.4byte _0807AB14 @ case 15
	.4byte _0807AB40 @ case 16
	.4byte _0807ABB4 @ case 17
	.4byte _0807AC28 @ case 18
	.4byte _0807ACAE @ case 19
	.4byte _0807AD6C @ case 20
	.4byte _0807ADE8 @ case 21
_0807A434:
	ldr r4, _0807A454 @ =gNonGameplayRam
	movs r0, #0
	strb r0, [r4, #6]
	bl NavigationConversationSetupOam
	ldr r1, _0807A458 @ =0x00000221
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807A45C
	movs r0, #4
	strb r0, [r4, #0x1c]
	movs r0, #0x11
	strb r0, [r4, #7]
	bl _0807AE42
	.align 2, 0
_0807A454: .4byte gNonGameplayRam
_0807A458: .4byte 0x00000221
_0807A45C:
	strb r0, [r4, #0x1c]
	ldrb r0, [r4, #7]
	adds r0, #1
	strb r0, [r4, #7]
	bl _0807AE42
_0807A468:
	ldr r1, _0807A4D4 @ =gNonGameplayRam
	movs r2, #0x9a
	lsls r2, r2, #2
	adds r3, r1, r2
	ldrh r2, [r3]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r4, #0
	movs r5, #0
	orrs r0, r2
	strh r0, [r3]
	movs r2, #1
	strb r2, [r1, #9]
	strb r2, [r1, #0xb]
	movs r0, #8
	strb r0, [r1, #0x1d]
	strb r5, [r1, #0x1e]
	strb r5, [r1, #0x1f]
	movs r3, #0x88
	lsls r3, r3, #2
	adds r0, r1, r3
	ldrb r0, [r0]
	subs r0, #1
	lsls r3, r0, #1
	ldr r4, _0807A4D8 @ =0x00000221
	adds r0, r1, r4
	ldrb r0, [r0]
	adds r4, r1, #0
	cmp r0, #0
	beq _0807A4A6
	adds r3, #1
_0807A4A6:
	ldr r1, _0807A4DC @ =0x0879C0F0
	ldr r0, _0807A4E0 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldrh r3, [r0]
	ldr r0, _0807A4E4 @ =0x0000E201
	cmp r3, r0
	bne _0807A4E8
	ldrh r0, [r4, #4]
	movs r1, #2
	orrs r0, r1
	strh r0, [r4, #4]
	strb r2, [r4, #0x18]
	strb r1, [r4, #0x19]
	strb r2, [r4, #0x17]
	b _0807A512
	.align 2, 0
_0807A4D4: .4byte gNonGameplayRam
_0807A4D8: .4byte 0x00000221
_0807A4DC: .4byte 0x0879C0F0
_0807A4E0: .4byte 0x03000011
_0807A4E4: .4byte 0x0000E201
_0807A4E8:
	ldr r0, _0807A500 @ =0x0000E202
	cmp r3, r0
	bne _0807A504
	ldrh r0, [r4, #4]
	movs r1, #4
	orrs r0, r1
	strh r0, [r4, #4]
	strb r2, [r4, #0x18]
	movs r0, #2
	strb r0, [r4, #0x19]
	strb r0, [r4, #0x17]
	b _0807A512
	.align 2, 0
_0807A500: .4byte 0x0000E202
_0807A504:
	ldrh r0, [r4, #4]
	movs r1, #1
	orrs r0, r1
	strh r0, [r4, #4]
	strb r5, [r4, #0x18]
	strb r1, [r4, #0x19]
	strb r5, [r4, #0x17]
_0807A512:
	ldrb r0, [r4, #7]
	adds r0, #1
	movs r1, #0
	b _0807AC3E
_0807A51A:
	ldr r1, _0807A584 @ =gNonGameplayRam
	movs r0, #0
	strb r0, [r1, #0x1b]
	ldrb r0, [r1, #0x1c]
	adds r4, r1, #0
	cmp r0, #1
	bne _0807A5B8
	ldr r0, _0807A588 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x83
	ands r0, r1
	cmp r0, #0
	beq _0807A590
	ldrh r1, [r4, #4]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0807A59C
	ldr r1, _0807A58C @ =0x00000241
	adds r0, r4, r1
	ldrb r5, [r0]
	cmp r5, #0
	bne _0807A590
	ldrb r1, [r4, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0x36
	strb r5, [r0]
	ldrb r1, [r4, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0x34
	strb r5, [r0]
	ldrb r1, [r4, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0x35
	strb r5, [r0]
	movs r0, #0
	bl ClearTextGraphics
	movs r0, #3
	strb r0, [r4, #7]
	strb r5, [r4, #6]
	bl _0807AE42
	.align 2, 0
_0807A584: .4byte gNonGameplayRam
_0807A588: .4byte gChangedInput
_0807A58C: .4byte 0x00000241
_0807A590:
	ldrh r1, [r4, #4]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0807A5F2
_0807A59C:
	ldrh r1, [r4, #4]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _0807A5AE
	bl _0807AE42
_0807A5AE:
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r4, #4]
	bl _0807AE42
_0807A5B8:
	cmp r0, #2
	bne _0807A5E6
	ldrh r1, [r4, #4]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _0807A5F2
	adds r0, r4, #0
	adds r0, #0x24
	strb r1, [r0]
	adds r2, r4, #0
	adds r2, #0x25
	movs r0, #1
	strb r0, [r2]
	strb r0, [r4, #0x1a]
	strb r1, [r4, #0x1b]
	movs r0, #8
	strb r0, [r4, #7]
	strb r1, [r4, #6]
	b _0807A5F2
_0807A5E6:
	cmp r0, #6
	bne _0807A5EE
	movs r7, #1
	b _0807A5F2
_0807A5EE:
	bl NavigationConversationProcessText
_0807A5F2:
	ldr r3, _0807A628 @ =gNonGameplayRam
	ldrb r0, [r3, #0x19]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r3
	adds r0, r1, #0
	adds r0, #0x36
	ldrb r0, [r0]
	cmp r0, #3
	bne _0807A630
	movs r0, #0x74
	strh r0, [r1, #0x2e]
	ldrb r0, [r3, #0x19]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r3
	ldr r2, _0807A62C @ =0x085766E0
	ldrb r0, [r3, #0x18]
	lsls r0, r0, #1
	adds r2, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	strh r0, [r1, #0x2c]
	bl _0807AE42
	.align 2, 0
_0807A628: .4byte gNonGameplayRam
_0807A62C: .4byte 0x085766E0
_0807A630:
	movs r2, #0
	strh r2, [r1, #0x2e]
	ldrb r1, [r3, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	strh r2, [r0, #0x2c]
	ldrb r0, [r3, #0x18]
	lsls r0, r0, #1
	adds r1, r3, #0
	adds r1, #0x12
	adds r0, r0, r1
	ldrh r2, [r0]
	cmp r2, #0xdf
	bls _0807A68C
	ldrb r1, [r3, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	ldr r4, _0807A684 @ =0x0000FF28
	adds r1, r2, r4
	ldrh r2, [r0, #0x2e]
	adds r1, r1, r2
	strh r1, [r0, #0x2e]
	ldrb r0, [r3, #0x19]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r3
	ldr r2, _0807A688 @ =0x085766E0
	ldrb r0, [r3, #0x18]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	adds r0, #0x10
	ldrh r3, [r1, #0x2c]
	adds r0, r0, r3
	strh r0, [r1, #0x2c]
	bl _0807AE42
	.align 2, 0
_0807A684: .4byte 0x0000FF28
_0807A688: .4byte 0x085766E0
_0807A68C:
	ldrb r1, [r3, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	adds r1, r2, #0
	adds r1, #8
	ldrh r4, [r0, #0x2e]
	adds r1, r1, r4
	strh r1, [r0, #0x2e]
	ldrb r0, [r3, #0x19]
	lsls r2, r0, #1
	adds r2, r2, r0
	lsls r2, r2, #2
	adds r2, r2, r3
	ldr r0, _0807A6BC @ =0x085766E0
	ldrb r1, [r3, #0x18]
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r2, #0x2c]
	ldrb r1, [r1]
	adds r0, r0, r1
	strh r0, [r2, #0x2c]
	b _0807AE42
	.align 2, 0
_0807A6BC: .4byte 0x085766E0
_0807A6C0:
	ldr r1, _0807A6F4 @ =gNonGameplayRam
	movs r0, #0
	strb r0, [r1, #0x1b]
	movs r2, #0x88
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r2, _0807A6F8 @ =gPreviousNavigationConversation
	ldrb r0, [r0]
	ldrb r3, [r2]
	cmp r0, r3
	beq _0807A6E6
	strb r0, [r2]
	ldr r4, _0807A6FC @ =0x00000221
	adds r0, r1, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807A6E6
	bl UpdateSubEventAfterNavigationConversation
_0807A6E6:
	ldr r0, _0807A6F4 @ =gNonGameplayRam
	ldrb r1, [r0, #7]
	adds r1, #1
	movs r2, #0
	strb r1, [r0, #7]
	strb r2, [r0, #6]
	b _0807AE42
	.align 2, 0
_0807A6F4: .4byte gNonGameplayRam
_0807A6F8: .4byte gPreviousNavigationConversation
_0807A6FC: .4byte 0x00000221
_0807A700:
	ldr r2, _0807A714 @ =gNonGameplayRam
	ldrb r0, [r2, #6]
	cmp r0, #8
	bhi _0807A70A
	b _0807AE42
_0807A70A:
	ldrb r0, [r2, #7]
	adds r0, #1
	movs r1, #0
	b _0807A798
	.align 2, 0
_0807A714: .4byte gNonGameplayRam
_0807A718:
	ldr r3, _0807A768 @ =gNonGameplayRam
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r2, r3, r0
	ldrh r0, [r2]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r1, r4, #0
	eors r0, r1
	strh r0, [r2]
	ldrh r1, [r3, #4]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0807A73C
	movs r0, #0x40
	eors r0, r1
	strh r0, [r3, #4]
_0807A73C:
	ldrh r1, [r3, #4]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0807A74C
	movs r0, #8
	eors r0, r1
	strh r0, [r3, #4]
_0807A74C:
	ldrh r1, [r3, #4]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0807A75C
	movs r0, #0x10
	eors r0, r1
	strh r0, [r3, #4]
_0807A75C:
	ldrb r0, [r3, #7]
	adds r0, #1
	strb r0, [r3, #7]
	movs r0, #0
	strb r0, [r3, #6]
	b _0807AE42
	.align 2, 0
_0807A768: .4byte gNonGameplayRam
_0807A76C:
	ldr r2, _0807A790 @ =gNonGameplayRam
	ldrh r1, [r2, #4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0807A78C
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0807A78C
	movs r0, #4
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	beq _0807A794
_0807A78C:
	movs r0, #0
	b _0807AE44
	.align 2, 0
_0807A790: .4byte gNonGameplayRam
_0807A794:
	ldrb r0, [r2, #7]
	adds r0, #1
_0807A798:
	strb r0, [r2, #7]
	strb r1, [r2, #6]
	b _0807AE42
_0807A79E:
	movs r7, #1
	ldr r1, _0807A7AC @ =gNonGameplayRam
	movs r0, #0
	strb r0, [r1, #7]
	strb r0, [r1, #6]
	b _0807AE42
	.align 2, 0
_0807A7AC: .4byte gNonGameplayRam
_0807A7B0:
	ldr r5, _0807A818 @ =gNonGameplayRam
	adds r6, r5, #0
	adds r6, #0x24
	ldrb r4, [r6]
	cmp r4, #0
	bne _0807A824
	ldr r0, _0807A81C @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x83
	ands r0, r1
	cmp r0, #0
	bne _0807A7CA
	b _0807AE42
_0807A7CA:
	ldr r0, _0807A820 @ =0x00000203
	bl SoundPlay
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x36
	strb r4, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x34
	strb r4, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x35
	strb r4, [r0]
	movs r0, #1
	bl ClearTextGraphics
	movs r0, #1
	strb r0, [r6]
	movs r0, #3
	strb r0, [r5, #0x1c]
	adds r0, r5, #0
	adds r0, #0x20
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	strh r4, [r5, #0x22]
	b _0807AE42
	.align 2, 0
_0807A818: .4byte gNonGameplayRam
_0807A81C: .4byte gChangedInput
_0807A820: .4byte 0x00000203
_0807A824:
	cmp r4, #2
	bne _0807A832
	movs r1, #0
	movs r0, #9
	strb r0, [r5, #7]
	strb r1, [r5, #6]
	b _0807AE42
_0807A832:
	movs r0, #0
	bl unk_7a0fc
	cmp r0, #0
	bne _0807A83E
	b _0807AE42
_0807A83E:
	movs r3, #0
	movs r2, #2
	strb r2, [r6]
	movs r0, #1
	strb r0, [r5, #0x1a]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x36
	strb r2, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x34
	strb r3, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x35
	strb r3, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	movs r1, #0x8c
	strh r1, [r0, #0x2c]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	movs r1, #0x34
	strh r1, [r0, #0x2e]
	b _0807AE42
_0807A890:
	movs r3, #0
	ldr r2, _0807A8C8 @ =gNonGameplayRam
	ldrb r1, [r2, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r5, #0
	movs r1, #0x8c
	strh r1, [r0, #0x2c]
	ldr r0, _0807A8CC @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	beq _0807A8D0
	adds r5, r4, #0
	adds r5, #0x25
	ldrb r0, [r5]
	movs r2, #1
	eors r0, r2
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r3, r1, #0x1f
	strb r2, [r5]
	b _0807A8F8
	.align 2, 0
_0807A8C8: .4byte gNonGameplayRam
_0807A8CC: .4byte gChangedInput
_0807A8D0:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0807A8E8
	adds r1, r4, #0
	adds r1, #0x25
	ldrb r0, [r1]
	cmp r0, #0
	beq _0807A8E4
	movs r3, #1
_0807A8E4:
	strb r5, [r1]
	b _0807A8F8
_0807A8E8:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0807A8F8
	movs r3, #2
	movs r0, #0xa
	strb r0, [r4, #7]
	strb r5, [r4, #6]
_0807A8F8:
	adds r0, r4, #0
	adds r0, #0x25
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807A910
	ldrb r0, [r4, #0x19]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r4
	movs r0, #0x34
	b _0807A91C
_0807A910:
	ldrb r0, [r4, #0x19]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r4
	movs r0, #0x84
_0807A91C:
	strh r0, [r1, #0x2e]
	cmp r3, #1
	bne _0807A924
	b _0807AD3E
_0807A924:
	cmp r3, #2
	beq _0807A92A
	b _0807AE42
_0807A92A:
	adds r0, r4, #0
	adds r0, #0x25
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807A936
	b _0807AD56
_0807A936:
	b _0807AD60
_0807A938:
	ldr r2, _0807A994 @ =gNonGameplayRam
	ldrh r1, [r2, #4]
	movs r0, #0xc0
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	bne _0807AA18
	movs r0, #0x10
	strb r0, [r4, #7]
	adds r0, r4, #0
	adds r0, #0x25
	ldrb r2, [r0]
	cmp r2, #0
	bne _0807A9DA
	ldr r0, _0807A998 @ =0x03000031
	ldrb r1, [r0]
	movs r3, #0x84
	lsls r3, r3, #2
	adds r0, r4, r3
	strb r1, [r0]
	ldr r0, _0807A99C @ =0x03000032
	ldrb r1, [r0]
	adds r3, #1
	adds r0, r4, r3
	strb r1, [r0]
	ldr r1, _0807A9A0 @ =0x00000212
	adds r0, r4, r1
	ldr r1, _0807A9A4 @ =gCurrentArea
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	beq _0807A9A8
	movs r0, #0xb
	strb r0, [r4, #7]
	subs r3, #0x5b
	adds r0, r4, r3
	strb r2, [r0]
	movs r1, #0xda
	lsls r1, r1, #1
	adds r0, r4, r1
	strb r2, [r0]
	subs r3, #1
	adds r0, r4, r3
	strb r2, [r0]
	b _0807A9B8
	.align 2, 0
_0807A994: .4byte gNonGameplayRam
_0807A998: .4byte 0x03000031
_0807A99C: .4byte 0x03000032
_0807A9A0: .4byte 0x00000212
_0807A9A4: .4byte gCurrentArea
_0807A9A8:
	movs r1, #0xd5
	lsls r1, r1, #1
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807A9B8
	movs r0, #0xf
	strb r0, [r4, #7]
_0807A9B8:
	movs r2, #0xd5
	lsls r2, r2, #1
	adds r0, r4, r2
	movs r1, #0
	strb r1, [r0]
	movs r3, #0xd4
	lsls r3, r3, #1
	adds r0, r4, r3
	strb r1, [r0]
	subs r2, #1
	adds r0, r4, r2
	strb r1, [r0]
	movs r2, #0
	strh r1, [r4, #0xc]
	adds r3, #0x71
	adds r0, r4, r3
	strb r2, [r0]
_0807A9DA:
	movs r0, #1
	bl ClearTextGraphics
	ldr r2, _0807AA14 @ =gNonGameplayRam
	ldrb r1, [r2, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	adds r0, #0x36
	movs r3, #0
	strb r3, [r0]
	movs r0, #1
	strb r0, [r2, #0x1a]
	ldrb r0, [r2, #0x18]
	lsls r0, r0, #1
	adds r1, r2, #0
	adds r1, #0x12
	adds r0, r0, r1
	movs r4, #0
	strh r3, [r0]
	ldrb r0, [r2, #0x18]
	lsls r0, r0, #1
	subs r1, #4
	adds r0, r0, r1
	strh r3, [r0]
	strb r4, [r2, #0x1c]
	b _0807AE40
	.align 2, 0
_0807AA14: .4byte gNonGameplayRam
_0807AA18:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	bne _0807AA22
	b _0807AE42
_0807AA22:
	movs r0, #0x40
	eors r0, r1
	strh r0, [r4, #4]
	b _0807AE42
_0807AA2A:
	ldr r1, _0807AA44 @ =gNonGameplayRam
	movs r0, #0x94
	lsls r0, r0, #2
	adds r4, r1, r0
	ldrb r2, [r4]
	movs r0, #1
	movs r3, #0
	orrs r0, r2
	strb r0, [r4]
	strb r3, [r1, #6]
	movs r0, #0xc
	strb r0, [r1, #7]
	b _0807AE42
	.align 2, 0
_0807AA44: .4byte gNonGameplayRam
_0807AA48:
	ldr r5, _0807AA78 @ =gNonGameplayRam
	movs r1, #0x94
	lsls r1, r1, #2
	adds r0, r5, r1
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _0807AA5C
	b _0807AE42
_0807AA5C:
	ldr r0, _0807AA7C @ =gCurrentArea
	ldrb r1, [r0]
	ldr r2, _0807AA80 @ =0x00000212
	adds r0, r5, r2
	movs r4, #0
	strb r1, [r0]
	movs r0, #1
	bl unk_75988
	strb r4, [r5, #6]
	movs r0, #0xd
	strb r0, [r5, #7]
	b _0807AE42
	.align 2, 0
_0807AA78: .4byte gNonGameplayRam
_0807AA7C: .4byte gCurrentArea
_0807AA80: .4byte 0x00000212
_0807AA84:
	ldr r6, _0807AAC8 @ =gNonGameplayRam
	ldrb r0, [r6, #6]
	cmp r0, #4
	bhi _0807AA8E
	b _0807AE42
_0807AA8E:
	ldr r3, _0807AACC @ =0x00000212
	adds r4, r6, r3
	ldrb r0, [r4]
	ldr r5, _0807AAD0 @ =0x02034000
	adds r1, r5, #0
	bl GetMinimapData
	ldrb r0, [r4]
	bl MinimapSetVisitedTilesAndCollectedItems
	ldr r1, _0807AAD4 @ =0x040000D4
	str r5, [r1]
	ldr r0, _0807AAD8 @ =0x0600E000
	str r0, [r1, #4]
	ldr r0, _0807AADC @ =0x80000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r1, #0
	movs r0, #0xe
	strb r0, [r6, #7]
	strb r1, [r6, #6]
	movs r4, #0x94
	lsls r4, r4, #2
	adds r2, r6, r4
	ldrb r1, [r2]
	movs r0, #8
	orrs r0, r1
	strb r0, [r2]
	b _0807AE42
	.align 2, 0
_0807AAC8: .4byte gNonGameplayRam
_0807AACC: .4byte 0x00000212
_0807AAD0: .4byte 0x02034000
_0807AAD4: .4byte 0x040000D4
_0807AAD8: .4byte 0x0600E000
_0807AADC: .4byte 0x80000400
_0807AAE0:
	ldr r2, _0807AB10 @ =gNonGameplayRam
	movs r1, #0x94
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrb r1, [r0]
	cmp r1, #0
	beq _0807AAF0
	b _0807AE42
_0807AAF0:
	movs r4, #0xdb
	lsls r4, r4, #1
	adds r3, r2, r4
	movs r0, #1
	strb r0, [r3]
	movs r3, #0xda
	lsls r3, r3, #1
	adds r0, r2, r3
	strb r1, [r0]
	subs r4, #1
	adds r0, r2, r4
	strb r1, [r0]
	strb r1, [r2, #6]
	movs r0, #0x10
	strb r0, [r2, #7]
	b _0807AE42
	.align 2, 0
_0807AB10: .4byte gNonGameplayRam
_0807AB14:
	ldr r4, _0807AB38 @ =gNonGameplayRam
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r4, r1
	ldrb r0, [r0]
	ldr r2, _0807AB3C @ =0x00000211
	adds r1, r4, r2
	ldrb r1, [r1]
	bl NavigationConversationScrollMapToDestination
	cmp r0, #0
	bne _0807AB2E
	b _0807AE42
_0807AB2E:
	movs r0, #0
	strb r0, [r4, #6]
	movs r0, #0x10
	strb r0, [r4, #7]
	b _0807AE42
	.align 2, 0
_0807AB38: .4byte gNonGameplayRam
_0807AB3C: .4byte 0x00000211
_0807AB40:
	ldr r4, _0807ABAC @ =gNonGameplayRam
	ldrb r0, [r4, #6]
	cmp r0, #0x10
	bhi _0807AB4A
	b _0807AE42
_0807AB4A:
	movs r0, #0
	bl NavigationConversationUpdateTarget
	ldrb r1, [r4, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	movs r3, #0
	movs r1, #8
	strh r1, [r0, #0x2e]
	ldrb r0, [r4, #0x19]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r4
	ldr r2, _0807ABB0 @ =0x085766E0
	ldrb r0, [r4, #0x18]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	strh r0, [r1, #0x2c]
	ldrb r1, [r4, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0x36
	movs r1, #0xb
	strb r1, [r0]
	ldrb r1, [r4, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0x34
	strb r3, [r0]
	ldrb r1, [r4, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0x35
	strb r3, [r0]
	movs r0, #1
	strb r0, [r4, #7]
	strb r3, [r4, #6]
	b _0807AE42
	.align 2, 0
_0807ABAC: .4byte gNonGameplayRam
_0807ABB0: .4byte 0x085766E0
_0807ABB4:
	ldr r5, _0807AC24 @ =gNonGameplayRam
	movs r3, #0x9a
	lsls r3, r3, #2
	adds r1, r5, r3
	ldrh r3, [r1]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r4, #0
	movs r2, #0
	movs r4, #0
	orrs r0, r3
	strh r0, [r1]
	movs r0, #8
	strb r0, [r5, #0x1d]
	strb r2, [r5, #0x1e]
	strb r2, [r5, #0x1f]
	ldrh r0, [r5, #4]
	movs r1, #1
	orrs r0, r1
	strh r0, [r5, #4]
	strb r2, [r5, #0x18]
	strb r1, [r5, #0x19]
	strb r2, [r5, #0x17]
	adds r0, r5, #0
	adds r0, #0x24
	strb r1, [r0]
	adds r0, #0x1e
	strb r2, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x34
	strb r2, [r0]
	ldrb r1, [r5, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x35
	strb r2, [r0]
	adds r0, r5, #0
	adds r0, #0x20
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	strh r4, [r5, #0x22]
	movs r0, #5
	strb r0, [r5, #0x1c]
	ldrb r0, [r5, #7]
	adds r0, #1
	strb r0, [r5, #7]
	strb r2, [r5, #6]
	b _0807AE42
	.align 2, 0
_0807AC24: .4byte gNonGameplayRam
_0807AC28:
	ldr r4, _0807AC44 @ =gNonGameplayRam
	adds r5, r4, #0
	adds r5, #0x24
	ldrb r0, [r5]
	cmp r0, #0
	bne _0807AC36
	b _0807AE42
_0807AC36:
	cmp r0, #2
	bne _0807AC48
	movs r1, #0
	movs r0, #0x13
_0807AC3E:
	strb r0, [r4, #7]
	strb r1, [r4, #6]
	b _0807AE42
	.align 2, 0
_0807AC44: .4byte gNonGameplayRam
_0807AC48:
	movs r0, #1
	bl unk_7a0fc
	cmp r0, #0
	bne _0807AC54
	b _0807AE42
_0807AC54:
	movs r3, #0
	movs r2, #2
	strb r2, [r5]
	movs r0, #1
	strb r0, [r4, #0x1a]
	ldrb r1, [r4, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0x36
	strb r2, [r0]
	ldrb r1, [r4, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0x34
	strb r3, [r0]
	ldrb r1, [r4, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0x35
	strb r3, [r0]
	ldrb r1, [r4, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	movs r2, #0
	movs r1, #0x8c
	strh r1, [r0, #0x2c]
	ldrb r1, [r4, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	movs r1, #0x84
	strh r1, [r0, #0x2e]
	adds r0, r4, #0
	adds r0, #0x25
	strb r2, [r0]
	b _0807AE42
_0807ACAE:
	movs r3, #0
	ldr r2, _0807ACE4 @ =gNonGameplayRam
	ldrb r1, [r2, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r5, #0
	movs r1, #0x8c
	strh r1, [r0, #0x2c]
	ldr r0, _0807ACE8 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	beq _0807ACEC
	adds r5, r4, #0
	adds r5, #0x25
	ldrb r0, [r5]
	movs r2, #1
	eors r0, r2
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r3, r1, #0x1f
	strb r2, [r5]
	b _0807AD14
	.align 2, 0
_0807ACE4: .4byte gNonGameplayRam
_0807ACE8: .4byte gChangedInput
_0807ACEC:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0807AD04
	adds r1, r4, #0
	adds r1, #0x25
	ldrb r0, [r1]
	cmp r0, #0
	beq _0807AD00
	movs r3, #1
_0807AD00:
	strb r5, [r1]
	b _0807AD14
_0807AD04:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0807AD14
	movs r3, #2
	movs r0, #0x14
	strb r0, [r4, #7]
	strb r5, [r4, #6]
_0807AD14:
	adds r0, r4, #0
	adds r0, #0x25
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807AD2C
	ldrb r0, [r4, #0x19]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r4
	movs r0, #0x34
	b _0807AD38
_0807AD2C:
	ldrb r0, [r4, #0x19]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r4
	movs r0, #0x84
_0807AD38:
	strh r0, [r1, #0x2e]
	cmp r3, #1
	bne _0807AD48
_0807AD3E:
	movs r0, #0xfd
	lsls r0, r0, #1
	bl SoundPlay
	b _0807AE42
_0807AD48:
	cmp r3, #2
	bne _0807AE42
	adds r0, r4, #0
	adds r0, #0x25
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807AD60
_0807AD56:
	movs r0, #0x81
	lsls r0, r0, #2
	bl SoundPlay
	b _0807AE42
_0807AD60:
	ldr r0, _0807AD68 @ =0x00000205
	bl SoundPlay
	b _0807AE42
	.align 2, 0
_0807AD68: .4byte 0x00000205
_0807AD6C:
	ldr r4, _0807ADDC @ =gNonGameplayRam
	movs r5, #0
	movs r0, #0x15
	strb r0, [r4, #7]
	adds r0, r4, #0
	adds r0, #0x25
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807ADA4
	ldr r1, _0807ADE0 @ =gPreviousNavigationConversation
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0xd5
	lsls r1, r1, #1
	adds r0, r4, r1
	strb r5, [r0]
	movs r2, #0xd4
	lsls r2, r2, #1
	adds r0, r4, r2
	strb r5, [r0]
	ldr r3, _0807ADE4 @ =0x000001A9
	adds r0, r4, r3
	strb r5, [r0]
	movs r1, #0
	strh r5, [r4, #0xc]
	adds r2, #0x71
	adds r0, r4, r2
	strb r1, [r0]
_0807ADA4:
	movs r0, #1
	bl ClearTextGraphics
	ldrb r1, [r4, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, #0x36
	strb r5, [r0]
	movs r0, #1
	strb r0, [r4, #0x1a]
	ldrb r0, [r4, #0x18]
	lsls r0, r0, #1
	adds r1, r4, #0
	adds r1, #0x12
	adds r0, r0, r1
	movs r2, #0
	strh r5, [r0]
	ldrb r0, [r4, #0x18]
	lsls r0, r0, #1
	subs r1, #4
	adds r0, r0, r1
	strh r5, [r0]
	strb r2, [r4, #0x1c]
	strb r2, [r4, #6]
	b _0807AE42
	.align 2, 0
_0807ADDC: .4byte gNonGameplayRam
_0807ADE0: .4byte gPreviousNavigationConversation
_0807ADE4: .4byte 0x000001A9
_0807ADE8:
	ldr r2, _0807AE4C @ =gNonGameplayRam
	ldrb r1, [r2, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r4, #0
	movs r1, #8
	strh r1, [r0, #0x2e]
	ldrb r0, [r2, #0x19]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	ldr r3, _0807AE50 @ =0x085766E0
	ldrb r0, [r2, #0x18]
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrb r0, [r0]
	strh r0, [r1, #0x2c]
	ldrb r1, [r2, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	adds r0, #0x36
	movs r1, #0xb
	strb r1, [r0]
	ldrb r1, [r2, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	adds r0, #0x34
	strb r4, [r0]
	ldrb r1, [r2, #0x19]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	adds r0, #0x35
	strb r4, [r0]
	movs r0, #1
	strb r0, [r2, #7]
_0807AE40:
	strb r4, [r2, #6]
_0807AE42:
	adds r0, r7, #0
_0807AE44:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807AE4C: .4byte gNonGameplayRam
_0807AE50: .4byte 0x085766E0

	thumb_func_start NavigationConversationSetupOam
NavigationConversationSetupOam: @ 0x0807AE54
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r6, _0807AF60 @ =gNonGameplayRam
	adds r1, r6, #0
	adds r1, #0x5e
	movs r0, #0
	mov sb, r0
	movs r2, #0
	mov sl, r2
	movs r0, #0x7c
	strh r0, [r1]
	subs r1, #2
	movs r0, #0xcc
	strh r0, [r1]
	subs r1, #2
	movs r0, #0x4b
	strb r0, [r1]
	adds r0, r6, #0
	adds r0, #0x58
	mov r3, sb
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	movs r0, #1
	bl PauseScreenSetNavigationTextPanelOam
	movs r4, #0x73
	adds r4, r4, r6
	mov r8, r4
	ldrb r1, [r4]
	movs r2, #0xd
	rsbs r2, r2, #0
	adds r0, r2, #0
	ands r0, r1
	movs r5, #4
	orrs r0, r5
	strb r0, [r4]
	movs r0, #0x43
	adds r0, r0, r6
	mov ip, r0
	ldrb r1, [r0]
	movs r7, #4
	rsbs r7, r7, #0
	adds r0, r7, #0
	ands r0, r1
	ands r0, r2
	mov r1, ip
	strb r0, [r1]
	movs r3, #0x5b
	adds r3, r3, r6
	ldrb r1, [r3]
	adds r0, r7, #0
	ands r0, r1
	ands r0, r2
	strb r0, [r3]
	movs r4, #0x67
	adds r4, r4, r6
	ldrb r1, [r4]
	adds r0, r7, #0
	ands r0, r1
	ands r0, r2
	strb r0, [r4]
	movs r5, #0x85
	lsls r5, r5, #2
	adds r1, r6, r5
	ldr r0, _0807AF64 @ =0x085766D4
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	mov r0, sb
	strb r0, [r6, #0x1a]
	mov r1, sl
	strh r1, [r6, #4]
	adds r5, r6, #0
	adds r5, #0xa3
	ldrb r0, [r5]
	adds r4, r2, #0
	ands r4, r0
	movs r3, #4
	orrs r4, r3
	strb r4, [r5]
	adds r3, r6, #0
	adds r3, #0x4f
	ldrb r1, [r3]
	adds r0, r7, #0
	ands r0, r1
	ands r0, r2
	strb r0, [r3]
	adds r3, #0x48
	ldrb r1, [r3]
	adds r0, r7, #0
	ands r0, r1
	ands r0, r2
	strb r0, [r3]
	subs r3, #0xc
	ldrb r1, [r3]
	adds r0, r7, #0
	ands r0, r1
	ands r0, r2
	strb r0, [r3]
	subs r3, #0xc
	ldrb r1, [r3]
	adds r0, r7, #0
	ands r0, r1
	ands r0, r2
	strb r0, [r3]
	adds r0, r6, #0
	adds r0, #0x82
	movs r2, #0xd4
	strh r2, [r0]
	subs r0, #2
	movs r1, #0x44
	strh r1, [r0]
	subs r0, #0xa
	strh r2, [r0]
	subs r0, #2
	strh r1, [r0]
	ldrb r0, [r6]
	cmp r0, #0
	beq _0807AF68
	mov r1, r8
	ldrb r0, [r1]
	adds r1, r7, #0
	ands r1, r0
	movs r0, #1
	orrs r1, r0
	mov r2, r8
	strb r1, [r2]
	ands r4, r7
	orrs r4, r0
	strb r4, [r5]
	b _0807AF7C
	.align 2, 0
_0807AF60: .4byte gNonGameplayRam
_0807AF64: .4byte 0x085766D4
_0807AF68:
	ands r4, r7
	movs r2, #2
	orrs r4, r2
	strb r4, [r5]
	mov r3, r8
	ldrb r1, [r3]
	adds r0, r7, #0
	ands r0, r1
	orrs r0, r2
	strb r0, [r3]
_0807AF7C:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NavigationConversationUpdateTarget
NavigationConversationUpdateTarget: @ 0x0807AF8C
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	bl NavigationConverstionFindTarget
	cmp r0, #0
	beq _0807AFF2
	cmp r4, #0
	beq _0807AFF2
	ldr r1, _0807AFCC @ =gNonGameplayRam
	movs r2, #0xd4
	lsls r2, r2, #1
	adds r0, r1, r2
	movs r2, #0
	strb r2, [r0]
	ldr r3, _0807AFD0 @ =0x000001A9
	adds r0, r1, r3
	strb r2, [r0]
	ldr r2, _0807AFD4 @ =0x0000020F
	adds r0, r1, r2
	ldrb r0, [r0]
	adds r2, r1, #0
	cmp r0, #1
	bne _0807AFDC
	ldr r1, _0807AFD8 @ =0x085767EC
	adds r3, #0x6a
	adds r0, r2, r3
	ldrb r0, [r0]
	adds r0, r0, r1
	ldrb r1, [r0]
	b _0807AFEA
	.align 2, 0
_0807AFCC: .4byte gNonGameplayRam
_0807AFD0: .4byte 0x000001A9
_0807AFD4: .4byte 0x0000020F
_0807AFD8: .4byte 0x085767EC
_0807AFDC:
	ldr r1, _0807AFF8 @ =0x00000212
	adds r0, r2, r1
	ldrb r0, [r0]
	movs r1, #0xe
	cmp r0, #0
	bne _0807AFEA
	movs r1, #0xf
_0807AFEA:
	movs r3, #0xd5
	lsls r3, r3, #1
	adds r0, r2, r3
	strb r1, [r0]
_0807AFF2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807AFF8: .4byte 0x00000212

	thumb_func_start NavigationConverstionFindTarget
NavigationConverstionFindTarget: @ 0x0807AFFC
	push {r4, r5, r6, r7, lr}
	ldr r2, _0807B03C @ =gNonGameplayRam
	ldr r1, _0807B040 @ =0x0000020F
	adds r0, r2, r1
	movs r3, #0
	strb r3, [r0]
	movs r0, #0x83
	lsls r0, r0, #2
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _0807B044 @ =0x0000020D
	adds r1, r2, r0
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	ldr r1, _0807B048 @ =0x0000020E
	adds r0, r2, r1
	strb r3, [r0]
	adds r1, #5
	adds r0, r2, r1
	strb r3, [r0]
	ldr r0, _0807B04C @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r5, r2, #0
	cmp r0, #4
	bne _0807B060
_0807B036:
	movs r0, #0
	b _0807B146
	.align 2, 0
_0807B03C: .4byte gNonGameplayRam
_0807B040: .4byte 0x0000020F
_0807B044: .4byte 0x0000020D
_0807B048: .4byte 0x0000020E
_0807B04C: .4byte gPauseScreenFlag
_0807B050:
	movs r4, #1
	ldrb r1, [r1, #4]
	ldr r3, _0807B05C @ =0x00000213
	adds r0, r5, r3
	strb r1, [r0]
	b _0807B086
	.align 2, 0
_0807B05C: .4byte 0x00000213
_0807B060:
	ldr r0, _0807B0B8 @ =0x0300004C
	strb r3, [r0]
	movs r4, #0
	movs r2, #0
	adds r7, r0, #0
	ldr r6, _0807B0BC @ =0x085766E4
	movs r1, #0x88
	lsls r1, r1, #2
	adds r0, r5, r1
	ldrb r3, [r0]
	adds r1, r6, #0
_0807B076:
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r3, r0
	beq _0807B050
	adds r1, #8
	adds r2, #1
	cmp r2, #0x20
	bls _0807B076
_0807B086:
	cmp r4, #0
	beq _0807B036
	lsls r0, r2, #3
	adds r2, r0, r6
	ldrb r0, [r2, #1]
	strb r0, [r7]
	ldr r1, _0807B0C0 @ =0x08576066
	ldrb r0, [r7]
	adds r0, r0, r1
	ldrb r0, [r0]
	ldr r3, _0807B0C4 @ =0x0000020E
	adds r6, r5, r3
	strb r0, [r6]
	ldr r1, _0807B0C8 @ =0x00000212
	adds r3, r5, r1
	ldrb r1, [r3]
	adds r4, r0, #0
	cmp r1, r4
	bne _0807B0D0
	ldrb r3, [r2, #2]
	ldrb r2, [r2, #3]
	ldr r0, _0807B0CC @ =0x0000020F
	adds r1, r5, r0
	movs r0, #1
	b _0807B11E
	.align 2, 0
_0807B0B8: .4byte 0x0300004C
_0807B0BC: .4byte 0x085766E4
_0807B0C0: .4byte 0x08576066
_0807B0C4: .4byte 0x0000020E
_0807B0C8: .4byte 0x00000212
_0807B0CC: .4byte 0x0000020F
_0807B0D0:
	cmp r1, #0
	bne _0807B0F4
	ldr r2, _0807B0EC @ =0x08576218
	ldrb r0, [r6]
	lsls r0, r0, #1
	adds r1, r0, r2
	ldrb r3, [r1]
	adds r2, #1
	adds r0, r0, r2
	ldrb r2, [r0]
	ldr r0, _0807B0F0 @ =0x0000020F
	adds r1, r5, r0
	movs r0, #2
	b _0807B11E
	.align 2, 0
_0807B0EC: .4byte 0x08576218
_0807B0F0: .4byte 0x0000020F
_0807B0F4:
	ldr r0, _0807B110 @ =0x08576226
	ldrb r1, [r3]
	lsls r1, r1, #1
	adds r2, r1, r0
	ldrb r3, [r2]
	adds r0, #1
	adds r1, r1, r0
	ldrb r2, [r1]
	cmp r4, #0
	bne _0807B118
	ldr r0, _0807B114 @ =0x0000020F
	adds r1, r5, r0
	movs r0, #2
	b _0807B11E
	.align 2, 0
_0807B110: .4byte 0x08576226
_0807B114: .4byte 0x0000020F
_0807B118:
	ldr r0, _0807B14C @ =0x0000020F
	adds r1, r5, r0
	movs r0, #3
_0807B11E:
	strb r0, [r1]
	subs r1, r3, #1
	movs r3, #0x83
	lsls r3, r3, #2
	adds r0, r5, r3
	strb r1, [r0]
	subs r1, r2, #1
	ldr r2, _0807B150 @ =0x0000020D
	adds r0, r5, r2
	strb r1, [r0]
	movs r4, #0
	ldr r0, _0807B154 @ =gPreviousNavigationConversation
	adds r3, #0x14
	adds r1, r5, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _0807B144
	movs r4, #1
_0807B144:
	adds r0, r4, #0
_0807B146:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807B14C: .4byte 0x0000020F
_0807B150: .4byte 0x0000020D
_0807B154: .4byte gPreviousNavigationConversation

	thumb_func_start NavigationConversionScrollToTarget
NavigationConversionScrollToTarget: @ 0x0807B158
	push {r4, r5, r6, r7, lr}
	ldr r1, _0807B178 @ =gNonGameplayRam
	ldrb r0, [r1, #8]
	adds r0, #1
	strb r0, [r1, #8]
	ldrb r0, [r1, #9]
	adds r7, r1, #0
	cmp r0, #0xd
	bls _0807B16C
	b _0807B4BC
_0807B16C:
	lsls r0, r0, #2
	ldr r1, _0807B17C @ =_0807B180
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807B178: .4byte gNonGameplayRam
_0807B17C: .4byte _0807B180
_0807B180: @ jump table
	.4byte _0807B4BC @ case 0
	.4byte _0807B1B8 @ case 1
	.4byte _0807B226 @ case 2
	.4byte _0807B236 @ case 3
	.4byte _0807B46C @ case 4
	.4byte _0807B23E @ case 5
	.4byte _0807B300 @ case 6
	.4byte _0807B30A @ case 7
	.4byte _0807B32A @ case 8
	.4byte _0807B400 @ case 9
	.4byte _0807B420 @ case 10
	.4byte _0807B46C @ case 11
	.4byte _0807B488 @ case 12
	.4byte _0807B4BC @ case 13
_0807B1B8:
	movs r2, #0
	movs r1, #0x83
	lsls r1, r1, #2
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0xff
	beq _0807B200
	ldr r3, _0807B204 @ =0x0000020D
	adds r0, r7, r3
	ldrb r0, [r0]
	cmp r0, #0xff
	beq _0807B200
	movs r4, #0xd5
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r1, _0807B208 @ =0x085767EC
	ldrb r0, [r0]
	ldrb r3, [r1]
	cmp r0, r3
	beq _0807B200
	ldrb r4, [r1, #1]
	cmp r0, r4
	beq _0807B200
	ldrb r3, [r1, #2]
	cmp r0, r3
	beq _0807B200
	ldrb r1, [r1, #3]
	cmp r0, r1
	beq _0807B200
	cmp r0, #0xe
	beq _0807B200
	cmp r0, #0xf
	bne _0807B1FC
	movs r2, #1
_0807B1FC:
	cmp r2, #0
	beq _0807B20C
_0807B200:
	movs r0, #0xc
	b _0807B4BA
	.align 2, 0
_0807B204: .4byte 0x0000020D
_0807B208: .4byte 0x085767EC
_0807B20C:
	movs r0, #2
	strb r0, [r7, #9]
	ldrh r1, [r7, #4]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r4, #0
	orrs r0, r1
	movs r2, #0x80
	lsls r2, r2, #2
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r7, #4]
	b _0807B4BC
_0807B226:
	ldrh r1, [r7, #4]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	bne _0807B234
	b _0807B4BC
_0807B234:
	b _0807B4B2
_0807B236:
	movs r0, #0
	strb r0, [r7, #8]
	movs r0, #4
	b _0807B4BA
_0807B23E:
	movs r3, #0x83
	lsls r3, r3, #2
	adds r0, r7, r3
	ldrb r0, [r0]
	ldr r4, _0807B270 @ =0x0000020D
	adds r1, r7, r4
	ldrb r1, [r1]
	bl NavigationConversationScrollMapToDestination
	cmp r0, #0
	bne _0807B256
	b _0807B4BC
_0807B256:
	ldr r1, _0807B274 @ =0x0000020F
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807B280
	ldr r1, _0807B278 @ =0x085767EC
	ldr r2, _0807B27C @ =0x00000213
	adds r0, r7, r2
	ldrb r0, [r0]
	adds r0, r0, r1
	ldrb r2, [r0]
	b _0807B28E
	.align 2, 0
_0807B270: .4byte 0x0000020D
_0807B274: .4byte 0x0000020F
_0807B278: .4byte 0x085767EC
_0807B27C: .4byte 0x00000213
_0807B280:
	ldr r3, _0807B2B8 @ =0x00000212
	adds r0, r7, r3
	ldrb r0, [r0]
	movs r2, #0xe
	cmp r0, #0
	bne _0807B28E
	movs r2, #0xf
_0807B28E:
	ldr r5, _0807B2BC @ =gNonGameplayRam
	movs r4, #0xd5
	lsls r4, r4, #1
	adds r0, r5, r4
	movs r1, #0
	strb r2, [r0]
	movs r2, #0xd4
	lsls r2, r2, #1
	adds r0, r5, r2
	strb r1, [r0]
	ldr r3, _0807B2C0 @ =0x000001A9
	adds r0, r5, r3
	strb r1, [r0]
	strb r1, [r5, #8]
	adds r4, #0x65
	adds r0, r5, r4
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807B2C4
	movs r0, #0xc
	b _0807B2C6
	.align 2, 0
_0807B2B8: .4byte 0x00000212
_0807B2BC: .4byte gNonGameplayRam
_0807B2C0: .4byte 0x000001A9
_0807B2C4:
	movs r0, #6
_0807B2C6:
	strb r0, [r5, #9]
	ldr r0, _0807B2F0 @ =0x00000119
	bl StopSound
	ldr r1, _0807B2F4 @ =gNonGameplayRam
	movs r2, #0x83
	lsls r2, r2, #2
	adds r0, r1, r2
	ldrb r2, [r0]
	movs r3, #0x96
	lsls r3, r3, #2
	adds r0, r1, r3
	strb r2, [r0]
	ldr r4, _0807B2F8 @ =0x0000020D
	adds r0, r1, r4
	ldrb r0, [r0]
	ldr r2, _0807B2FC @ =0x00000259
	adds r1, r1, r2
	strb r0, [r1]
	b _0807B4BC
	.align 2, 0
_0807B2F0: .4byte 0x00000119
_0807B2F4: .4byte gNonGameplayRam
_0807B2F8: .4byte 0x0000020D
_0807B2FC: .4byte 0x00000259
_0807B300:
	ldrb r0, [r7, #8]
	cmp r0, #0x3c
	bhi _0807B308
	b _0807B4BC
_0807B308:
	b _0807B4B2
_0807B30A:
	movs r3, #0x94
	lsls r3, r3, #2
	adds r2, r7, r3
	movs r1, #0
	movs r0, #1
	strb r0, [r2]
	movs r4, #0xd5
	lsls r4, r4, #1
	adds r0, r7, r4
	strb r1, [r0]
	movs r2, #0xdb
	lsls r2, r2, #1
	adds r0, r7, r2
	strb r1, [r0]
	strb r1, [r7, #8]
	b _0807B4B6
_0807B32A:
	movs r3, #0x94
	lsls r3, r3, #2
	adds r0, r7, r3
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _0807B33C
	b _0807B4BC
_0807B33C:
	ldr r4, _0807B36C @ =0x0000020F
	adds r0, r7, r4
	ldrb r0, [r0]
	cmp r0, #3
	bne _0807B34E
	ldr r0, _0807B370 @ =0x0000020E
	adds r1, r7, r0
	movs r0, #0
	strb r0, [r1]
_0807B34E:
	ldr r1, _0807B370 @ =0x0000020E
	adds r3, r7, r1
	ldrb r0, [r3]
	cmp r0, #0
	bne _0807B37C
	ldr r2, _0807B374 @ =0x08576218
	ldr r4, _0807B378 @ =0x00000212
	adds r3, r7, r4
	ldrb r0, [r3]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	subs r0, #1
	subs r4, #2
	b _0807B38C
	.align 2, 0
_0807B36C: .4byte 0x0000020F
_0807B370: .4byte 0x0000020E
_0807B374: .4byte 0x08576218
_0807B378: .4byte 0x00000212
_0807B37C:
	ldr r2, _0807B3E0 @ =0x08576226
	ldrb r0, [r3]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	subs r0, #1
	movs r4, #0x84
	lsls r4, r4, #2
_0807B38C:
	adds r1, r7, r4
	strb r0, [r1]
	ldrb r0, [r3]
	lsls r0, r0, #1
	adds r2, #1
	adds r0, r0, r2
	ldrb r0, [r0]
	subs r0, #1
	ldr r2, _0807B3E4 @ =0x00000211
	adds r1, r7, r2
	strb r0, [r1]
	ldr r3, _0807B3E8 @ =0x0000020E
	adds r0, r7, r3
	ldrb r0, [r0]
	ldr r1, _0807B3EC @ =0x00000212
	adds r4, r7, r1
	movs r6, #0
	strb r0, [r4]
	ldrb r0, [r4]
	ldr r5, _0807B3F0 @ =0x02034000
	adds r1, r5, #0
	bl GetMinimapData
	ldrb r0, [r4]
	bl MinimapSetVisitedTilesAndCollectedItems
	ldr r1, _0807B3F4 @ =0x040000D4
	str r5, [r1]
	ldr r0, _0807B3F8 @ =0x0600E000
	str r0, [r1, #4]
	ldr r0, _0807B3FC @ =0x80000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r0, #1
	bl unk_75988
	movs r0, #0
	bl NavigationConversationUpdateTarget
	strb r6, [r7, #8]
	b _0807B4B6
	.align 2, 0
_0807B3E0: .4byte 0x08576226
_0807B3E4: .4byte 0x00000211
_0807B3E8: .4byte 0x0000020E
_0807B3EC: .4byte 0x00000212
_0807B3F0: .4byte 0x02034000
_0807B3F4: .4byte 0x040000D4
_0807B3F8: .4byte 0x0600E000
_0807B3FC: .4byte 0x80000400
_0807B400:
	ldrb r0, [r7, #8]
	cmp r0, #8
	bls _0807B4BC
	movs r0, #0
	strb r0, [r7, #8]
	ldrb r0, [r7, #9]
	adds r0, #1
	strb r0, [r7, #9]
	movs r3, #0x94
	lsls r3, r3, #2
	adds r2, r7, r3
	ldrb r1, [r2]
	movs r0, #8
	orrs r0, r1
	strb r0, [r2]
	b _0807B4BC
_0807B420:
	movs r4, #0x94
	lsls r4, r4, #2
	adds r0, r7, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807B4BC
	ldr r1, _0807B460 @ =0x0000020E
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807B442
	ldr r2, _0807B464 @ =0x00000212
	adds r0, r7, r2
	ldrb r0, [r0]
	movs r2, #0xf
	cmp r0, #0
	bne _0807B444
_0807B442:
	movs r2, #0xe
_0807B444:
	movs r3, #0xdb
	lsls r3, r3, #1
	adds r0, r7, r3
	movs r1, #0
	strb r2, [r0]
	movs r4, #0xda
	lsls r4, r4, #1
	adds r0, r7, r4
	strb r1, [r0]
	ldr r2, _0807B468 @ =0x000001B5
	adds r0, r7, r2
	strb r1, [r0]
	strb r1, [r7, #8]
	b _0807B4B6
	.align 2, 0
_0807B460: .4byte 0x0000020E
_0807B464: .4byte 0x00000212
_0807B468: .4byte 0x000001B5
_0807B46C:
	ldrb r0, [r7, #8]
	cmp r0, #0x1e
	bls _0807B4BC
	movs r0, #0
	strb r0, [r7, #8]
	movs r0, #5
	strb r0, [r7, #9]
	ldr r0, _0807B484 @ =0x00000119
	bl SoundPlay
	b _0807B4BC
	.align 2, 0
_0807B484: .4byte 0x00000119
_0807B488:
	adds r2, r7, #0
	ldrh r1, [r2, #4]
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _0807B49E
	adds r0, r3, #0
	eors r0, r1
	strh r0, [r2, #4]
_0807B49E:
	ldrh r1, [r2, #4]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _0807B4B2
	adds r0, r3, #0
	eors r0, r1
	strh r0, [r2, #4]
_0807B4B2:
	movs r0, #0
	strb r0, [r7, #8]
_0807B4B6:
	ldrb r0, [r7, #9]
	adds r0, #1
_0807B4BA:
	strb r0, [r7, #9]
_0807B4BC:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NavigationConversationScrollMapToDestination
NavigationConversationScrollMapToDestination: @ 0x0807B4C4
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r2, #1
	mov ip, r2
	movs r2, #0xf
	subs r2, r2, r0
	lsls r2, r2, #3
	movs r3, #0x80
	lsls r3, r3, #2
	subs r5, r3, r2
	movs r0, #0xa
	subs r0, r0, r1
	lsls r0, r0, #3
	subs r6, r3, r0
	ldr r1, _0807B520 @ =gBackgroundPositions
	ldrh r4, [r1, #0xc]
	subs r2, r4, r5
	ldrh r0, [r1, #0xe]
	subs r3, r0, r6
	cmp r2, #0
	bge _0807B4F6
	rsbs r2, r2, #0
_0807B4F6:
	cmp r3, #0
	bge _0807B4FC
	rsbs r3, r3, #0
_0807B4FC:
	asrs r0, r2, #4
	adds r7, r0, #1
	asrs r0, r3, #4
	adds r3, r0, #1
	subs r2, r4, r5
	cmp r2, #0
	beq _0807B534
	movs r0, #0
	mov ip, r0
	cmp r2, #0
	ble _0807B524
	subs r0, r4, r7
	strh r0, [r1, #0xc]
	ldrh r0, [r1, #0xc]
	cmp r0, r5
	bge _0807B534
	b _0807B532
	.align 2, 0
_0807B520: .4byte gBackgroundPositions
_0807B524:
	cmp r2, #0
	bge _0807B534
	adds r0, r4, r7
	strh r0, [r1, #0xc]
	ldrh r0, [r1, #0xc]
	cmp r0, r5
	ble _0807B534
_0807B532:
	strh r5, [r1, #0xc]
_0807B534:
	adds r4, r1, #0
	ldrh r0, [r4, #0xe]
	subs r2, r0, r6
	cmp r2, #0
	beq _0807B564
	movs r5, #0
	mov ip, r5
	cmp r2, #0
	ble _0807B554
	subs r0, r0, r3
	strh r0, [r4, #0xe]
	ldrh r0, [r4, #0xe]
	cmp r0, r6
	bge _0807B564
	strh r6, [r4, #0xe]
	b _0807B564
_0807B554:
	cmp r2, #0
	bge _0807B564
	adds r0, r0, r3
	strh r0, [r1, #0xe]
	ldrh r0, [r1, #0xe]
	cmp r0, r6
	ble _0807B564
	strh r6, [r1, #0xe]
_0807B564:
	mov r0, ip
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start unk_7b56c
unk_7b56c: @ 0x0807B56C
	push {r4, r5, lr}
	ldr r1, _0807B588 @ =gNonGameplayRam
	ldrb r0, [r1, #0xa]
	adds r0, #1
	strb r0, [r1, #0xa]
	ldrb r0, [r1, #0xb]
	adds r5, r1, #0
	cmp r0, #9
	bhi _0807B668
	lsls r0, r0, #2
	ldr r1, _0807B58C @ =_0807B590
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807B588: .4byte gNonGameplayRam
_0807B58C: .4byte _0807B590
_0807B590: @ jump table
	.4byte _0807B668 @ case 0
	.4byte _0807B5B8 @ case 1
	.4byte _0807B5BE @ case 2
	.4byte _0807B5CE @ case 3
	.4byte _0807B5EE @ case 4
	.4byte _0807B612 @ case 5
	.4byte _0807B624 @ case 6
	.4byte _0807B650 @ case 7
	.4byte _0807B668 @ case 8
	.4byte _0807B668 @ case 9
_0807B5B8:
	movs r0, #0
	strb r0, [r5, #0xa]
	b _0807B662
_0807B5BE:
	ldrh r1, [r5, #4]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0807B668
	movs r0, #0
	strb r0, [r5, #0xa]
	b _0807B662
_0807B5CE:
	adds r1, r5, #0
	adds r1, #0xea
	movs r4, #0
	movs r0, #0x41
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0xe8
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	movs r0, #0x8e
	lsls r0, r0, #1
	bl SoundPlay
	strb r4, [r5, #0xa]
	b _0807B662
_0807B5EE:
	ldrb r0, [r5, #0xa]
	cmp r0, #0x1e
	bls _0807B668
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r5, r0
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	strb r2, [r5, #0xa]
	ldrb r0, [r5, #0xb]
	adds r0, #1
	strb r0, [r5, #0xb]
	ldrh r1, [r5, #4]
	movs r0, #0x80
	orrs r0, r1
	strh r0, [r5, #4]
	b _0807B668
_0807B612:
	ldrh r1, [r5, #4]
	movs r0, #0x40
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _0807B668
	strb r0, [r5, #0xa]
	b _0807B662
_0807B624:
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r5, r0
	movs r4, #0
	movs r0, #3
	strb r0, [r1]
	adds r1, r5, #0
	adds r1, #0xea
	movs r0, #0x42
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0xe8
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	ldr r0, _0807B64C @ =0x0000011D
	bl SoundPlay
	strb r4, [r5, #0xa]
	b _0807B662
	.align 2, 0
_0807B64C: .4byte 0x0000011D
_0807B650:
	ldrb r0, [r5, #0xa]
	cmp r0, #0x1e
	bls _0807B668
	ldrh r1, [r5, #4]
	ldr r0, _0807B670 @ =0x0000FF7F
	ands r0, r1
	movs r1, #0
	strh r0, [r5, #4]
	strb r1, [r5, #0xa]
_0807B662:
	ldrb r0, [r5, #0xb]
	adds r0, #1
	strb r0, [r5, #0xb]
_0807B668:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807B670: .4byte 0x0000FF7F

	thumb_func_start unk_7b674
unk_7b674: @ 0x0807B674
	push {r4, r5, lr}
	ldr r2, _0807B6AC @ =gNonGameplayRam
	movs r1, #0x94
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	bne _0807B68C
	b _0807B8C4
_0807B68C:
	ldr r2, _0807B6B0 @ =0x00000252
	adds r0, r4, r2
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	ldr r1, _0807B6B4 @ =0x00000251
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #8
	bls _0807B6A2
	b _0807B8C4
_0807B6A2:
	lsls r0, r0, #2
	ldr r1, _0807B6B8 @ =_0807B6BC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807B6AC: .4byte gNonGameplayRam
_0807B6B0: .4byte 0x00000252
_0807B6B4: .4byte 0x00000251
_0807B6B8: .4byte _0807B6BC
_0807B6BC: @ jump table
	.4byte _0807B6E0 @ case 0
	.4byte _0807B72C @ case 1
	.4byte _0807B82C @ case 2
	.4byte _0807B780 @ case 3
	.4byte _0807B7BC @ case 4
	.4byte _0807B7D4 @ case 5
	.4byte _0807B82C @ case 6
	.4byte _0807B858 @ case 7
	.4byte _0807B8B0 @ case 8
_0807B6E0:
	movs r2, #0x94
	lsls r2, r2, #2
	adds r0, r4, r2
	ldrb r1, [r0]
	movs r2, #1
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _0807B700
	ldr r1, _0807B6FC @ =0x00000251
	adds r0, r4, r1
	strb r2, [r0]
	b _0807B710
	.align 2, 0
_0807B6FC: .4byte 0x00000251
_0807B700:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0807B710
	ldr r2, _0807B720 @ =0x00000251
	adds r1, r4, r2
	movs r0, #4
	strb r0, [r1]
_0807B710:
	ldr r1, _0807B724 @ =gPreviousArea
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _0807B728 @ =0x00000252
	adds r1, r4, r0
	movs r0, #0
	strb r0, [r1]
	b _0807B8C4
	.align 2, 0
_0807B720: .4byte 0x00000251
_0807B724: .4byte gPreviousArea
_0807B728: .4byte 0x00000252
_0807B72C:
	ldr r1, _0807B770 @ =0x00000252
	adds r2, r4, r1
	ldrb r1, [r2]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _0807B73C
	b _0807B8C4
_0807B73C:
	ldr r0, _0807B774 @ =gWrittenToMosaic_L
	ldrh r1, [r0]
	adds r1, #0x11
	strh r1, [r0]
	ldr r0, _0807B778 @ =0x08576802
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrb r0, [r0]
	cmp r1, r0
	beq _0807B752
	b _0807B8C4
_0807B752:
	movs r0, #0
	strb r0, [r2]
	ldr r2, _0807B77C @ =0x00000251
	adds r1, r4, r2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r0, #0x94
	lsls r0, r0, #2
	adds r2, r4, r0
	ldrb r1, [r2]
	movs r0, #4
	orrs r0, r1
	strb r0, [r2]
	b _0807B8C4
	.align 2, 0
_0807B770: .4byte 0x00000252
_0807B774: .4byte gWrittenToMosaic_L
_0807B778: .4byte 0x08576802
_0807B77C: .4byte 0x00000251
_0807B780:
	ldr r0, _0807B7B0 @ =0x00000252
	adds r2, r4, r0
	ldrb r1, [r2]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _0807B790
	b _0807B8C4
_0807B790:
	ldr r1, _0807B7B4 @ =gWrittenToMosaic_L
	ldrh r0, [r1]
	subs r0, #0x11
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	beq _0807B7A2
	b _0807B8C4
_0807B7A2:
	ldr r0, _0807B7B8 @ =0x00000251
	adds r1, r4, r0
	movs r0, #8
	strb r0, [r1]
	strb r3, [r2]
	b _0807B8C4
	.align 2, 0
_0807B7B0: .4byte 0x00000252
_0807B7B4: .4byte gWrittenToMosaic_L
_0807B7B8: .4byte 0x00000251
_0807B7BC:
	ldr r1, _0807B7CC @ =0x00000253
	adds r0, r4, r1
	movs r2, #0
	strb r2, [r0]
	ldr r0, _0807B7D0 @ =0x00000251
	adds r1, r4, r0
	movs r0, #5
	b _0807B846
	.align 2, 0
_0807B7CC: .4byte 0x00000253
_0807B7D0: .4byte 0x00000251
_0807B7D4:
	ldr r2, _0807B81C @ =0x00000253
	adds r5, r4, r2
	ldrb r1, [r5]
	movs r2, #0x50
	subs r0, r2, r1
	asrs r0, r0, #4
	cmp r0, #3
	bgt _0807B7E6
	movs r0, #4
_0807B7E6:
	adds r0, r1, r0
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x50
	bls _0807B814
	strb r2, [r5]
	ldr r0, _0807B820 @ =0x00000252
	adds r1, r4, r0
	movs r0, #0
	strb r0, [r1]
	ldr r2, _0807B824 @ =0x00000251
	adds r1, r4, r2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r0, #0x94
	lsls r0, r0, #2
	adds r2, r4, r0
	ldrb r0, [r2]
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
_0807B814:
	ldr r3, _0807B828 @ =0x04000046
	ldrb r2, [r5]
	b _0807B89A
	.align 2, 0
_0807B81C: .4byte 0x00000253
_0807B820: .4byte 0x00000252
_0807B824: .4byte 0x00000251
_0807B828: .4byte 0x04000046
_0807B82C:
	movs r1, #0x94
	lsls r1, r1, #2
	adds r0, r4, r1
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0807B8C4
	ldr r2, _0807B850 @ =0x00000251
	adds r1, r4, r2
	ldrb r0, [r1]
	adds r0, #1
	movs r2, #0
_0807B846:
	strb r0, [r1]
	ldr r1, _0807B854 @ =0x00000252
	adds r0, r4, r1
	strb r2, [r0]
	b _0807B8C4
	.align 2, 0
_0807B850: .4byte 0x00000251
_0807B854: .4byte 0x00000252
_0807B858:
	ldr r2, _0807B884 @ =0x00000253
	adds r3, r4, r2
	ldrb r1, [r3]
	movs r0, #0x50
	subs r0, r0, r1
	asrs r0, r0, #4
	cmp r0, #3
	bgt _0807B86A
	movs r0, #4
_0807B86A:
	subs r0, r1, r0
	cmp r0, #0
	bge _0807B890
	movs r2, #0
	strb r2, [r3]
	ldr r0, _0807B888 @ =0x00000251
	adds r1, r4, r0
	movs r0, #8
	strb r0, [r1]
	ldr r1, _0807B88C @ =0x00000252
	adds r0, r4, r1
	strb r2, [r0]
	b _0807B892
	.align 2, 0
_0807B884: .4byte 0x00000253
_0807B888: .4byte 0x00000251
_0807B88C: .4byte 0x00000252
_0807B890:
	strb r0, [r3]
_0807B892:
	ldr r3, _0807B8A8 @ =0x04000046
	ldr r2, _0807B8AC @ =0x00000253
	adds r0, r4, r2
	ldrb r2, [r0]
_0807B89A:
	lsls r1, r2, #8
	movs r0, #0xa0
	subs r0, r0, r2
	orrs r1, r0
	strh r1, [r3]
	b _0807B8C4
	.align 2, 0
_0807B8A8: .4byte 0x04000046
_0807B8AC: .4byte 0x00000253
_0807B8B0:
	ldr r1, _0807B8CC @ =0x00000252
	adds r0, r4, r1
	movs r1, #0
	strb r1, [r0]
	ldr r2, _0807B8D0 @ =0x00000251
	adds r0, r4, r2
	strb r1, [r0]
	subs r2, #1
	adds r0, r4, r2
	strb r1, [r0]
_0807B8C4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807B8CC: .4byte 0x00000252
_0807B8D0: .4byte 0x00000251

	thumb_func_start ProcessPauseScreenText
ProcessPauseScreenText: @ 0x0807B8D4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r4, _0807B93C @ =0x0200C000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	movs r1, #0
	adds r2, r4, #0
	bl BitFill
	movs r6, #0
	ldr r2, _0807B940 @ =0x0879C10C
	ldr r0, _0807B944 @ =0x03000011
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #2
	adds r1, r1, r2
	ldr r0, _0807B948 @ =gEventCounter
	ldrb r0, [r0]
	ldr r1, [r1]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r7, [r0]
	ldrh r2, [r7]
	movs r1, #0xff
	lsls r1, r1, #8
	adds r0, r1, #0
	cmp r2, r0
	beq _0807B9D8
	movs r5, #0x80
	lsls r5, r5, #8
	mov sl, r5
	movs r1, #0xfe
	lsls r1, r1, #8
	mov sb, r1
_0807B926:
	movs r5, #1
	adds r1, r0, #0
	ands r1, r2
	cmp r1, sl
	bne _0807B94C
	movs r5, #0xff
	mov r8, r5
	mov r0, r8
	ands r0, r2
	mov r8, r0
	b _0807B9C2
	.align 2, 0
_0807B93C: .4byte 0x0200C000
_0807B940: .4byte 0x0879C10C
_0807B944: .4byte 0x03000011
_0807B948: .4byte gEventCounter
_0807B94C:
	movs r0, #0x83
	lsls r0, r0, #8
	cmp r1, r0
	bne _0807B95E
	movs r1, #0
	mov r8, r1
	movs r6, #0xff
	ands r6, r2
	b _0807B9C2
_0807B95E:
	cmp r2, sb
	bne _0807B96E
	movs r2, #0
	mov r8, r2
	cmp r6, #0xe0
	bgt _0807B9D8
	movs r6, #0xe0
	movs r5, #0
_0807B96E:
	cmp r5, #0
	beq _0807B9C2
	ldrh r0, [r7]
	bl GetCharacterWidth
	mov r8, r0
	adds r5, r6, r0
	cmp r5, #0xe0
	ble _0807B988
	cmp r6, #0xdf
	bgt _0807B988
	movs r6, #0xe0
	b _0807B990
_0807B988:
	movs r0, #0xe0
	lsls r0, r0, #1
	cmp r5, r0
	bgt _0807B9D8
_0807B990:
	cmp r6, #0xdf
	ble _0807B99E
	movs r5, #0x80
	lsls r5, r5, #4
	adds r4, r6, #0
	subs r4, #0xe0
	b _0807B9A2
_0807B99E:
	movs r5, #0
	adds r4, r6, #0
_0807B9A2:
	asrs r0, r4, #3
	lsls r0, r0, #5
	adds r5, r5, r0
	movs r3, #7
	ldrh r0, [r7]
	ldr r2, _0807B9E8 @ =0x0200C000
	adds r1, r2, r5
	mov r5, r8
	lsls r2, r5, #0x18
	lsrs r2, r2, #0x18
	ands r4, r3
	movs r3, #0
	str r3, [sp]
	adds r3, r4, #0
	bl DrawCharacter
_0807B9C2:
	adds r7, #2
	add r6, r8
	ldr r0, _0807B9EC @ =0x000001BF
	cmp r6, r0
	bgt _0807B9D8
	ldrh r2, [r7]
	movs r1, #0xff
	lsls r1, r1, #8
	adds r0, r1, #0
	cmp r2, r0
	bne _0807B926
_0807B9D8:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807B9E8: .4byte 0x0200C000
_0807B9EC: .4byte 0x000001BF

	thumb_func_start ProcessEasySleepText
ProcessEasySleepText: @ 0x0807B9F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r2, _0807BA80 @ =0x0200D000
	movs r5, #0x80
	lsls r5, r5, #5
	movs r4, #0x10
	str r4, [sp]
	movs r0, #3
	movs r1, #0
	adds r3, r5, #0
	bl BitFill
	ldr r2, _0807BA84 @ =0x0200E000
	str r4, [sp]
	movs r0, #3
	movs r1, #0
	adds r3, r5, #0
	bl BitFill
	ldr r2, _0807BA88 @ =0x0200F000
	movs r3, #0x80
	lsls r3, r3, #4
	str r4, [sp]
	movs r0, #3
	movs r1, #0
	bl BitFill
	movs r3, #0
_0807BA30:
	ldr r0, _0807BA84 @ =0x0200E000
	mov sl, r0
	cmp r3, #0
	bne _0807BA3C
	ldr r1, _0807BA80 @ =0x0200D000
	mov sl, r1
_0807BA3C:
	ldr r1, _0807BA8C @ =0x0879CDF4
	ldr r0, _0807BA90 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	adds r0, #0xb4
	ldr r6, [r0]
	movs r7, #0
	ldrh r2, [r6]
	movs r4, #0xff
	lsls r4, r4, #8
	adds r0, r4, #0
	adds r3, #1
	mov sb, r3
	cmp r2, r4
	beq _0807BB24
_0807BA66:
	movs r5, #1
	adds r1, r0, #0
	ands r1, r2
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r1, r0
	bne _0807BA94
	movs r1, #0xff
	mov r8, r1
	mov r4, r8
	ands r4, r2
	mov r8, r4
	b _0807BB0E
	.align 2, 0
_0807BA80: .4byte 0x0200D000
_0807BA84: .4byte 0x0200E000
_0807BA88: .4byte 0x0200F000
_0807BA8C: .4byte 0x0879CDF4
_0807BA90: .4byte 0x03000011
_0807BA94:
	movs r0, #0x83
	lsls r0, r0, #8
	cmp r1, r0
	bne _0807BAA6
	movs r5, #0
	mov r8, r5
	movs r7, #0xff
	ands r7, r2
	b _0807BB0E
_0807BAA6:
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r2, r0
	bne _0807BABA
	movs r1, #0
	mov r8, r1
	cmp r7, #0xe0
	bgt _0807BB24
	movs r7, #0xe0
	movs r5, #0
_0807BABA:
	cmp r5, #0
	beq _0807BB0E
	ldrh r0, [r6]
	bl GetCharacterWidth
	mov r8, r0
	adds r5, r7, r0
	cmp r5, #0xe0
	ble _0807BAD4
	cmp r7, #0xdf
	bgt _0807BAD4
	movs r7, #0xe0
	b _0807BADC
_0807BAD4:
	movs r0, #0xe0
	lsls r0, r0, #1
	cmp r5, r0
	bgt _0807BB24
_0807BADC:
	cmp r7, #0xdf
	ble _0807BAEA
	movs r5, #0x80
	lsls r5, r5, #4
	adds r4, r7, #0
	subs r4, #0xe0
	b _0807BAEE
_0807BAEA:
	movs r5, #0
	adds r4, r7, #0
_0807BAEE:
	asrs r0, r4, #3
	lsls r0, r0, #5
	adds r5, r5, r0
	movs r3, #7
	ldrh r0, [r6]
	mov r2, sl
	adds r1, r2, r5
	mov r5, r8
	lsls r2, r5, #0x18
	lsrs r2, r2, #0x18
	ands r4, r3
	movs r3, #0
	str r3, [sp]
	adds r3, r4, #0
	bl DrawCharacter
_0807BB0E:
	adds r6, #2
	add r7, r8
	ldr r0, _0807BB60 @ =0x000001BF
	cmp r7, r0
	bgt _0807BB24
	ldrh r2, [r6]
	movs r1, #0xff
	lsls r1, r1, #8
	adds r0, r1, #0
	cmp r2, r1
	bne _0807BA66
_0807BB24:
	mov r3, sb
	cmp r3, #1
	ble _0807BA30
	ldr r2, _0807BB64 @ =0x0200F000
	mov sl, r2
	ldr r1, _0807BB68 @ =0x0879CDF4
	ldr r0, _0807BB6C @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r6, [r0]
	movs r7, #0
	ldrh r1, [r6]
	movs r0, #0xff
	lsls r0, r0, #8
	cmp r1, r0
	beq _0807BBE0
	movs r5, #1
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r1, r0
	bne _0807BB70
	movs r4, #0
	mov r8, r4
	movs r7, #0x70
	b _0807BBB2
	.align 2, 0
_0807BB60: .4byte 0x000001BF
_0807BB64: .4byte 0x0200F000
_0807BB68: .4byte 0x0879CDF4
_0807BB6C: .4byte 0x03000011
_0807BB70:
	ldrh r1, [r6]
	movs r0, #0x80
	lsls r0, r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0807BB80
	movs r5, #0
	mov r8, r5
_0807BB80:
	cmp r5, #0
	beq _0807BBB2
	ldrh r0, [r6]
	bl GetCharacterWidth
	mov r8, r0
	adds r5, r7, r0
	movs r0, #0xe0
	lsls r0, r0, #1
	cmp r5, r0
	bgt _0807BBE0
	asrs r0, r7, #3
	lsls r5, r0, #5
	movs r3, #7
	ldrh r0, [r6]
	mov r2, sl
	adds r1, r2, r5
	mov r4, r8
	lsls r2, r4, #0x18
	lsrs r2, r2, #0x18
	ands r3, r7
	movs r4, #0
	str r4, [sp]
	bl DrawCharacter
_0807BBB2:
	adds r6, #2
	add r7, r8
	ldr r0, _0807BBDC @ =0x000001BF
	cmp r7, r0
	bgt _0807BBE0
	ldrh r1, [r6]
	movs r0, #0xff
	lsls r0, r0, #8
	cmp r1, r0
	beq _0807BBE0
	movs r5, #1
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r1, r0
	bne _0807BB70
	movs r5, #0
	mov r8, r5
	cmp r7, #0x70
	bgt _0807BBE0
	movs r7, #0x70
	b _0807BBB2
	.align 2, 0
_0807BBDC: .4byte 0x000001BF
_0807BBE0:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start GetFlashingSectorNumber
GetFlashingSectorNumber: @ 0x0807BBF0
	push {r4, r5, r6, r7, lr}
	ldr r0, _0807BC80 @ =0x0300004D
	movs r1, #0
	strb r1, [r0]
	ldr r1, _0807BC84 @ =gEventCounter
	ldrb r2, [r1]
	adds r6, r0, #0
	ldr r1, _0807BC88 @ =0x08575A60
	ldr r7, _0807BC8C @ =gPreviousNavigationConversation
	cmp r2, #0
	ble _0807BC2A
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r3, r0, #2
	adds r0, r3, r1
	ldrb r0, [r0, #6]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0807BC2A
	adds r3, r3, r1
_0807BC1A:
	subs r3, #0xc
	subs r2, #1
	cmp r2, #0
	ble _0807BC2A
	movs r0, #6
	ldrsb r0, [r3, r0]
	cmp r0, #0
	beq _0807BC1A
_0807BC2A:
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r1
	movs r3, #6
	ldrsb r3, [r0, r3]
	ldrb r4, [r7]
	cmp r4, r3
	bne _0807BC76
	movs r3, #0
	movs r2, #0
	ldr r0, _0807BC90 @ =0x085766E4
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r4, r1
	beq _0807BC68
_0807BC4C:
	adds r2, #1
	cmp r2, #0x20
	bhi _0807BC64
	ldrb r0, [r7]
	lsls r1, r2, #3
	adds r1, r1, r5
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	cmp r0, r1
	bne _0807BC4C
	movs r3, #1
_0807BC64:
	cmp r3, #0
	beq _0807BC76
_0807BC68:
	lsls r0, r2, #3
	adds r0, r0, r5
	ldrb r2, [r0, #1]
	ldr r0, _0807BC94 @ =0x08576066
	adds r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r6]
_0807BC76:
	ldrb r0, [r6]
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807BC80: .4byte 0x0300004D
_0807BC84: .4byte gEventCounter
_0807BC88: .4byte 0x08575A60
_0807BC8C: .4byte gPreviousNavigationConversation
_0807BC90: .4byte 0x085766E4
_0807BC94: .4byte 0x08576066

	thumb_func_start NavigationConversationLoadPopUpGraphics
NavigationConversationLoadPopUpGraphics: @ 0x0807BC98
	push {r4, r5, r6, lr}
	sub sp, #8
	movs r4, #3
	ldr r0, _0807BD68 @ =gNonGameplayRam
	movs r1, #0x88
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r2, [r0]
	ldr r0, _0807BD6C @ =0x0857BCC8
	movs r1, #8
	ldrsb r1, [r0, r1]
	adds r3, r0, #0
	cmp r2, r1
	beq _0807BCC8
	adds r1, r3, #0
	adds r1, #8
_0807BCB8:
	subs r1, #4
	subs r4, #1
	cmp r4, #0
	ble _0807BCC8
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r2, r0
	bne _0807BCB8
_0807BCC8:
	cmp r4, #0
	beq _0807BD5E
	subs r4, #1
	lsls r0, r4, #2
	adds r4, r0, r3
	ldrb r0, [r4, #1]
	cmp r0, #0
	beq _0807BCF0
	ldr r2, _0807BD70 @ =0x0857BC50
	adds r1, r0, #0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x14
	adds r0, r0, r2
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #0x12
	bl LZ77UncompVram
_0807BCF0:
	ldrb r0, [r4, #2]
	cmp r0, #0
	beq _0807BD0C
	ldr r2, _0807BD70 @ =0x0857BC50
	adds r1, r0, #0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x14
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r1, _0807BD74 @ =0x02004000
	bl LZ77UncompVram
_0807BD0C:
	ldrb r0, [r4, #3]
	cmp r0, #0
	beq _0807BD28
	ldr r2, _0807BD70 @ =0x0857BC50
	adds r1, r0, #0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #0x14
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r1, _0807BD78 @ =0x02008000
	bl LZ77UncompVram
_0807BD28:
	movs r4, #5
	ldr r5, _0807BD7C @ =0x06015700
	movs r6, #0x20
_0807BD2E:
	str r6, [sp]
	movs r0, #3
	movs r1, #1
	rsbs r1, r1, #0
	adds r2, r5, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl BitFill
	ldr r0, _0807BD80 @ =0xFFFFFC00
	adds r5, r5, r0
	subs r4, #1
	cmp r4, #0
	bge _0807BD2E
	movs r0, #0
	str r0, [sp, #4]
	ldr r1, _0807BD84 @ =0x040000D4
	add r0, sp, #4
	str r0, [r1]
	ldr r0, _0807BD88 @ =0x050003E0
	str r0, [r1, #4]
	ldr r0, _0807BD8C @ =0x85000008
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_0807BD5E:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807BD68: .4byte gNonGameplayRam
_0807BD6C: .4byte 0x0857BCC8
_0807BD70: .4byte 0x0857BC50
_0807BD74: .4byte 0x02004000
_0807BD78: .4byte 0x02008000
_0807BD7C: .4byte 0x06015700
_0807BD80: .4byte 0xFFFFFC00
_0807BD84: .4byte 0x040000D4
_0807BD88: .4byte 0x050003E0
_0807BD8C: .4byte 0x85000008

	thumb_func_start NavigationConversationUpdatePopUp
NavigationConversationUpdatePopUp: @ 0x0807BD90
	push {r4, lr}
	ldr r4, _0807BDD0 @ =gNonGameplayRam
	movs r0, #0x86
	lsls r0, r0, #2
	adds r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	beq _0807BDC8
	ldr r0, _0807BDD4 @ =0x0000021B
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _0807BDD8 @ =0x0879C170
	ldrb r0, [r2]
	subs r0, #1
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl _call_via_r0
	ldr r1, _0807BDDC @ =0x0000021D
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807BDC8
	bl NavigationConversationFadeInPopUpPalette
_0807BDC8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807BDD0: .4byte gNonGameplayRam
_0807BDD4: .4byte 0x0000021B
_0807BDD8: .4byte 0x0879C170
_0807BDDC: .4byte 0x0000021D

	thumb_func_start unk_7bde0
unk_7bde0: @ 0x0807BDE0
	push {r4, r5, r6, r7, lr}
	ldr r2, _0807BE2C @ =gNonGameplayRam
	ldr r0, _0807BE30 @ =0x0000021A
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r3, #3
	movs r1, #0x88
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrb r4, [r0]
	ldr r0, _0807BE34 @ =0x0857BCC8
	movs r1, #8
	ldrsb r1, [r0, r1]
	adds r6, r2, #0
	adds r2, r0, #0
	cmp r4, r1
	beq _0807BE18
	adds r1, r2, #0
	adds r1, #8
_0807BE08:
	subs r1, #4
	subs r3, #1
	cmp r3, #0
	ble _0807BE18
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r4, r0
	bne _0807BE08
_0807BE18:
	subs r3, #1
	cmp r3, #0xff
	bne _0807BE38
	movs r2, #0x86
	lsls r2, r2, #2
	adds r1, r6, r2
	movs r0, #0
	strb r0, [r1]
	b _0807BFAE
	.align 2, 0
_0807BE2C: .4byte gNonGameplayRam
_0807BE30: .4byte 0x0000021A
_0807BE34: .4byte 0x0857BCC8
_0807BE38:
	ldr r1, _0807BE4C @ =0x00000219
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807BE50
	lsls r0, r3, #2
	adds r0, r0, r2
	ldrb r1, [r0, #2]
	b _0807BE62
	.align 2, 0
_0807BE4C: .4byte 0x00000219
_0807BE50:
	cmp r0, #2
	bne _0807BE5C
	lsls r0, r3, #2
	adds r0, r0, r2
	ldrb r1, [r0, #3]
	b _0807BE62
_0807BE5C:
	lsls r0, r3, #2
	adds r0, r0, r2
	ldrb r1, [r0, #1]
_0807BE62:
	ldr r2, _0807BE7C @ =0x0000021A
	adds r0, r6, r2
	strb r1, [r0]
	ldr r1, _0807BE7C @ =0x0000021A
	adds r0, r6, r1
	ldrb r3, [r0]
	cmp r3, #0
	bne _0807BE80
	movs r2, #0x86
	lsls r2, r2, #2
	adds r0, r6, r2
	strb r3, [r0]
	b _0807BFAE
	.align 2, 0
_0807BE7C: .4byte 0x0000021A
_0807BE80:
	ldr r1, _0807BEA4 @ =0x00000229
	adds r0, r6, r1
	movs r1, #0
	strb r1, [r0]
	movs r2, #0x8a
	lsls r2, r2, #2
	adds r0, r6, r2
	strb r1, [r0]
	ldr r1, _0807BEA8 @ =0x00000219
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807BEB0
	subs r2, #0x14
	adds r1, r6, r2
	ldr r0, _0807BEAC @ =0x02004000
	b _0807BECE
	.align 2, 0
_0807BEA4: .4byte 0x00000229
_0807BEA8: .4byte 0x00000219
_0807BEAC: .4byte 0x02004000
_0807BEB0:
	cmp r0, #2
	bne _0807BEC4
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r6, r0
	ldr r0, _0807BEC0 @ =0x02008000
	b _0807BECE
	.align 2, 0
_0807BEC0: .4byte 0x02008000
_0807BEC4:
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r6, r2
	movs r0, #0x80
	lsls r0, r0, #0x12
_0807BECE:
	str r0, [r1]
	ldr r2, _0807BF28 @ =0x0857BC50
	ldr r1, _0807BF2C @ =0x0000021A
	adds r0, r6, r1
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r1, r0, r2
	ldrb r0, [r1, #0x12]
	lsls r2, r0, #0x1c
	lsrs r0, r2, #0x1c
	cmp r0, #8
	bne _0807BF40
	ldrb r2, [r1, #0x11]
	lsls r0, r2, #0x1c
	lsrs r3, r0, #0x1c
	cmp r3, #0
	ble _0807BF82
	ldr r5, _0807BF30 @ =0x040000D4
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r1, [r0]
	lsls r0, r3, #0xa
	adds r4, r0, r1
	ldr r0, _0807BF34 @ =0xFFFFFC00
	mov ip, r0
	lsls r7, r2, #0x18
_0807BF08:
	add r4, ip
	subs r3, #1
	lsls r2, r3, #0xa
	str r4, [r5]
	lsrs r0, r7, #0x1c
	lsls r0, r0, #0xa
	ldr r1, _0807BF38 @ =0x06014300
	adds r0, r0, r1
	adds r2, r2, r0
	str r2, [r5, #4]
	ldr r0, _0807BF3C @ =0x80000080
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	cmp r3, #0
	bgt _0807BF08
	b _0807BF82
	.align 2, 0
_0807BF28: .4byte 0x0857BC50
_0807BF2C: .4byte 0x0000021A
_0807BF30: .4byte 0x040000D4
_0807BF34: .4byte 0xFFFFFC00
_0807BF38: .4byte 0x06014300
_0807BF3C: .4byte 0x80000080
_0807BF40:
	lsrs r0, r2, #0x1c
	cmp r0, #4
	bne _0807BF82
	ldrb r2, [r1, #0x11]
	lsls r0, r2, #0x1c
	lsrs r3, r0, #0x1c
	cmp r3, #0
	ble _0807BF82
	ldr r5, _0807BFB4 @ =0x040000D4
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r1, [r0]
	lsls r0, r3, #0xa
	adds r4, r0, r1
	lsls r7, r2, #0x18
_0807BF60:
	ldr r2, _0807BFB8 @ =0xFFFFFC00
	adds r4, r4, r2
	subs r3, #1
	lsls r2, r3, #0xa
	str r4, [r5]
	lsrs r0, r7, #0x1c
	lsls r0, r0, #0xa
	ldr r1, _0807BFBC @ =0x06014300
	adds r0, r0, r1
	adds r2, r2, r0
	adds r2, #0x40
	str r2, [r5, #4]
	ldr r0, _0807BFC0 @ =0x80000040
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	cmp r3, #0
	bgt _0807BF60
_0807BF82:
	ldr r1, _0807BFC4 @ =0x0000021A
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #3
	bne _0807BF92
	ldr r0, _0807BFC8 @ =0x00000125
	bl SoundPlay
_0807BF92:
	ldr r2, _0807BFCC @ =0x0000021D
	adds r1, r6, r2
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r6, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _0807BFD0 @ =0x0000021B
	adds r0, r6, r1
	strb r2, [r0]
_0807BFAE:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807BFB4: .4byte 0x040000D4
_0807BFB8: .4byte 0xFFFFFC00
_0807BFBC: .4byte 0x06014300
_0807BFC0: .4byte 0x80000040
_0807BFC4: .4byte 0x0000021A
_0807BFC8: .4byte 0x00000125
_0807BFCC: .4byte 0x0000021D
_0807BFD0: .4byte 0x0000021B

	thumb_func_start NavigationConversationFadeInPopUpPalette
NavigationConversationFadeInPopUpPalette: @ 0x0807BFD4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r2, _0807C068 @ =0x0857BC50
	ldr r3, _0807C06C @ =gNonGameplayRam
	ldr r1, _0807C070 @ =0x0000021A
	adds r0, r3, r1
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, #8
	adds r0, r0, r2
	ldr r2, [r0]
	ldr r6, _0807C074 @ =0x050003E0
	movs r0, #0
	mov ip, r0
	mov sb, sp
	movs r1, #0xf8
	lsls r1, r1, #7
	mov sl, r1
	add r5, sp, #4
_0807C006:
	ldrb r1, [r2]
	movs r0, #0x1f
	ands r0, r1
	mov r1, sb
	strb r0, [r1]
	ldrh r1, [r2]
	movs r0, #0xf8
	lsls r0, r0, #2
	ands r0, r1
	lsrs r0, r0, #5
	mov r1, sb
	strb r0, [r1, #1]
	ldrh r1, [r2]
	mov r0, sl
	ands r0, r1
	lsrs r0, r0, #0xa
	mov r1, sb
	strb r0, [r1, #2]
	ldrb r1, [r6]
	movs r0, #0x1f
	ands r0, r1
	strb r0, [r5]
	ldrh r1, [r6]
	movs r0, #0xf8
	lsls r0, r0, #2
	ands r0, r1
	lsrs r0, r0, #5
	strb r0, [r5, #1]
	ldrh r1, [r6]
	mov r0, sl
	ands r0, r1
	lsrs r0, r0, #0xa
	strb r0, [r5, #2]
	movs r4, #0
	movs r0, #1
	add ip, r0
	adds r7, r2, #2
	adds r1, r6, #2
	mov r8, r1
	adds r3, r5, #0
_0807C056:
	mov r1, sp
	adds r0, r1, r4
	ldrb r2, [r3]
	ldrb r1, [r0]
	adds r0, r2, #0
	cmp r1, r0
	bls _0807C078
	adds r0, r2, #1
	b _0807C07E
	.align 2, 0
_0807C068: .4byte 0x0857BC50
_0807C06C: .4byte gNonGameplayRam
_0807C070: .4byte 0x0000021A
_0807C074: .4byte 0x050003E0
_0807C078:
	cmp r1, r0
	bhs _0807C080
	subs r0, r2, #1
_0807C07E:
	strb r0, [r3]
_0807C080:
	adds r3, #1
	adds r4, #1
	cmp r4, #2
	ble _0807C056
	ldrb r0, [r5]
	ldrb r1, [r5, #1]
	lsls r1, r1, #5
	orrs r0, r1
	ldrb r1, [r5, #2]
	lsls r1, r1, #0xa
	orrs r0, r1
	strh r0, [r6]
	adds r2, r7, #0
	mov r6, r8
	mov r0, ip
	cmp r0, #0xf
	ble _0807C006
	ldr r1, _0807C0B4 @ =gNonGameplayRam
	ldr r0, _0807C0B8 @ =0x0000021D
	adds r3, r1, r0
	ldrb r0, [r3]
	cmp r0, #0x20
	bls _0807C0BC
	movs r0, #0
	b _0807C0BE
	.align 2, 0
_0807C0B4: .4byte gNonGameplayRam
_0807C0B8: .4byte 0x0000021D
_0807C0BC:
	adds r0, #1
_0807C0BE:
	strb r0, [r3]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start NavigationConversationUpdateXParasitePopUp
NavigationConversationUpdateXParasitePopUp: @ 0x0807C0D0
	push {r4, r5, r6, r7, lr}
	bl unk_7c3b4
	ldr r0, _0807C148 @ =0x0857BC50
	mov ip, r0
	ldr r3, _0807C14C @ =gNonGameplayRam
	ldr r1, _0807C150 @ =0x0000021A
	adds r6, r3, r1
	ldrb r1, [r6]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	mov r2, ip
	adds r1, r0, r2
	ldrb r0, [r1, #0x12]
	lsls r2, r0, #0x1c
	lsrs r0, r2, #0x1c
	cmp r0, #8
	beq _0807C0F8
	b _0807C20C
_0807C0F8:
	ldr r7, [r1]
	ldr r0, _0807C154 @ =0x0000021B
	adds r2, r3, r0
	movs r1, #0x87
	lsls r1, r1, #2
	adds r4, r3, r1
	ldrb r0, [r4]
	lsls r0, r0, #1
	adds r0, r0, r7
	ldrb r1, [r2]
	ldrb r0, [r0, #1]
	cmp r1, r0
	bhs _0807C114
	b _0807C2F4
_0807C114:
	movs r5, #0
	strb r5, [r2]
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	ldrb r2, [r6]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #3
	add r1, ip
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1, #4]
	cmp r0, r1
	blo _0807C134
	strb r5, [r4]
_0807C134:
	ldr r2, _0807C158 @ =0x00000219
	adds r0, r3, r2
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807C160
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	ldr r0, _0807C15C @ =0x02004000
	b _0807C17E
	.align 2, 0
_0807C148: .4byte 0x0857BC50
_0807C14C: .4byte gNonGameplayRam
_0807C150: .4byte 0x0000021A
_0807C154: .4byte 0x0000021B
_0807C158: .4byte 0x00000219
_0807C15C: .4byte 0x02004000
_0807C160:
	cmp r0, #2
	bne _0807C174
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	ldr r0, _0807C170 @ =0x02008000
	b _0807C17E
	.align 2, 0
_0807C170: .4byte 0x02008000
_0807C174:
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #0x80
	lsls r0, r0, #0x12
_0807C17E:
	str r0, [r1]
	ldr r3, _0807C1F0 @ =0x0857BC50
	ldr r2, _0807C1F4 @ =gNonGameplayRam
	ldr r1, _0807C1F8 @ =0x0000021A
	adds r0, r2, r1
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r3
	ldrb r0, [r0, #0x11]
	lsls r3, r0, #0x1c
	lsrs r6, r0, #4
	movs r1, #0x87
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r7
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	lsls r4, r0, #8
	lsrs r1, r1, #2
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #0xb
	adds r4, r4, r0
	movs r0, #0x85
	lsls r0, r0, #2
	adds r2, r2, r0
	ldr r0, [r2]
	adds r5, r0, r4
	str r5, [r2]
	lsrs r4, r3, #0x1c
	cmp r4, #0
	bgt _0807C1CA
	b _0807C2F4
_0807C1CA:
	ldr r3, _0807C1FC @ =0x040000D4
	lsls r2, r4, #0xa
	ldr r0, _0807C200 @ =0x06014300
	adds r1, r2, r0
	lsls r0, r6, #0xa
	adds r1, r1, r0
	adds r2, r2, r5
	ldr r5, _0807C204 @ =0xFFFFFC00
	ldr r6, _0807C208 @ =0x80000080
_0807C1DC:
	adds r1, r1, r5
	adds r2, r2, r5
	subs r4, #1
	str r2, [r3]
	str r1, [r3, #4]
	str r6, [r3, #8]
	ldr r0, [r3, #8]
	cmp r4, #0
	bgt _0807C1DC
	b _0807C2F4
	.align 2, 0
_0807C1F0: .4byte 0x0857BC50
_0807C1F4: .4byte gNonGameplayRam
_0807C1F8: .4byte 0x0000021A
_0807C1FC: .4byte 0x040000D4
_0807C200: .4byte 0x06014300
_0807C204: .4byte 0xFFFFFC00
_0807C208: .4byte 0x80000080
_0807C20C:
	lsrs r0, r2, #0x1c
	cmp r0, #4
	bne _0807C2F4
	ldr r7, [r1]
	ldr r1, _0807C260 @ =0x0000021B
	adds r2, r3, r1
	movs r0, #0x87
	lsls r0, r0, #2
	adds r4, r3, r0
	ldrb r0, [r4]
	lsls r0, r0, #1
	adds r0, r0, r7
	ldrb r1, [r2]
	ldrb r0, [r0, #1]
	cmp r1, r0
	blo _0807C2F4
	movs r5, #0
	strb r5, [r2]
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	ldrb r2, [r6]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #3
	add r1, ip
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1, #4]
	cmp r0, r1
	blo _0807C24C
	strb r5, [r4]
_0807C24C:
	ldr r1, _0807C264 @ =0x00000219
	adds r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807C26C
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	ldr r0, _0807C268 @ =0x02004000
	b _0807C28A
	.align 2, 0
_0807C260: .4byte 0x0000021B
_0807C264: .4byte 0x00000219
_0807C268: .4byte 0x02004000
_0807C26C:
	cmp r0, #2
	bne _0807C280
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	ldr r0, _0807C27C @ =0x02008000
	b _0807C28A
	.align 2, 0
_0807C27C: .4byte 0x02008000
_0807C280:
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #0x80
	lsls r0, r0, #0x12
_0807C28A:
	str r0, [r1]
	ldr r3, _0807C2FC @ =0x0857BC50
	ldr r2, _0807C300 @ =gNonGameplayRam
	ldr r1, _0807C304 @ =0x0000021A
	adds r0, r2, r1
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r3
	ldrb r0, [r0, #0x11]
	lsls r3, r0, #0x1c
	lsrs r6, r0, #4
	movs r1, #0x87
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r7
	ldrb r1, [r0]
	movs r0, #7
	ands r0, r1
	lsls r4, r0, #7
	lsrs r1, r1, #3
	lsls r1, r1, #0xc
	adds r4, r4, r1
	movs r0, #0x85
	lsls r0, r0, #2
	adds r2, r2, r0
	ldr r0, [r2]
	adds r5, r0, r4
	str r5, [r2]
	lsrs r4, r3, #0x1c
	cmp r4, #0
	ble _0807C2F4
	ldr r3, _0807C308 @ =0x040000D4
	lsls r2, r4, #0xa
	ldr r0, _0807C30C @ =0x06014340
	adds r1, r2, r0
	lsls r0, r6, #0xa
	adds r1, r1, r0
	adds r2, r2, r5
	ldr r5, _0807C310 @ =0xFFFFFC00
	ldr r6, _0807C314 @ =0x80000040
_0807C2E2:
	adds r1, r1, r5
	adds r2, r2, r5
	subs r4, #1
	str r2, [r3]
	str r1, [r3, #4]
	str r6, [r3, #8]
	ldr r0, [r3, #8]
	cmp r4, #0
	bgt _0807C2E2
_0807C2F4:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807C2FC: .4byte 0x0857BC50
_0807C300: .4byte gNonGameplayRam
_0807C304: .4byte 0x0000021A
_0807C308: .4byte 0x040000D4
_0807C30C: .4byte 0x06014340
_0807C310: .4byte 0xFFFFFC00
_0807C314: .4byte 0x80000040

	thumb_func_start NavigationConversationClearPopUpGraphics
NavigationConversationClearPopUpGraphics: @ 0x0807C318
	push {r4, r5, r6, lr}
	sub sp, #8
	movs r5, #5
	ldr r4, _0807C390 @ =0x06015700
	movs r6, #0x20
_0807C322:
	str r6, [sp]
	movs r0, #3
	movs r1, #1
	rsbs r1, r1, #0
	adds r2, r4, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl BitFill
	ldr r0, _0807C394 @ =0xFFFFFC00
	adds r4, r4, r0
	subs r5, #1
	cmp r5, #0
	bge _0807C322
	movs r5, #0
	str r5, [sp, #4]
	ldr r1, _0807C398 @ =0x040000D4
	add r0, sp, #4
	str r0, [r1]
	ldr r0, _0807C39C @ =0x050003E0
	str r0, [r1, #4]
	ldr r0, _0807C3A0 @ =0x85000008
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r4, _0807C3A4 @ =gNonGameplayRam
	ldr r1, _0807C3A8 @ =0x0000021A
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #3
	bne _0807C364
	ldr r0, _0807C3AC @ =0x00000125
	bl StopSound
_0807C364:
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r4, r1
	strb r5, [r0]
	adds r1, #4
	adds r0, r4, r1
	strb r5, [r0]
	subs r1, #1
	adds r0, r4, r1
	strb r5, [r0]
	adds r1, #2
	adds r0, r4, r1
	strb r5, [r0]
	ldr r0, _0807C3B0 @ =0x00000219
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807C390: .4byte 0x06015700
_0807C394: .4byte 0xFFFFFC00
_0807C398: .4byte 0x040000D4
_0807C39C: .4byte 0x050003E0
_0807C3A0: .4byte 0x85000008
_0807C3A4: .4byte gNonGameplayRam
_0807C3A8: .4byte 0x0000021A
_0807C3AC: .4byte 0x00000125
_0807C3B0: .4byte 0x00000219

	thumb_func_start unk_7c3b4
unk_7c3b4: @ 0x0807C3B4
	push {r4, r5, r6, lr}
	ldr r4, _0807C42C @ =0x0857BC50
	ldr r5, _0807C430 @ =gNonGameplayRam
	ldr r0, _0807C434 @ =0x0000021A
	adds r2, r5, r0
	ldrb r0, [r2]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #3
	adds r1, r1, r4
	ldrb r0, [r1, #0x10]
	cmp r0, #0
	beq _0807C424
	ldr r1, _0807C438 @ =0x00000229
	adds r3, r5, r1
	ldrb r1, [r3]
	adds r1, #1
	movs r6, #0
	strb r1, [r3]
	ldrb r2, [r2]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r2, r0, #3
	adds r0, r2, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r0, [r0, #0x10]
	cmp r1, r0
	blo _0807C424
	strb r6, [r3]
	adds r0, r4, #0
	adds r0, #0xc
	adds r0, r2, r0
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r4, r5, r1
	ldrb r1, [r4]
	lsls r1, r1, #1
	ldr r3, [r0]
	adds r2, r3, r1
	ldrh r0, [r2]
	cmp r0, #0
	bne _0807C40E
	strb r6, [r4]
	adds r2, r3, #0
_0807C40E:
	ldr r1, _0807C43C @ =0x050003FE
	ldrh r0, [r2]
	strh r0, [r1]
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xf
	bls _0807C424
	strb r6, [r4]
_0807C424:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807C42C: .4byte 0x0857BC50
_0807C430: .4byte gNonGameplayRam
_0807C434: .4byte 0x0000021A
_0807C438: .4byte 0x00000229
_0807C43C: .4byte 0x050003FE

	thumb_func_start unk_7c440
unk_7c440: @ 0x0807C440
	push {r4, r5, r6, r7, lr}
	ldr r2, _0807C518 @ =gNonGameplayRam
	ldr r0, _0807C51C @ =0x00000225
	adds r5, r2, r0
	ldrb r0, [r5]
	adds r0, #1
	movs r7, #0
	strb r0, [r5]
	ldr r3, _0807C520 @ =0x0857BEB4
	movs r1, #0x89
	lsls r1, r1, #2
	adds r4, r2, r1
	ldrb r1, [r4]
	adds r1, r1, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r6, r2, #0
	ldrb r1, [r1]
	cmp r0, r1
	blo _0807C4B0
	strb r7, [r5]
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bls _0807C47A
	strb r7, [r4]
_0807C47A:
	movs r3, #0xa0
	lsls r3, r3, #0x13
	ldr r1, _0807C524 @ =0x0857BCD4
	ldrb r0, [r4]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r3, #0x24]
	ldrb r0, [r4]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r3, #0x26]
	adds r1, r3, #0
	adds r1, #0x44
	ldr r2, _0807C528 @ =0x0857BCF4
	ldrb r0, [r4]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldrb r0, [r4]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
_0807C4B0:
	adds r1, r6, #0
	ldrb r0, [r1]
	cmp r0, #0
	beq _0807C59C
	cmp r0, #1
	bne _0807C53C
	ldr r6, _0807C52C @ =0x0000022D
	adds r3, r1, r6
	ldrb r0, [r3]
	adds r0, #1
	movs r5, #0
	strb r0, [r3]
	ldr r2, _0807C530 @ =0x0857BEB8
	subs r6, #1
	adds r4, r1, r6
	ldrb r1, [r4]
	adds r1, r1, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1]
	cmp r0, r1
	blo _0807C59C
	strb r5, [r3]
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bls _0807C4EE
	strb r5, [r4]
_0807C4EE:
	ldr r3, _0807C534 @ =0x05000138
	ldrb r0, [r4]
	lsls r0, r0, #4
	adds r0, #0xc
	adds r2, r0, #0
	movs r1, #0
	ldr r4, _0807C538 @ =0x0857BD34
_0807C4FC:
	lsls r0, r2, #1
	adds r0, r0, r4
	ldrh r0, [r0]
	strh r0, [r3]
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	adds r3, #2
	cmp r1, #3
	bls _0807C4FC
	b _0807C59C
	.align 2, 0
_0807C518: .4byte gNonGameplayRam
_0807C51C: .4byte 0x00000225
_0807C520: .4byte 0x0857BEB4
_0807C524: .4byte 0x0857BCD4
_0807C528: .4byte 0x0857BCF4
_0807C52C: .4byte 0x0000022D
_0807C530: .4byte 0x0857BEB8
_0807C534: .4byte 0x05000138
_0807C538: .4byte 0x0857BD34
_0807C53C:
	cmp r0, #2
	bne _0807C59C
	ldr r0, _0807C5A4 @ =0x0000022D
	adds r3, r6, r0
	ldrb r0, [r3]
	adds r0, #1
	movs r5, #0
	strb r0, [r3]
	ldr r2, _0807C5A8 @ =0x0857BEBC
	movs r1, #0x8b
	lsls r1, r1, #2
	adds r4, r6, r1
	ldrb r1, [r4]
	adds r1, r1, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1]
	cmp r0, r1
	blo _0807C59C
	strb r5, [r3]
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _0807C574
	strb r5, [r4]
_0807C574:
	ldr r3, _0807C5AC @ =0x05000194
	ldrb r0, [r4]
	lsls r0, r0, #4
	adds r0, #0xa
	adds r2, r0, #0
	movs r1, #0
	ldr r4, _0807C5B0 @ =0x0857BDB4
_0807C582:
	lsls r0, r2, #1
	adds r0, r0, r4
	ldrh r0, [r0]
	strh r0, [r3]
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	adds r3, #2
	cmp r1, #5
	bls _0807C582
_0807C59C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807C5A4: .4byte 0x0000022D
_0807C5A8: .4byte 0x0857BEBC
_0807C5AC: .4byte 0x05000194
_0807C5B0: .4byte 0x0857BDB4

	thumb_func_start NavigationConversationLoadSpecialGraphics
NavigationConversationLoadSpecialGraphics: @ 0x0807C5B4
	push {lr}
	ldr r0, _0807C5F0 @ =gNonGameplayRam
	movs r1, #0x88
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0x35
	bne _0807C618
	ldr r0, _0807C5F4 @ =0x0857C0C4
	movs r1, #0x80
	lsls r1, r1, #0x12
	bl LZ77UncompVram
	ldr r0, _0807C5F8 @ =0x0857FCA0
	ldr r1, _0807C5FC @ =0x02006000
	bl LZ77UncompVram
	ldr r0, _0807C600 @ =0x08580238
	ldr r1, _0807C604 @ =0x02006800
	bl LZ77UncompVram
	ldr r0, _0807C608 @ =0x085807D0
	ldr r1, _0807C60C @ =0x02007000
	bl LZ77UncompVram
	ldr r0, _0807C610 @ =0x08580D68
	ldr r1, _0807C614 @ =0x02007800
	bl LZ77UncompVram
	b _0807C626
	.align 2, 0
_0807C5F0: .4byte gNonGameplayRam
_0807C5F4: .4byte 0x0857C0C4
_0807C5F8: .4byte 0x0857FCA0
_0807C5FC: .4byte 0x02006000
_0807C600: .4byte 0x08580238
_0807C604: .4byte 0x02006800
_0807C608: .4byte 0x085807D0
_0807C60C: .4byte 0x02007000
_0807C610: .4byte 0x08580D68
_0807C614: .4byte 0x02007800
_0807C618:
	cmp r0, #0xe
	bne _0807C626
	ldr r0, _0807C62C @ =0x0872F2E0
	movs r1, #0x80
	lsls r1, r1, #0x12
	bl LZ77UncompVram
_0807C626:
	pop {r0}
	bx r0
	.align 2, 0
_0807C62C: .4byte 0x0872F2E0

	thumb_func_start unk_7c630
unk_7c630: @ 0x0807C630
	push {r4, lr}
	sub sp, #4
	ldr r1, _0807C650 @ =gNonGameplayRam
	ldr r2, _0807C654 @ =0x00000265
	adds r0, r1, r2
	ldrb r0, [r0]
	adds r4, r1, #0
	cmp r0, #0x25
	bls _0807C646
	bl _0807CE56
_0807C646:
	lsls r0, r0, #2
	ldr r1, _0807C658 @ =_0807C65C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807C650: .4byte gNonGameplayRam
_0807C654: .4byte 0x00000265
_0807C658: .4byte _0807C65C
_0807C65C: @ jump table
	.4byte _0807C6F4 @ case 0
	.4byte _0807C770 @ case 1
	.4byte _0807C79C @ case 2
	.4byte _0807C7B8 @ case 3
	.4byte _0807C7E4 @ case 4
	.4byte _0807C810 @ case 5
	.4byte _0807C82C @ case 6
	.4byte _0807C858 @ case 7
	.4byte _0807C884 @ case 8
	.4byte _0807C8A0 @ case 9
	.4byte _0807C8CC @ case 10
	.4byte _0807C924 @ case 11
	.4byte _0807C940 @ case 12
	.4byte _0807C970 @ case 13
	.4byte _0807C99C @ case 14
	.4byte _0807C9C8 @ case 15
	.4byte _0807C9F0 @ case 16
	.4byte _0807CA10 @ case 17
	.4byte _0807CA50 @ case 18
	.4byte _0807CA90 @ case 19
	.4byte _0807CAD0 @ case 20
	.4byte _0807CAFC @ case 21
	.4byte _0807CB20 @ case 22
	.4byte _0807CB58 @ case 23
	.4byte _0807CBB0 @ case 24
	.4byte _0807CBE0 @ case 25
	.4byte _0807CC18 @ case 26
	.4byte _0807CC4C @ case 27
	.4byte _0807CC70 @ case 28
	.4byte _0807CC9C @ case 29
	.4byte _0807CCC8 @ case 30
	.4byte _0807CCE4 @ case 31
	.4byte _0807CD30 @ case 32
	.4byte _0807CD5C @ case 33
	.4byte _0807CD78 @ case 34
	.4byte _0807CDA4 @ case 35
	.4byte _0807CDD0 @ case 36
	.4byte _0807CE10 @ case 37
_0807C6F4:
	movs r0, #0x80
	lsls r0, r0, #0x13
	ldrh r1, [r0]
	ldr r3, _0807C74C @ =0x0000026A
	adds r0, r4, r3
	movs r2, #0
	strh r1, [r0]
	ldr r0, _0807C750 @ =0x0400000E
	ldrh r1, [r0]
	adds r3, #2
	adds r0, r4, r3
	strh r1, [r0]
	ldr r0, _0807C754 @ =0x0400000C
	ldrh r1, [r0]
	adds r3, #2
	adds r0, r4, r3
	strh r1, [r0]
	ldr r0, _0807C758 @ =0x04000050
	ldrh r1, [r0]
	adds r3, #2
	adds r0, r4, r3
	strh r1, [r0]
	ldr r0, _0807C75C @ =0x04000052
	ldrh r1, [r0]
	adds r3, #2
	adds r0, r4, r3
	strh r1, [r0]
	movs r1, #0x9a
	lsls r1, r1, #2
	adds r0, r4, r1
	strh r2, [r0]
	ldr r1, _0807C760 @ =0x040000D4
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r1]
	ldr r0, _0807C764 @ =0x02035000
	str r0, [r1, #4]
	ldr r0, _0807C768 @ =0x80000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _0807C76C @ =0x00000265
	adds r1, r4, r2
	b _0807CDEE
	.align 2, 0
_0807C74C: .4byte 0x0000026A
_0807C750: .4byte 0x0400000E
_0807C754: .4byte 0x0400000C
_0807C758: .4byte 0x04000050
_0807C75C: .4byte 0x04000052
_0807C760: .4byte 0x040000D4
_0807C764: .4byte 0x02035000
_0807C768: .4byte 0x80000100
_0807C76C: .4byte 0x00000265
_0807C770:
	ldr r1, _0807C78C @ =0x06004000
	ldr r2, _0807C790 @ =0x02008000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807C794 @ =gNonGameplayRam
	ldr r3, _0807C798 @ =0x00000265
	adds r1, r1, r3
	b _0807CDEE
	.align 2, 0
_0807C78C: .4byte 0x06004000
_0807C790: .4byte 0x02008000
_0807C794: .4byte gNonGameplayRam
_0807C798: .4byte 0x00000265
_0807C79C:
	ldr r1, _0807C7B0 @ =0x06005000
	ldr r2, _0807C7B4 @ =0x02009000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	b _0807CDE8
	.align 2, 0
_0807C7B0: .4byte 0x06005000
_0807C7B4: .4byte 0x02009000
_0807C7B8:
	ldr r1, _0807C7D4 @ =0x06006000
	ldr r2, _0807C7D8 @ =0x0200A000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807C7DC @ =gNonGameplayRam
	ldr r2, _0807C7E0 @ =0x00000265
	adds r1, r1, r2
	b _0807CDEE
	.align 2, 0
_0807C7D4: .4byte 0x06006000
_0807C7D8: .4byte 0x0200A000
_0807C7DC: .4byte gNonGameplayRam
_0807C7E0: .4byte 0x00000265
_0807C7E4:
	ldr r1, _0807C800 @ =0x06007000
	ldr r2, _0807C804 @ =0x0200B000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807C808 @ =gNonGameplayRam
	ldr r3, _0807C80C @ =0x00000265
	adds r1, r1, r3
	b _0807CDEE
	.align 2, 0
_0807C800: .4byte 0x06007000
_0807C804: .4byte 0x0200B000
_0807C808: .4byte gNonGameplayRam
_0807C80C: .4byte 0x00000265
_0807C810:
	movs r1, #0x80
	lsls r1, r1, #0x12
	ldr r2, _0807C828 @ =0x06004000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	b _0807CDE8
	.align 2, 0
_0807C828: .4byte 0x06004000
_0807C82C:
	ldr r1, _0807C848 @ =0x02001000
	ldr r2, _0807C84C @ =0x06005000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807C850 @ =gNonGameplayRam
	ldr r2, _0807C854 @ =0x00000265
	adds r1, r1, r2
	b _0807CDEE
	.align 2, 0
_0807C848: .4byte 0x02001000
_0807C84C: .4byte 0x06005000
_0807C850: .4byte gNonGameplayRam
_0807C854: .4byte 0x00000265
_0807C858:
	ldr r1, _0807C874 @ =0x02002000
	ldr r2, _0807C878 @ =0x06006000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807C87C @ =gNonGameplayRam
	ldr r3, _0807C880 @ =0x00000265
	adds r1, r1, r3
	b _0807CDEE
	.align 2, 0
_0807C874: .4byte 0x02002000
_0807C878: .4byte 0x06006000
_0807C87C: .4byte gNonGameplayRam
_0807C880: .4byte 0x00000265
_0807C884:
	ldr r1, _0807C898 @ =0x02003000
	ldr r2, _0807C89C @ =0x06007000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	b _0807CDE8
	.align 2, 0
_0807C898: .4byte 0x02003000
_0807C89C: .4byte 0x06007000
_0807C8A0:
	ldr r1, _0807C8BC @ =0x02004000
	ldr r2, _0807C8C0 @ =0x06008000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807C8C4 @ =gNonGameplayRam
	ldr r2, _0807C8C8 @ =0x00000265
	adds r1, r1, r2
	b _0807CDEE
	.align 2, 0
_0807C8BC: .4byte 0x02004000
_0807C8C0: .4byte 0x06008000
_0807C8C4: .4byte gNonGameplayRam
_0807C8C8: .4byte 0x00000265
_0807C8CC:
	ldr r1, _0807C8F8 @ =0x02005000
	ldr r2, _0807C8FC @ =0x06009000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r4, #0x10
	str r4, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r2, _0807C900 @ =gNonGameplayRam
	movs r3, #0x88
	lsls r3, r3, #2
	adds r0, r2, r3
	ldrb r0, [r0]
	cmp r0, #0x35
	bne _0807C908
	ldr r0, _0807C904 @ =0x00000265
	adds r1, r2, r0
	movs r0, #0xd
	strb r0, [r1]
	b _0807CE56
	.align 2, 0
_0807C8F8: .4byte 0x02005000
_0807C8FC: .4byte 0x06009000
_0807C900: .4byte gNonGameplayRam
_0807C904: .4byte 0x00000265
_0807C908:
	ldr r1, _0807C918 @ =0x03001222
	movs r0, #0
	strh r0, [r1]
	ldr r0, _0807C91C @ =0x03001220
	strh r4, [r0]
	ldr r3, _0807C920 @ =0x00000265
	adds r1, r2, r3
	b _0807CDEE
	.align 2, 0
_0807C918: .4byte 0x03001222
_0807C91C: .4byte 0x03001220
_0807C920: .4byte 0x00000265
_0807C924:
	ldr r1, _0807C938 @ =0x02006000
	ldr r2, _0807C93C @ =0x0600A000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	b _0807CDE8
	.align 2, 0
_0807C938: .4byte 0x02006000
_0807C93C: .4byte 0x0600A000
_0807C940:
	ldr r1, _0807C960 @ =0x02007000
	ldr r2, _0807C964 @ =0x0600B000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r0, _0807C968 @ =gNonGameplayRam
	ldr r1, _0807C96C @ =0x00000265
	adds r0, r0, r1
	movs r1, #0x15
	strb r1, [r0]
	b _0807CE56
	.align 2, 0
_0807C960: .4byte 0x02007000
_0807C964: .4byte 0x0600B000
_0807C968: .4byte gNonGameplayRam
_0807C96C: .4byte 0x00000265
_0807C970:
	ldr r1, _0807C98C @ =0x02006000
	ldr r2, _0807C990 @ =0x0600A000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807C994 @ =gNonGameplayRam
	ldr r2, _0807C998 @ =0x00000265
	adds r1, r1, r2
	b _0807CDEE
	.align 2, 0
_0807C98C: .4byte 0x02006000
_0807C990: .4byte 0x0600A000
_0807C994: .4byte gNonGameplayRam
_0807C998: .4byte 0x00000265
_0807C99C:
	ldr r1, _0807C9B8 @ =0x02007000
	ldr r2, _0807C9BC @ =0x0600B000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807C9C0 @ =gNonGameplayRam
	ldr r3, _0807C9C4 @ =0x00000265
	adds r1, r1, r3
	b _0807CDEE
	.align 2, 0
_0807C9B8: .4byte 0x02007000
_0807C9BC: .4byte 0x0600B000
_0807C9C0: .4byte gNonGameplayRam
_0807C9C4: .4byte 0x00000265
_0807C9C8:
	ldr r1, _0807C9E0 @ =0x040000D4
	ldr r0, _0807C9E4 @ =0x0857BEC4
	str r0, [r1]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _0807C9E8 @ =0x80000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _0807C9EC @ =PauseScreenVBLank_Unused
	b _0807CDE4
	.align 2, 0
_0807C9E0: .4byte 0x040000D4
_0807C9E4: .4byte 0x0857BEC4
_0807C9E8: .4byte 0x80000100
_0807C9EC: .4byte PauseScreenVBLank_Unused
_0807C9F0:
	ldr r1, _0807CA08 @ =0x0300000A
	ldr r2, _0807CA0C @ =0x00001407
	adds r0, r2, #0
	strh r0, [r1]
	movs r3, #0x9a
	lsls r3, r3, #2
	adds r2, r4, r3
	ldrh r1, [r2]
	movs r3, #0x80
	lsls r3, r3, #4
	b _0807CB7C
	.align 2, 0
_0807CA08: .4byte 0x0300000A
_0807CA0C: .4byte 0x00001407
_0807CA10:
	ldr r3, _0807CA3C @ =0x00000266
	adds r2, r4, r3
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldr r1, _0807CA40 @ =0x0879C17C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1]
	cmp r0, r1
	bhi _0807CA28
	b _0807CE56
_0807CA28:
	ldr r1, _0807CA44 @ =0x0300000A
	ldr r3, _0807CA48 @ =0x00001507
	adds r0, r3, #0
	strh r0, [r1]
	ldr r0, _0807CA4C @ =0x00000265
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _0807CC38
	.align 2, 0
_0807CA3C: .4byte 0x00000266
_0807CA40: .4byte 0x0879C17C
_0807CA44: .4byte 0x0300000A
_0807CA48: .4byte 0x00001507
_0807CA4C: .4byte 0x00000265
_0807CA50:
	ldr r1, _0807CA7C @ =0x00000266
	adds r2, r4, r1
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldr r1, _0807CA80 @ =0x0879C17C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1, #1]
	cmp r0, r1
	bhi _0807CA68
	b _0807CE56
_0807CA68:
	ldr r1, _0807CA84 @ =0x0300000A
	ldr r3, _0807CA88 @ =0x00001607
	adds r0, r3, #0
	strh r0, [r1]
	ldr r0, _0807CA8C @ =0x00000265
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _0807CC38
	.align 2, 0
_0807CA7C: .4byte 0x00000266
_0807CA80: .4byte 0x0879C17C
_0807CA84: .4byte 0x0300000A
_0807CA88: .4byte 0x00001607
_0807CA8C: .4byte 0x00000265
_0807CA90:
	ldr r1, _0807CABC @ =0x00000266
	adds r2, r4, r1
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldr r1, _0807CAC0 @ =0x0879C17C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1, #2]
	cmp r0, r1
	bhi _0807CAA8
	b _0807CE56
_0807CAA8:
	ldr r1, _0807CAC4 @ =0x0300000A
	ldr r3, _0807CAC8 @ =0x00001707
	adds r0, r3, #0
	strh r0, [r1]
	ldr r0, _0807CACC @ =0x00000265
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _0807CC38
	.align 2, 0
_0807CABC: .4byte 0x00000266
_0807CAC0: .4byte 0x0879C17C
_0807CAC4: .4byte 0x0300000A
_0807CAC8: .4byte 0x00001707
_0807CACC: .4byte 0x00000265
_0807CAD0:
	ldr r1, _0807CAF0 @ =0x00000266
	adds r2, r4, r1
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldr r1, _0807CAF4 @ =0x0879C17C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1, #3]
	cmp r0, r1
	bhi _0807CAE8
	b _0807CE56
_0807CAE8:
	ldr r3, _0807CAF8 @ =0x00000265
	adds r0, r4, r3
	b _0807CC34
	.align 2, 0
_0807CAF0: .4byte 0x00000266
_0807CAF4: .4byte 0x0879C17C
_0807CAF8: .4byte 0x00000265
_0807CAFC:
	ldr r0, _0807CB10 @ =0x087338C0
	ldr r1, _0807CB14 @ =0x06007800
	bl LZ77UncompVram
	ldr r0, _0807CB18 @ =0x08733D58
	ldr r1, _0807CB1C @ =0x0600B800
	bl LZ77UncompVram
	b _0807CDE8
	.align 2, 0
_0807CB10: .4byte 0x087338C0
_0807CB14: .4byte 0x06007800
_0807CB18: .4byte 0x08733D58
_0807CB1C: .4byte 0x0600B800
_0807CB20:
	ldr r1, _0807CB40 @ =0x040000D4
	ldr r0, _0807CB44 @ =0x0872F0E0
	str r0, [r1]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _0807CB48 @ =0x80000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _0807CB4C @ =PauseScreenVBLank_Unused
	bl CallbackSetVBlank
	ldr r1, _0807CB50 @ =gNonGameplayRam
	ldr r2, _0807CB54 @ =0x00000265
	adds r1, r1, r2
	b _0807CDEE
	.align 2, 0
_0807CB40: .4byte 0x040000D4
_0807CB44: .4byte 0x0872F0E0
_0807CB48: .4byte 0x80000100
_0807CB4C: .4byte PauseScreenVBLank_Unused
_0807CB50: .4byte gNonGameplayRam
_0807CB54: .4byte 0x00000265
_0807CB58:
	ldr r1, _0807CB98 @ =0x0400000C
	ldr r3, _0807CB9C @ =0x00000F06
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _0807CBA0 @ =0x00001707
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x42
	ldr r3, _0807CBA4 @ =0x00000844
	adds r0, r3, #0
	strh r0, [r1]
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r2, r4, r0
	ldrh r1, [r2]
	movs r3, #0xc0
	lsls r3, r3, #4
_0807CB7C:
	adds r0, r3, #0
	movs r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r0, _0807CBA8 @ =0x00000265
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _0807CBAC @ =0x00000266
	adds r0, r4, r1
	strb r3, [r0]
	b _0807CE56
	.align 2, 0
_0807CB98: .4byte 0x0400000C
_0807CB9C: .4byte 0x00000F06
_0807CBA0: .4byte 0x00001707
_0807CBA4: .4byte 0x00000844
_0807CBA8: .4byte 0x00000265
_0807CBAC: .4byte 0x00000266
_0807CBB0:
	ldr r3, _0807CBD4 @ =0x00000266
	adds r2, r4, r3
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldr r1, _0807CBD8 @ =0x0873421C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1]
	cmp r0, r1
	bhi _0807CBC8
	b _0807CE56
_0807CBC8:
	ldr r1, _0807CBDC @ =0x00000265
	adds r0, r4, r1
	ldrb r1, [r0]
	adds r1, #1
	b _0807CC36
	.align 2, 0
_0807CBD4: .4byte 0x00000266
_0807CBD8: .4byte 0x0873421C
_0807CBDC: .4byte 0x00000265
_0807CBE0:
	ldr r1, _0807CBF8 @ =0x03001220
	ldrh r0, [r1]
	adds r2, r0, #0
	cmp r2, #0
	bne _0807CC04
	ldr r3, _0807CBFC @ =0x00000265
	adds r0, r4, r3
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	ldr r1, _0807CC00 @ =0x00000266
	b _0807CE52
	.align 2, 0
_0807CBF8: .4byte 0x03001220
_0807CBFC: .4byte 0x00000265
_0807CC00: .4byte 0x00000266
_0807CC04:
	subs r0, #1
	strh r0, [r1]
	ldr r2, _0807CC14 @ =0x03001222
	movs r1, #0x10
	subs r1, r1, r0
	strh r1, [r2]
	b _0807CE56
	.align 2, 0
_0807CC14: .4byte 0x03001222
_0807CC18:
	ldr r3, _0807CC40 @ =0x00000266
	adds r2, r4, r3
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldr r1, _0807CC44 @ =0x0873421C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1, #1]
	cmp r0, r1
	bhi _0807CC30
	b _0807CE56
_0807CC30:
	ldr r1, _0807CC48 @ =0x00000265
	adds r0, r4, r1
_0807CC34:
	movs r1, #0x1b
_0807CC36:
	strb r1, [r0]
_0807CC38:
	movs r0, #0
	strb r0, [r2]
	b _0807CE56
	.align 2, 0
_0807CC40: .4byte 0x00000266
_0807CC44: .4byte 0x0873421C
_0807CC48: .4byte 0x00000265
_0807CC4C:
	movs r2, #0x9a
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	ldr r3, _0807CC68 @ =0x00000265
	adds r1, r4, r3
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, _0807CC6C @ =0x00000266
	b _0807CE52
	.align 2, 0
_0807CC68: .4byte 0x00000265
_0807CC6C: .4byte 0x00000266
_0807CC70:
	ldr r1, _0807CC8C @ =0x08561FA8
	ldr r2, _0807CC90 @ =0x06008000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807CC94 @ =gNonGameplayRam
	ldr r2, _0807CC98 @ =0x00000265
	adds r1, r1, r2
	b _0807CDEE
	.align 2, 0
_0807CC8C: .4byte 0x08561FA8
_0807CC90: .4byte 0x06008000
_0807CC94: .4byte gNonGameplayRam
_0807CC98: .4byte 0x00000265
_0807CC9C:
	ldr r1, _0807CCB8 @ =0x08562FA8
	ldr r2, _0807CCBC @ =0x06009000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807CCC0 @ =gNonGameplayRam
	ldr r3, _0807CCC4 @ =0x00000265
	adds r1, r1, r3
	b _0807CDEE
	.align 2, 0
_0807CCB8: .4byte 0x08562FA8
_0807CCBC: .4byte 0x06009000
_0807CCC0: .4byte gNonGameplayRam
_0807CCC4: .4byte 0x00000265
_0807CCC8:
	ldr r1, _0807CCDC @ =0x08563FA8
	ldr r2, _0807CCE0 @ =0x0600A000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	b _0807CDE8
	.align 2, 0
_0807CCDC: .4byte 0x08563FA8
_0807CCE0: .4byte 0x0600A000
_0807CCE4:
	ldr r1, _0807CD10 @ =0x08564FA8
	ldr r2, _0807CD14 @ =0x0600B000
	movs r3, #0x80
	lsls r3, r3, #4
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807CD18 @ =0x040000D4
	ldr r0, _0807CD1C @ =0x06009800
	str r0, [r1]
	ldr r0, _0807CD20 @ =0x06009400
	str r0, [r1, #4]
	ldr r0, _0807CD24 @ =0x80000200
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r1, _0807CD28 @ =gNonGameplayRam
	ldr r2, _0807CD2C @ =0x00000265
	adds r1, r1, r2
	b _0807CDEE
	.align 2, 0
_0807CD10: .4byte 0x08564FA8
_0807CD14: .4byte 0x0600B000
_0807CD18: .4byte 0x040000D4
_0807CD1C: .4byte 0x06009800
_0807CD20: .4byte 0x06009400
_0807CD24: .4byte 0x80000200
_0807CD28: .4byte gNonGameplayRam
_0807CD2C: .4byte 0x00000265
_0807CD30:
	ldr r1, _0807CD4C @ =0x02008000
	ldr r2, _0807CD50 @ =0x06004000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807CD54 @ =gNonGameplayRam
	ldr r3, _0807CD58 @ =0x00000265
	adds r1, r1, r3
	b _0807CDEE
	.align 2, 0
_0807CD4C: .4byte 0x02008000
_0807CD50: .4byte 0x06004000
_0807CD54: .4byte gNonGameplayRam
_0807CD58: .4byte 0x00000265
_0807CD5C:
	ldr r1, _0807CD70 @ =0x02009000
	ldr r2, _0807CD74 @ =0x06005000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	b _0807CDE8
	.align 2, 0
_0807CD70: .4byte 0x02009000
_0807CD74: .4byte 0x06005000
_0807CD78:
	ldr r1, _0807CD94 @ =0x0200A000
	ldr r2, _0807CD98 @ =0x06006000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807CD9C @ =gNonGameplayRam
	ldr r2, _0807CDA0 @ =0x00000265
	adds r1, r1, r2
	b _0807CDEE
	.align 2, 0
_0807CD94: .4byte 0x0200A000
_0807CD98: .4byte 0x06006000
_0807CD9C: .4byte gNonGameplayRam
_0807CDA0: .4byte 0x00000265
_0807CDA4:
	ldr r1, _0807CDC0 @ =0x0200B000
	ldr r2, _0807CDC4 @ =0x06007000
	movs r3, #0x80
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r1, _0807CDC8 @ =gNonGameplayRam
	ldr r3, _0807CDCC @ =0x00000265
	adds r1, r1, r3
	b _0807CDEE
	.align 2, 0
_0807CDC0: .4byte 0x0200B000
_0807CDC4: .4byte 0x06007000
_0807CDC8: .4byte gNonGameplayRam
_0807CDCC: .4byte 0x00000265
_0807CDD0:
	ldr r1, _0807CDF8 @ =0x040000D4
	ldr r0, _0807CDFC @ =0x02035000
	str r0, [r1]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _0807CE00 @ =0x80000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _0807CE04 @ =PauseScreenVBLank
_0807CDE4:
	bl CallbackSetVBlank
_0807CDE8:
	ldr r1, _0807CE08 @ =gNonGameplayRam
	ldr r0, _0807CE0C @ =0x00000265
	adds r1, r1, r0
_0807CDEE:
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _0807CE56
	.align 2, 0
_0807CDF8: .4byte 0x040000D4
_0807CDFC: .4byte 0x02035000
_0807CE00: .4byte 0x80000100
_0807CE04: .4byte PauseScreenVBLank
_0807CE08: .4byte gNonGameplayRam
_0807CE0C: .4byte 0x00000265
_0807CE10:
	ldr r1, _0807CE60 @ =0x0400000E
	movs r2, #0x9b
	lsls r2, r2, #2
	adds r0, r4, r2
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #2
	ldr r3, _0807CE64 @ =0x0000026E
	adds r0, r4, r3
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #0x44
	adds r2, #4
	adds r0, r4, r2
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	adds r3, #4
	adds r0, r4, r3
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _0807CE68 @ =0x0000026A
	adds r0, r4, r1
	ldrh r1, [r0]
	subs r2, #8
	adds r0, r4, r2
	movs r2, #0
	strh r1, [r0]
	subs r3, #0xd
	adds r0, r4, r3
	strb r2, [r0]
	movs r1, #0x99
	lsls r1, r1, #2
_0807CE52:
	adds r0, r4, r1
	strb r2, [r0]
_0807CE56:
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807CE60: .4byte 0x0400000E
_0807CE64: .4byte 0x0000026E
_0807CE68: .4byte 0x0000026A

	thumb_func_start unk_7ce6c
unk_7ce6c: @ 0x0807CE6C
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r3, _0807CEBC @ =gCurrentArea
	ldrb r0, [r3]
	cmp r0, #6
	bls _0807CE7A
	b _0807CF8A
_0807CE7A:
	ldr r2, _0807CEC0 @ =gNonGameplayRam
	movs r0, #0x90
	lsls r0, r0, #2
	adds r1, r2, r0
	ldr r0, _0807CEC4 @ =0x08581500
	ldm r0!, {r4, r5, r6}
	stm r1!, {r4, r5, r6}
	ldr r0, [r0]
	str r0, [r1]
	ldrb r0, [r2]
	adds r6, r2, #0
	cmp r0, #0
	beq _0807CF8A
	ldr r0, _0807CEC8 @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	beq _0807CF8A
	ldrb r0, [r3]
	cmp r0, #0
	beq _0807CED4
	ldr r2, _0807CECC @ =0x0857607D
	ldr r1, _0807CED0 @ =0x08576073
	adds r0, r0, r1
	ldrb r0, [r0]
	adds r0, r0, r2
	ldrb r1, [r0]
	movs r2, #0x91
	lsls r2, r2, #2
	adds r0, r6, r2
	b _0807CEDE
	.align 2, 0
_0807CEBC: .4byte gCurrentArea
_0807CEC0: .4byte gNonGameplayRam
_0807CEC4: .4byte 0x08581500
_0807CEC8: .4byte gPauseScreenFlag
_0807CECC: .4byte 0x0857607D
_0807CED0: .4byte 0x08576073
_0807CED4:
	ldr r0, _0807CF48 @ =0x0857607D
	ldrb r1, [r0, #7]
	movs r4, #0x91
	lsls r4, r4, #2
	adds r0, r6, r4
_0807CEDE:
	strb r1, [r0]
	ldr r1, _0807CF4C @ =0x0879C180
	movs r5, #0x91
	lsls r5, r5, #2
	adds r0, r6, r5
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r1
	ldrb r0, [r0]
	adds r1, r6, #0
	adds r1, #0xc6
	strb r0, [r1]
	subs r1, #8
	movs r0, #0x1c
	strh r0, [r1]
	subs r1, #2
	movs r0, #0x32
	strh r0, [r1]
	adds r2, r6, #0
	adds r2, #0xc7
	ldrb r1, [r2]
	movs r4, #4
	rsbs r4, r4, #0
	adds r0, r4, #0
	ands r0, r1
	movs r5, #1
	orrs r0, r5
	movs r1, #0xd
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r2]
	movs r0, #0xa
	movs r1, #0
	bl UpdateMenuOamDataID
	adds r1, r6, #0
	adds r1, #0xaf
	ldrb r0, [r1]
	ands r4, r0
	orrs r4, r5
	strb r4, [r1]
	ldr r2, _0807CF50 @ =gCurrentArea
	ldrb r0, [r2]
	cmp r0, #0
	beq _0807CF5C
	ldr r1, _0807CF54 @ =0x08576073
	adds r0, r0, r1
	ldrb r1, [r0]
	ldr r2, _0807CF58 @ =0x00000249
	adds r0, r6, r2
	b _0807CF6C
	.align 2, 0
_0807CF48: .4byte 0x0857607D
_0807CF4C: .4byte 0x0879C180
_0807CF50: .4byte gCurrentArea
_0807CF54: .4byte 0x08576073
_0807CF58: .4byte 0x00000249
_0807CF5C:
	ldr r1, _0807CF94 @ =0x085760E8
	ldr r0, _0807CF98 @ =gCurrentRoom
	ldrb r0, [r0]
	adds r0, #1
	adds r0, r0, r1
	ldrb r1, [r0]
	ldr r4, _0807CF9C @ =0x00000249
	adds r0, r6, r4
_0807CF6C:
	strb r1, [r0]
	bl unk_7d27c
	mov r1, sp
	ldr r5, _0807CFA0 @ =0x00007A73
	adds r0, r5, #0
	strh r0, [r1]
	ldr r1, _0807CFA4 @ =0x040000D4
	mov r6, sp
	str r6, [r1]
	ldr r0, _0807CFA8 @ =0x05000342
	str r0, [r1, #4]
	ldr r0, _0807CFAC @ =0x8100000C
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_0807CF8A:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807CF94: .4byte 0x085760E8
_0807CF98: .4byte gCurrentRoom
_0807CF9C: .4byte 0x00000249
_0807CFA0: .4byte 0x00007A73
_0807CFA4: .4byte 0x040000D4
_0807CFA8: .4byte 0x05000342
_0807CFAC: .4byte 0x8100000C

	thumb_func_start unk_7cfb0
unk_7cfb0: @ 0x0807CFB0
	push {r4, lr}
	ldr r1, _0807D034 @ =gNonGameplayRam
	ldrb r0, [r1]
	mov ip, r1
	cmp r0, #0
	bne _0807CFBE
	b _0807D270
_0807CFBE:
	ldr r0, _0807D038 @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	bne _0807CFCC
	b _0807D270
_0807CFCC:
	movs r1, #0x92
	lsls r1, r1, #2
	add r1, ip
	ldrb r0, [r1]
	adds r0, #1
	movs r2, #0
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _0807D014
	strb r2, [r1]
	ldr r3, _0807D03C @ =0x00000247
	add r3, ip
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #5
	bls _0807CFF8
	strb r2, [r3]
_0807CFF8:
	ldr r0, _0807D040 @ =0x00000249
	add r0, ip
	ldrb r4, [r0]
	lsls r1, r4, #1
	ldr r0, _0807D044 @ =0x05000340
	adds r1, r1, r0
	ldr r2, _0807D048 @ =0x08581300
	ldrb r0, [r3]
	lsls r0, r0, #4
	adds r0, r0, r4
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
_0807D014:
	ldr r1, _0807D04C @ =0x0000024A
	add r1, ip
	ldrb r0, [r1]
	cmp r0, #2
	bne _0807D050
	movs r0, #3
	strb r0, [r1]
	mov r1, ip
	adds r1, #0xa6
	movs r0, #0x1c
	strh r0, [r1]
	subs r1, #2
	movs r0, #0x32
	strh r0, [r1]
	b _0807D0DA
	.align 2, 0
_0807D034: .4byte gNonGameplayRam
_0807D038: .4byte gPauseScreenFlag
_0807D03C: .4byte 0x00000247
_0807D040: .4byte 0x00000249
_0807D044: .4byte 0x05000340
_0807D048: .4byte 0x08581300
_0807D04C: .4byte 0x0000024A
_0807D050:
	cmp r0, #3
	bne _0807D0DA
	ldr r0, _0807D090 @ =0x0857608A
	ldr r1, _0807D094 @ =0x0300004C
	ldrb r1, [r1]
	adds r0, r1, r0
	movs r4, #0
	ldrsb r4, [r0, r4]
	cmp r4, #0
	blt _0807D09C
	movs r0, #0x91
	lsls r0, r0, #2
	add r0, ip
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r4, r4, r0
	cmp r4, #0x23
	ble _0807D078
	subs r4, #0x24
_0807D078:
	mov r1, ip
	adds r1, #0xbe
	ldr r3, _0807D098 @ =0x0879C1A4
	lsls r2, r4, #1
	adds r2, r2, r4
	adds r0, r2, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrh r1, [r1]
	adds r0, r0, r1
	b _0807D0B2
	.align 2, 0
_0807D090: .4byte 0x0857608A
_0807D094: .4byte 0x0300004C
_0807D098: .4byte 0x0879C1A4
_0807D09C:
	mov r4, ip
	adds r4, #0xbe
	ldr r3, _0807D108 @ =0x0879C210
	lsls r2, r1, #1
	adds r2, r2, r1
	adds r0, r2, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrh r4, [r4]
	adds r0, r0, r4
_0807D0B2:
	mov r1, ip
	adds r1, #0xa6
	strh r0, [r1]
	adds r1, #0x16
	adds r0, r3, #1
	adds r0, r2, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrh r1, [r1]
	adds r0, r0, r1
	mov r1, ip
	adds r1, #0xa4
	strh r0, [r1]
	adds r3, #2
	adds r2, r2, r3
	ldrb r0, [r2]
	adds r0, #0x16
	adds r1, #0xa
	strb r0, [r1]
_0807D0DA:
	movs r2, #0x90
	lsls r2, r2, #2
	add r2, ip
	ldrb r0, [r2]
	cmp r0, #0
	bne _0807D0E8
	b _0807D270
_0807D0E8:
	ldr r0, _0807D10C @ =0x00000242
	add r0, ip
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	ldrb r0, [r2]
	subs r0, #1
	cmp r0, #5
	bls _0807D0FC
	b _0807D270
_0807D0FC:
	lsls r0, r0, #2
	ldr r1, _0807D110 @ =_0807D114
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807D108: .4byte 0x0879C210
_0807D10C: .4byte 0x00000242
_0807D110: .4byte _0807D114
_0807D114: @ jump table
	.4byte _0807D12C @ case 0
	.4byte _0807D142 @ case 1
	.4byte _0807D164 @ case 2
	.4byte _0807D19C @ case 3
	.4byte _0807D1C4 @ case 4
	.4byte _0807D1EC @ case 5
_0807D12C:
	mov r0, ip
	ldrh r1, [r0, #4]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	bne _0807D13C
	b _0807D270
_0807D13C:
	movs r1, #0x90
	lsls r1, r1, #2
	b _0807D1DE
_0807D142:
	mov r0, ip
	ldrh r1, [r0, #4]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	beq _0807D152
	b _0807D270
_0807D152:
	ldr r1, _0807D160 @ =0x0000024A
	add r1, ip
	movs r0, #2
	strb r0, [r1]
	movs r1, #0x90
	lsls r1, r1, #2
	b _0807D1B6
	.align 2, 0
_0807D160: .4byte 0x0000024A
_0807D164:
	ldr r1, _0807D194 @ =0x00000242
	add r1, ip
	ldrb r0, [r1]
	cmp r0, #8
	bhi _0807D170
	b _0807D270
_0807D170:
	movs r3, #0
	strb r3, [r1]
	movs r2, #0x91
	lsls r2, r2, #2
	add r2, ip
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x23
	ble _0807D18A
	strb r3, [r2]
_0807D18A:
	ldr r1, _0807D198 @ =0x0879C180
	movs r0, #0
	ldrsb r0, [r2, r0]
	b _0807D266
	.align 2, 0
_0807D194: .4byte 0x00000242
_0807D198: .4byte 0x0879C180
_0807D19C:
	mov r0, ip
	ldrh r1, [r0, #4]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	beq _0807D270
	movs r1, #0x90
	lsls r1, r1, #2
	add r1, ip
	movs r0, #5
	strb r0, [r1]
	ldr r1, _0807D1C0 @ =0x00000241
_0807D1B6:
	add r1, ip
	movs r0, #1
	strb r0, [r1]
	b _0807D270
	.align 2, 0
_0807D1C0: .4byte 0x00000241
_0807D1C4:
	mov r0, ip
	ldrh r1, [r0, #4]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	bne _0807D270
	movs r1, #0x90
	lsls r1, r1, #2
	add r1, ip
	movs r0, #6
	strb r0, [r1]
	ldr r1, _0807D1E8 @ =0x0000024A
_0807D1DE:
	add r1, ip
	movs r0, #2
	strb r0, [r1]
	b _0807D270
	.align 2, 0
_0807D1E8: .4byte 0x0000024A
_0807D1EC:
	movs r2, #0x91
	lsls r2, r2, #2
	add r2, ip
	ldr r0, _0807D21C @ =0x00000245
	add r0, ip
	ldrb r4, [r2]
	movs r1, #0
	ldrsb r1, [r2, r1]
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r1, r0
	bne _0807D224
	movs r1, #0x90
	lsls r1, r1, #2
	add r1, ip
	movs r2, #0
	movs r0, #4
	strb r0, [r1]
	ldr r0, _0807D220 @ =0x00000241
	add r0, ip
	strb r2, [r0]
	b _0807D270
	.align 2, 0
_0807D21C: .4byte 0x00000245
_0807D220: .4byte 0x00000241
_0807D224:
	ldr r1, _0807D248 @ =0x00000242
	add r1, ip
	ldrb r0, [r1]
	cmp r0, #8
	bls _0807D270
	movs r3, #0
	strb r3, [r1]
	ldr r0, _0807D24C @ =0x00000246
	add r0, ip
	ldrb r0, [r0]
	adds r0, r4, r0
	strb r0, [r2]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x23
	ble _0807D250
	strb r3, [r2]
	b _0807D258
	.align 2, 0
_0807D248: .4byte 0x00000242
_0807D24C: .4byte 0x00000246
_0807D250:
	cmp r0, #0
	bge _0807D258
	movs r0, #0x23
	strb r0, [r2]
_0807D258:
	ldr r1, _0807D278 @ =0x0879C180
	movs r0, #0x91
	lsls r0, r0, #2
	add r0, ip
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
_0807D266:
	adds r0, r0, r1
	ldrb r1, [r0]
	mov r0, ip
	adds r0, #0xc6
	strb r1, [r0]
_0807D270:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807D278: .4byte 0x0879C180

	thumb_func_start unk_7d27c
unk_7d27c: @ 0x0807D27C
	push {r4, r5, lr}
	ldr r0, _0807D294 @ =0x0300004C
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	bne _0807D29C
	ldr r0, _0807D298 @ =gNonGameplayRam
	movs r2, #0x90
	lsls r2, r2, #2
	adds r0, r0, r2
	b _0807D33E
	.align 2, 0
_0807D294: .4byte 0x0300004C
_0807D298: .4byte gNonGameplayRam
_0807D29C:
	ldr r0, _0807D2C4 @ =gNonGameplayRam
	movs r2, #0x90
	lsls r2, r2, #2
	adds r1, r0, r2
	movs r4, #1
	strb r4, [r1]
	subs r2, #0x20
	adds r1, r0, r2
	ldr r2, _0807D2C8 @ =gPreviousNavigationConversation
	ldrb r1, [r1]
	adds r3, r0, #0
	ldrb r2, [r2]
	cmp r1, r2
	bne _0807D2D0
	ldr r0, _0807D2CC @ =0x0000024A
	adds r1, r3, r0
	movs r0, #2
	strb r0, [r1]
	b _0807D2D6
	.align 2, 0
_0807D2C4: .4byte gNonGameplayRam
_0807D2C8: .4byte gPreviousNavigationConversation
_0807D2CC: .4byte 0x0000024A
_0807D2D0:
	ldr r1, _0807D324 @ =0x0000024A
	adds r0, r3, r1
	strb r4, [r0]
_0807D2D6:
	ldr r1, _0807D328 @ =0x0857607D
	ldrb r0, [r5]
	adds r0, r0, r1
	ldrb r1, [r0]
	movs r2, #0
	ldrsb r2, [r0, r2]
	cmp r2, #0
	blt _0807D340
	ldr r0, _0807D32C @ =0x00000245
	adds r5, r3, r0
	strb r1, [r5]
	movs r1, #0x91
	lsls r1, r1, #2
	adds r4, r3, r1
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r2, r0
	beq _0807D340
	movs r2, #0x90
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #4
	strb r0, [r1]
	movs r1, #0
	ldrsb r1, [r5, r1]
	movs r0, #0
	ldrsb r0, [r4, r0]
	subs r1, r1, r0
	movs r0, #1
	cmp r1, #0
	bge _0807D316
	subs r0, #2
_0807D316:
	muls r1, r0, r1
	cmp r1, #0x12
	ble _0807D330
	movs r1, #1
	rsbs r1, r1, #0
	b _0807D338
	.align 2, 0
_0807D324: .4byte 0x0000024A
_0807D328: .4byte 0x0857607D
_0807D32C: .4byte 0x00000245
_0807D330:
	cmp r1, #0x12
	bne _0807D336
	movs r0, #1
_0807D336:
	movs r1, #1
_0807D338:
	muls r1, r0, r1
	ldr r2, _0807D348 @ =0x00000246
	adds r0, r3, r2
_0807D33E:
	strb r1, [r0]
_0807D340:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807D348: .4byte 0x00000246

	thumb_func_start DebugMenuSubroutine
DebugMenuSubroutine: @ 0x0807D34C
	push {r4, lr}
	ldr r2, _0807D378 @ =gChangedInput
	ldrh r1, [r2]
	ldr r0, _0807D37C @ =0x00000302
	ands r0, r1
	adds r1, r2, #0
	cmp r0, #0
	beq _0807D384
	ldr r2, _0807D380 @ =gNonGameplayRam
	ldrb r3, [r2, #7]
	cmp r3, #0
	bne _0807D384
	adds r0, r2, #0
	adds r0, #0x28
	movs r1, #7
	strb r1, [r0]
	strb r3, [r2, #6]
	strb r3, [r2, #7]
	adds r0, #0xe
	strb r3, [r0]
	b _0807D3AE
	.align 2, 0
_0807D378: .4byte gChangedInput
_0807D37C: .4byte 0x00000302
_0807D380: .4byte gNonGameplayRam
_0807D384:
	ldrh r0, [r1]
	cmp r0, #0
	beq _0807D38E
	bl DebugMenuModifyValues
_0807D38E:
	ldr r0, _0807D3B4 @ =gNonGameplayRam
	movs r1, #0xa1
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r4, _0807D3B8 @ =gInGameTimer
	ldrb r0, [r0]
	ldrb r1, [r4, #1]
	cmp r0, r1
	beq _0807D3A4
	bl DebugMenuDrawIgt
_0807D3A4:
	ldrb r0, [r4, #3]
	cmp r0, #0
	bne _0807D3AE
	bl unk_7e224
_0807D3AE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807D3B4: .4byte gNonGameplayRam
_0807D3B8: .4byte gInGameTimer

	thumb_func_start DebugMenuModifyValues
DebugMenuModifyValues: @ 0x0807D3BC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r1, _0807D470 @ =gNonGameplayRam
	movs r3, #0x2c
	ldrsh r2, [r1, r3]
	mov ip, r1
	cmp r2, #0
	bge _0807D3D6
	adds r2, #7
_0807D3D6:
	asrs r5, r2, #3
	mov r2, ip
	movs r3, #0x2e
	ldrsh r1, [r2, r3]
	cmp r1, #0
	bge _0807D3E4
	adds r1, #7
_0807D3E4:
	asrs r4, r1, #3
	movs r7, #0
	movs r1, #0
	mov sl, r1
	ldr r6, _0807D474 @ =0x0858211C
	adds r3, r6, #0
	movs r2, #0
	adds r1, r6, #1
	mov sb, r1
	adds r1, r6, #2
	mov r8, r1
_0807D3FA:
	ldrb r1, [r3]
	cmp r1, r5
	bgt _0807D41A
	mov r1, sb
	adds r1, r2, r1
	ldrb r1, [r1]
	cmp r1, r5
	blt _0807D41A
	mov r1, r8
	adds r1, r2, r1
	ldrb r1, [r1]
	cmp r1, r4
	bgt _0807D41A
	ldrb r1, [r3, #3]
	cmp r1, r4
	bge _0807D480
_0807D41A:
	adds r3, #5
	adds r2, #5
	movs r1, #1
	add sl, r1
	mov r1, sl
	cmp r1, #0x12
	ble _0807D3FA
	cmp r7, #0
	bne _0807D42E
	b _0807DB22
_0807D42E:
	mov r2, sl
	lsls r1, r2, #2
	adds r2, r1, r2
	adds r3, r6, #4
	adds r2, r2, r3
	ldrb r2, [r2]
	mov r8, r2
	mov sb, r1
	cmp r2, #0xf
	beq _0807D484
	ldr r1, _0807D478 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #2
	ands r1, r2
	cmp r1, #0
	beq _0807D484
	mov r3, ip
	ldrb r1, [r3, #7]
	cmp r1, #0
	beq _0807D484
	movs r4, #0
	strb r4, [r3, #7]
	movs r0, #0
	movs r1, #1
	bl UpdateMenuOamDataID
	mov r5, r8
	cmp r5, #0x11
	beq _0807D46A
	b _0807DB22
_0807D46A:
	ldr r1, _0807D47C @ =gMaxInGameTimeFlag
	strb r4, [r1]
	b _0807DB22
	.align 2, 0
_0807D470: .4byte gNonGameplayRam
_0807D474: .4byte 0x0858211C
_0807D478: .4byte gChangedInput
_0807D47C: .4byte gMaxInGameTimeFlag
_0807D480:
	movs r7, #1
	b _0807D42E
_0807D484:
	mov r2, sb
	add r2, sl
	adds r1, r2, r6
	ldrb r1, [r1]
	subs r5, r5, r1
	adds r1, r6, #3
	adds r1, r2, r1
	ldrb r1, [r1]
	subs r4, r1, r4
	adds r1, r6, #4
	adds r2, r2, r1
	ldrb r1, [r2]
	cmp r1, #0x12
	bls _0807D4A2
	b _0807DAD8
_0807D4A2:
	lsls r1, r1, #2
	ldr r2, _0807D4AC @ =_0807D4B0
	adds r1, r1, r2
	ldr r1, [r1]
	mov pc, r1
	.align 2, 0
_0807D4AC: .4byte _0807D4B0
_0807D4B0: @ jump table
	.4byte _0807D4FC @ case 0
	.4byte _0807D528 @ case 1
	.4byte _0807D554 @ case 2
	.4byte _0807D580 @ case 3
	.4byte _0807D5A0 @ case 4
	.4byte _0807D5D4 @ case 5
	.4byte _0807D5D4 @ case 6
	.4byte _0807DAD8 @ case 7
	.4byte _0807D5D4 @ case 8
	.4byte _0807D5D4 @ case 9
	.4byte _0807D5D4 @ case 10
	.4byte _0807D5D4 @ case 11
	.4byte _0807D61C @ case 12
	.4byte _0807D65C @ case 13
	.4byte _0807D6A0 @ case 14
	.4byte _0807D6DC @ case 15
	.4byte _0807D88C @ case 16
	.4byte _0807D96C @ case 17
	.4byte _0807DAA0 @ case 18
_0807D4FC:
	ldr r1, _0807D51C @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	bne _0807D50A
	b _0807DADA
_0807D50A:
	ldr r4, _0807D520 @ =gEquipment
	ldr r1, _0807D524 @ =0x08576168
	adds r1, r5, r1
	ldrb r2, [r4, #0xa]
	ldrb r1, [r1]
	eors r2, r1
	movs r3, #0
	strb r2, [r4, #0xa]
	b _0807D5BE
	.align 2, 0
_0807D51C: .4byte gChangedInput
_0807D520: .4byte gEquipment
_0807D524: .4byte 0x08576168
_0807D528:
	ldr r1, _0807D548 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	bne _0807D536
	b _0807DADA
_0807D536:
	ldr r4, _0807D54C @ =gEquipment
	ldr r1, _0807D550 @ =0x0857616D
	adds r1, r5, r1
	ldrb r2, [r4, #0xb]
	ldrb r1, [r1]
	eors r2, r1
	movs r3, #0
	strb r2, [r4, #0xb]
	b _0807D5BE
	.align 2, 0
_0807D548: .4byte gChangedInput
_0807D54C: .4byte gEquipment
_0807D550: .4byte 0x0857616D
_0807D554:
	ldr r1, _0807D574 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	bne _0807D562
	b _0807DADA
_0807D562:
	ldr r4, _0807D578 @ =gEquipment
	ldr r1, _0807D57C @ =0x08576171
	adds r1, r5, r1
	ldrb r2, [r4, #0xb]
	ldrb r1, [r1]
	eors r2, r1
	movs r3, #0
	strb r2, [r4, #0xb]
	b _0807D5BE
	.align 2, 0
_0807D574: .4byte gChangedInput
_0807D578: .4byte gEquipment
_0807D57C: .4byte 0x08576171
_0807D580:
	ldr r1, _0807D594 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	bne _0807D58E
	b _0807DADA
_0807D58E:
	ldr r4, _0807D598 @ =gEquipment
	ldr r1, _0807D59C @ =0x08576173
	b _0807D5B2
	.align 2, 0
_0807D594: .4byte gChangedInput
_0807D598: .4byte gEquipment
_0807D59C: .4byte 0x08576173
_0807D5A0:
	ldr r1, _0807D5C4 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	bne _0807D5AE
	b _0807DADA
_0807D5AE:
	ldr r4, _0807D5C8 @ =gEquipment
	ldr r1, _0807D5CC @ =0x08576175
_0807D5B2:
	adds r1, r5, r1
	ldrb r2, [r4, #0xc]
	ldrb r1, [r1]
	eors r2, r1
	movs r3, #0
	strb r2, [r4, #0xc]
_0807D5BE:
	ldr r1, _0807D5D0 @ =gAbilityCount
	strb r3, [r1]
	b _0807DADA
	.align 2, 0
_0807D5C4: .4byte gChangedInput
_0807D5C8: .4byte gEquipment
_0807D5CC: .4byte 0x08576175
_0807D5D0: .4byte gAbilityCount
_0807D5D4:
	movs r7, #0
	ldr r1, _0807D618 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	beq _0807D5F0
	mov r2, ip
	adds r2, #0x36
	movs r1, #9
	strb r1, [r2]
	movs r1, #1
	mov r2, ip
	strb r1, [r2, #7]
_0807D5F0:
	mov r3, ip
	ldrb r1, [r3, #7]
	cmp r1, #0
	bne _0807D5FA
	b _0807DADA
_0807D5FA:
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	mov r1, sb
	add r1, sl
	adds r2, r6, #4
	adds r1, r1, r2
	ldrb r1, [r1]
	bl DebugMenuModifyHealthAndAmmo
	adds r1, r0, #0
	cmp r1, #0
	bne _0807D614
	b _0807DADA
_0807D614:
	movs r7, #2
	b _0807DADA
	.align 2, 0
_0807D618: .4byte gChangedInput
_0807D61C:
	movs r7, #0
	ldr r1, _0807D658 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	beq _0807D638
	mov r2, ip
	adds r2, #0x36
	movs r1, #9
	strb r1, [r2]
	movs r1, #1
	mov r5, ip
	strb r1, [r5, #7]
_0807D638:
	mov r2, ip
	ldrb r1, [r2, #7]
	cmp r1, #0
	bne _0807D642
	b _0807DADA
_0807D642:
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	bl DebugMenuModifyAbilityCount
	adds r1, r0, #0
	cmp r1, #0
	bne _0807D652
	b _0807DADA
_0807D652:
	movs r7, #3
	b _0807DADA
	.align 2, 0
_0807D658: .4byte gChangedInput
_0807D65C:
	ldr r1, _0807D67C @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	bne _0807D66A
	b _0807DADA
_0807D66A:
	ldr r1, _0807D680 @ =gEquipment
	ldrb r3, [r1, #0xd]
	movs r2, #4
	subs r2, r2, r4
	adds r5, r1, #0
	cmp r3, r2
	bne _0807D684
	movs r1, #3
	b _0807D686
	.align 2, 0
_0807D67C: .4byte gChangedInput
_0807D680: .4byte gEquipment
_0807D684:
	movs r1, #4
_0807D686:
	subs r1, r1, r4
	strb r1, [r5, #0xd]
	ldr r1, _0807D698 @ =gSecurityHatchLevel
	ldrb r2, [r5, #0xd]
	strb r2, [r1]
	ldr r1, _0807D69C @ =gDebugMenuOptions
	strb r2, [r1, #9]
	b _0807DADA
	.align 2, 0
_0807D698: .4byte gSecurityHatchLevel
_0807D69C: .4byte gDebugMenuOptions
_0807D6A0:
	ldr r1, _0807D6CC @ =gChangedInput
	ldrh r2, [r1]
	movs r3, #1
	adds r1, r3, #0
	ands r1, r2
	ldr r5, _0807D6D0 @ =gEquipment
	cmp r1, #0
	beq _0807D6C4
	movs r2, #6
	subs r2, r2, r4
	adds r1, r3, #0
	lsls r1, r2
	ldrb r2, [r5, #0xe]
	eors r1, r2
	strb r1, [r5, #0xe]
	ldr r2, _0807D6D4 @ =gPreviousArea
	movs r1, #0xff
	strb r1, [r2]
_0807D6C4:
	ldr r2, _0807D6D8 @ =gDebugMenuOptions
	ldrb r1, [r5, #0xe]
	strb r1, [r2, #8]
	b _0807DADA
	.align 2, 0
_0807D6CC: .4byte gChangedInput
_0807D6D0: .4byte gEquipment
_0807D6D4: .4byte gPreviousArea
_0807D6D8: .4byte gDebugMenuOptions
_0807D6DC:
	movs r7, #0
	movs r6, #0
	ldr r3, _0807D724 @ =gNonGameplayRam
	ldrb r1, [r3, #7]
	cmp r1, #0
	bne _0807D730
	ldr r1, _0807D728 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	beq _0807D754
	movs r1, #1
	strb r1, [r3, #7]
	adds r2, r3, #0
	adds r2, #0x36
	movs r1, #9
	strb r1, [r2]
	movs r7, #1
	ldr r2, _0807D72C @ =0x04000044
	movs r1, #0x88
	strh r1, [r2]
	adds r2, #6
	movs r1, #4
	strb r1, [r2]
	movs r5, #0x9a
	lsls r5, r5, #2
	adds r3, r3, r5
	ldrh r2, [r3]
	movs r5, #0x80
	lsls r5, r5, #1
	adds r1, r5, #0
	orrs r1, r2
	strh r1, [r3]
	movs r6, #0x80
	b _0807D754
	.align 2, 0
_0807D724: .4byte gNonGameplayRam
_0807D728: .4byte gChangedInput
_0807D72C: .4byte 0x04000044
_0807D730:
	ldr r1, _0807D788 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #3
	ands r1, r2
	cmp r1, #0
	beq _0807D754
	strb r7, [r3, #7]
	movs r0, #0
	movs r1, #1
	bl UpdateMenuOamDataID
	movs r7, #1
	ldr r2, _0807D78C @ =0x04000044
	movs r1, #0xa0
	strh r1, [r2]
	adds r2, #6
	movs r1, #0x35
	strb r1, [r2]
_0807D754:
	ldr r3, _0807D790 @ =gNonGameplayRam
	ldrb r1, [r3, #7]
	cmp r1, #0
	bne _0807D75E
	b _0807DADA
_0807D75E:
	cmp r6, #0
	bne _0807D800
	ldr r1, _0807D788 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #0x80
	ands r1, r2
	cmp r1, #0
	beq _0807D7A2
	ldr r3, _0807D794 @ =gEventCounter
	ldrb r2, [r3]
	ldr r0, _0807D798 @ =0x08576180
	lsls r1, r4, #1
	adds r1, r1, r0
	ldrh r1, [r1]
	adds r0, r2, r1
	cmp r0, #0x6d
	ble _0807D79C
	movs r0, #0x6d
	strb r0, [r3]
	b _0807D800
	.align 2, 0
_0807D788: .4byte gChangedInput
_0807D78C: .4byte 0x04000044
_0807D790: .4byte gNonGameplayRam
_0807D794: .4byte gEventCounter
_0807D798: .4byte 0x08576180
_0807D79C:
	adds r0, r2, r1
	strb r0, [r3]
	b _0807D800
_0807D7A2:
	movs r1, #0x40
	ands r1, r2
	cmp r1, #0
	beq _0807D7CE
	ldr r2, _0807D7C0 @ =gEventCounter
	ldrb r3, [r2]
	ldr r0, _0807D7C4 @ =0x08576180
	lsls r1, r4, #1
	adds r1, r1, r0
	ldrh r1, [r1]
	subs r0, r3, r1
	cmp r0, #0
	bge _0807D7C8
	strb r6, [r2]
	b _0807D800
	.align 2, 0
_0807D7C0: .4byte gEventCounter
_0807D7C4: .4byte 0x08576180
_0807D7C8:
	subs r0, r3, r1
	strb r0, [r2]
	b _0807D800
_0807D7CE:
	movs r1, #0x10
	ands r1, r2
	cmp r1, #0
	beq _0807D7E2
	cmp r4, #0
	beq _0807D7FA
	ldrh r1, [r3, #0x2e]
	adds r1, #8
	strh r1, [r3, #0x2e]
	b _0807D7FA
_0807D7E2:
	movs r1, #0x20
	ands r1, r2
	cmp r1, #0
	beq _0807D7F6
	cmp r4, #1
	bgt _0807D7FA
	ldrh r1, [r3, #0x2e]
	subs r1, #8
	strh r1, [r3, #0x2e]
	b _0807D7FA
_0807D7F6:
	bl DebugMenuCheckSetMaxHealthOrAmmo
_0807D7FA:
	cmp r6, #0
	bne _0807D800
	b _0807DADA
_0807D800:
	ldr r1, _0807D870 @ =gEquipment
	movs r0, #0
	strb r0, [r1, #0xa]
	strb r0, [r1, #0xb]
	strb r0, [r1, #0xc]
	ldr r0, _0807D874 @ =gCurrentEventBasedEffect
	ldrb r4, [r0]
	ldr r0, _0807D878 @ =gCurrentEventBasedEffectCopy
	ldrb r5, [r0]
	ldr r0, _0807D87C @ =gEventCounter
	ldrb r6, [r0]
	movs r7, #0
	cmp r7, r6
	bgt _0807D82A
_0807D81C:
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	bl EventSet
	adds r7, #1
	cmp r7, r6
	ble _0807D81C
_0807D82A:
	ldr r6, _0807D874 @ =gCurrentEventBasedEffect
	strb r4, [r6]
	ldr r0, _0807D878 @ =gCurrentEventBasedEffectCopy
	strb r5, [r0]
	movs r0, #0xff
	bl DebugMenuDrawSection
	movs r0, #0xff
	bl DebugMenuDrawHealthAmmoAndEvent
	bl DebugMenuDrawAbilityCount
	ldr r2, _0807D880 @ =gSecurityHatchLevel
	ldr r0, _0807D870 @ =gEquipment
	ldrb r1, [r0, #0xd]
	strb r1, [r2]
	ldr r0, _0807D884 @ =gDebugMenuOptions
	strb r1, [r0, #9]
	ldr r4, _0807D87C @ =gEventCounter
	ldrb r0, [r4]
	bl DebugMenuDrawEventText
	movs r7, #0
	ldrb r1, [r4]
	cmp r1, #0x20
	bhi _0807D868
	cmp r1, #0x20
	bne _0807D86A
	ldrb r1, [r6]
	cmp r1, #0x80
	bne _0807D86A
_0807D868:
	movs r7, #1
_0807D86A:
	ldr r1, _0807D888 @ =gWaterLowered
	strb r7, [r1]
	b _0807DAD8
	.align 2, 0
_0807D870: .4byte gEquipment
_0807D874: .4byte gCurrentEventBasedEffect
_0807D878: .4byte gCurrentEventBasedEffectCopy
_0807D87C: .4byte gEventCounter
_0807D880: .4byte gSecurityHatchLevel
_0807D884: .4byte gDebugMenuOptions
_0807D888: .4byte gWaterLowered
_0807D88C:
	movs r7, #0
	movs r6, #0
	ldr r3, _0807D8B4 @ =gNonGameplayRam
	ldrb r1, [r3, #7]
	cmp r1, #0
	bne _0807D8BC
	ldr r1, _0807D8B8 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	beq _0807D8D2
	movs r1, #1
	strb r1, [r3, #7]
	adds r2, r3, #0
	adds r2, #0x36
	movs r1, #9
	strb r1, [r2]
	b _0807D8D2
	.align 2, 0
_0807D8B4: .4byte gNonGameplayRam
_0807D8B8: .4byte gChangedInput
_0807D8BC:
	ldr r1, _0807D908 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #3
	ands r1, r2
	cmp r1, #0
	beq _0807D8D2
	strb r7, [r3, #7]
	movs r0, #0
	movs r1, #1
	bl UpdateMenuOamDataID
_0807D8D2:
	ldr r3, _0807D90C @ =gNonGameplayRam
	ldrb r1, [r3, #7]
	cmp r1, #0
	bne _0807D8DC
	b _0807DADA
_0807D8DC:
	cmp r6, #0
	beq _0807D8E2
	b _0807D614
_0807D8E2:
	ldr r1, _0807D908 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #0x80
	ands r1, r2
	cmp r1, #0
	beq _0807D918
	ldr r5, _0807D910 @ =gSubEventCounter
	ldrh r3, [r5]
	ldr r2, _0807D914 @ =0x08576180
	lsls r1, r4, #1
	adds r1, r1, r2
	ldrh r1, [r1]
	adds r1, r3, r1
	cmp r1, #0x9b
	ble _0807D902
	movs r1, #0x9b
_0807D902:
	strh r1, [r5]
	b _0807D614
	.align 2, 0
_0807D908: .4byte gChangedInput
_0807D90C: .4byte gNonGameplayRam
_0807D910: .4byte gSubEventCounter
_0807D914: .4byte 0x08576180
_0807D918:
	movs r1, #0x40
	ands r1, r2
	cmp r1, #0
	beq _0807D940
	ldr r5, _0807D938 @ =gSubEventCounter
	ldrh r3, [r5]
	ldr r2, _0807D93C @ =0x08576180
	lsls r1, r4, #1
	adds r1, r1, r2
	ldrh r1, [r1]
	subs r1, r3, r1
	cmp r1, #0
	bge _0807D902
	strh r6, [r5]
	b _0807D614
	.align 2, 0
_0807D938: .4byte gSubEventCounter
_0807D93C: .4byte 0x08576180
_0807D940:
	movs r1, #0x10
	ands r1, r2
	cmp r1, #0
	beq _0807D952
	cmp r4, #0
	beq _0807D964
	ldrh r1, [r3, #0x2e]
	adds r1, #8
	b _0807D962
_0807D952:
	movs r1, #0x20
	ands r1, r2
	cmp r1, #0
	beq _0807D964
	cmp r4, #1
	bgt _0807D964
	ldrh r1, [r3, #0x2e]
	subs r1, #8
_0807D962:
	strh r1, [r3, #0x2e]
_0807D964:
	cmp r6, #0
	bne _0807D96A
	b _0807DADA
_0807D96A:
	b _0807D614
_0807D96C:
	movs r7, #0
	mov r3, ip
	ldrb r1, [r3, #7]
	cmp r1, #0
	bne _0807D9A8
	ldr r1, _0807D99C @ =gChangedInput
	ldrh r2, [r1]
	movs r4, #1
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	bne _0807D986
	b _0807DADA
_0807D986:
	adds r2, r3, #0
	adds r2, #0x36
	movs r1, #9
	strb r1, [r2]
	strb r4, [r3, #7]
	ldr r1, _0807D9A0 @ =gMaxInGameTimeFlag
	strb r4, [r1]
	ldr r1, _0807D9A4 @ =gInGameTimer
	strb r7, [r1, #2]
	strb r7, [r1, #3]
	b _0807DADA
	.align 2, 0
_0807D99C: .4byte gChangedInput
_0807D9A0: .4byte gMaxInGameTimeFlag
_0807D9A4: .4byte gInGameTimer
_0807D9A8:
	movs r6, #0
	ldr r1, _0807D9D4 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #0x80
	ands r1, r2
	cmp r1, #0
	beq _0807DA12
	cmp r4, #2
	ble _0807D9E6
	subs r4, #3
	ldr r3, _0807D9D8 @ =gInGameTimer
	ldrb r2, [r3]
	ldr r0, _0807D9DC @ =0x08576180
	lsls r1, r4, #1
	adds r1, r1, r0
	ldrh r1, [r1]
	adds r0, r2, r1
	cmp r0, #0xff
	ble _0807D9E0
	movs r0, #0xff
	strb r0, [r3]
	b _0807DA9A
	.align 2, 0
_0807D9D4: .4byte gChangedInput
_0807D9D8: .4byte gInGameTimer
_0807D9DC: .4byte 0x08576180
_0807D9E0:
	adds r0, r2, r1
	strb r0, [r3]
	b _0807DA9A
_0807D9E6:
	cmp r4, #1
	bgt _0807DA96
	ldr r3, _0807DA04 @ =gInGameTimer
	ldrb r2, [r3, #1]
	ldr r0, _0807DA08 @ =0x08576180
	lsls r1, r4, #1
	adds r1, r1, r0
	ldrh r1, [r1]
	adds r0, r2, r1
	cmp r0, #0x3b
	ble _0807DA0C
	movs r0, #0x3b
	strb r0, [r3, #1]
	b _0807DA9A
	.align 2, 0
_0807DA04: .4byte gInGameTimer
_0807DA08: .4byte 0x08576180
_0807DA0C:
	adds r0, r2, r1
	strb r0, [r3, #1]
	b _0807DA9A
_0807DA12:
	movs r1, #0x40
	ands r1, r2
	cmp r1, #0
	beq _0807DA6E
	cmp r4, #2
	ble _0807DA46
	subs r4, #3
	ldr r2, _0807DA38 @ =gInGameTimer
	ldrb r3, [r2]
	ldr r0, _0807DA3C @ =0x08576180
	lsls r1, r4, #1
	adds r1, r1, r0
	ldrh r1, [r1]
	subs r0, r3, r1
	cmp r0, #0
	bge _0807DA40
	strb r7, [r2]
	b _0807DA9A
	.align 2, 0
_0807DA38: .4byte gInGameTimer
_0807DA3C: .4byte 0x08576180
_0807DA40:
	subs r0, r3, r1
	strb r0, [r2]
	b _0807DA9A
_0807DA46:
	cmp r4, #1
	bgt _0807DA96
	ldr r2, _0807DA60 @ =gInGameTimer
	ldrb r3, [r2, #1]
	ldr r0, _0807DA64 @ =0x08576180
	lsls r1, r4, #1
	adds r1, r1, r0
	ldrh r1, [r1]
	subs r0, r3, r1
	cmp r0, #0
	bge _0807DA68
	strb r7, [r2, #1]
	b _0807DA9A
	.align 2, 0
_0807DA60: .4byte gInGameTimer
_0807DA64: .4byte 0x08576180
_0807DA68:
	subs r0, r3, r1
	strb r0, [r2, #1]
	b _0807DA9A
_0807DA6E:
	movs r1, #0x10
	ands r1, r2
	cmp r1, #0
	beq _0807DA82
	cmp r4, #0
	beq _0807DA96
	ldrh r1, [r3, #0x2e]
	adds r1, #8
	strh r1, [r3, #0x2e]
	b _0807DA96
_0807DA82:
	movs r1, #0x20
	ands r1, r2
	cmp r1, #0
	beq _0807DA96
	cmp r4, #4
	bgt _0807DA96
	mov r2, ip
	ldrh r1, [r2, #0x2e]
	subs r1, #8
	strh r1, [r2, #0x2e]
_0807DA96:
	cmp r6, #0
	beq _0807DADA
_0807DA9A:
	bl DebugMenuDrawIgt
	b _0807DADA
_0807DAA0:
	ldr r1, _0807DACC @ =gCurrentArea
	ldrb r2, [r1]
	ldr r1, _0807DAD0 @ =gCurrentRoom
	ldrb r1, [r1]
	cmn r2, r1
	beq _0807DADA
	ldr r1, _0807DAD4 @ =gChangedInput
	ldrh r2, [r1]
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	beq _0807DADA
	movs r6, #0
_0807DABA:
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	bl Sram_QuickSave
	adds r6, #1
	cmp r6, #3
	ble _0807DABA
	b _0807DADA
	.align 2, 0
_0807DACC: .4byte gCurrentArea
_0807DAD0: .4byte gCurrentRoom
_0807DAD4: .4byte gChangedInput
_0807DAD8:
	movs r7, #0
_0807DADA:
	cmp r7, #1
	bne _0807DAF4
	ldr r0, _0807DAF0 @ =0x0858211C
	mov r1, sb
	add r1, sl
	adds r0, #4
	adds r1, r1, r0
	ldrb r0, [r1]
	bl DebugMenuDrawSection
	b _0807DB1A
	.align 2, 0
_0807DAF0: .4byte 0x0858211C
_0807DAF4:
	cmp r7, #2
	bne _0807DB10
	ldr r0, _0807DB0C @ =0x0858211C
	mov r1, sb
	add r1, sl
	adds r0, #4
	adds r1, r1, r0
	ldrb r0, [r1]
	bl DebugMenuDrawHealthAmmoAndEvent
	b _0807DB1A
	.align 2, 0
_0807DB0C: .4byte 0x0858211C
_0807DB10:
	cmp r7, #3
	bne _0807DB1A
	movs r0, #0xff
	bl DebugMenuDrawSection
_0807DB1A:
	cmp r7, #0
	beq _0807DB22
	bl DebugMenuDrawAbilityCount
_0807DB22:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start DebugMenuDrawEventText
DebugMenuDrawEventText: @ 0x0807DB34
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0807DB70 @ =0x08581510
	lsls r1, r0, #3
	subs r1, r1, r0
	ldr r6, _0807DB74 @ =0x06007800
	lsls r1, r1, #2
	adds r4, r1, r2
	movs r5, #0x1b
_0807DB48:
	ldrb r2, [r4]
	movs r0, #0xe0
	ands r0, r2
	lsls r0, r0, #1
	movs r1, #0x1f
	ands r1, r2
	orrs r0, r1
	adds r1, r6, #0
	movs r2, #0
	bl DrawCharacterDebugMenu
	adds r6, #0x20
	adds r4, #1
	subs r5, #1
	cmp r5, #0
	bge _0807DB48
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807DB70: .4byte 0x08581510
_0807DB74: .4byte 0x06007800

	thumb_func_start DebugMenuDrawSection
DebugMenuDrawSection: @ 0x0807DB78
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	movs r0, #0
	mov sl, r0
	mov r1, sb
	cmp r1, #3
	bls _0807DB96
	movs r2, #1
	mov sl, r2
_0807DB96:
	mov r4, sb
	cmp r4, #0
	beq _0807DBA2
	mov r0, sl
	cmp r0, #0
	beq _0807DC02
_0807DBA2:
	movs r2, #0
	ldr r1, _0807DDF4 @ =0x0858211C
	mov ip, r1
	ldrb r7, [r1, #2]
	mov r8, ip
_0807DBAC:
	mov r4, ip
	ldrb r0, [r4]
	adds r0, r0, r2
	lsls r0, r0, #5
	adds r0, r0, r7
	lsls r0, r0, #1
	ldr r1, _0807DDF8 @ =0x0600C800
	adds r3, r0, r1
	ldr r4, _0807DDFC @ =0x08576168
	adds r0, r2, r4
	ldr r4, _0807DE00 @ =gEquipment
	ldrb r1, [r4, #0xa]
	ldrb r0, [r0]
	ands r0, r1
	movs r4, #3
	cmp r0, #0
	beq _0807DBD0
	movs r4, #9
_0807DBD0:
	mov r1, ip
	ldrb r0, [r1, #3]
	subs r0, r0, r7
	adds r5, r2, #1
	cmp r0, #0
	blt _0807DBFC
	ldr r6, _0807DE04 @ =0x00000FFF
	lsls r4, r4, #0xc
	mov r2, r8
	ldrb r0, [r2, #3]
	ldrb r1, [r2, #2]
	subs r0, r0, r1
	adds r2, r0, #1
_0807DBEA:
	ldrh r1, [r3]
	adds r0, r6, #0
	ands r0, r1
	orrs r0, r4
	strh r0, [r3]
	subs r2, #1
	adds r3, #2
	cmp r2, #0
	bne _0807DBEA
_0807DBFC:
	adds r2, r5, #0
	cmp r2, #4
	bls _0807DBAC
_0807DC02:
	mov r4, sb
	cmp r4, #1
	beq _0807DC0E
	mov r0, sl
	cmp r0, #0
	beq _0807DC6E
_0807DC0E:
	movs r2, #0
	ldr r1, _0807DDF4 @ =0x0858211C
	mov ip, r1
	ldrb r7, [r1, #7]
	mov r8, ip
_0807DC18:
	mov r4, ip
	ldrb r0, [r4, #5]
	adds r0, r0, r2
	lsls r0, r0, #5
	adds r0, r0, r7
	lsls r0, r0, #1
	ldr r1, _0807DDF8 @ =0x0600C800
	adds r3, r0, r1
	ldr r4, _0807DE08 @ =0x0857616D
	adds r0, r2, r4
	ldr r4, _0807DE00 @ =gEquipment
	ldrb r1, [r4, #0xb]
	ldrb r0, [r0]
	ands r0, r1
	movs r4, #3
	cmp r0, #0
	beq _0807DC3C
	movs r4, #9
_0807DC3C:
	mov r1, ip
	ldrb r0, [r1, #8]
	subs r0, r0, r7
	adds r5, r2, #1
	cmp r0, #0
	blt _0807DC68
	ldr r6, _0807DE04 @ =0x00000FFF
	lsls r4, r4, #0xc
	mov r2, r8
	ldrb r0, [r2, #8]
	ldrb r1, [r2, #7]
	subs r0, r0, r1
	adds r2, r0, #1
_0807DC56:
	ldrh r1, [r3]
	adds r0, r6, #0
	ands r0, r1
	orrs r0, r4
	strh r0, [r3]
	subs r2, #1
	adds r3, #2
	cmp r2, #0
	bne _0807DC56
_0807DC68:
	adds r2, r5, #0
	cmp r2, #3
	bls _0807DC18
_0807DC6E:
	mov r4, sb
	cmp r4, #2
	beq _0807DC7A
	mov r0, sl
	cmp r0, #0
	beq _0807DCDA
_0807DC7A:
	movs r2, #0
	ldr r1, _0807DDF4 @ =0x0858211C
	mov ip, r1
	ldrb r7, [r1, #0xc]
	mov r8, ip
_0807DC84:
	mov r4, ip
	ldrb r0, [r4, #0xa]
	adds r0, r0, r2
	lsls r0, r0, #5
	adds r0, r0, r7
	lsls r0, r0, #1
	ldr r1, _0807DDF8 @ =0x0600C800
	adds r3, r0, r1
	ldr r4, _0807DE0C @ =0x08576171
	adds r0, r2, r4
	ldr r4, _0807DE00 @ =gEquipment
	ldrb r1, [r4, #0xb]
	ldrb r0, [r0]
	ands r0, r1
	movs r4, #3
	cmp r0, #0
	beq _0807DCA8
	movs r4, #9
_0807DCA8:
	mov r1, ip
	ldrb r0, [r1, #0xd]
	subs r0, r0, r7
	adds r5, r2, #1
	cmp r0, #0
	blt _0807DCD4
	ldr r6, _0807DE04 @ =0x00000FFF
	lsls r4, r4, #0xc
	mov r2, r8
	ldrb r0, [r2, #0xd]
	ldrb r1, [r2, #0xc]
	subs r0, r0, r1
	adds r2, r0, #1
_0807DCC2:
	ldrh r1, [r3]
	adds r0, r6, #0
	ands r0, r1
	orrs r0, r4
	strh r0, [r3]
	subs r2, #1
	adds r3, #2
	cmp r2, #0
	bne _0807DCC2
_0807DCD4:
	adds r2, r5, #0
	cmp r2, #1
	bls _0807DC84
_0807DCDA:
	mov r4, sb
	cmp r4, #3
	beq _0807DCE6
	mov r0, sl
	cmp r0, #0
	beq _0807DD46
_0807DCE6:
	movs r2, #0
	ldr r1, _0807DDF4 @ =0x0858211C
	mov ip, r1
	ldrb r7, [r1, #0x11]
	mov r8, ip
_0807DCF0:
	mov r4, ip
	ldrb r0, [r4, #0xf]
	adds r0, r0, r2
	lsls r0, r0, #5
	adds r0, r0, r7
	lsls r0, r0, #1
	ldr r1, _0807DDF8 @ =0x0600C800
	adds r3, r0, r1
	ldr r4, _0807DE10 @ =0x08576173
	adds r0, r2, r4
	ldr r4, _0807DE00 @ =gEquipment
	ldrb r1, [r4, #0xc]
	ldrb r0, [r0]
	ands r0, r1
	movs r4, #3
	cmp r0, #0
	beq _0807DD14
	movs r4, #9
_0807DD14:
	mov r1, ip
	ldrb r0, [r1, #0x12]
	subs r0, r0, r7
	adds r5, r2, #1
	cmp r0, #0
	blt _0807DD40
	ldr r6, _0807DE04 @ =0x00000FFF
	lsls r4, r4, #0xc
	mov r2, r8
	ldrb r0, [r2, #0x12]
	ldrb r1, [r2, #0x11]
	subs r0, r0, r1
	adds r2, r0, #1
_0807DD2E:
	ldrh r1, [r3]
	adds r0, r6, #0
	ands r0, r1
	orrs r0, r4
	strh r0, [r3]
	subs r2, #1
	adds r3, #2
	cmp r2, #0
	bne _0807DD2E
_0807DD40:
	adds r2, r5, #0
	cmp r2, #1
	bls _0807DCF0
_0807DD46:
	mov r4, sb
	cmp r4, #4
	beq _0807DD52
	mov r0, sl
	cmp r0, #0
	beq _0807DDB2
_0807DD52:
	movs r2, #0
	ldr r1, _0807DDF4 @ =0x0858211C
	mov ip, r1
	ldrb r7, [r1, #0x16]
	mov r8, ip
_0807DD5C:
	mov r4, ip
	ldrb r0, [r4, #0x14]
	adds r0, r0, r2
	lsls r0, r0, #5
	adds r0, r0, r7
	lsls r0, r0, #1
	ldr r1, _0807DDF8 @ =0x0600C800
	adds r3, r0, r1
	ldr r4, _0807DE14 @ =0x08576175
	adds r0, r2, r4
	ldr r4, _0807DE00 @ =gEquipment
	ldrb r1, [r4, #0xc]
	ldrb r0, [r0]
	ands r0, r1
	movs r4, #3
	cmp r0, #0
	beq _0807DD80
	movs r4, #9
_0807DD80:
	mov r1, ip
	ldrb r0, [r1, #0x17]
	subs r0, r0, r7
	adds r5, r2, #1
	cmp r0, #0
	blt _0807DDAC
	ldr r6, _0807DE04 @ =0x00000FFF
	lsls r4, r4, #0xc
	mov r2, r8
	ldrb r0, [r2, #0x17]
	ldrb r1, [r2, #0x16]
	subs r0, r0, r1
	adds r2, r0, #1
_0807DD9A:
	ldrh r1, [r3]
	adds r0, r6, #0
	ands r0, r1
	orrs r0, r4
	strh r0, [r3]
	subs r2, #1
	adds r3, #2
	cmp r2, #0
	bne _0807DD9A
_0807DDAC:
	adds r2, r5, #0
	cmp r2, #4
	bls _0807DD5C
_0807DDB2:
	mov r4, sb
	cmp r4, #0xd
	beq _0807DDBE
	mov r0, sl
	cmp r0, #0
	beq _0807DE36
_0807DDBE:
	ldr r4, _0807DDF4 @ =0x0858211C
	adds r0, r4, #0
	adds r0, #0x41
	ldrb r0, [r0]
	lsls r0, r0, #5
	adds r1, r4, #0
	adds r1, #0x43
	ldrb r1, [r1]
	adds r0, r0, r1
	lsls r0, r0, #1
	ldr r2, _0807DDF8 @ =0x0600C800
	adds r3, r0, r2
	movs r2, #0
	adds r0, r4, #0
	adds r0, #0x44
	ldrb r0, [r0]
	subs r0, r0, r1
	cmp r2, r0
	bgt _0807DE36
	ldr r5, _0807DE00 @ =gEquipment
	ldr r7, _0807DE04 @ =0x00000FFF
	adds r6, r0, #0
_0807DDEA:
	ldrb r0, [r5, #0xd]
	cmp r0, #4
	bls _0807DE18
	movs r4, #3
	b _0807DE22
	.align 2, 0
_0807DDF4: .4byte 0x0858211C
_0807DDF8: .4byte 0x0600C800
_0807DDFC: .4byte 0x08576168
_0807DE00: .4byte gEquipment
_0807DE04: .4byte 0x00000FFF
_0807DE08: .4byte 0x0857616D
_0807DE0C: .4byte 0x08576171
_0807DE10: .4byte 0x08576173
_0807DE14: .4byte 0x08576175
_0807DE18:
	ldrb r0, [r5, #0xd]
	movs r4, #3
	cmp r0, r2
	blt _0807DE22
	movs r4, #9
_0807DE22:
	ldrh r0, [r3]
	adds r1, r7, #0
	ands r1, r0
	lsls r0, r4, #0xc
	orrs r1, r0
	strh r1, [r3]
	adds r2, #1
	adds r3, #2
	cmp r2, r6
	ble _0807DDEA
_0807DE36:
	mov r4, sb
	cmp r4, #0xe
	beq _0807DE42
	mov r0, sl
	cmp r0, #0
	beq _0807DE94
_0807DE42:
	ldr r4, _0807DEF0 @ =0x0858211C
	adds r0, r4, #0
	adds r0, #0x46
	ldrb r0, [r0]
	lsls r0, r0, #5
	adds r1, r4, #0
	adds r1, #0x48
	ldrb r1, [r1]
	adds r0, r0, r1
	lsls r0, r0, #1
	ldr r2, _0807DEF4 @ =0x0600C800
	adds r3, r0, r2
	movs r2, #0
	adds r0, r4, #0
	adds r0, #0x49
	ldrb r0, [r0]
	subs r0, r0, r1
	cmp r2, r0
	bgt _0807DE94
	ldr r7, _0807DEF8 @ =gEquipment
	ldr r4, _0807DEFC @ =0x00000FFF
	mov r8, r4
	adds r5, r0, #0
	movs r6, #1
_0807DE72:
	ldrb r0, [r7, #0xe]
	asrs r0, r2
	ands r0, r6
	movs r4, #3
	cmp r0, #0
	beq _0807DE80
	movs r4, #9
_0807DE80:
	ldrh r0, [r3]
	mov r1, r8
	ands r1, r0
	lsls r0, r4, #0xc
	orrs r1, r0
	strh r1, [r3]
	adds r2, #1
	adds r3, #2
	cmp r2, r5
	ble _0807DE72
_0807DE94:
	mov r0, sb
	cmp r0, #0xf
	bne _0807DEE2
	ldr r2, _0807DEF0 @ =0x0858211C
	adds r0, r2, #0
	adds r0, #0x4b
	ldrb r0, [r0]
	lsls r0, r0, #5
	adds r1, r2, #0
	adds r1, #0x4d
	ldrb r1, [r1]
	adds r0, r0, r1
	lsls r0, r0, #1
	ldr r4, _0807DEF4 @ =0x0600C800
	adds r3, r0, r4
	adds r0, r2, #0
	adds r0, #0x4e
	ldrb r0, [r0]
	subs r0, r0, r1
	cmp r0, #0
	blt _0807DEE2
	ldr r5, _0807DF00 @ =gNonGameplayRam
	ldr r6, _0807DEFC @ =0x00000FFF
	adds r2, r0, #1
_0807DEC4:
	ldrb r0, [r5, #7]
	movs r4, #3
	cmp r0, #0
	beq _0807DECE
	movs r4, #9
_0807DECE:
	ldrh r0, [r3]
	adds r1, r6, #0
	ands r1, r0
	lsls r0, r4, #0xc
	orrs r1, r0
	strh r1, [r3]
	subs r2, #1
	adds r3, #2
	cmp r2, #0
	bne _0807DEC4
_0807DEE2:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807DEF0: .4byte 0x0858211C
_0807DEF4: .4byte 0x0600C800
_0807DEF8: .4byte gEquipment
_0807DEFC: .4byte 0x00000FFF
_0807DF00: .4byte gNonGameplayRam

	thumb_func_start SetAbilityCount
SetAbilityCount: @ 0x0807DF04
	push {r4, r5, r6, lr}
	sub sp, #0xc
	ldr r1, _0807DF58 @ =gAbilityCount
	strb r0, [r1]
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldrb r2, [r1]
	ldr r6, _0807DF5C @ =gEquipment
	cmp r2, #0
	beq _0807DF42
	ldr r0, _0807DF60 @ =0x08575FB4
	movs r5, #0
	movs r4, #0
	movs r3, #0
	adds r1, r0, #0
	adds r1, #8
_0807DF28:
	ldrb r0, [r1]
	orrs r5, r0
	ldrb r0, [r1, #1]
	orrs r4, r0
	ldrb r0, [r1, #2]
	orrs r3, r0
	adds r1, #8
	subs r2, #1
	cmp r2, #0
	bne _0807DF28
	str r3, [sp, #8]
	str r4, [sp, #4]
	str r5, [sp]
_0807DF42:
	ldr r0, [sp]
	strb r0, [r6, #0xa]
	ldr r0, [sp, #4]
	strb r0, [r6, #0xb]
	ldr r0, [sp, #8]
	strb r0, [r6, #0xc]
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807DF58: .4byte gAbilityCount
_0807DF5C: .4byte gEquipment
_0807DF60: .4byte 0x08575FB4

	thumb_func_start DebugMenuModifyAbilityCount
DebugMenuModifyAbilityCount: @ 0x0807DF64
	push {r4, r5, r6, lr}
	sub sp, #0xc
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r4, r2, #0
	movs r6, #0
	ldr r1, _0807DF98 @ =0x08576180
	lsls r0, r2, #1
	adds r0, r0, r1
	ldrh r3, [r0]
	ldr r0, _0807DF9C @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0807DFA4
	ldr r1, _0807DFA0 @ =gAbilityCount
	ldrb r0, [r1]
	adds r0, r0, r3
	cmp r0, #0x11
	ble _0807DF90
	movs r0, #0x12
_0807DF90:
	strb r0, [r1]
_0807DF92:
	movs r6, #1
	b _0807E000
	.align 2, 0
_0807DF98: .4byte 0x08576180
_0807DF9C: .4byte gChangedInput
_0807DFA0: .4byte gAbilityCount
_0807DFA4:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0807DFC0
	ldr r1, _0807DFBC @ =gAbilityCount
	ldrb r0, [r1]
	subs r0, r0, r3
	cmp r0, #0
	bgt _0807DF90
	strb r6, [r1]
	b _0807DF92
	.align 2, 0
_0807DFBC: .4byte gAbilityCount
_0807DFC0:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0807DFDC
	cmp r2, #0
	beq _0807DFFC
	ldr r1, _0807DFD8 @ =gNonGameplayRam
	ldrh r0, [r1, #0x2e]
	adds r0, #8
	strh r0, [r1, #0x2e]
	b _0807DFFC
	.align 2, 0
_0807DFD8: .4byte gNonGameplayRam
_0807DFDC:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0807DFF8
	cmp r4, #0
	bne _0807DFFC
	ldr r1, _0807DFF4 @ =gNonGameplayRam
	ldrh r0, [r1, #0x2e]
	subs r0, #8
	strh r0, [r1, #0x2e]
	b _0807DFFC
	.align 2, 0
_0807DFF4: .4byte gNonGameplayRam
_0807DFF8:
	bl DebugMenuCheckSetMaxHealthOrAmmo
_0807DFFC:
	cmp r6, #0
	beq _0807E044
_0807E000:
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r3, #0
	ldr r4, _0807E050 @ =gAbilityCount
	ldr r5, _0807E054 @ =gEquipment
	ldrb r0, [r4]
	cmp r3, r0
	bgt _0807E038
	ldr r2, _0807E058 @ =0x08575FB4
_0807E016:
	ldrb r1, [r2]
	ldr r0, [sp]
	orrs r0, r1
	str r0, [sp]
	ldrb r1, [r2, #1]
	ldr r0, [sp, #4]
	orrs r0, r1
	str r0, [sp, #4]
	ldrb r1, [r2, #2]
	ldr r0, [sp, #8]
	orrs r0, r1
	str r0, [sp, #8]
	adds r2, #8
	adds r3, #1
	ldrb r0, [r4]
	cmp r3, r0
	ble _0807E016
_0807E038:
	ldr r0, [sp]
	strb r0, [r5, #0xa]
	ldr r0, [sp, #4]
	strb r0, [r5, #0xb]
	ldr r0, [sp, #8]
	strb r0, [r5, #0xc]
_0807E044:
	adds r0, r6, #0
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0807E050: .4byte gAbilityCount
_0807E054: .4byte gEquipment
_0807E058: .4byte 0x08575FB4

	thumb_func_start DebugMenuDrawAbilityCount
DebugMenuDrawAbilityCount: @ 0x0807E05C
	push {r4, r5, r6, lr}
	ldr r0, _0807E0A4 @ =0x0858211C
	adds r1, r0, #0
	adds r1, #0x3c
	ldrb r1, [r1]
	adds r0, #0x3e
	lsls r1, r1, #5
	ldrb r0, [r0]
	adds r1, r1, r0
	lsls r1, r1, #1
	movs r4, #0xa
	ldr r6, _0807E0A8 @ =gAbilityCount
	ldr r0, _0807E0AC @ =0x0600C800
	adds r5, r1, r0
_0807E078:
	ldrb r0, [r6]
	adds r1, r4, #0
	bl __divsi3
	movs r1, #0xa
	bl __modsi3
	movs r1, #0xc2
	lsls r1, r1, #6
	adds r0, r0, r1
	strh r0, [r5]
	adds r0, r4, #0
	movs r1, #0xa
	bl __divsi3
	adds r4, r0, #0
	adds r5, #2
	cmp r4, #0
	bgt _0807E078
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807E0A4: .4byte 0x0858211C
_0807E0A8: .4byte gAbilityCount
_0807E0AC: .4byte 0x0600C800

	thumb_func_start DebugMenuDrawMenuAndDoor
DebugMenuDrawMenuAndDoor: @ 0x0807E0B0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _0807E148 @ =0x0600C800
	mov r8, r0
	ldr r0, _0807E14C @ =0x08582118
	ldrb r1, [r0]
	lsls r1, r1, #5
	ldrb r2, [r0, #1]
	adds r1, r1, r2
	adds r1, #2
	movs r4, #0x64
	adds r7, r0, #0
	ldr r6, _0807E150 @ =gCurrentRoom
	ldr r0, _0807E154 @ =gLastDoorUsed
	mov sb, r0
	lsls r0, r1, #1
	mov r1, r8
	adds r5, r0, r1
_0807E0D8:
	ldrb r0, [r6]
	adds r0, #1
	adds r1, r4, #0
	bl __divsi3
	movs r1, #0xa
	bl __modsi3
	movs r2, #0xc2
	lsls r2, r2, #6
	adds r0, r0, r2
	strh r0, [r5]
	adds r0, r4, #0
	movs r1, #0xa
	bl __divsi3
	adds r4, r0, #0
	adds r5, #2
	cmp r4, #0
	bgt _0807E0D8
	ldrb r0, [r7, #2]
	lsls r0, r0, #5
	ldrb r7, [r7, #3]
	adds r1, r0, r7
	adds r1, #2
	movs r4, #0x64
	lsls r0, r1, #1
	mov r1, r8
	adds r5, r0, r1
_0807E112:
	mov r2, sb
	ldrb r0, [r2]
	adds r1, r4, #0
	bl __divsi3
	movs r1, #0xa
	bl __modsi3
	movs r1, #0xc2
	lsls r1, r1, #6
	adds r0, r0, r1
	strh r0, [r5]
	adds r0, r4, #0
	movs r1, #0xa
	bl __divsi3
	adds r4, r0, #0
	adds r5, #2
	cmp r4, #0
	bgt _0807E112
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807E148: .4byte 0x0600C800
_0807E14C: .4byte 0x08582118
_0807E150: .4byte gCurrentRoom
_0807E154: .4byte gLastDoorUsed

	thumb_func_start DebugMenuDrawIgt
DebugMenuDrawIgt: @ 0x0807E158
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _0807E1AC @ =0x0600C800
	mov sb, r0
	ldr r0, _0807E1B0 @ =0x0858211C
	adds r1, r0, #0
	adds r1, #0x55
	ldrb r1, [r1]
	adds r0, #0x57
	lsls r1, r1, #5
	ldrb r0, [r0]
	adds r6, r1, r0
	movs r5, #0x64
	ldr r1, _0807E1B4 @ =gInGameTimer
	mov r8, r1
	ldr r0, _0807E1B8 @ =gNonGameplayRam
	mov sl, r0
	movs r1, #0xc2
	lsls r1, r1, #6
	adds r7, r1, #0
	lsls r0, r6, #1
	mov r1, sb
	adds r4, r0, r1
_0807E18C:
	mov r1, r8
	ldrb r0, [r1]
	adds r1, r5, #0
	bl __divsi3
	movs r1, #0xa
	bl __modsi3
	cmp r5, #0x64
	bne _0807E1C0
	cmp r0, #0
	bne _0807E1C0
	ldr r1, _0807E1BC @ =0x0000308C
	adds r0, r1, #0
	b _0807E1C2
	.align 2, 0
_0807E1AC: .4byte 0x0600C800
_0807E1B0: .4byte 0x0858211C
_0807E1B4: .4byte gInGameTimer
_0807E1B8: .4byte gNonGameplayRam
_0807E1BC: .4byte 0x0000308C
_0807E1C0:
	adds r0, r0, r7
_0807E1C2:
	strh r0, [r4]
	adds r0, r5, #0
	movs r1, #0xa
	bl __divsi3
	adds r5, r0, #0
	adds r4, #2
	adds r6, #1
	cmp r5, #0
	bgt _0807E18C
	adds r6, #1
	movs r5, #0xa
	lsls r0, r6, #1
	mov r1, sb
	adds r4, r0, r1
_0807E1E0:
	mov r1, r8
	ldrb r0, [r1, #1]
	adds r1, r5, #0
	bl __divsi3
	movs r1, #0xa
	bl __modsi3
	movs r1, #0xc2
	lsls r1, r1, #6
	adds r0, r0, r1
	strh r0, [r4]
	adds r0, r5, #0
	movs r1, #0xa
	bl __divsi3
	adds r5, r0, #0
	adds r4, #2
	cmp r5, #0
	bgt _0807E1E0
	mov r0, r8
	ldrb r1, [r0, #1]
	movs r0, #0xa1
	lsls r0, r0, #2
	add r0, sl
	strb r1, [r0]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_7e224
unk_7e224: @ 0x0807E224
	push {lr}
	ldr r1, _0807E250 @ =0x0858211C
	adds r0, r1, #0
	adds r0, #0x55
	ldrb r0, [r0]
	adds r1, #0x57
	lsls r0, r0, #5
	ldrb r1, [r1]
	adds r0, r0, r1
	adds r2, r0, #3
	ldr r0, _0807E254 @ =gInGameTimer
	ldrb r1, [r0, #2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0807E260
	lsls r0, r2, #1
	ldr r1, _0807E258 @ =0x0600C800
	adds r0, r0, r1
	ldr r2, _0807E25C @ =0x0000308C
	b _0807E268
	.align 2, 0
_0807E250: .4byte 0x0858211C
_0807E254: .4byte gInGameTimer
_0807E258: .4byte 0x0600C800
_0807E25C: .4byte 0x0000308C
_0807E260:
	lsls r0, r2, #1
	ldr r1, _0807E270 @ =0x0600C800
	adds r0, r0, r1
	ldr r2, _0807E274 @ =0x0000307B
_0807E268:
	adds r1, r2, #0
	strh r1, [r0]
	pop {r0}
	bx r0
	.align 2, 0
_0807E270: .4byte 0x0600C800
_0807E274: .4byte 0x0000307B

	thumb_func_start DebugMenuModifyHealthAndAmmo
DebugMenuModifyHealthAndAmmo: @ 0x0807E278
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov ip, r0
	lsls r1, r1, #0x18
	lsrs r3, r1, #0x18
	movs r0, #0
	str r0, [sp]
	cmp r3, #5
	bne _0807E2A8
	ldr r5, _0807E2A4 @ =gEquipment
	adds r1, r5, #2
	mov r8, r1
	movs r1, #3
	movs r7, #1
	mov sb, r0
	b _0807E314
	.align 2, 0
_0807E2A4: .4byte gEquipment
_0807E2A8:
	cmp r3, #6
	bne _0807E2C0
	ldr r5, _0807E2BC @ =0x03001312
	subs r2, r5, #2
	mov r8, r2
	movs r1, #3
	movs r7, #2
	movs r0, #0
	mov sb, r0
	b _0807E314
	.align 2, 0
_0807E2BC: .4byte 0x03001312
_0807E2C0:
	cmp r3, #8
	bne _0807E2D4
	ldr r5, _0807E2D0 @ =0x03001314
	adds r1, r5, #2
	mov r8, r1
	movs r1, #2
	movs r7, #1
	b _0807E2E2
	.align 2, 0
_0807E2D0: .4byte 0x03001314
_0807E2D4:
	cmp r3, #9
	bne _0807E2EC
	ldr r5, _0807E2E8 @ =0x03001316
	subs r0, r5, #2
	mov r8, r0
	movs r1, #2
	movs r7, #2
_0807E2E2:
	movs r2, #1
	mov sb, r2
	b _0807E314
	.align 2, 0
_0807E2E8: .4byte 0x03001316
_0807E2EC:
	cmp r3, #0xa
	bne _0807E300
	ldr r6, _0807E2FC @ =0x03001318
	adds r0, r6, #1
	str r0, [sp, #4]
	movs r1, #2
	movs r7, #3
	b _0807E312
	.align 2, 0
_0807E2FC: .4byte 0x03001318
_0807E300:
	cmp r3, #0xb
	beq _0807E308
_0807E304:
	movs r0, #0
	b _0807E468
_0807E308:
	ldr r6, _0807E330 @ =0x03001319
	subs r1, r6, #1
	str r1, [sp, #4]
	movs r1, #2
	movs r7, #4
_0807E312:
	mov sb, r1
_0807E314:
	ldr r0, _0807E334 @ =gChangedInput
	ldrh r4, [r0]
	movs r0, #0x10
	ands r0, r4
	cmp r0, #0
	beq _0807E33C
	mov r2, ip
	cmp r2, #0
	beq _0807E304
	ldr r1, _0807E338 @ =gNonGameplayRam
	ldrh r0, [r1, #0x2e]
	adds r0, #8
	strh r0, [r1, #0x2e]
	b _0807E304
	.align 2, 0
_0807E330: .4byte 0x03001319
_0807E334: .4byte gChangedInput
_0807E338: .4byte gNonGameplayRam
_0807E33C:
	movs r0, #0x20
	ands r0, r4
	cmp r0, #0
	beq _0807E358
	cmp ip, r1
	bge _0807E304
	ldr r1, _0807E354 @ =gNonGameplayRam
	ldrh r0, [r1, #0x2e]
	subs r0, #8
	strh r0, [r1, #0x2e]
	b _0807E304
	.align 2, 0
_0807E354: .4byte gNonGameplayRam
_0807E358:
	ldr r0, _0807E3B0 @ =0x08576180
	mov sl, r0
	ldr r2, _0807E3B4 @ =0x0858211C
	lsls r1, r3, #2
	adds r1, r1, r3
	adds r0, r2, #3
	adds r0, r1, r0
	ldrb r0, [r0]
	adds r2, #2
	adds r1, r1, r2
	ldrb r1, [r1]
	subs r0, r0, r1
	adds r0, #1
	lsls r0, r0, #1
	add r0, sl
	ldrh r0, [r0]
	subs r2, r0, #1
	ldr r1, _0807E3B8 @ =0x0857618A
	mov r3, sb
	lsls r0, r3, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r2, r0
	ble _0807E38A
	adds r2, r0, #0
_0807E38A:
	mov r1, ip
	lsls r0, r1, #1
	add r0, sl
	ldrh r1, [r0]
	cmp r7, #2
	bgt _0807E406
	movs r0, #0x80
	ands r0, r4
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	beq _0807E3C4
	ldrh r0, [r5]
	adds r0, r0, r1
	cmp r0, r2
	ble _0807E3BC
	strh r2, [r5]
	b _0807E3BE
	.align 2, 0
_0807E3B0: .4byte 0x08576180
_0807E3B4: .4byte 0x0858211C
_0807E3B8: .4byte 0x0857618A
_0807E3BC:
	strh r0, [r5]
_0807E3BE:
	movs r2, #1
	str r2, [sp]
	b _0807E3DE
_0807E3C4:
	movs r0, #0x40
	ands r0, r4
	cmp r0, #0
	beq _0807E3DE
	ldrh r0, [r5]
	subs r0, r0, r1
	cmp r0, #0
	bge _0807E3D8
	strh r3, [r5]
	b _0807E3DA
_0807E3D8:
	strh r0, [r5]
_0807E3DA:
	movs r3, #1
	str r3, [sp]
_0807E3DE:
	cmp r7, #1
	bne _0807E3F2
	ldrh r0, [r5]
	mov r1, r8
	ldrh r1, [r1]
	cmp r0, r1
	blo _0807E466
	mov r2, r8
	strh r0, [r2]
	b _0807E466
_0807E3F2:
	cmp r7, #2
	bne _0807E466
	ldrh r0, [r5]
	mov r3, r8
	ldrh r3, [r3]
	cmp r0, r3
	bhi _0807E466
	mov r1, r8
	strh r0, [r1]
	b _0807E466
_0807E406:
	movs r0, #0x80
	ands r0, r4
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	beq _0807E426
	ldrb r0, [r6]
	adds r0, r0, r1
	cmp r0, r2
	ble _0807E41E
	strb r2, [r6]
	b _0807E420
_0807E41E:
	strb r0, [r6]
_0807E420:
	movs r2, #1
	str r2, [sp]
	b _0807E440
_0807E426:
	movs r0, #0x40
	ands r0, r4
	cmp r0, #0
	beq _0807E440
	ldrb r0, [r6]
	subs r0, r0, r1
	cmp r0, #0
	bge _0807E43A
	strb r3, [r6]
	b _0807E43C
_0807E43A:
	strb r0, [r6]
_0807E43C:
	movs r3, #1
	str r3, [sp]
_0807E440:
	cmp r7, #3
	bne _0807E454
	ldrb r0, [r6]
	ldr r1, [sp, #4]
	ldrb r1, [r1]
	cmp r0, r1
	blo _0807E466
	ldr r2, [sp, #4]
	strb r0, [r2]
	b _0807E466
_0807E454:
	cmp r7, #4
	bne _0807E466
	ldrb r0, [r6]
	ldr r3, [sp, #4]
	ldrb r3, [r3]
	cmp r0, r3
	bhi _0807E466
	ldr r1, [sp, #4]
	strb r0, [r1]
_0807E466:
	ldr r0, [sp]
_0807E468:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start DebugMenuDrawHealthAmmoAndEvent
DebugMenuDrawHealthAmmoAndEvent: @ 0x0807E478
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r6, #0
	cmp r5, #0xff
	bne _0807E486
	movs r6, #1
_0807E486:
	subs r0, r5, #5
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _0807E494
	cmp r6, #0
	beq _0807E4A6
_0807E494:
	ldr r4, _0807E514 @ =gEquipment
	ldrh r0, [r4]
	movs r1, #5
	bl DebugMenuDrawNumber
	ldrh r0, [r4, #2]
	movs r1, #6
	bl DebugMenuDrawNumber
_0807E4A6:
	adds r0, r5, #0
	subs r0, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _0807E4B6
	cmp r6, #0
	beq _0807E4C8
_0807E4B6:
	ldr r4, _0807E514 @ =gEquipment
	ldrh r0, [r4, #4]
	movs r1, #8
	bl DebugMenuDrawNumber
	ldrh r0, [r4, #6]
	movs r1, #9
	bl DebugMenuDrawNumber
_0807E4C8:
	adds r0, r5, #0
	subs r0, #0xa
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _0807E4D8
	cmp r6, #0
	beq _0807E4EA
_0807E4D8:
	ldr r4, _0807E514 @ =gEquipment
	ldrb r0, [r4, #8]
	movs r1, #0xa
	bl DebugMenuDrawNumber
	ldrb r0, [r4, #9]
	movs r1, #0xb
	bl DebugMenuDrawNumber
_0807E4EA:
	cmp r5, #0xf
	beq _0807E4F2
	cmp r6, #0
	beq _0807E4FC
_0807E4F2:
	ldr r0, _0807E518 @ =gEventCounter
	ldrb r0, [r0]
	movs r1, #0xf
	bl DebugMenuDrawNumber
_0807E4FC:
	cmp r5, #0x10
	beq _0807E504
	cmp r6, #0
	beq _0807E50E
_0807E504:
	ldr r0, _0807E51C @ =gSubEventCounter
	ldrh r0, [r0]
	movs r1, #0x10
	bl DebugMenuDrawNumber
_0807E50E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807E514: .4byte gEquipment
_0807E518: .4byte gEventCounter
_0807E51C: .4byte gSubEventCounter

	thumb_func_start DebugMenuDrawNumber
DebugMenuDrawNumber: @ 0x0807E520
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r3, _0807E584 @ =0x0858211C
	lsls r2, r1, #2
	adds r2, r2, r1
	adds r0, r2, r3
	ldrb r1, [r0]
	lsls r1, r1, #5
	adds r0, r3, #2
	adds r0, r2, r0
	ldrb r4, [r0]
	adds r1, r1, r4
	lsls r1, r1, #1
	ldr r0, _0807E588 @ =0x0600C800
	adds r5, r1, r0
	ldr r1, _0807E58C @ =0x08576180
	adds r3, #3
	adds r2, r2, r3
	ldrb r0, [r2]
	subs r0, r0, r4
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r4, [r0]
	cmp r4, #0
	ble _0807E57E
_0807E558:
	adds r0, r6, #0
	adds r1, r4, #0
	bl __divsi3
	movs r1, #0xa
	bl __modsi3
	movs r1, #0xc2
	lsls r1, r1, #6
	adds r0, r0, r1
	strh r0, [r5]
	adds r0, r4, #0
	movs r1, #0xa
	bl __divsi3
	adds r4, r0, #0
	adds r5, #2
	cmp r4, #0
	bgt _0807E558
_0807E57E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807E584: .4byte 0x0858211C
_0807E588: .4byte 0x0600C800
_0807E58C: .4byte 0x08576180

	thumb_func_start DebugMenuCheckSetMaxHealthOrAmmo
DebugMenuCheckSetMaxHealthOrAmmo: @ 0x0807E590
	push {r4, r5, r6, lr}
	ldr r0, _0807E5D4 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x84
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0807E5E4
	ldr r5, _0807E5D8 @ =gEquipment
	ldr r6, _0807E5DC @ =0x0857618A
	ldrh r0, [r6]
	strh r0, [r5]
	strh r0, [r5, #2]
	ldr r4, _0807E5E0 @ =0x0858211C
	ldrb r0, [r4, #0x1d]
	bl DebugMenuDrawHealthAmmoAndEvent
	ldrh r0, [r6, #2]
	strh r0, [r5, #4]
	strh r0, [r5, #6]
	adds r0, r4, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	bl DebugMenuDrawHealthAmmoAndEvent
	ldrh r0, [r6, #4]
	strb r0, [r5, #8]
	strb r0, [r5, #9]
	adds r4, #0x36
	ldrb r0, [r4]
	bl DebugMenuDrawHealthAmmoAndEvent
	b _0807E61C
	.align 2, 0
_0807E5D4: .4byte gChangedInput
_0807E5D8: .4byte gEquipment
_0807E5DC: .4byte 0x0857618A
_0807E5E0: .4byte 0x0858211C
_0807E5E4:
	movs r0, #0x81
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0807E61C
	ldr r4, _0807E624 @ =gEquipment
	movs r0, #0x63
	strh r0, [r4]
	strh r0, [r4, #2]
	ldr r5, _0807E628 @ =0x0858211C
	ldrb r0, [r5, #0x1d]
	bl DebugMenuDrawHealthAmmoAndEvent
	movs r6, #0xa
	movs r0, #0xa
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	adds r0, r5, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	bl DebugMenuDrawHealthAmmoAndEvent
	strb r6, [r4, #8]
	strb r6, [r4, #9]
	adds r5, #0x36
	ldrb r0, [r5]
	bl DebugMenuDrawHealthAmmoAndEvent
_0807E61C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807E624: .4byte gEquipment
_0807E628: .4byte 0x0858211C

	thumb_func_start DebugMenuDrawEverything
DebugMenuDrawEverything: @ 0x0807E62C
	push {lr}
	movs r0, #0xff
	bl DebugMenuDrawSection
	movs r0, #0xff
	bl DebugMenuDrawHealthAmmoAndEvent
	bl DebugMenuDrawAbilityCount
	bl DebugMenuDrawMenuAndDoor
	bl DebugMenuDrawIgt
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start DebugMenuSetupCursor
DebugMenuSetupCursor: @ 0x0807E64C
	push {lr}
	movs r0, #0
	movs r1, #1
	bl UpdateMenuOamDataID
	ldr r2, _0807E670 @ =gNonGameplayRam
	ldr r1, _0807E674 @ =0x0858211C
	adds r0, r1, #0
	adds r0, #0x3c
	ldrb r0, [r0]
	lsls r0, r0, #3
	strh r0, [r2, #0x2c]
	adds r1, #0x3f
	ldrb r0, [r1]
	lsls r0, r0, #3
	strh r0, [r2, #0x2e]
	pop {r0}
	bx r0
	.align 2, 0
_0807E670: .4byte gNonGameplayRam
_0807E674: .4byte 0x0858211C

	thumb_func_start StatusScreenSubroutine
StatusScreenSubroutine: @ 0x0807E678
	push {lr}
	ldr r0, _0807E6A0 @ =gChangedInput
	ldrh r1, [r0]
	ldr r0, _0807E6A4 @ =0x00000302
	ands r0, r1
	cmp r0, #0
	beq _0807E69A
	ldr r3, _0807E6A8 @ =gNonGameplayRam
	ldrb r2, [r3, #7]
	cmp r2, #0
	bne _0807E69A
	adds r1, r3, #0
	adds r1, #0x28
	movs r0, #7
	strb r0, [r1]
	strb r2, [r3, #6]
	strb r2, [r3, #7]
_0807E69A:
	pop {r0}
	bx r0
	.align 2, 0
_0807E6A0: .4byte gChangedInput
_0807E6A4: .4byte 0x00000302
_0807E6A8: .4byte gNonGameplayRam

	thumb_func_start StatusScreenDrawEverything
StatusScreenDrawEverything: @ 0x0807E6AC
	push {r4, lr}
	ldr r4, _0807E714 @ =gEquipment
	ldrb r1, [r4, #0xa]
	movs r0, #0
	bl StatusScreenDrawBeamOrSuit
	ldrb r1, [r4, #0xb]
	movs r0, #1
	bl StatusScreenDrawMissileOrBomb
	ldrb r1, [r4, #0xc]
	movs r0, #3
	bl StatusScreenDrawBeamOrSuit
	ldrb r1, [r4, #0xb]
	movs r0, #2
	bl StatusScreenDrawMissileOrBomb
	ldrb r1, [r4, #0xc]
	movs r0, #4
	bl StatusScreenDrawMisc
	ldrh r1, [r4]
	movs r0, #5
	movs r2, #6
	movs r3, #0
	bl StatusScreenDrawNumber
	ldrh r1, [r4, #2]
	movs r0, #6
	movs r2, #3
	movs r3, #1
	bl StatusScreenDrawNumber
	ldrb r1, [r4, #0xb]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0807E718
	ldrh r1, [r4, #4]
	movs r0, #7
	movs r2, #6
	movs r3, #0
	bl StatusScreenDrawNumber
	ldrh r1, [r4, #6]
	movs r0, #8
	movs r2, #3
	movs r3, #1
	bl StatusScreenDrawNumber
	b _0807E71E
	.align 2, 0
_0807E714: .4byte gEquipment
_0807E718:
	movs r0, #1
	bl StatusScreenRemoveAmmoHeader
_0807E71E:
	ldr r4, _0807E744 @ =gEquipment
	ldrb r1, [r4, #0xb]
	movs r0, #0x30
	ands r0, r1
	cmp r0, #0x30
	bne _0807E748
	ldrb r1, [r4, #8]
	movs r0, #9
	movs r2, #6
	movs r3, #0
	bl StatusScreenDrawNumber
	ldrb r1, [r4, #9]
	movs r0, #0xa
	movs r2, #3
	movs r3, #1
	bl StatusScreenDrawNumber
	b _0807E74E
	.align 2, 0
_0807E744: .4byte gEquipment
_0807E748:
	movs r0, #2
	bl StatusScreenRemoveAmmoHeader
_0807E74E:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start StatusScreenDrawNumber
StatusScreenDrawNumber: @ 0x0807E754
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov r8, r2
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov sl, r3
	ldr r3, _0807E7D0 @ =0x0858217C
	lsls r2, r0, #2
	adds r2, r2, r0
	adds r0, r2, r3
	ldrb r1, [r0]
	lsls r1, r1, #5
	adds r0, r3, #2
	adds r0, r2, r0
	ldrb r4, [r0]
	adds r1, r1, r4
	lsls r1, r1, #1
	ldr r0, _0807E7D4 @ =0x0600C800
	adds r0, r0, r1
	mov sb, r0
	adds r3, #3
	adds r2, r2, r3
	ldrb r0, [r2]
	subs r6, r0, r4
	ldr r1, _0807E7D8 @ =0x08576180
	lsls r0, r6, #1
	adds r0, r0, r1
	ldrh r4, [r0]
	adds r6, #1
	movs r7, #0
	movs r5, #0
	cmp r4, #0
	ble _0807E808
_0807E7AC:
	ldr r0, [sp]
	adds r1, r4, #0
	bl __divsi3
	movs r1, #0xa
	bl __modsi3
	adds r2, r0, #0
	cmp r2, #0
	bne _0807E7E0
	cmp r7, #0
	bne _0807E7DC
	movs r2, #0x8c
	mov r3, sl
	cmp r3, #0
	beq _0807E7E4
	b _0807E7F6
	.align 2, 0
_0807E7D0: .4byte 0x0858217C
_0807E7D4: .4byte 0x0600C800
_0807E7D8: .4byte 0x08576180
_0807E7DC:
	movs r2, #0x80
	b _0807E7E8
_0807E7E0:
	movs r7, #1
	adds r2, #0x80
_0807E7E4:
	cmp r2, #0
	beq _0807E7F6
_0807E7E8:
	lsls r1, r5, #1
	add r1, sb
	mov r3, r8
	lsls r0, r3, #0xc
	orrs r0, r2
	strh r0, [r1]
	b _0807E7F8
_0807E7F6:
	subs r5, #1
_0807E7F8:
	adds r0, r4, #0
	movs r1, #0xa
	bl __divsi3
	adds r4, r0, #0
	adds r5, #1
	cmp r4, #0
	bgt _0807E7AC
_0807E808:
	cmp r6, r5
	beq _0807E822
	mov r0, r8
	lsls r2, r0, #0xc
	movs r0, #0x8c
	orrs r2, r0
	lsls r0, r5, #1
	add r0, sb
_0807E818:
	strh r2, [r0]
	adds r0, #2
	adds r5, #1
	cmp r6, r5
	bne _0807E818
_0807E822:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start StatusScreenDrawBeamOrSuit
StatusScreenDrawBeamOrSuit: @ 0x0807E834
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp]
	movs r0, #0
	mov sb, r0
	movs r2, #0
	ldr r0, _0807E964 @ =0x0857617A
	adds r1, r7, r0
	ldrb r1, [r1]
	cmp sb, r1
	bge _0807E8F8
	ldr r1, _0807E968 @ =0x0858217C
	lsls r3, r7, #2
	mov sl, r3
	adds r5, r3, r7
	ldr r0, _0807E96C @ =0x085821B3
	adds r0, #2
	adds r0, r5, r0
	ldrb r0, [r0]
	str r0, [sp, #8]
	adds r0, r1, #3
	adds r6, r5, r0
	str r6, [sp, #0x14]
	adds r0, r5, r1
	ldrb r0, [r0]
	adds r0, #1
	str r0, [sp, #4]
	adds r1, #2
	adds r1, r5, r1
	ldrb r0, [r1]
	mov r8, r0
	str r5, [sp, #0xc]
	str r1, [sp, #0x10]
_0807E886:
	ldr r1, [sp, #4]
	adds r0, r1, r2
	lsls r0, r0, #5
	add r0, r8
	mov ip, r0
	ldr r3, _0807E96C @ =0x085821B3
	adds r0, r5, r3
	ldrb r0, [r0]
	adds r0, #1
	adds r0, r0, r2
	lsls r0, r0, #5
	ldr r1, [sp, #8]
	adds r6, r0, r1
	ldr r0, _0807E970 @ =0x0879BEA8
	add r0, sl
	ldr r0, [r0]
	adds r0, r0, r2
	ldrb r0, [r0]
	ldr r3, [sp]
	ands r0, r3
	adds r2, #1
	cmp r0, #0
	beq _0807E8EE
	mov sb, r2
	ldr r1, [sp, #0x14]
	ldrb r0, [r1]
	mov r2, r8
	subs r0, r0, r2
	mov r2, sb
	cmp r0, #0
	blt _0807E8EE
	ldr r3, [sp, #0xc]
	ldr r1, _0807E974 @ =0x0858217F
	adds r0, r3, r1
	ldrb r1, [r0]
	ldr r3, [sp, #0x10]
	ldrb r0, [r3]
	subs r1, r1, r0
	lsls r0, r6, #1
	ldr r6, _0807E978 @ =0x0600C800
	adds r4, r0, r6
	mov r3, ip
	lsls r0, r3, #1
	adds r3, r0, r6
	adds r1, #1
_0807E8E0:
	ldrh r0, [r4]
	strh r0, [r3]
	adds r4, #2
	adds r3, #2
	subs r1, #1
	cmp r1, #0
	bne _0807E8E0
_0807E8EE:
	ldr r6, _0807E964 @ =0x0857617A
	adds r0, r7, r6
	ldrb r0, [r0]
	cmp r2, r0
	blt _0807E886
_0807E8F8:
	mov r0, sb
	cmp r0, #0
	beq _0807E954
	ldr r3, _0807E968 @ =0x0858217C
	lsls r2, r7, #2
	adds r2, r2, r7
	adds r0, r2, r3
	mov r1, sb
	adds r1, #1
	ldrb r0, [r0]
	adds r1, r1, r0
	lsls r1, r1, #5
	adds r0, r3, #2
	adds r0, r2, r0
	ldrb r4, [r0]
	adds r1, r1, r4
	mov ip, r1
	ldr r1, _0807E96C @ =0x085821B3
	adds r0, r1, #1
	adds r0, r2, r0
	ldrb r0, [r0]
	adds r1, #2
	adds r1, r2, r1
	lsls r0, r0, #5
	ldrb r1, [r1]
	adds r6, r0, r1
	adds r3, #3
	adds r2, r2, r3
	ldrb r0, [r2]
	subs r1, r0, r4
	cmp r1, #0
	blt _0807E954
	lsls r0, r6, #1
	ldr r2, _0807E978 @ =0x0600C800
	adds r4, r0, r2
	mov r3, ip
	lsls r0, r3, #1
	adds r3, r0, r2
	adds r1, #1
_0807E946:
	ldrh r0, [r4]
	strh r0, [r3]
	adds r4, #2
	adds r3, #2
	subs r1, #1
	cmp r1, #0
	bne _0807E946
_0807E954:
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807E964: .4byte 0x0857617A
_0807E968: .4byte 0x0858217C
_0807E96C: .4byte 0x085821B3
_0807E970: .4byte 0x0879BEA8
_0807E974: .4byte 0x0858217F
_0807E978: .4byte 0x0600C800

	thumb_func_start StatusScreenDrawMissileOrBomb
StatusScreenDrawMissileOrBomb: @ 0x0807E97C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [sp, #4]
	movs r2, #0
	ldr r0, _0807EA30 @ =0x0857617A
	adds r1, r7, r0
	ldrb r1, [r1]
	cmp r2, r1
	bge _0807EA5C
	ldr r1, _0807EA34 @ =0x0858217C
	lsls r3, r7, #2
	mov sl, r3
	adds r5, r3, r7
	ldr r0, _0807EA38 @ =0x085821B3
	adds r0, #2
	adds r0, r5, r0
	ldrb r0, [r0]
	str r0, [sp, #8]
	adds r0, r1, #3
	adds r0, r5, r0
	str r0, [sp, #0x14]
	adds r0, r5, r1
	ldrb r0, [r0]
	adds r1, #2
	adds r1, r5, r1
	ldrb r6, [r1]
	mov sb, r6
	str r5, [sp, #0xc]
	str r1, [sp, #0x10]
	lsls r0, r0, #5
	mov ip, r0
_0807E9D0:
	mov r0, ip
	add r0, sb
	mov r8, r0
	ldr r1, _0807EA38 @ =0x085821B3
	adds r0, r5, r1
	ldrb r0, [r0]
	adds r0, r0, r2
	lsls r0, r0, #5
	ldr r3, [sp, #8]
	adds r6, r0, r3
	ldr r0, _0807EA3C @ =0x0879BEA8
	add r0, sl
	ldr r0, [r0]
	adds r0, r0, r2
	ldrb r0, [r0]
	ldr r1, [sp]
	ands r0, r1
	cmp r0, #0
	beq _0807EA48
	str r2, [sp, #4]
	ldr r3, [sp, #0x14]
	ldrb r0, [r3]
	mov r1, sb
	subs r0, r0, r1
	cmp r0, #0
	blt _0807EA4C
	ldr r0, _0807EA40 @ =0x0858217F
	ldr r3, [sp, #0xc]
	adds r0, r3, r0
	ldrb r1, [r0]
	ldr r3, [sp, #0x10]
	ldrb r0, [r3]
	subs r1, r1, r0
	lsls r0, r6, #1
	ldr r6, _0807EA44 @ =0x0600C800
	adds r4, r0, r6
	mov r3, r8
	lsls r0, r3, #1
	adds r3, r0, r6
	adds r1, #1
_0807EA20:
	ldrh r0, [r4]
	strh r0, [r3]
	adds r4, #2
	adds r3, #2
	subs r1, #1
	cmp r1, #0
	bne _0807EA20
	b _0807EA4C
	.align 2, 0
_0807EA30: .4byte 0x0857617A
_0807EA34: .4byte 0x0858217C
_0807EA38: .4byte 0x085821B3
_0807EA3C: .4byte 0x0879BEA8
_0807EA40: .4byte 0x0858217F
_0807EA44: .4byte 0x0600C800
_0807EA48:
	cmp r2, #0
	beq _0807EAB8
_0807EA4C:
	movs r6, #0x20
	add ip, r6
	adds r2, #1
	ldr r1, _0807EAC8 @ =0x0857617A
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r2, r0
	blt _0807E9D0
_0807EA5C:
	ldr r2, [sp, #4]
	cmp r2, #0
	blt _0807EAB8
	ldr r3, _0807EACC @ =0x0858217C
	lsls r2, r7, #2
	adds r2, r2, r7
	adds r0, r2, r3
	ldr r1, [sp, #4]
	adds r1, #1
	ldrb r0, [r0]
	adds r1, r1, r0
	lsls r1, r1, #5
	adds r0, r3, #2
	adds r0, r2, r0
	ldrb r4, [r0]
	adds r1, r1, r4
	mov r8, r1
	ldr r1, _0807EAD0 @ =0x085821B3
	adds r0, r1, #1
	adds r0, r2, r0
	ldrb r0, [r0]
	adds r1, #2
	adds r1, r2, r1
	lsls r0, r0, #5
	ldrb r1, [r1]
	adds r6, r0, r1
	adds r3, #3
	adds r2, r2, r3
	ldrb r0, [r2]
	subs r1, r0, r4
	cmp r1, #0
	blt _0807EAB8
	lsls r0, r6, #1
	ldr r3, _0807EAD4 @ =0x0600C800
	adds r4, r0, r3
	mov r6, r8
	lsls r0, r6, #1
	adds r3, r0, r3
	adds r1, #1
_0807EAAA:
	ldrh r0, [r4]
	strh r0, [r3]
	adds r4, #2
	adds r3, #2
	subs r1, #1
	cmp r1, #0
	bne _0807EAAA
_0807EAB8:
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807EAC8: .4byte 0x0857617A
_0807EACC: .4byte 0x0858217C
_0807EAD0: .4byte 0x085821B3
_0807EAD4: .4byte 0x0600C800

	thumb_func_start StatusScreenDrawMisc
StatusScreenDrawMisc: @ 0x0807EAD8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r4, #0
	ldr r0, _0807EBF8 @ =0x0857617A
	mov r2, r8
	adds r1, r2, r0
	ldrb r1, [r1]
	cmp r4, r1
	bge _0807EB9C
	ldr r1, _0807EBFC @ =0x0858217C
	lsls r2, r2, #2
	mov sb, r2
	add r2, r8
	ldr r3, _0807EC00 @ =0x085821B3
	mov sl, r3
	mov r0, sl
	adds r0, #2
	adds r0, r2, r0
	ldrb r0, [r0]
	str r0, [sp, #0xc]
	adds r0, r1, #3
	adds r6, r2, r0
	str r6, [sp, #0x1c]
	adds r0, r2, r1
	ldrb r0, [r0]
	adds r0, #1
	str r0, [sp, #8]
	adds r1, #2
	adds r1, r2, r1
	ldrb r7, [r1]
	str r2, [sp, #0x10]
	mov ip, r1
_0807EB30:
	ldr r1, [sp, #8]
	adds r0, r1, r4
	lsls r0, r0, #5
	adds r6, r0, r7
	mov r3, sl
	adds r0, r2, r3
	ldrb r0, [r0]
	adds r0, #1
	adds r0, r0, r4
	lsls r0, r0, #5
	ldr r1, [sp, #0xc]
	adds r3, r0, r1
	ldr r0, _0807EC04 @ =0x0879BEA8
	add r0, sb
	ldr r0, [r0]
	adds r0, r0, r4
	ldrb r0, [r0]
	ldr r1, [sp]
	ands r0, r1
	adds r5, r4, #1
	cmp r0, #0
	beq _0807EB90
	str r5, [sp, #4]
	ldr r4, [sp, #0x1c]
	ldrb r0, [r4]
	subs r0, r0, r7
	cmp r0, #0
	blt _0807EB90
	ldr r1, [sp, #0x10]
	ldr r4, _0807EC08 @ =0x0858217F
	adds r0, r1, r4
	ldrb r1, [r0]
	mov r4, ip
	ldrb r0, [r4]
	subs r1, r1, r0
	lsls r0, r3, #1
	ldr r3, _0807EC0C @ =0x0600C800
	adds r4, r0, r3
	lsls r0, r6, #1
	adds r3, r0, r3
	adds r1, #1
_0807EB82:
	ldrh r0, [r4]
	strh r0, [r3]
	adds r4, #2
	adds r3, #2
	subs r1, #1
	cmp r1, #0
	bne _0807EB82
_0807EB90:
	adds r4, r5, #0
	ldr r0, _0807EBF8 @ =0x0857617A
	add r0, r8
	ldrb r0, [r0]
	cmp r4, r0
	blt _0807EB30
_0807EB9C:
	ldr r4, [sp, #4]
	cmp r4, #0
	beq _0807EC6C
	movs r4, #0
	ldr r1, _0807EBFC @ =0x0858217C
	mov r6, r8
	lsls r6, r6, #2
	str r6, [sp, #0x14]
	adds r7, r6, #0
	add r7, r8
	adds r2, r1, #2
	adds r0, r7, r2
	mov ip, r0
	ldr r0, _0807EC00 @ =0x085821B3
	adds r0, #2
	adds r0, r0, r7
	mov sl, r0
	adds r2, r7, r1
	mov sb, r2
	ldr r0, _0807EC00 @ =0x085821B3
	adds r0, #1
	adds r0, r7, r0
	str r0, [sp, #0x18]
	ldr r3, _0807EC08 @ =0x0858217F
	adds r3, r7, r3
	str r3, [sp, #0x20]
_0807EBD0:
	cmp r4, #0
	bne _0807EC10
	ldr r6, [sp, #4]
	adds r6, #1
	str r6, [sp, #4]
	mov r1, sb
	ldrb r0, [r1]
	adds r0, r0, r6
	lsls r0, r0, #5
	mov r2, ip
	ldrb r2, [r2]
	adds r6, r0, r2
	ldr r3, [sp, #0x18]
	ldrb r0, [r3]
	lsls r0, r0, #5
	mov r1, sl
	ldrb r1, [r1]
	adds r3, r0, r1
	b _0807EC2A
	.align 2, 0
_0807EBF8: .4byte 0x0857617A
_0807EBFC: .4byte 0x0858217C
_0807EC00: .4byte 0x085821B3
_0807EC04: .4byte 0x0879BEA8
_0807EC08: .4byte 0x0858217F
_0807EC0C: .4byte 0x0600C800
_0807EC10:
	mov r2, sb
	ldrb r0, [r2]
	lsls r0, r0, #5
	mov r3, ip
	ldrb r3, [r3]
	adds r6, r0, r3
	ldr r1, _0807EC7C @ =0x085821B3
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #5
	mov r2, sl
	ldrb r2, [r2]
	adds r3, r0, r2
_0807EC2A:
	ldr r0, [sp, #0x20]
	ldrb r1, [r0]
	mov r2, ip
	ldrb r0, [r2]
	subs r1, r1, r0
	adds r5, r4, #1
	cmp r1, #0
	blt _0807EC66
	ldr r1, [sp, #0x14]
	add r1, r8
	ldr r4, _0807EC80 @ =0x0858217F
	adds r0, r1, r4
	ldrb r2, [r0]
	ldr r0, _0807EC84 @ =0x0858217E
	adds r1, r1, r0
	ldrb r0, [r1]
	subs r2, r2, r0
	lsls r0, r3, #1
	ldr r1, _0807EC88 @ =0x0600C800
	adds r4, r0, r1
	lsls r0, r6, #1
	adds r3, r0, r1
	adds r1, r2, #1
_0807EC58:
	ldrh r0, [r4]
	strh r0, [r3]
	adds r4, #2
	adds r3, #2
	subs r1, #1
	cmp r1, #0
	bne _0807EC58
_0807EC66:
	adds r4, r5, #0
	cmp r4, #1
	ble _0807EBD0
_0807EC6C:
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807EC7C: .4byte 0x085821B3
_0807EC80: .4byte 0x0858217F
_0807EC84: .4byte 0x0858217E
_0807EC88: .4byte 0x0600C800

	thumb_func_start StatusScreenRemoveAmmoHeader
StatusScreenRemoveAmmoHeader: @ 0x0807EC8C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0807ECA2
	movs r1, #1
	b _0807ECA8
_0807ECA2:
	cmp r0, #2
	bne _0807ED0A
	movs r1, #2
_0807ECA8:
	ldr r0, _0807ED18 @ =0x0600C800
	mov r8, r0
	movs r3, #0
	lsls r1, r1, #2
	ldr r5, _0807ED1C @ =0x085821D6
	adds r0, r1, r5
	ldrb r0, [r0]
	mov sl, r0
	ldrb r7, [r5, #2]
	ldrb r0, [r5, #3]
	subs r0, r0, r7
	mov sb, r0
	adds r0, r5, #2
	adds r1, r1, r0
	ldrb r1, [r1]
	mov ip, r1
_0807ECC8:
	mov r1, sl
	adds r0, r1, r3
	lsls r0, r0, #5
	mov r2, ip
	adds r4, r0, r2
	ldrb r0, [r5]
	adds r0, r0, r3
	lsls r0, r0, #5
	adds r2, r0, r7
	adds r6, r3, #1
	mov r0, sb
	cmp r0, #0
	blt _0807ED04
	ldrb r1, [r5, #3]
	ldrb r0, [r5, #2]
	subs r1, r1, r0
	lsls r0, r2, #1
	ldr r2, _0807ED18 @ =0x0600C800
	adds r3, r0, r2
	lsls r0, r4, #1
	mov r4, r8
	adds r2, r0, r4
	adds r1, #1
_0807ECF6:
	ldrh r0, [r3]
	strh r0, [r2]
	adds r3, #2
	adds r2, #2
	subs r1, #1
	cmp r1, #0
	bne _0807ECF6
_0807ED04:
	adds r3, r6, #0
	cmp r3, #1
	ble _0807ECC8
_0807ED0A:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807ED18: .4byte 0x0600C800
_0807ED1C: .4byte 0x085821D6

	thumb_func_start EasySleepMenuSubroutine
EasySleepMenuSubroutine: @ 0x0807ED20
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	movs r7, #0
	ldr r0, _0807ED40 @ =gNonGameplayRam
	ldrb r1, [r0, #7]
	adds r3, r0, #0
	cmp r1, #5
	bls _0807ED36
	b _0807EE82
_0807ED36:
	lsls r0, r1, #2
	ldr r1, _0807ED44 @ =_0807ED48
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807ED40: .4byte gNonGameplayRam
_0807ED44: .4byte _0807ED48
_0807ED48: @ jump table
	.4byte _0807ED60 @ case 0
	.4byte _0807ED90 @ case 1
	.4byte _0807EDE4 @ case 2
	.4byte _0807EDFE @ case 3
	.4byte _0807EE12 @ case 4
	.4byte _0807EE78 @ case 5
_0807ED60:
	ldr r0, _0807ED78 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0807ED80
	ldr r0, _0807ED7C @ =0x000001FB
	bl SoundPlay
	movs r7, #1
	b _0807EE86
	.align 2, 0
_0807ED78: .4byte gChangedInput
_0807ED7C: .4byte 0x000001FB
_0807ED80:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0807EDD4
	movs r0, #1
	strb r0, [r3, #7]
	movs r0, #0x3c
	b _0807EDC8
_0807ED90:
	ldr r0, _0807EDB0 @ =gChangedInput
	ldrh r1, [r0]
	movs r2, #1
	ands r2, r1
	cmp r2, #0
	beq _0807EDBC
	ldr r0, _0807EDB4 @ =0x000001FB
	bl SoundPlay
	ldr r1, _0807EDB8 @ =gNonGameplayRam
	movs r2, #0
	movs r0, #2
	strb r0, [r1, #7]
	strb r2, [r1, #6]
	b _0807EE82
	.align 2, 0
_0807EDB0: .4byte gChangedInput
_0807EDB4: .4byte 0x000001FB
_0807EDB8: .4byte gNonGameplayRam
_0807EDBC:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0807EDD4
	strb r2, [r3, #7]
	movs r0, #0x8c
_0807EDC8:
	strh r0, [r3, #0x3a]
	movs r0, #0xfd
	lsls r0, r0, #1
	bl SoundPlay
	b _0807EE82
_0807EDD4:
	ldr r0, _0807EDE0 @ =0x00000302
	ands r0, r1
	cmp r0, #0
	beq _0807EE82
	movs r7, #1
	b _0807EE86
	.align 2, 0
_0807EDE0: .4byte 0x00000302
_0807EDE4:
	ldrb r0, [r3, #6]
	adds r0, #1
	strb r0, [r3, #6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	bls _0807EE82
	ldrb r0, [r3, #7]
	adds r0, #1
	strb r0, [r3, #7]
	movs r0, #0
	strb r0, [r3, #6]
	b _0807EE82
_0807EDFE:
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r2, r3, r0
	ldrh r0, [r2]
	movs r1, #0x80
	eors r0, r1
	strh r0, [r2]
	ldrb r0, [r3, #7]
	adds r0, #1
	b _0807EE80
_0807EE12:
	ldr r1, _0807EE64 @ =0x04000132
	ldr r2, _0807EE68 @ =0x0000C304
	adds r0, r2, #0
	strh r0, [r1]
	ldr r6, _0807EE6C @ =0x04000208
	movs r0, #0
	mov sb, r0
	strh r0, [r6]
	ldr r5, _0807EE70 @ =0x04000200
	ldrh r4, [r5]
	movs r1, #0xc0
	lsls r1, r1, #6
	adds r0, r1, #0
	strh r0, [r5]
	movs r2, #1
	mov r8, r2
	strh r2, [r6]
	bl SoundBias0
	svc #3
	bl SoundBias1
	mov r0, sb
	strh r0, [r6]
	strh r4, [r5]
	mov r1, r8
	strh r1, [r6]
	ldr r2, _0807EE74 @ =gNonGameplayRam
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r3, r2, r0
	ldrh r0, [r3]
	movs r1, #0x80
	eors r0, r1
	strh r0, [r3]
	movs r0, #0x8c
	strh r0, [r2, #0x3a]
	ldrb r0, [r2, #7]
	adds r0, #1
	strb r0, [r2, #7]
	b _0807EE82
	.align 2, 0
_0807EE64: .4byte 0x04000132
_0807EE68: .4byte 0x0000C304
_0807EE6C: .4byte 0x04000208
_0807EE70: .4byte 0x04000200
_0807EE74: .4byte gNonGameplayRam
_0807EE78:
	ldr r0, _0807EE9C @ =gButtonInput
	ldrh r0, [r0]
	cmp r0, #0
	bne _0807EE82
_0807EE80:
	strb r0, [r3, #7]
_0807EE82:
	cmp r7, #0
	beq _0807EE8E
_0807EE86:
	ldr r1, _0807EEA0 @ =gNonGameplayRam
	movs r0, #0
	strb r0, [r1, #7]
	strb r0, [r1, #6]
_0807EE8E:
	adds r0, r7, #0
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807EE9C: .4byte gButtonInput
_0807EEA0: .4byte gNonGameplayRam

	thumb_func_start Sram_ReadAll
Sram_ReadAll: @ 0x0807EEA4
	push {lr}
	bl Sram_ReadHeader
	bl unk_7fb84
	bl SramRead_MostRecentSaveFile
	bl SramRead_Language
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start Sram_WriteHeader
Sram_WriteHeader: @ 0x0807EEBC
	push {r4, r5, lr}
	ldr r4, _0807EF1C @ =0x02038000
	movs r0, #0x30
	strb r0, [r4, #8]
	movs r0, #0x31
	strb r0, [r4, #9]
	ldr r0, _0807EF20 @ =0x03000010
	ldrb r0, [r0]
	strb r0, [r4, #0xa]
	movs r0, #2
	strb r0, [r4, #0xb]
	movs r2, #0
	adds r5, r4, #0
	adds r5, #0xc
	ldr r3, _0807EF24 @ =0x08582248
_0807EEDA:
	adds r0, r5, r2
	adds r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	adds r2, #1
	cmp r2, #0x13
	ble _0807EEDA
	movs r0, #0
	str r0, [r4]
	subs r0, #1
	str r0, [r4, #4]
	ldr r3, _0807EF1C @ =0x02038000
	movs r1, #0
	movs r2, #7
_0807EEF6:
	ldm r3!, {r0}
	adds r1, r1, r0
	ldm r3!, {r0}
	adds r1, r1, r0
	ldm r3!, {r0}
	adds r1, r1, r0
	ldm r3!, {r0}
	adds r1, r1, r0
	subs r2, #1
	cmp r2, #0
	bge _0807EEF6
	str r1, [r4]
	mvns r0, r1
	str r0, [r4, #4]
	bl unk_c98
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807EF1C: .4byte 0x02038000
_0807EF20: .4byte 0x03000010
_0807EF24: .4byte 0x08582248

	thumb_func_start Sram_ReadHeader
Sram_ReadHeader: @ 0x0807EF28
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	bl SramTestFlash
	ldr r0, _0807EFA0 @ =0x03000B8E
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807EF42
	bl unk_da8
_0807EF42:
	movs r0, #0
	bl Sram_VerifyHeader
	adds r6, r0, #0
	movs r0, #1
	bl Sram_VerifyHeader
	mov sb, r0
	movs r0, #2
	bl Sram_VerifyHeader
	mov r8, r0
	cmp r6, #0
	beq _0807F00C
	mov r0, sp
	ldr r1, _0807EFA4 @ =0x0000FFFF
	adds r2, r1, #0
	strh r2, [r0]
	ldr r4, _0807EFA8 @ =0x040000D4
	str r0, [r4]
	ldr r5, _0807EFAC @ =0x02038000
	str r5, [r4, #4]
	ldr r1, _0807EFB0 @ =0x81000040
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	mov r0, r8
	cmp r0, #0
	beq _0807EFD8
	mov r0, sp
	strh r2, [r0]
	str r0, [r4]
	ldr r0, _0807EFB4 @ =0x0203F100
	str r0, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	mov r0, sb
	cmp r0, #0
	beq _0807EFBC
	mov r0, sp
	strh r2, [r0]
	str r0, [r4]
	ldr r0, _0807EFB8 @ =0x02038080
	str r0, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	b _0807F034
	.align 2, 0
_0807EFA0: .4byte 0x03000B8E
_0807EFA4: .4byte 0x0000FFFF
_0807EFA8: .4byte 0x040000D4
_0807EFAC: .4byte 0x02038000
_0807EFB0: .4byte 0x81000040
_0807EFB4: .4byte 0x0203F100
_0807EFB8: .4byte 0x02038080
_0807EFBC:
	ldr r0, _0807EFD0 @ =0x02038080
	str r0, [r4]
	str r5, [r4, #4]
	ldr r0, _0807EFD4 @ =0x80000040
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r6, #0
	bl unk_c98
	b _0807F034
	.align 2, 0
_0807EFD0: .4byte 0x02038080
_0807EFD4: .4byte 0x80000040
_0807EFD8:
	ldr r0, _0807F000 @ =0x0203F100
	str r0, [r4]
	str r5, [r4, #4]
	ldr r7, _0807F004 @ =0x80000040
	str r7, [r4, #8]
	ldr r0, [r4, #8]
	movs r6, #0
	bl unk_c98
	mov r1, sb
	cmp r1, #0
	beq _0807F034
	str r5, [r4]
	ldr r0, _0807F008 @ =0x02038080
	str r0, [r4, #4]
	str r7, [r4, #8]
	ldr r0, [r4, #8]
	bl unk_cd8
	b _0807F034
	.align 2, 0
_0807F000: .4byte 0x0203F100
_0807F004: .4byte 0x80000040
_0807F008: .4byte 0x02038080
_0807F00C:
	ldr r4, _0807F040 @ =0x040000D4
	ldr r7, _0807F044 @ =0x02038000
	str r7, [r4]
	ldr r0, _0807F048 @ =0x02038080
	str r0, [r4, #4]
	ldr r5, _0807F04C @ =0x80000040
	str r5, [r4, #8]
	ldr r0, [r4, #8]
	bl unk_cd8
	mov r0, r8
	cmp r0, #0
	beq _0807F034
	str r7, [r4]
	ldr r0, _0807F050 @ =0x0203F100
	str r0, [r4, #4]
	str r5, [r4, #8]
	ldr r0, [r4, #8]
	bl unk_cf0
_0807F034:
	cmp r6, #0
	bne _0807F058
	ldr r0, _0807F054 @ =0x03000010
	strb r6, [r0]
	b _0807F066
	.align 2, 0
_0807F040: .4byte 0x040000D4
_0807F044: .4byte 0x02038000
_0807F048: .4byte 0x02038080
_0807F04C: .4byte 0x80000040
_0807F050: .4byte 0x0203F100
_0807F054: .4byte 0x03000010
_0807F058:
	bl EraseSram
	ldr r1, _0807F074 @ =0x03000010
	movs r0, #0
	strb r0, [r1]
	bl Sram_WriteHeader
_0807F066:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807F074: .4byte 0x03000010

	thumb_func_start Sram_VerifyHeader
Sram_VerifyHeader: @ 0x0807F078
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r4, #0
	ldr r1, _0807F0EC @ =0x0203F100
	cmp r0, #2
	beq _0807F08E
	ldr r1, _0807F0F0 @ =0x02038000
	cmp r0, #1
	bne _0807F08E
	adds r1, #0x80
_0807F08E:
	movs r2, #0
	ldr r7, [r1]
	adds r5, r1, #0
	adds r5, #0xc
	ldr r0, [r1, #4]
	mov ip, r0
	movs r3, #7
_0807F09C:
	ldm r1!, {r0}
	adds r2, r2, r0
	ldm r1!, {r0}
	adds r2, r2, r0
	ldm r1!, {r0}
	adds r2, r2, r0
	ldm r1!, {r0}
	adds r2, r2, r0
	subs r3, #1
	cmp r3, #0
	bge _0807F09C
	cmp r7, r2
	beq _0807F0BA
	movs r0, #1
	orrs r4, r0
_0807F0BA:
	movs r3, #0
	adds r2, r5, #0
	ldr r6, _0807F0F4 @ =0x08582248
	movs r5, #2
_0807F0C2:
	adds r0, r2, r3
	adds r1, r3, r6
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	beq _0807F0D0
	orrs r4, r5
_0807F0D0:
	adds r3, #1
	cmp r3, #0x13
	ble _0807F0C2
	mov r1, ip
	mvns r0, r1
	cmp r7, r0
	beq _0807F0E2
	movs r0, #4
	orrs r4, r0
_0807F0E2:
	adds r0, r4, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807F0EC: .4byte 0x0203F100
_0807F0F0: .4byte 0x02038000
_0807F0F4: .4byte 0x08582248

	thumb_func_start Sram_ProcessIntroSave
Sram_ProcessIntroSave: @ 0x0807F0F8
	push {r4, r5, r6, lr}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r3, r1, #0
	ldr r6, _0807F128 @ =0x03000B94
	ldr r4, _0807F12C @ =0x03000B8D
	ldrb r0, [r4]
	lsls r2, r0, #2
	adds r0, r2, r0
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r5, [r0, #0xf]
	cmp r5, #0
	beq _0807F17C
	cmp r1, #2
	bgt _0807F130
	cmp r1, #1
	blt _0807F120
	b _0807F222
_0807F120:
	cmp r1, #0
	beq _0807F136
	b _0807F21C
	.align 2, 0
_0807F128: .4byte 0x03000B94
_0807F12C: .4byte 0x03000B8D
_0807F130:
	cmp r1, #3
	beq _0807F158
	b _0807F21C
_0807F136:
	ldr r1, _0807F150 @ =gDisableSoftReset
	movs r0, #1
	strb r0, [r1]
	ldr r0, _0807F154 @ =0x03000014
	movs r2, #1
	strb r2, [r0, #1]
	ldrb r1, [r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	strb r2, [r0, #0x11]
	b _0807F222
	.align 2, 0
_0807F150: .4byte gDisableSoftReset
_0807F154: .4byte 0x03000014
_0807F158:
	ldr r0, _0807F174 @ =0x0858225C
	adds r0, r2, r0
	ldr r1, [r0]
	ldr r0, _0807F178 @ =0x08582268
	adds r0, r2, r0
	ldr r2, [r0]
	movs r3, #0x90
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	b _0807F21C
	.align 2, 0
_0807F174: .4byte 0x0858225C
_0807F178: .4byte 0x08582268
_0807F17C:
	cmp r1, #1
	beq _0807F1E4
	cmp r1, #1
	bgt _0807F18A
	cmp r1, #0
	beq _0807F194
	b _0807F21C
_0807F18A:
	cmp r3, #2
	beq _0807F1EA
	cmp r3, #3
	beq _0807F1F0
	b _0807F21C
_0807F194:
	ldr r1, _0807F1D8 @ =gDisableSoftReset
	movs r0, #1
	strb r0, [r1]
	ldr r3, _0807F1DC @ =0x03000014
	movs r2, #1
	strb r2, [r3, #1]
	ldrb r1, [r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	strb r2, [r0, #0x11]
	ldrb r1, [r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #0x10]
	strb r0, [r3]
	ldr r1, _0807F1E0 @ =0x0858225C
	ldrb r0, [r4]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r2, [r0]
	movs r3, #0xc0
	lsls r3, r3, #2
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	movs r1, #0
	bl BitFill
	b _0807F222
	.align 2, 0
_0807F1D8: .4byte gDisableSoftReset
_0807F1DC: .4byte 0x03000014
_0807F1E0: .4byte 0x0858225C
_0807F1E4:
	bl Sram_WriteHeaderAndGameInfo
	b _0807F222
_0807F1EA:
	bl WriteMostRecentFileToGamePak
	b _0807F222
_0807F1F0:
	ldr r0, _0807F210 @ =0x0858225C
	adds r0, r2, r0
	ldr r1, [r0]
	ldr r0, _0807F214 @ =0x08582268
	adds r0, r2, r0
	ldr r2, [r0]
	movs r3, #0x90
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	ldr r0, _0807F218 @ =gDisableSoftReset
	strb r5, [r0]
	b _0807F222
	.align 2, 0
_0807F210: .4byte 0x0858225C
_0807F214: .4byte 0x08582268
_0807F218: .4byte gDisableSoftReset
_0807F21C:
	ldr r1, _0807F22C @ =gDisableSoftReset
	movs r0, #0
	strb r0, [r1]
_0807F222:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807F22C: .4byte gDisableSoftReset

	thumb_func_start Sram_WriteHeaderAndGameInfo
Sram_WriteHeaderAndGameInfo: @ 0x0807F230
	push {r4, r5, r6, lr}
	ldr r5, _0807F2A0 @ =0x0858225C
	ldr r4, _0807F2A4 @ =0x03000B8D
	ldrb r0, [r4]
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r6, [r0]
	ldr r1, _0807F2A8 @ =0x08582200
	adds r0, r6, #0
	bl Sram_StringCopy_MetroidEpisode4A
	movs r0, #0
	str r0, [r6, #0x10]
	subs r0, #1
	str r0, [r6, #0x14]
	ldr r1, _0807F2AC @ =0x03000014
	ldrb r0, [r1, #1]
	strb r0, [r6, #0x19]
	ldrb r0, [r1]
	strb r0, [r6, #0x18]
	adds r0, r6, #0
	adds r0, #0xf0
	ldr r1, _0807F2B0 @ =0x085821F8
	bl Sram_StringCopy_SAVE_END
	ldrb r0, [r4]
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r2, [r0]
	movs r1, #0
	movs r3, #0x8f
_0807F26E:
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	subs r3, #1
	cmp r3, #0
	bge _0807F26E
	str r1, [r6, #0x10]
	mvns r0, r1
	str r0, [r6, #0x14]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807F2A0: .4byte 0x0858225C
_0807F2A4: .4byte 0x03000B8D
_0807F2A8: .4byte 0x08582200
_0807F2AC: .4byte 0x03000014
_0807F2B0: .4byte 0x085821F8

	thumb_func_start Sram_ProcessEndingSave
Sram_ProcessEndingSave: @ 0x0807F2B4
	push {lr}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #1
	beq _0807F2DA
	cmp r1, #1
	bgt _0807F2CA
	cmp r1, #0
	beq _0807F2D4
	b _0807F330
_0807F2CA:
	cmp r1, #2
	beq _0807F2E8
	cmp r1, #3
	beq _0807F310
	b _0807F330
_0807F2D4:
	bl ReadMostRecentFileFromGamePak
	b _0807F330
_0807F2DA:
	ldr r0, _0807F2E4 @ =0x03000014
	strb r1, [r0]
	bl Sram_CopyGameCompletion
	b _0807F330
	.align 2, 0
_0807F2E4: .4byte 0x03000014
_0807F2E8:
	bl WriteMostRecentFileToGamePak
	ldr r2, _0807F304 @ =0x03000B94
	ldr r0, _0807F308 @ =0x03000B8D
	ldrb r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r1, _0807F30C @ =0x03000014
	ldrb r1, [r1]
	strb r1, [r0, #0x10]
	b _0807F330
	.align 2, 0
_0807F304: .4byte 0x03000B94
_0807F308: .4byte 0x03000B8D
_0807F30C: .4byte 0x03000014
_0807F310:
	ldr r1, _0807F338 @ =0x0858225C
	ldr r0, _0807F33C @ =0x03000B8D
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r1, r0, r1
	ldr r1, [r1]
	ldr r2, _0807F340 @ =0x08582268
	adds r0, r0, r2
	ldr r2, [r0]
	movs r3, #0x90
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
_0807F330:
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_0807F338: .4byte 0x0858225C
_0807F33C: .4byte 0x03000B8D
_0807F340: .4byte 0x08582268

	thumb_func_start Sram_CopyGameCompletion
Sram_CopyGameCompletion: @ 0x0807F344
	push {r4, lr}
	ldr r2, _0807F3A0 @ =0x0858225C
	ldr r1, _0807F3A4 @ =0x03000B8D
	ldrb r0, [r1]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r3, [r0]
	movs r0, #0
	str r0, [r3, #0x10]
	subs r0, #1
	str r0, [r3, #0x14]
	ldr r0, _0807F3A8 @ =0x03000014
	ldrb r0, [r0]
	strb r0, [r3, #0x18]
	ldrb r0, [r1]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r2, [r0]
	movs r1, #0
	movs r4, #0x8f
_0807F36C:
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	subs r4, #1
	cmp r4, #0
	bge _0807F36C
	str r1, [r3, #0x10]
	mvns r0, r1
	str r0, [r3, #0x14]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807F3A0: .4byte 0x0858225C
_0807F3A4: .4byte 0x03000B8D
_0807F3A8: .4byte 0x03000014

	thumb_func_start Sram_QuickSave
Sram_QuickSave: @ 0x0807F3AC
	push {lr}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r0, #0
	cmp r0, #1
	beq _0807F3E8
	cmp r0, #1
	bgt _0807F3C4
	cmp r0, #0
	beq _0807F3CE
	b _0807F434
_0807F3C4:
	cmp r1, #2
	beq _0807F3F2
	cmp r1, #3
	beq _0807F414
	b _0807F434
_0807F3CE:
	ldr r0, _0807F3E0 @ =gDisableSoftReset
	movs r1, #1
	strb r1, [r0]
	ldr r0, _0807F3E4 @ =0x03000B90
	strb r1, [r0]
	bl unk_d34
	b _0807F43A
	.align 2, 0
_0807F3E0: .4byte gDisableSoftReset
_0807F3E4: .4byte 0x03000B90
_0807F3E8:
	bl SramWrite_WorldData
	bl SramWrite_ToEwram
	b _0807F43A
_0807F3F2:
	bl WriteMostRecentFileToGamePak
	ldr r2, _0807F40C @ =0x03000B94
	ldr r0, _0807F410 @ =0x03000B8D
	ldrb r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #1
	strb r1, [r0]
	b _0807F43A
	.align 2, 0
_0807F40C: .4byte 0x03000B94
_0807F410: .4byte 0x03000B8D
_0807F414:
	ldr r1, _0807F440 @ =0x0858225C
	ldr r0, _0807F444 @ =0x03000B8D
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r1, r0, r1
	ldr r1, [r1]
	ldr r2, _0807F448 @ =0x08582268
	adds r0, r0, r2
	ldr r2, [r0]
	movs r3, #0x90
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
_0807F434:
	ldr r1, _0807F44C @ =gDisableSoftReset
	movs r0, #0
	strb r0, [r1]
_0807F43A:
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_0807F440: .4byte 0x0858225C
_0807F444: .4byte 0x03000B8D
_0807F448: .4byte 0x08582268
_0807F44C: .4byte gDisableSoftReset

	thumb_func_start SramWrite_ToEwram
SramWrite_ToEwram: @ 0x0807F450
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	ldr r4, _0807F6F8 @ =gMusicInfo
	ldrh r1, [r4, #0x1c]
	ldr r0, _0807F6FC @ =0xFFFF0000
	ands r0, r5
	orrs r0, r1
	ldrh r1, [r4, #0x1e]
	lsls r1, r1, #0x10
	ldr r3, _0807F700 @ =0x0000FFFF
	ands r0, r3
	adds r5, r0, #0
	orrs r5, r1
	adds r0, r4, #0
	adds r0, #0x20
	ldrb r0, [r0]
	ldr r2, _0807F704 @ =0xFFFFFF00
	ands r2, r6
	orrs r2, r0
	adds r0, r4, #0
	adds r0, #0x21
	ldrb r1, [r0]
	lsls r1, r1, #8
	ldr r0, _0807F708 @ =0xFFFF00FF
	ands r0, r2
	orrs r0, r1
	ldrh r1, [r4, #2]
	lsls r1, r1, #0x10
	ands r0, r3
	adds r6, r0, #0
	orrs r6, r1
	ldr r1, _0807F70C @ =0x0858225C
	ldr r0, _0807F710 @ =0x03000B8D
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r1, _0807F714 @ =0x08582200
	adds r0, r4, #0
	bl Sram_StringCopy_MetroidEpisode4A
	movs r0, #0
	str r0, [r4, #0x10]
	subs r0, #1
	str r0, [r4, #0x14]
	ldr r0, _0807F718 @ =0x03000014
	ldr r0, [r0]
	str r0, [r4, #0x18]
	ldr r0, _0807F71C @ =0x03000B90
	ldrb r0, [r0]
	strb r0, [r4, #0x1c]
	ldr r0, _0807F720 @ =gCurrentArea
	ldrb r0, [r0]
	strb r0, [r4, #0x1d]
	ldr r0, _0807F724 @ =gCurrentRoom
	ldrb r0, [r0]
	strb r0, [r4, #0x1e]
	ldr r0, _0807F728 @ =gLastDoorUsed
	ldrb r0, [r0]
	strb r0, [r4, #0x1f]
	ldr r0, _0807F72C @ =gAbilityCount
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x20
	strb r1, [r0]
	ldr r0, _0807F730 @ =gEventCounter
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x21
	strb r0, [r1]
	ldr r0, _0807F734 @ =gPreviousNavigationConversation
	ldrb r0, [r0]
	adds r1, #1
	strb r0, [r1]
	ldr r0, _0807F738 @ =gPreviousCutscene
	ldrb r0, [r0]
	adds r1, #1
	strb r0, [r1]
	ldr r0, _0807F73C @ =0x03000031
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x24
	strb r1, [r0]
	ldr r0, _0807F740 @ =0x03000032
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x25
	strb r0, [r1]
	ldr r0, _0807F744 @ =gSubEventCounter
	ldrh r0, [r0]
	strh r0, [r4, #0x26]
	ldr r0, _0807F748 @ =gPreviousSubEvent
	ldrh r0, [r0]
	strh r0, [r4, #0x28]
	ldr r0, _0807F74C @ =0x0300004D
	ldrb r0, [r0]
	adds r1, #5
	strb r0, [r1]
	ldr r0, _0807F750 @ =gSecurityHatchLevelBackup
	ldrb r0, [r0]
	adds r1, #1
	strb r0, [r1]
	adds r1, #1
	ldr r0, _0807F754 @ =0x03000124
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r0, _0807F758 @ =0x03001224
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x40
	strh r1, [r0]
	ldr r0, _0807F75C @ =0x03001226
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x42
	strh r0, [r1]
	ldr r0, _0807F760 @ =gBg1XPosition
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x44
	strh r1, [r0]
	ldr r0, _0807F764 @ =gBg1YPosition
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x46
	strh r0, [r1]
	ldr r0, _0807F768 @ =0x0300122C
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x48
	strh r1, [r0]
	ldr r0, _0807F76C @ =0x0300122E
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x4a
	strh r0, [r1]
	ldr r0, _0807F770 @ =0x03001230
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x4c
	strh r1, [r0]
	ldr r0, _0807F774 @ =0x03001232
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x4e
	strh r0, [r1]
	movs r3, #0
	adds r2, r4, #0
	adds r2, #0x50
	ldr r7, _0807F778 @ =0x03000033
_0807F588:
	adds r0, r2, r3
	adds r1, r3, r7
	ldrb r1, [r1]
	strb r1, [r0]
	adds r3, #1
	cmp r3, #7
	ble _0807F588
	movs r3, #0
	movs r7, #0x60
	adds r7, r7, r4
	mov ip, r7
	movs r0, #0x8c
	adds r0, r0, r4
	mov r8, r0
	movs r1, #0x98
	adds r1, r1, r4
	mov sb, r1
	movs r2, #0xa4
	adds r2, r2, r4
	mov sl, r2
	adds r7, r4, #0
	adds r7, #0xb4
	str r7, [sp]
	adds r0, r4, #0
	adds r0, #0xc4
	str r0, [sp, #4]
	adds r1, r4, #0
	adds r1, #0xd4
	str r1, [sp, #8]
	adds r2, r4, #0
	adds r2, #0xd6
	str r2, [sp, #0xc]
	adds r7, #0x24
	str r7, [sp, #0x10]
	adds r0, #0x16
	str r0, [sp, #0x14]
	adds r1, #8
	str r1, [sp, #0x18]
	adds r2, #8
	str r2, [sp, #0x1c]
	adds r7, #8
	str r7, [sp, #0x20]
	adds r0, #8
	str r0, [sp, #0x24]
	adds r1, #7
	str r1, [sp, #0x28]
	adds r2, #6
	str r2, [sp, #0x2c]
	adds r7, #8
	str r7, [sp, #0x30]
	adds r0, #0xe
	str r0, [sp, #0x34]
	subs r2, #0x8c
	ldr r7, _0807F77C @ =0x0300003B
_0807F5F4:
	adds r0, r2, r3
	adds r1, r3, r7
	ldrb r1, [r1]
	strb r1, [r0]
	adds r3, #1
	cmp r3, #7
	ble _0807F5F4
	mov r1, ip
	ldr r0, _0807F780 @ =gSamusData
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	mov r1, r8
	ldr r0, _0807F784 @ =gSamusAnimationInfo
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	mov r1, sb
	ldr r0, _0807F788 @ =0x030012E4
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	mov r1, sl
	ldr r0, _0807F78C @ =0x030012F0
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r0, [r0]
	str r0, [r1]
	ldr r1, [sp]
	ldr r0, _0807F78C @ =0x030012F0
	adds r0, #0x10
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r0, [r0]
	str r0, [r1]
	ldr r1, [sp, #4]
	ldr r0, _0807F790 @ =gEquipment
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r0, [r0]
	str r0, [r1]
	ldr r7, _0807F794 @ =gPreventMovementTimer
	ldrh r0, [r7]
	ldr r1, [sp, #8]
	strh r0, [r1]
	ldr r2, _0807F798 @ =gDisableDrawingSamusAndScrollingFlag
	ldrb r0, [r2]
	ldr r3, [sp, #0xc]
	strb r0, [r3]
	ldr r7, _0807F79C @ =gAtmosphericStabilizersOnline
	ldrh r0, [r7]
	ldr r1, [sp, #0x10]
	strh r0, [r1]
	ldr r2, _0807F7A0 @ =gNormalXBarrierCoresDestroyed
	ldrh r0, [r2]
	ldr r3, [sp, #0x14]
	strh r0, [r3]
	ldr r7, _0807F7A4 @ =gSuperXBarrierCoresDestroyed
	ldrh r0, [r7]
	ldr r1, [sp, #0x18]
	strh r0, [r1]
	ldr r2, _0807F7A8 @ =gPowerBombXBarrierCoresDestroyed
	ldrh r0, [r2]
	ldr r3, [sp, #0x1c]
	strh r0, [r3]
	ldr r7, _0807F7AC @ =gGadorasDestroyed
	ldrh r0, [r7]
	ldr r1, [sp, #0x20]
	strh r0, [r1]
	ldr r2, _0807F7B0 @ =gMissilesHatchDestroyed
	ldrb r0, [r2]
	ldr r3, [sp, #0x24]
	strb r0, [r3]
	ldr r7, _0807F7B4 @ =gWaterLowered
	ldrb r0, [r7]
	ldr r1, [sp, #0x28]
	strb r0, [r1]
	ldr r2, _0807F7B8 @ =gInGameTimer
	ldr r0, [r2]
	ldr r3, [sp, #0x2c]
	str r0, [r3]
	ldr r7, [sp, #0x30]
	str r5, [r7]
	str r6, [r7, #4]
	ldr r0, [sp, #0x34]
	ldr r1, _0807F7BC @ =0x085821F8
	bl Sram_StringCopy_SAVE_END
	ldr r1, _0807F70C @ =0x0858225C
	ldr r0, _0807F710 @ =0x03000B8D
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r2, [r0]
	movs r1, #0
	movs r3, #0x8f
_0807F6BA:
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	ldm r2!, {r0}
	adds r1, r1, r0
	subs r3, #1
	cmp r3, #0
	bge _0807F6BA
	str r1, [r4, #0x10]
	mvns r0, r1
	str r0, [r4, #0x14]
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807F6F8: .4byte gMusicInfo
_0807F6FC: .4byte 0xFFFF0000
_0807F700: .4byte 0x0000FFFF
_0807F704: .4byte 0xFFFFFF00
_0807F708: .4byte 0xFFFF00FF
_0807F70C: .4byte 0x0858225C
_0807F710: .4byte 0x03000B8D
_0807F714: .4byte 0x08582200
_0807F718: .4byte 0x03000014
_0807F71C: .4byte 0x03000B90
_0807F720: .4byte gCurrentArea
_0807F724: .4byte gCurrentRoom
_0807F728: .4byte gLastDoorUsed
_0807F72C: .4byte gAbilityCount
_0807F730: .4byte gEventCounter
_0807F734: .4byte gPreviousNavigationConversation
_0807F738: .4byte gPreviousCutscene
_0807F73C: .4byte 0x03000031
_0807F740: .4byte 0x03000032
_0807F744: .4byte gSubEventCounter
_0807F748: .4byte gPreviousSubEvent
_0807F74C: .4byte 0x0300004D
_0807F750: .4byte gSecurityHatchLevelBackup
_0807F754: .4byte 0x03000124
_0807F758: .4byte 0x03001224
_0807F75C: .4byte 0x03001226
_0807F760: .4byte gBg1XPosition
_0807F764: .4byte gBg1YPosition
_0807F768: .4byte 0x0300122C
_0807F76C: .4byte 0x0300122E
_0807F770: .4byte 0x03001230
_0807F774: .4byte 0x03001232
_0807F778: .4byte 0x03000033
_0807F77C: .4byte 0x0300003B
_0807F780: .4byte gSamusData
_0807F784: .4byte gSamusAnimationInfo
_0807F788: .4byte 0x030012E4
_0807F78C: .4byte 0x030012F0
_0807F790: .4byte gEquipment
_0807F794: .4byte gPreventMovementTimer
_0807F798: .4byte gDisableDrawingSamusAndScrollingFlag
_0807F79C: .4byte gAtmosphericStabilizersOnline
_0807F7A0: .4byte gNormalXBarrierCoresDestroyed
_0807F7A4: .4byte gSuperXBarrierCoresDestroyed
_0807F7A8: .4byte gPowerBombXBarrierCoresDestroyed
_0807F7AC: .4byte gGadorasDestroyed
_0807F7B0: .4byte gMissilesHatchDestroyed
_0807F7B4: .4byte gWaterLowered
_0807F7B8: .4byte gInGameTimer
_0807F7BC: .4byte 0x085821F8

	thumb_func_start SramRead_FromEwram
SramRead_FromEwram: @ 0x0807F7C0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	ldr r1, _0807F9F8 @ =0x0858225C
	ldr r0, _0807F9FC @ =0x03000B8D
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r1, _0807FA00 @ =0x03000014
	ldr r0, [r2, #0x18]
	str r0, [r1]
	ldr r1, _0807FA04 @ =0x03000B90
	ldrb r0, [r2, #0x1c]
	strb r0, [r1]
	ldr r1, _0807FA08 @ =gCurrentArea
	ldrb r0, [r2, #0x1d]
	strb r0, [r1]
	ldr r1, _0807FA0C @ =gCurrentRoom
	ldrb r0, [r2, #0x1e]
	strb r0, [r1]
	ldr r1, _0807FA10 @ =gLastDoorUsed
	ldrb r0, [r2, #0x1f]
	strb r0, [r1]
	ldr r1, _0807FA14 @ =gAbilityCount
	adds r0, r2, #0
	adds r0, #0x20
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0807FA18 @ =gEventCounter
	adds r0, r2, #0
	adds r0, #0x21
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0807FA1C @ =gPreviousNavigationConversation
	adds r0, r2, #0
	adds r0, #0x22
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0807FA20 @ =gPreviousCutscene
	adds r0, r2, #0
	adds r0, #0x23
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0807FA24 @ =0x03000031
	adds r0, r2, #0
	adds r0, #0x24
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0807FA28 @ =0x03000032
	adds r0, r2, #0
	adds r0, #0x25
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0807FA2C @ =gSubEventCounter
	ldrh r0, [r2, #0x26]
	strh r0, [r1]
	ldr r1, _0807FA30 @ =gPreviousSubEvent
	ldrh r0, [r2, #0x28]
	strh r0, [r1]
	ldr r1, _0807FA34 @ =0x0300004D
	adds r0, r2, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0807FA38 @ =gSecurityHatchLevelBackup
	adds r0, r2, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0807FA3C @ =0x03000124
	adds r0, r2, #0
	adds r0, #0x2c
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r1, _0807FA40 @ =0x03001224
	adds r0, r2, #0
	adds r0, #0x40
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _0807FA44 @ =0x03001226
	adds r0, r2, #0
	adds r0, #0x42
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _0807FA48 @ =gBg1XPosition
	adds r0, r2, #0
	adds r0, #0x44
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _0807FA4C @ =gBg1YPosition
	adds r0, r2, #0
	adds r0, #0x46
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _0807FA50 @ =0x0300122C
	adds r0, r2, #0
	adds r0, #0x48
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _0807FA54 @ =0x0300122E
	adds r0, r2, #0
	adds r0, #0x4a
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _0807FA58 @ =0x03001230
	adds r0, r2, #0
	adds r0, #0x4c
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _0807FA5C @ =0x03001232
	adds r0, r2, #0
	adds r0, #0x4e
	ldrh r0, [r0]
	strh r0, [r1]
	movs r3, #0
	ldr r5, _0807FA60 @ =gMusicInfo
	mov ip, r5
	ldr r5, _0807FA64 @ =0x03000033
	adds r4, r2, #0
	adds r4, #0x50
_0807F8BC:
	adds r0, r3, r5
	adds r1, r4, r3
	ldrb r1, [r1]
	strb r1, [r0]
	adds r3, #1
	cmp r3, #7
	ble _0807F8BC
	movs r3, #0
	adds r5, r2, #0
	adds r5, #0x60
	adds r6, r2, #0
	adds r6, #0x8c
	adds r7, r2, #0
	adds r7, #0x98
	movs r0, #0xa4
	adds r0, r0, r2
	mov r8, r0
	movs r1, #0xb4
	adds r1, r1, r2
	mov sb, r1
	movs r4, #0xc4
	adds r4, r4, r2
	mov sl, r4
	adds r0, r2, #0
	adds r0, #0xd4
	str r0, [sp]
	adds r1, r2, #0
	adds r1, #0xd6
	str r1, [sp, #4]
	adds r4, r2, #0
	adds r4, #0xd8
	str r4, [sp, #8]
	adds r0, #6
	str r0, [sp, #0xc]
	adds r1, #6
	str r1, [sp, #0x10]
	adds r4, #6
	str r4, [sp, #0x14]
	adds r0, #6
	str r0, [sp, #0x18]
	adds r1, #6
	str r1, [sp, #0x1c]
	adds r4, #5
	str r4, [sp, #0x20]
	adds r0, #4
	str r0, [sp, #0x24]
	adds r1, #6
	str r1, [sp, #0x28]
	ldr r4, _0807FA68 @ =0x0300003B
	adds r2, #0x58
_0807F920:
	adds r0, r3, r4
	adds r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	adds r3, #1
	cmp r3, #7
	ble _0807F920
	ldr r1, _0807FA6C @ =gSamusData
	adds r0, r5, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r4, r5}
	stm r1!, {r2, r4, r5}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r1, _0807FA70 @ =gSamusAnimationInfo
	adds r0, r6, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r1, _0807FA74 @ =0x030012E4
	adds r0, r7, #0
	ldm r0!, {r2, r4, r5}
	stm r1!, {r2, r4, r5}
	ldr r1, _0807FA78 @ =0x030012F0
	mov r0, r8
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldr r0, [r0]
	str r0, [r1]
	ldr r1, _0807FA78 @ =0x030012F0
	adds r1, #0x10
	mov r0, sb
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	ldr r1, _0807FA7C @ =gEquipment
	mov r0, sl
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r0, [r0]
	str r0, [r1]
	ldr r4, [sp]
	ldrh r0, [r4]
	ldr r5, _0807FA80 @ =gPreventMovementTimer
	strh r0, [r5]
	ldr r1, [sp, #4]
	ldrb r0, [r1]
	ldr r2, _0807FA84 @ =gDisableDrawingSamusAndScrollingFlag
	strb r0, [r2]
	ldr r3, [sp, #8]
	ldrh r0, [r3]
	ldr r4, _0807FA88 @ =gAtmosphericStabilizersOnline
	strh r0, [r4]
	ldr r5, [sp, #0xc]
	ldrh r0, [r5]
	ldr r1, _0807FA8C @ =gNormalXBarrierCoresDestroyed
	strh r0, [r1]
	ldr r2, [sp, #0x10]
	ldrh r0, [r2]
	ldr r3, _0807FA90 @ =gSuperXBarrierCoresDestroyed
	strh r0, [r3]
	ldr r4, [sp, #0x14]
	ldrh r0, [r4]
	ldr r5, _0807FA94 @ =gPowerBombXBarrierCoresDestroyed
	strh r0, [r5]
	ldr r1, [sp, #0x18]
	ldrh r0, [r1]
	ldr r2, _0807FA98 @ =gGadorasDestroyed
	strh r0, [r2]
	ldr r3, [sp, #0x1c]
	ldrb r0, [r3]
	ldr r4, _0807FA9C @ =gMissilesHatchDestroyed
	strb r0, [r4]
	ldr r5, [sp, #0x20]
	ldrb r0, [r5]
	ldr r1, _0807FAA0 @ =gWaterLowered
	strb r0, [r1]
	ldr r2, [sp, #0x24]
	ldr r0, [r2]
	ldr r3, _0807FAA4 @ =gInGameTimer
	str r0, [r3]
	ldr r4, [sp, #0x28]
	ldr r0, [r4]
	ldr r1, [r4, #4]
	mov r5, ip
	strh r0, [r5, #0x1c]
	lsrs r2, r0, #0x10
	strh r2, [r5, #0x1e]
	mov r2, ip
	adds r2, #0x20
	strb r1, [r2]
	lsrs r2, r1, #8
	mov r3, ip
	adds r3, #0x21
	strb r2, [r3]
	lsrs r0, r1, #0x10
	strh r0, [r5, #2]
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807F9F8: .4byte 0x0858225C
_0807F9FC: .4byte 0x03000B8D
_0807FA00: .4byte 0x03000014
_0807FA04: .4byte 0x03000B90
_0807FA08: .4byte gCurrentArea
_0807FA0C: .4byte gCurrentRoom
_0807FA10: .4byte gLastDoorUsed
_0807FA14: .4byte gAbilityCount
_0807FA18: .4byte gEventCounter
_0807FA1C: .4byte gPreviousNavigationConversation
_0807FA20: .4byte gPreviousCutscene
_0807FA24: .4byte 0x03000031
_0807FA28: .4byte 0x03000032
_0807FA2C: .4byte gSubEventCounter
_0807FA30: .4byte gPreviousSubEvent
_0807FA34: .4byte 0x0300004D
_0807FA38: .4byte gSecurityHatchLevelBackup
_0807FA3C: .4byte 0x03000124
_0807FA40: .4byte 0x03001224
_0807FA44: .4byte 0x03001226
_0807FA48: .4byte gBg1XPosition
_0807FA4C: .4byte gBg1YPosition
_0807FA50: .4byte 0x0300122C
_0807FA54: .4byte 0x0300122E
_0807FA58: .4byte 0x03001230
_0807FA5C: .4byte 0x03001232
_0807FA60: .4byte gMusicInfo
_0807FA64: .4byte 0x03000033
_0807FA68: .4byte 0x0300003B
_0807FA6C: .4byte gSamusData
_0807FA70: .4byte gSamusAnimationInfo
_0807FA74: .4byte 0x030012E4
_0807FA78: .4byte 0x030012F0
_0807FA7C: .4byte gEquipment
_0807FA80: .4byte gPreventMovementTimer
_0807FA84: .4byte gDisableDrawingSamusAndScrollingFlag
_0807FA88: .4byte gAtmosphericStabilizersOnline
_0807FA8C: .4byte gNormalXBarrierCoresDestroyed
_0807FA90: .4byte gSuperXBarrierCoresDestroyed
_0807FA94: .4byte gPowerBombXBarrierCoresDestroyed
_0807FA98: .4byte gGadorasDestroyed
_0807FA9C: .4byte gMissilesHatchDestroyed
_0807FAA0: .4byte gWaterLowered
_0807FAA4: .4byte gInGameTimer

	thumb_func_start Sram_StringCopy_MetroidEpisode4A
Sram_StringCopy_MetroidEpisode4A: @ 0x0807FAA8
	push {r4, lr}
	adds r4, r0, #0
	adds r3, r1, #0
	movs r2, #0
_0807FAB0:
	adds r0, r4, r2
	adds r1, r3, r2
	ldrb r1, [r1]
	strb r1, [r0]
	adds r2, #1
	cmp r2, #0xf
	ble _0807FAB0
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start Sram_StringCopy_SAVE_END
Sram_StringCopy_SAVE_END: @ 0x0807FAC4
	push {r4, lr}
	adds r4, r0, #0
	adds r3, r1, #0
	movs r2, #0
_0807FACC:
	adds r0, r4, r2
	adds r1, r3, r2
	ldrb r1, [r1]
	strb r1, [r0]
	adds r2, #1
	cmp r2, #7
	ble _0807FACC
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start SramTestFlash
SramTestFlash: @ 0x0807FAE0
	push {r4, r5, lr}
	sub sp, #0x10
	movs r5, #0
	ldr r0, _0807FB3C @ =0x03000B8E
	strb r5, [r0]
	ldr r0, _0807FB40 @ =0x085821E8
	ldr r4, _0807FB44 @ =0x0E007FE0
	adds r1, r4, #0
	movs r2, #0x10
	bl SramWriteChecked
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r5, r1, #0x1f
	adds r0, r4, #0
	mov r1, sp
	movs r2, #0x10
	bl SramWriteUnckecked
	movs r2, #0
_0807FB08:
	mov r0, sp
	adds r1, r0, r2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r2, #1
	cmp r2, #0xf
	ble _0807FB08
	ldr r1, _0807FB44 @ =0x0E007FE0
	mov r0, sp
	movs r2, #0x10
	bl SramWriteChecked
	cmp r0, #0
	beq _0807FB2A
	movs r0, #2
	orrs r5, r0
_0807FB2A:
	ldr r1, _0807FB3C @ =0x03000B8E
	rsbs r0, r5, #0
	orrs r0, r5
	lsrs r0, r0, #0x1f
	strb r0, [r1]
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807FB3C: .4byte 0x03000B8E
_0807FB40: .4byte 0x085821E8
_0807FB44: .4byte 0x0E007FE0

	thumb_func_start Sram_BackupCurrentFile_Unused
Sram_BackupCurrentFile_Unused: @ 0x0807FB48
	push {lr}
	sub sp, #4
	ldr r1, _0807FB78 @ =0x0858225C
	ldr r0, _0807FB7C @ =0x03000B8D
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r1, r0, r1
	ldr r1, [r1]
	ldr r2, _0807FB80 @ =0x08582268
	adds r0, r0, r2
	ldr r2, [r0]
	movs r3, #0x90
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	bl unk_d34
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_0807FB78: .4byte 0x0858225C
_0807FB7C: .4byte 0x03000B8D
_0807FB80: .4byte 0x08582268

	thumb_func_start unk_7fb84
unk_7fb84: @ 0x0807FB84
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	add r0, sp, #4
	movs r1, #0
	movs r2, #0x14
	bl memset
	ldr r2, _0807FC1C @ =0x03000B94
	movs r5, #2
_0807FB9E:
	adds r1, r2, #0
	add r0, sp, #4
	ldm r0!, {r3, r4, r6}
	stm r1!, {r3, r4, r6}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	adds r2, #0x14
	subs r5, #1
	cmp r5, #0
	bge _0807FB9E
	ldr r4, _0807FC20 @ =0x03000B8D
	movs r1, #0
	strb r1, [r4]
	ldr r0, _0807FC24 @ =gIsLoadingFile
	strb r1, [r0]
	ldr r0, _0807FC28 @ =0x03000B8E
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807FBC8
	bl ReadAllGamePakSRAM
_0807FBC8:
	movs r5, #0
	adds r7, r4, #0
	movs r6, #0x10
	ldr r0, _0807FC1C @ =0x03000B94
	str r0, [sp, #0x18]
	ldr r1, _0807FC2C @ =0x0858225C
	mov sl, r1
	ldr r3, _0807FC30 @ =0x0000FFFF
	mov sb, r3
	movs r4, #0x90
	lsls r4, r4, #5
	mov r8, r4
_0807FBE0:
	strb r5, [r7]
	bl unk_7fd10
	ldrb r0, [r7]
	lsls r2, r0, #2
	adds r0, r2, r0
	lsls r0, r0, #2
	ldr r1, _0807FC1C @ =0x03000B94
	adds r0, r0, r1
	ldrb r4, [r0, #1]
	cmp r4, #0
	bne _0807FC38
	mov r3, sl
	adds r0, r2, r3
	ldr r1, [r0]
	ldr r4, _0807FC34 @ =0x08582268
	adds r0, r2, r4
	ldr r2, [r0]
	str r6, [sp]
	movs r0, #3
	movs r3, #0x90
	lsls r3, r3, #5
	bl DmaTransfer
	bl unk_d34
	movs r0, #1
	ldr r1, [sp, #0x18]
	strb r0, [r1]
	b _0807FCE6
	.align 2, 0
_0807FC1C: .4byte 0x03000B94
_0807FC20: .4byte 0x03000B8D
_0807FC24: .4byte gIsLoadingFile
_0807FC28: .4byte 0x03000B8E
_0807FC2C: .4byte 0x0858225C
_0807FC30: .4byte 0x0000FFFF
_0807FC34: .4byte 0x08582268
_0807FC38:
	cmp r4, #1
	bne _0807FC60
	ldr r3, _0807FC5C @ =0x08582268
	adds r0, r2, r3
	ldr r1, [r0]
	mov r3, sl
	adds r0, r2, r3
	ldr r2, [r0]
	str r6, [sp]
	movs r0, #3
	movs r3, #0x90
	lsls r3, r3, #5
	bl DmaTransfer
	ldr r0, [sp, #0x18]
	strb r4, [r0]
	b _0807FCE6
	.align 2, 0
_0807FC5C: .4byte 0x08582268
_0807FC60:
	cmp r4, #2
	bne _0807FC94
	mov r1, sl
	adds r0, r2, r1
	ldr r2, [r0]
	str r6, [sp]
	movs r0, #3
	mov r1, sb
	mov r3, r8
	bl BitFill
	ldrb r0, [r7]
	lsls r0, r0, #2
	ldr r3, _0807FC90 @ =0x08582268
	adds r0, r0, r3
	ldr r2, [r0]
	str r6, [sp]
	movs r0, #3
	mov r1, sb
	mov r3, r8
	bl BitFill
	b _0807FCE6
	.align 2, 0
_0807FC90: .4byte 0x08582268
_0807FC94:
	cmp r4, #3
	bne _0807FCE4
	mov r4, sl
	adds r0, r2, r4
	ldr r2, [r0]
	str r6, [sp]
	movs r0, #3
	mov r1, sb
	mov r3, r8
	bl BitFill
	bl WriteMostRecentFileToGamePak
	ldrb r0, [r7]
	lsls r0, r0, #2
	ldr r1, _0807FCDC @ =0x08582268
	adds r0, r0, r1
	ldr r2, [r0]
	str r6, [sp]
	movs r0, #3
	mov r1, sb
	mov r3, r8
	bl BitFill
	bl unk_d34
	ldrb r1, [r7]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r3, _0807FCE0 @ =0x03000B94
	adds r0, r0, r3
	movs r1, #0
	strb r1, [r0, #1]
	b _0807FCE6
	.align 2, 0
_0807FCDC: .4byte 0x08582268
_0807FCE0: .4byte 0x03000B94
_0807FCE4:
	b _0807FCE4
_0807FCE6:
	ldr r4, [sp, #0x18]
	adds r4, #0x14
	str r4, [sp, #0x18]
	adds r5, #1
	cmp r5, #2
	bgt _0807FCF4
	b _0807FBE0
_0807FCF4:
	movs r1, #0
	ldr r0, _0807FD0C @ =0x03000B8D
	strb r1, [r0]
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807FD0C: .4byte 0x03000B8D

	thumb_func_start unk_7fd10
unk_7fd10: @ 0x0807FD10
	push {r4, r5, lr}
	movs r0, #0
	bl unk_7fdb0
	adds r4, r0, #0
	movs r0, #1
	bl unk_7fdb0
	adds r2, r0, #0
	cmp r4, #0
	bne _0807FD40
	ldr r2, _0807FD38 @ =0x03000B94
	ldr r0, _0807FD3C @ =0x03000B8D
	ldrb r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	strb r4, [r0, #1]
	b _0807FDAA
	.align 2, 0
_0807FD38: .4byte 0x03000B94
_0807FD3C: .4byte 0x03000B8D
_0807FD40:
	cmp r4, #1
	bne _0807FD6C
	ldr r5, _0807FD64 @ =0x03000B94
	ldr r3, _0807FD68 @ =0x03000B8D
	ldrb r1, [r3]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	strb r4, [r0, #1]
	cmp r2, #0
	beq _0807FDAA
	ldrb r0, [r3]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r5
	b _0807FDA6
	.align 2, 0
_0807FD64: .4byte 0x03000B94
_0807FD68: .4byte 0x03000B8D
_0807FD6C:
	ldr r4, _0807FD90 @ =0x03000B94
	ldr r3, _0807FD94 @ =0x03000B8D
	ldrb r0, [r3]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r4
	movs r0, #3
	strb r0, [r1, #1]
	cmp r2, #0
	bne _0807FD98
	ldrb r0, [r3]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r4
	movs r0, #1
	b _0807FDA8
	.align 2, 0
_0807FD90: .4byte 0x03000B94
_0807FD94: .4byte 0x03000B8D
_0807FD98:
	cmp r2, #1
	bne _0807FDAA
	ldrb r0, [r3]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r4
_0807FDA6:
	movs r0, #2
_0807FDA8:
	strb r0, [r1, #1]
_0807FDAA:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start unk_7fdb0
unk_7fdb0: @ 0x0807FDB0
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	lsls r0, r0, #0x18
	movs r5, #0
	movs r7, #0
	cmp r0, #0
	bne _0807FDC8
	ldr r1, _0807FDC4 @ =0x0858225C
	b _0807FDCA
	.align 2, 0
_0807FDC4: .4byte 0x0858225C
_0807FDC8:
	ldr r1, _0807FE50 @ =0x08582268
_0807FDCA:
	ldr r0, _0807FE54 @ =0x03000B8D
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r4, [r0]
	adds r3, r4, #0
	movs r1, #0
	ldr r6, [r4, #0x10]
	movs r2, #0x8f
_0807FDDC:
	ldm r3!, {r0}
	adds r1, r1, r0
	ldm r3!, {r0}
	adds r1, r1, r0
	ldm r3!, {r0}
	adds r1, r1, r0
	ldm r3!, {r0}
	adds r1, r1, r0
	ldm r3!, {r0}
	adds r1, r1, r0
	ldm r3!, {r0}
	adds r1, r1, r0
	ldm r3!, {r0}
	adds r1, r1, r0
	ldm r3!, {r0}
	adds r1, r1, r0
	subs r2, #1
	cmp r2, #0
	bge _0807FDDC
	cmp r6, r1
	bne _0807FE0E
	ldr r0, [r4, #0x14]
	mvns r0, r0
	cmp r6, r0
	beq _0807FE12
_0807FE0E:
	movs r0, #1
	orrs r5, r0
_0807FE12:
	movs r2, #0
	ldr r6, _0807FE58 @ =0x08582200
	movs r3, #1
_0807FE18:
	adds r0, r2, r6
	adds r1, r4, r2
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	beq _0807FE26
	orrs r7, r3
_0807FE26:
	adds r2, #1
	cmp r2, #0xf
	ble _0807FE18
	adds r0, r7, #0
	adds r5, r5, r0
	cmp r5, #1
	ble _0807FE46
	ldr r1, _0807FE5C @ =0x0000FFFF
	movs r3, #0x90
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	adds r2, r4, #0
	bl BitFill
_0807FE46:
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807FE50: .4byte 0x08582268
_0807FE54: .4byte 0x03000B8D
_0807FE58: .4byte 0x08582200
_0807FE5C: .4byte 0x0000FFFF

	thumb_func_start SramLoad_CurrentSave
SramLoad_CurrentSave: @ 0x0807FE60
	push {lr}
	ldr r0, _0807FE8C @ =gIsLoadingFile
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807FE88
	bl SramRead_FromEwram
	bl SramRead_WorldData
	ldr r0, _0807FE90 @ =gSamusData
	movs r2, #0
	movs r1, #0x3d
	strb r1, [r0, #1]
	adds r1, r0, #0
	adds r1, #0x21
	strb r2, [r1]
	adds r0, #0x22
	strb r2, [r0]
_0807FE88:
	pop {r0}
	bx r0
	.align 2, 0
_0807FE8C: .4byte gIsLoadingFile
_0807FE90: .4byte gSamusData

	thumb_func_start SramLoad_CurrentSave_Unused
SramLoad_CurrentSave_Unused: @ 0x0807FE94
	push {lr}
	bl SramRead_FromEwram
	bl SramRead_WorldData
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start SramWrite_WorldData
SramWrite_WorldData: @ 0x0807FEA4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	ldr r1, _0807FF5C @ =0x08582274
	ldr r0, _0807FF60 @ =0x03000B8D
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	mov r8, r0
	ldr r1, _0807FF64 @ =0x02037C00
	movs r4, #0xe0
	lsls r4, r4, #2
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	mov r2, r8
	adds r3, r4, #0
	bl DmaTransfer
	adds r7, r4, #0
	movs r5, #0
_0807FED2:
	ldr r0, _0807FF68 @ =0x03000033
	adds r0, r5, r0
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r4, r0, r1
	movs r0, #3
	ands r0, r4
	cmp r0, #0
	beq _0807FEEA
	ldr r0, _0807FF6C @ =0x0000FFFC
	ands r4, r0
	adds r4, #4
_0807FEEA:
	cmp r4, #0
	beq _0807FF0E
	adds r1, r5, #0
	cmp r5, #0
	beq _0807FEF6
	adds r1, r5, #1
_0807FEF6:
	lsls r1, r1, #9
	ldr r0, _0807FF70 @ =0x02036000
	adds r1, r1, r0
	mov r0, r8
	adds r2, r0, r7
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	adds r3, r4, #0
	bl DmaTransfer
	adds r7, r7, r4
_0807FF0E:
	adds r5, #1
	cmp r5, #7
	ble _0807FED2
	movs r7, #0xc8
	lsls r7, r7, #4
	movs r5, #0
_0807FF1A:
	ldr r0, _0807FF74 @ =0x0300003B
	adds r0, r5, r0
	ldrb r0, [r0]
	lsls r4, r0, #2
	adds r6, r5, #1
	cmp r4, #0
	beq _0807FF48
	adds r1, r5, #0
	cmp r1, #0
	beq _0807FF30
	adds r1, r6, #0
_0807FF30:
	lsls r1, r1, #8
	ldr r0, _0807FF78 @ =0x02037200
	adds r1, r1, r0
	mov r0, r8
	adds r2, r0, r7
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	adds r3, r4, #0
	bl DmaTransfer
	adds r7, r7, r4
_0807FF48:
	adds r5, r6, #0
	cmp r5, #7
	ble _0807FF1A
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807FF5C: .4byte 0x08582274
_0807FF60: .4byte 0x03000B8D
_0807FF64: .4byte 0x02037C00
_0807FF68: .4byte 0x03000033
_0807FF6C: .4byte 0x0000FFFC
_0807FF70: .4byte 0x02036000
_0807FF74: .4byte 0x0300003B
_0807FF78: .4byte 0x02037200

	thumb_func_start SramRead_WorldData
SramRead_WorldData: @ 0x0807FF7C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	ldr r1, _08080044 @ =0x08582274
	ldr r0, _08080048 @ =0x03000B8D
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	mov r8, r0
	ldr r2, _0808004C @ =0x02037C00
	movs r5, #0xe0
	lsls r5, r5, #2
	movs r4, #0x10
	str r4, [sp]
	movs r0, #3
	mov r1, r8
	adds r3, r5, #0
	bl DmaTransfer
	ldr r1, _08080050 @ =0x0000FFFF
	ldr r2, _08080054 @ =0x02036000
	movs r3, #0xd8
	lsls r3, r3, #5
	str r4, [sp]
	movs r0, #3
	bl BitFill
	adds r7, r5, #0
	movs r5, #0
_0807FFBA:
	ldr r0, _08080058 @ =0x03000033
	adds r0, r5, r0
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r4, r0, r1
	movs r0, #3
	ands r0, r4
	cmp r0, #0
	beq _0807FFD2
	ldr r0, _0808005C @ =0x0000FFFC
	ands r4, r0
	adds r4, #4
_0807FFD2:
	cmp r4, #0
	beq _0807FFF6
	adds r2, r5, #0
	cmp r5, #0
	beq _0807FFDE
	adds r2, r5, #1
_0807FFDE:
	mov r0, r8
	adds r1, r0, r7
	lsls r2, r2, #9
	ldr r0, _08080054 @ =0x02036000
	adds r2, r2, r0
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	adds r3, r4, #0
	bl DmaTransfer
	adds r7, r7, r4
_0807FFF6:
	adds r5, #1
	cmp r5, #7
	ble _0807FFBA
	movs r7, #0xc8
	lsls r7, r7, #4
	movs r5, #0
_08080002:
	ldr r0, _08080060 @ =0x0300003B
	adds r0, r5, r0
	ldrb r0, [r0]
	lsls r4, r0, #2
	adds r6, r5, #1
	cmp r4, #0
	beq _08080030
	adds r2, r5, #0
	cmp r2, #0
	beq _08080018
	adds r2, r6, #0
_08080018:
	mov r0, r8
	adds r1, r0, r7
	lsls r2, r2, #8
	ldr r0, _08080064 @ =0x02037200
	adds r2, r2, r0
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	adds r3, r4, #0
	bl DmaTransfer
	adds r7, r7, r4
_08080030:
	adds r5, r6, #0
	cmp r5, #7
	ble _08080002
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08080044: .4byte 0x08582274
_08080048: .4byte 0x03000B8D
_0808004C: .4byte 0x02037C00
_08080050: .4byte 0x0000FFFF
_08080054: .4byte 0x02036000
_08080058: .4byte 0x03000033
_0808005C: .4byte 0x0000FFFC
_08080060: .4byte 0x0300003B
_08080064: .4byte 0x02037200

	thumb_func_start SramWrite_MostRecentSaveFile
SramWrite_MostRecentSaveFile: @ 0x08080068
	push {r4, r5, lr}
	ldr r5, _080800E4 @ =0x0203F000
	adds r3, r5, #0
	movs r1, #0
	movs r0, #0x1e
	strb r0, [r5]
	ldrb r0, [r5, #1]
	adds r0, #1
	strb r0, [r5, #1]
	strh r1, [r5, #2]
	ldr r0, _080800E8 @ =0x0000FFFF
	strh r0, [r5, #4]
	ldr r0, _080800EC @ =0x03000B8D
	ldrb r0, [r0]
	strb r0, [r5, #0x16]
	ldr r2, _080800F0 @ =0x08582288
	adds r1, r5, #6
	movs r4, #0xf
_0808008C:
	ldrb r0, [r2]
	strb r0, [r1]
	ldrb r0, [r2, #0x10]
	strb r0, [r1, #0x11]
	adds r2, #1
	adds r1, #1
	subs r4, #1
	cmp r4, #0
	bge _0808008C
	movs r1, #0
	movs r4, #7
_080800A2:
	ldrh r0, [r3]
	adds r0, r1, r0
	lsls r0, r0, #0x10
	adds r3, #2
	lsrs r0, r0, #0x10
	ldrh r1, [r3]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	adds r3, #2
	lsrs r0, r0, #0x10
	ldrh r2, [r3]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	adds r3, #2
	lsrs r0, r0, #0x10
	ldrh r1, [r3]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r3, #2
	subs r4, #1
	cmp r4, #0
	bge _080800A2
	strh r1, [r5, #2]
	ldr r2, _080800E8 @ =0x0000FFFF
	adds r0, r2, #0
	subs r0, r0, r1
	strh r0, [r5, #4]
	bl unk_dd4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080800E4: .4byte 0x0203F000
_080800E8: .4byte 0x0000FFFF
_080800EC: .4byte 0x03000B8D
_080800F0: .4byte 0x08582288

	thumb_func_start SramRead_MostRecentSaveFile
SramRead_MostRecentSaveFile: @ 0x080800F4
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _08080194 @ =0x0203F000
	mov ip, r0
	ldrb r0, [r0]
	movs r1, #0x1e
	eors r0, r1
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r4, r1, #0x1f
	ldr r6, _08080198 @ =0x03000B8D
	cmp r4, #0
	bne _080801A0
	mov r1, ip
	movs r3, #0
	ldrh r5, [r1, #2]
	movs r2, #7
_08080116:
	ldrh r0, [r1]
	adds r0, r3, r0
	lsls r0, r0, #0x10
	adds r1, #2
	lsrs r0, r0, #0x10
	ldrh r3, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x10
	adds r1, #2
	lsrs r0, r0, #0x10
	ldrh r3, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x10
	adds r1, #2
	lsrs r0, r0, #0x10
	ldrh r3, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	adds r1, #2
	subs r2, #1
	cmp r2, #0
	bge _08080116
	cmp r5, r3
	beq _0808014A
	movs r4, #2
_0808014A:
	cmp r4, #0
	bne _080801A0
	movs r2, #0
	ldr r0, _0808019C @ =0x08582288
	mov r3, ip
	ldrb r1, [r3, #6]
	adds r3, r0, #0
	ldrb r0, [r3]
	cmp r1, r0
	bne _080801A0
_0808015E:
	mov r0, ip
	adds r0, #0x17
	adds r0, r0, r2
	adds r1, r3, #0
	adds r1, #0x10
	adds r1, r2, r1
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080801A0
	adds r2, #1
	cmp r2, #0xf
	bgt _0808018A
	mov r0, ip
	adds r0, #6
	adds r0, r0, r2
	adds r1, r2, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	beq _0808015E
	movs r4, #3
_0808018A:
	cmp r4, #0
	bne _080801A0
	mov r1, ip
	ldrb r0, [r1, #0x16]
	b _080801BA
	.align 2, 0
_08080194: .4byte 0x0203F000
_08080198: .4byte 0x03000B8D
_0808019C: .4byte 0x08582288
_080801A0:
	mov r1, sp
	ldr r2, _080801C4 @ =0x0000FFFF
	adds r0, r2, #0
	strh r0, [r1]
	ldr r1, _080801C8 @ =0x040000D4
	mov r3, sp
	str r3, [r1]
	ldr r0, _080801CC @ =0x0203F000
	str r0, [r1, #4]
	ldr r0, _080801D0 @ =0x81000020
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r0, #0
_080801BA:
	strb r0, [r6]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080801C4: .4byte 0x0000FFFF
_080801C8: .4byte 0x040000D4
_080801CC: .4byte 0x0203F000
_080801D0: .4byte 0x81000020

	thumb_func_start SramWrite_Language
SramWrite_Language: @ 0x080801D4
	push {r4, r5, lr}
	ldr r5, _08080254 @ =0x0203F040
	adds r3, r5, #0
	movs r1, #0
	movs r0, #0x1f
	strb r0, [r5]
	ldrb r0, [r5, #1]
	adds r0, #1
	strb r0, [r5, #1]
	strh r1, [r5, #2]
	ldr r0, _08080258 @ =0x0000FFFF
	strh r0, [r5, #4]
	ldr r0, _0808025C @ =0x03000011
	ldrb r0, [r0]
	strb r0, [r5, #0x16]
	ldr r2, _08080260 @ =0x085822A8
	adds r1, r5, #6
	movs r4, #0xf
_080801F8:
	ldrb r0, [r2]
	strb r0, [r1]
	ldrb r0, [r2, #0x10]
	strb r0, [r1, #0x11]
	adds r2, #1
	adds r1, #1
	subs r4, #1
	cmp r4, #0
	bge _080801F8
	movs r1, #0
	movs r4, #7
_0808020E:
	ldrh r0, [r3]
	adds r0, r1, r0
	lsls r0, r0, #0x10
	adds r3, #2
	lsrs r0, r0, #0x10
	ldrh r1, [r3]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	adds r3, #2
	lsrs r0, r0, #0x10
	ldrh r2, [r3]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	adds r3, #2
	lsrs r0, r0, #0x10
	ldrh r1, [r3]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r3, #2
	subs r4, #1
	cmp r4, #0
	bge _0808020E
	strh r1, [r5, #2]
	ldr r2, _08080258 @ =0x0000FFFF
	adds r0, r2, #0
	subs r0, r0, r1
	strh r0, [r5, #4]
	movs r0, #0
	bl unk_dec
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08080254: .4byte 0x0203F040
_08080258: .4byte 0x0000FFFF
_0808025C: .4byte 0x03000011
_08080260: .4byte 0x085822A8

	thumb_func_start SramRead_Language
SramRead_Language: @ 0x08080264
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	movs r0, #0
	mov r8, r0
	ldr r1, _080802E8 @ =0x08582280
	mov sb, r1
	ldr r6, _080802EC @ =0x040000D4
	ldr r2, _080802F0 @ =0x81000020
	mov sl, r2
_0808027E:
	mov r1, r8
	lsls r0, r1, #2
	add r0, sb
	ldr r5, [r0]
	adds r2, r5, #0
	ldrb r1, [r5]
	movs r0, #0x1f
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r4, r0, #0x1f
	cmp r4, #0
	bne _08080326
	movs r1, #0
	ldrh r7, [r5, #2]
	movs r3, #7
_0808029E:
	ldrh r0, [r2]
	adds r0, r1, r0
	lsls r0, r0, #0x10
	adds r2, #2
	lsrs r0, r0, #0x10
	ldrh r1, [r2]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	adds r2, #2
	lsrs r0, r0, #0x10
	ldrh r1, [r2]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	adds r2, #2
	lsrs r0, r0, #0x10
	ldrh r1, [r2]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r2, #2
	subs r3, #1
	cmp r3, #0
	bge _0808029E
	cmp r7, r1
	beq _080802D2
	movs r4, #2
_080802D2:
	cmp r4, #0
	bne _08080326
	movs r3, #0
	ldr r0, _080802F4 @ =0x085822A8
	ldrb r1, [r5, #6]
	adds r2, r0, #0
	ldrb r0, [r2]
	cmp r1, r0
	beq _080802FC
	b _08080324
	.align 2, 0
_080802E8: .4byte 0x08582280
_080802EC: .4byte 0x040000D4
_080802F0: .4byte 0x81000020
_080802F4: .4byte 0x085822A8
_080802F8:
	movs r4, #4
	b _08080326
_080802FC:
	adds r0, r5, #0
	adds r0, #0x17
	adds r0, r0, r3
	adds r1, r2, #0
	adds r1, #0x10
	adds r1, r3, r1
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080802F8
	adds r3, #1
	cmp r3, #0xf
	bgt _08080326
	adds r0, r5, #6
	adds r0, r0, r3
	adds r1, r3, r2
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	beq _080802FC
_08080324:
	movs r4, #3
_08080326:
	mov r1, r8
	cmp r1, #0
	bne _0808034C
	cmp r4, #0
	bne _08080384
	mov r2, sb
	ldr r0, [r2]
	str r0, [r6]
	ldr r0, [r2, #4]
	str r0, [r6, #4]
	ldr r0, _08080348 @ =0x80000020
	str r0, [r6, #8]
	ldr r0, [r6, #8]
	movs r0, #1
	bl unk_dec
	b _08080390
	.align 2, 0
_08080348: .4byte 0x80000020
_0808034C:
	cmp r4, #0
	beq _080803A0
	mov r0, sp
	movs r1, #0
	strh r1, [r0]
	str r0, [r6]
	mov r2, sb
	ldr r0, [r2]
	str r0, [r6, #4]
	mov r0, sl
	str r0, [r6, #8]
	ldr r0, [r6, #8]
	movs r0, #0
	bl unk_dec
	mov r0, sp
	movs r1, #0
	strh r1, [r0]
	str r0, [r6]
	mov r2, sb
	ldr r0, [r2, #4]
	str r0, [r6, #4]
	mov r0, sl
	str r0, [r6, #8]
	ldr r0, [r6, #8]
	movs r0, #1
	bl unk_dec
_08080384:
	movs r1, #1
	add r8, r1
	mov r2, r8
	cmp r2, #1
	bgt _08080390
	b _0808027E
_08080390:
	cmp r4, #0
	bne _080803C8
	ldr r1, _0808039C @ =0x03000011
	ldrb r0, [r5, #0x16]
	b _080803CC
	.align 2, 0
_0808039C: .4byte 0x03000011
_080803A0:
	ldr r1, _080803BC @ =0x040000D4
	ldr r2, _080803C0 @ =0x08582280
	ldr r0, [r2, #4]
	str r0, [r1]
	ldr r0, [r2]
	str r0, [r1, #4]
	ldr r0, _080803C4 @ =0x80000020
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r0, #0
	bl unk_dec
	b _08080390
	.align 2, 0
_080803BC: .4byte 0x040000D4
_080803C0: .4byte 0x08582280
_080803C4: .4byte 0x80000020
_080803C8:
	ldr r1, _080803E0 @ =0x03000011
	movs r0, #0
_080803CC:
	strb r0, [r1]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080803E0: .4byte 0x03000011

	thumb_func_start Sram_InitSaveFile
Sram_InitSaveFile: @ 0x080803E4
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r2, _080804C8 @ =0x02037C00
	movs r3, #0xe0
	lsls r3, r3, #2
	movs r4, #0x10
	str r4, [sp]
	movs r0, #3
	movs r1, #0
	bl BitFill
	ldr r5, _080804CC @ =0x0000FFFF
	ldr r2, _080804D0 @ =0x02036000
	movs r3, #0x90
	lsls r3, r3, #5
	str r4, [sp]
	movs r0, #3
	adds r1, r5, #0
	bl BitFill
	ldr r2, _080804D4 @ =0x02037200
	movs r3, #0x90
	lsls r3, r3, #4
	str r4, [sp]
	movs r0, #3
	adds r1, r5, #0
	bl BitFill
	movs r1, #0
	ldr r4, _080804D8 @ =0x03000033
	movs r2, #0
	ldr r3, _080804DC @ =0x0300003B
_08080424:
	adds r0, r1, r4
	strb r2, [r0]
	adds r0, r1, r3
	strb r2, [r0]
	adds r1, #1
	cmp r1, #7
	ble _08080424
	ldr r1, _080804E0 @ =gInGameTimer
	ldr r0, _080804E4 @ =0x085822D4
	ldr r0, [r0]
	str r0, [r1]
	ldr r1, _080804E8 @ =gDisableDrawingSamusAndScrollingFlag
	movs r0, #1
	strb r0, [r1]
	movs r0, #0
	bl EventSet
	ldr r0, _080804EC @ =gPreviousNavigationConversation
	movs r3, #0xff
	strb r3, [r0]
	ldr r0, _080804F0 @ =gPreviousSubEvent
	movs r1, #0xff
	strh r1, [r0]
	ldr r2, _080804F4 @ =gEquipment
	ldrb r0, [r2, #0xd]
	orrs r0, r3
	strb r0, [r2, #0xd]
	ldr r0, _080804F8 @ =gSecurityHatchLevel
	strb r1, [r0]
	ldr r0, _080804FC @ =gSecurityHatchLevelBackup
	strb r1, [r0]
	movs r1, #0
	strb r1, [r2, #0xe]
	ldr r0, _08080500 @ =gAbilityCount
	strb r1, [r0]
	ldr r0, _08080504 @ =gCurrentArea
	strb r1, [r0]
	ldr r0, _08080508 @ =gPreviousArea
	strb r1, [r0]
	ldr r0, _0808050C @ =gCurrentRoom
	strb r1, [r0]
	ldr r0, _08080510 @ =gLastDoorUsed
	strb r1, [r0]
	ldr r0, _08080514 @ =0x0300004C
	strb r1, [r0]
	ldr r0, _08080518 @ =0x0300004D
	strb r1, [r0]
	ldr r0, _0808051C @ =0x0879B894
	ldr r2, [r0]
	ldrb r0, [r2, #2]
	movs r6, #7
	ldrsb r6, [r2, r6]
	ldr r3, _08080520 @ =gPreviousXPosition
	ldr r4, _08080524 @ =gSamusData
	lsls r1, r0, #6
	adds r0, r6, #0
	adds r0, #8
	lsls r0, r0, #2
	adds r1, r1, r0
	movs r5, #0
	strh r1, [r4, #0x16]
	strh r1, [r3]
	ldrb r0, [r2, #5]
	adds r0, #1
	movs r6, #8
	ldrsb r6, [r2, r6]
	ldr r2, _08080528 @ =gPreviousYPosition
	lsls r0, r0, #6
	lsls r1, r6, #2
	adds r0, r0, r1
	subs r0, #1
	strh r0, [r4, #0x18]
	strh r0, [r2]
	bl LoadInitialMinimap
	ldr r0, _0808052C @ =gIsLoadingFile
	strb r5, [r0]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080804C8: .4byte 0x02037C00
_080804CC: .4byte 0x0000FFFF
_080804D0: .4byte 0x02036000
_080804D4: .4byte 0x02037200
_080804D8: .4byte 0x03000033
_080804DC: .4byte 0x0300003B
_080804E0: .4byte gInGameTimer
_080804E4: .4byte 0x085822D4
_080804E8: .4byte gDisableDrawingSamusAndScrollingFlag
_080804EC: .4byte gPreviousNavigationConversation
_080804F0: .4byte gPreviousSubEvent
_080804F4: .4byte gEquipment
_080804F8: .4byte gSecurityHatchLevel
_080804FC: .4byte gSecurityHatchLevelBackup
_08080500: .4byte gAbilityCount
_08080504: .4byte gCurrentArea
_08080508: .4byte gPreviousArea
_0808050C: .4byte gCurrentRoom
_08080510: .4byte gLastDoorUsed
_08080514: .4byte 0x0300004C
_08080518: .4byte 0x0300004D
_0808051C: .4byte 0x0879B894
_08080520: .4byte gPreviousXPosition
_08080524: .4byte gSamusData
_08080528: .4byte gPreviousYPosition
_0808052C: .4byte gIsLoadingFile

	thumb_func_start Sram_ResetForDemo
Sram_ResetForDemo: @ 0x08080530
	push {r4, r5, lr}
	sub sp, #4
	ldr r1, _080805F0 @ =gDebugMenuOptions
	ldr r0, _080805F4 @ =0x085822E4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r2, _080805F8 @ =gButtonAssignments
	ldr r0, _080805FC @ =0x085822C8
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [r2]
	str r1, [r2, #4]
	ldr r5, _08080600 @ =0x0000FFFF
	ldr r2, _08080604 @ =0x02037C00
	movs r3, #0xe0
	lsls r3, r3, #2
	movs r4, #0x10
	str r4, [sp]
	movs r0, #3
	adds r1, r5, #0
	bl BitFill
	ldr r2, _08080608 @ =0x02036000
	movs r3, #0x90
	lsls r3, r3, #5
	str r4, [sp]
	movs r0, #3
	adds r1, r5, #0
	bl BitFill
	ldr r2, _0808060C @ =0x02037200
	movs r3, #0x90
	lsls r3, r3, #4
	str r4, [sp]
	movs r0, #3
	adds r1, r5, #0
	bl BitFill
	movs r1, #0
	ldr r4, _08080610 @ =0x03000033
	movs r2, #0
	ldr r3, _08080614 @ =0x0300003B
_08080584:
	adds r0, r1, r4
	strb r2, [r0]
	adds r0, r1, r3
	strb r2, [r0]
	adds r1, #1
	cmp r1, #7
	ble _08080584
	ldr r1, _08080618 @ =gInGameTimer
	ldr r0, _0808061C @ =0x085822D4
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, _08080620 @ =gDisableDrawingSamusAndScrollingFlag
	movs r1, #0
	strb r1, [r0]
	ldr r2, _08080624 @ =gPreviousNavigationConversation
	movs r0, #0xff
	strb r0, [r2]
	ldr r2, _08080628 @ =gPreviousSubEvent
	movs r0, #0xff
	strh r0, [r2]
	ldr r0, _0808062C @ =0x0300004C
	strb r1, [r0]
	ldr r0, _08080630 @ =0x0300004D
	strb r1, [r0]
	ldr r0, _08080634 @ =gIsLoadingFile
	strb r1, [r0]
	ldr r0, _08080638 @ =gUnk_03000be3
	strb r1, [r0]
	ldr r0, _0808063C @ =0x03000018
	strb r1, [r0]
	ldr r0, _08080640 @ =gDisableSoftReset
	strb r1, [r0]
	ldr r2, _08080644 @ =gMaxInGameTimeFlag
	movs r0, #1
	strb r0, [r2]
	ldr r0, _08080648 @ =0x03000022
	strb r1, [r0]
	ldr r0, _0808064C @ =gSkipDoorTransition
	strb r1, [r0]
	ldr r0, _08080650 @ =gPauseScreenFlag
	strb r1, [r0]
	ldr r0, _08080654 @ =0x03000B85
	strb r1, [r0]
	ldr r0, _08080658 @ =0x0300002B
	strb r1, [r0]
	ldr r0, _0808065C @ =gSamusDoorPositionOffset
	movs r1, #0
	strh r1, [r0]
	ldr r0, _08080660 @ =gDebugFlag
	strb r1, [r0]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080805F0: .4byte gDebugMenuOptions
_080805F4: .4byte 0x085822E4
_080805F8: .4byte gButtonAssignments
_080805FC: .4byte 0x085822C8
_08080600: .4byte 0x0000FFFF
_08080604: .4byte 0x02037C00
_08080608: .4byte 0x02036000
_0808060C: .4byte 0x02037200
_08080610: .4byte 0x03000033
_08080614: .4byte 0x0300003B
_08080618: .4byte gInGameTimer
_0808061C: .4byte 0x085822D4
_08080620: .4byte gDisableDrawingSamusAndScrollingFlag
_08080624: .4byte gPreviousNavigationConversation
_08080628: .4byte gPreviousSubEvent
_0808062C: .4byte 0x0300004C
_08080630: .4byte 0x0300004D
_08080634: .4byte gIsLoadingFile
_08080638: .4byte gUnk_03000be3
_0808063C: .4byte 0x03000018
_08080640: .4byte gDisableSoftReset
_08080644: .4byte gMaxInGameTimeFlag
_08080648: .4byte 0x03000022
_0808064C: .4byte gSkipDoorTransition
_08080650: .4byte gPauseScreenFlag
_08080654: .4byte 0x03000B85
_08080658: .4byte 0x0300002B
_0808065C: .4byte gSamusDoorPositionOffset
_08080660: .4byte gDebugFlag

	thumb_func_start Sram_CheckLoadSaveFile
Sram_CheckLoadSaveFile: @ 0x08080664
	push {r4, r5, r6, lr}
	ldr r2, _080806BC @ =gButtonAssignments
	ldr r0, _080806C0 @ =0x085822C8
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [r2]
	str r1, [r2, #4]
	ldr r1, _080806C4 @ =gDebugMenuOptions
	ldr r0, _080806C8 @ =0x085822E4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r2, _080806CC @ =gIsLoadingFile
	ldr r6, _080806D0 @ =0x03000B94
	ldr r4, _080806D4 @ =0x03000B8D
	ldrb r1, [r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0]
	strb r0, [r2]
	lsls r0, r0, #0x18
	asrs r5, r0, #0x18
	cmp r5, #0
	bne _080806DC
	bl Sram_InitSaveFile
	ldr r2, _080806D8 @ =0x03000014
	ldrb r1, [r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #0x10]
	strb r0, [r2]
	ldrb r1, [r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #0x11]
	strb r0, [r2, #1]
	strb r5, [r2, #2]
	b _080806E0
	.align 2, 0
_080806BC: .4byte gButtonAssignments
_080806C0: .4byte 0x085822C8
_080806C4: .4byte gDebugMenuOptions
_080806C8: .4byte 0x085822E4
_080806CC: .4byte gIsLoadingFile
_080806D0: .4byte 0x03000B94
_080806D4: .4byte 0x03000B8D
_080806D8: .4byte 0x03000014
_080806DC:
	bl SramLoad_CurrentSave
_080806E0:
	ldr r0, _08080718 @ =gUnk_03000be3
	movs r1, #0
	strb r1, [r0]
	ldr r0, _0808071C @ =0x03000018
	strb r1, [r0]
	ldr r0, _08080720 @ =gDisableSoftReset
	strb r1, [r0]
	ldr r0, _08080724 @ =gMaxInGameTimeFlag
	strb r1, [r0]
	ldr r0, _08080728 @ =0x03000022
	strb r1, [r0]
	ldr r0, _0808072C @ =gSkipDoorTransition
	strb r1, [r0]
	ldr r0, _08080730 @ =gPauseScreenFlag
	strb r1, [r0]
	ldr r0, _08080734 @ =0x03000B85
	strb r1, [r0]
	ldr r0, _08080738 @ =0x0300002B
	strb r1, [r0]
	ldr r0, _0808073C @ =gSamusDoorPositionOffset
	movs r1, #0
	strh r1, [r0]
	ldr r0, _08080740 @ =gDebugFlag
	strb r1, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08080718: .4byte gUnk_03000be3
_0808071C: .4byte 0x03000018
_08080720: .4byte gDisableSoftReset
_08080724: .4byte gMaxInGameTimeFlag
_08080728: .4byte 0x03000022
_0808072C: .4byte gSkipDoorTransition
_08080730: .4byte gPauseScreenFlag
_08080734: .4byte 0x03000B85
_08080738: .4byte 0x0300002B
_0808073C: .4byte gSamusDoorPositionOffset
_08080740: .4byte gDebugFlag

	thumb_func_start Sram_EraseFile
Sram_EraseFile: @ 0x08080744
	push {r4, r5, lr}
	sub sp, #0x18
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r5, r4, #0
	add r0, sp, #4
	movs r1, #0
	movs r2, #0x14
	bl memset
	cmp r4, #0
	bne _08080798
	ldr r1, _08080784 @ =gDisableSoftReset
	movs r0, #1
	strb r0, [r1]
	ldr r2, _08080788 @ =0x03000B94
	ldr r3, _0808078C @ =0x03000B8D
	ldrb r0, [r3]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	add r0, sp, #4
	ldm r0!, {r2, r4, r5}
	stm r1!, {r2, r4, r5}
	ldm r0!, {r2, r4}
	stm r1!, {r2, r4}
	ldr r1, _08080790 @ =0x0000FFFF
	ldr r2, _08080794 @ =0x0858225C
	ldrb r0, [r3]
	b _080807AE
	.align 2, 0
_08080784: .4byte gDisableSoftReset
_08080788: .4byte 0x03000B94
_0808078C: .4byte 0x03000B8D
_08080790: .4byte 0x0000FFFF
_08080794: .4byte 0x0858225C
_08080798:
	cmp r4, #1
	bne _080807A2
	bl WriteMostRecentFileToGamePak
	b _080807DE
_080807A2:
	cmp r4, #2
	bne _080807D0
	ldr r1, _080807C4 @ =0x0000FFFF
	ldr r2, _080807C8 @ =0x08582268
	ldr r0, _080807CC @ =0x03000B8D
	ldrb r0, [r0]
_080807AE:
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r2, [r0]
	movs r3, #0x90
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl BitFill
	b _080807DE
	.align 2, 0
_080807C4: .4byte 0x0000FFFF
_080807C8: .4byte 0x08582268
_080807CC: .4byte 0x03000B8D
_080807D0:
	cmp r5, #3
	bne _080807D8
	bl unk_d34
_080807D8:
	ldr r1, _080807E8 @ =gDisableSoftReset
	movs r0, #0
	strb r0, [r1]
_080807DE:
	add sp, #0x18
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080807E8: .4byte gDisableSoftReset

	thumb_func_start Sram_CopyFile
Sram_CopyFile: @ 0x080807EC
	push {r4, r5, r6, lr}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r2, r6, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r1, #0
	cmp r1, #0
	bne _08080844
	ldr r1, _08080834 @ =gDisableSoftReset
	movs r0, #1
	strb r0, [r1]
	ldr r4, _08080838 @ =0x03000B94
	lsls r3, r6, #2
	adds r1, r3, r6
	lsls r1, r1, #2
	ldr r5, _0808083C @ =0x03000B8D
	ldrb r2, [r5]
	lsls r0, r2, #2
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r1, r1, r4
	adds r0, r0, r4
	ldm r0!, {r2, r4, r6}
	stm r1!, {r2, r4, r6}
	ldm r0!, {r2, r4}
	stm r1!, {r2, r4}
	ldr r2, _08080840 @ =0x0858225C
	ldrb r0, [r5]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r1, [r0]
	adds r3, r3, r2
	ldr r2, [r3]
	b _08080872
	.align 2, 0
_08080834: .4byte gDisableSoftReset
_08080838: .4byte 0x03000B94
_0808083C: .4byte 0x03000B8D
_08080840: .4byte 0x0858225C
_08080844:
	cmp r1, #1
	bne _0808085C
	ldr r4, _08080858 @ =0x03000B8D
	ldrb r5, [r4]
	strb r6, [r4]
	bl WriteMostRecentFileToGamePak
	strb r5, [r4]
	b _080808A2
	.align 2, 0
_08080858: .4byte 0x03000B8D
_0808085C:
	cmp r1, #2
	bne _0808088C
	ldr r2, _08080884 @ =0x08582268
	ldr r0, _08080888 @ =0x03000B8D
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r1, [r0]
	lsls r0, r6, #2
	adds r0, r0, r2
	ldr r2, [r0]
_08080872:
	movs r3, #0x90
	lsls r3, r3, #5
	movs r0, #0x10
	str r0, [sp]
	movs r0, #3
	bl DmaTransfer
	b _080808A2
	.align 2, 0
_08080884: .4byte 0x08582268
_08080888: .4byte 0x03000B8D
_0808088C:
	cmp r0, #3
	bne _0808089C
	ldr r4, _080808AC @ =0x03000B8D
	ldrb r5, [r4]
	strb r2, [r4]
	bl unk_d34
	strb r5, [r4]
_0808089C:
	ldr r1, _080808B0 @ =gDisableSoftReset
	movs r0, #0
	strb r0, [r1]
_080808A2:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080808AC: .4byte 0x03000B8D
_080808B0: .4byte gDisableSoftReset

	thumb_func_start Sram_WriteFileInfo
Sram_WriteFileInfo: @ 0x080808B4
	push {r4, lr}
	movs r4, #0
	movs r3, #0
	ldr r2, _08080948 @ =0x03000B94
_080808BC:
	lsls r1, r4, #2
	ldrb r0, [r2]
	cmp r0, #1
	bne _0808091A
	ldr r0, _0808094C @ =0x0858225C
	adds r0, r1, r0
	ldr r1, [r0]
	ldrb r0, [r1, #0x1d]
	strb r0, [r2, #2]
	adds r0, r1, #0
	adds r0, #0x21
	ldrb r0, [r0]
	strb r0, [r2, #3]
	adds r0, r1, #0
	adds r0, #0xc4
	ldrh r0, [r0]
	strh r0, [r2, #4]
	adds r0, r1, #0
	adds r0, #0xc6
	ldrh r0, [r0]
	strh r0, [r2, #6]
	adds r0, r1, #0
	adds r0, #0xc8
	ldrh r0, [r0]
	strh r0, [r2, #8]
	adds r0, r1, #0
	adds r0, #0xca
	ldrh r0, [r0]
	strh r0, [r2, #0xa]
	adds r0, r1, #0
	adds r0, #0xcf
	ldrb r0, [r0]
	strb r0, [r2, #0xc]
	adds r0, r1, #0
	adds r0, #0xe4
	ldrb r0, [r0]
	strb r0, [r2, #0xd]
	adds r0, r1, #0
	adds r0, #0xe5
	ldrb r0, [r0]
	strb r0, [r2, #0xe]
	ldrb r0, [r1, #0x1c]
	strb r0, [r2, #0xf]
	ldrb r0, [r1, #0x18]
	strb r0, [r2, #0x10]
	ldrb r0, [r1, #0x19]
	strb r0, [r2, #0x11]
_0808091A:
	ldrb r0, [r2]
	cmp r0, #0
	beq _08080926
	ldrb r0, [r2, #0xf]
	cmp r0, #0
	bne _0808093A
_08080926:
	strb r3, [r2]
	strb r3, [r2, #2]
	strb r3, [r2, #3]
	strh r3, [r2, #4]
	strh r3, [r2, #6]
	strh r3, [r2, #8]
	strh r3, [r2, #0xa]
	strb r3, [r2, #0xc]
	strb r3, [r2, #0xd]
	strb r3, [r2, #0xe]
_0808093A:
	adds r2, #0x14
	adds r4, #1
	cmp r4, #2
	ble _080808BC
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08080948: .4byte 0x03000B94
_0808094C: .4byte 0x0858225C

	thumb_func_start Sram_LoadingfileVblank
Sram_LoadingfileVblank: @ 0x08080950
	sub sp, #4
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	add sp, #4
	bx lr

	thumb_func_start Sram_AfterLoadingFileVblank
Sram_AfterLoadingFileVblank: @ 0x0808095C
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start Sram_ChecLoadSaveFileWithBlank
Sram_ChecLoadSaveFileWithBlank: @ 0x08080968
	push {lr}
	ldr r0, _08080988 @ =Sram_AfterLoadingFileVblank
	bl CallbackSetVBlank
	bl Sram_CheckLoadSaveFile
	ldr r0, _0808098C @ =Sram_LoadingfileVblank
	bl CallbackSetVBlank
	ldr r0, _08080990 @ =gIsLoadingFile
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1
	.align 2, 0
_08080988: .4byte Sram_AfterLoadingFileVblank
_0808098C: .4byte Sram_LoadingfileVblank
_08080990: .4byte gIsLoadingFile

	thumb_func_start Sram_SetCurrentFile
Sram_SetCurrentFile: @ 0x08080994
	push {r4, lr}
	ldr r1, _080809B8 @ =0x03000B8D
	ldrb r4, [r1]
	strb r0, [r1]
	ldr r2, _080809BC @ =0x03000B94
	ldrb r1, [r1]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrb r0, [r0, #1]
	cmp r0, #1
	beq _080809C0
	cmp r0, #1
	ble _080809CE
	cmp r0, #2
	beq _080809C6
	b _080809CE
	.align 2, 0
_080809B8: .4byte 0x03000B8D
_080809BC: .4byte 0x03000B94
_080809C0:
	bl WriteMostRecentFileToGamePak
	b _080809CE
_080809C6:
	bl WriteMostRecentFileToGamePak
	bl unk_d34
_080809CE:
	ldr r3, _080809E8 @ =0x03000B94
	ldr r2, _080809EC @ =0x03000B8D
	ldrb r1, [r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	movs r1, #0
	strb r1, [r0, #1]
	strb r4, [r2]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080809E8: .4byte 0x03000B94
_080809EC: .4byte 0x03000B8D

	thumb_func_start EraseSramMenuSubroutine
EraseSramMenuSubroutine: @ 0x080809F0
	push {r4, r5, r6, lr}
	movs r6, #0
	ldr r0, _08080A18 @ =gNonGameplayRam
	ldrh r1, [r0, #4]
	adds r1, #1
	strh r1, [r0, #4]
	ldr r1, _08080A1C @ =gSubGameMode1
	movs r3, #0
	ldrsh r2, [r1, r3]
	adds r3, r0, #0
	adds r5, r1, #0
	cmp r2, #6
	bls _08080A0C
	b _08080AFA
_08080A0C:
	lsls r0, r2, #2
	ldr r1, _08080A20 @ =_08080A24
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08080A18: .4byte gNonGameplayRam
_08080A1C: .4byte gSubGameMode1
_08080A20: .4byte _08080A24
_08080A24: @ jump table
	.4byte _08080A40 @ case 0
	.4byte _08080A50 @ case 1
	.4byte _08080A74 @ case 2
	.4byte _08080AB0 @ case 3
	.4byte _08080ABC @ case 4
	.4byte _08080ACC @ case 5
	.4byte _08080AE2 @ case 6
_08080A40:
	bl EraseSramMenuInit
	ldr r1, _08080A4C @ =gSubGameMode1
	ldrh r0, [r1]
	b _08080AEA
	.align 2, 0
_08080A4C: .4byte gSubGameMode1
_08080A50:
	ldr r4, _08080A60 @ =gWrittenToBldy
	ldrh r1, [r4]
	adds r2, r1, #0
	cmp r2, #0
	beq _08080A64
	subs r0, r1, #1
	strh r0, [r4]
	b _08080AFA
	.align 2, 0
_08080A60: .4byte gWrittenToBldy
_08080A64:
	movs r0, #0xef
	strh r0, [r3, #6]
	strb r1, [r3, #8]
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	strh r2, [r3, #4]
	b _08080AFA
_08080A74:
	ldr r4, _08080A98 @ =gSubGameMode2
	bl EraseSramProcessInput
	strb r0, [r4]
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	cmp r2, #0
	beq _08080AFA
	ldr r1, _08080A9C @ =gNonGameplayRam
	movs r0, #0
	strh r0, [r1, #4]
	cmp r2, #1
	bne _08080AA4
	ldr r1, _08080AA0 @ =gSubGameMode1
	movs r0, #5
	strh r0, [r1]
	b _08080AFA
	.align 2, 0
_08080A98: .4byte gSubGameMode2
_08080A9C: .4byte gNonGameplayRam
_08080AA0: .4byte gSubGameMode1
_08080AA4:
	ldr r1, _08080AAC @ =gSubGameMode1
	movs r0, #3
	strh r0, [r1]
	b _08080AFA
	.align 2, 0
_08080AAC: .4byte gSubGameMode1
_08080AB0:
	ldrh r0, [r3, #4]
	cmp r0, #0x28
	bls _08080AFA
	movs r1, #0
	movs r0, #0xff
	b _08080AD6
_08080ABC:
	ldr r1, _08080AC8 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bls _08080AEA
	b _08080AF8
	.align 2, 0
_08080AC8: .4byte gWrittenToBldy
_08080ACC:
	ldrh r0, [r3, #4]
	cmp r0, #0x28
	bls _08080AFA
	movs r1, #0
	movs r0, #0xbf
_08080AD6:
	strh r0, [r3, #6]
	strh r1, [r3, #4]
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _08080AFA
_08080AE2:
	ldr r1, _08080AF0 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _08080AF4
_08080AEA:
	adds r0, #1
	strh r0, [r1]
	b _08080AFA
	.align 2, 0
_08080AF0: .4byte gWrittenToBldy
_08080AF4:
	bl EraseSram
_08080AF8:
	movs r6, #1
_08080AFA:
	bl EraseSramProcessOam
	bl ResetFreeOam
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start EraseSramProcessInput
EraseSramProcessInput: @ 0x08080B0C
	push {r4, lr}
	movs r4, #0
	ldr r0, _08080B24 @ =gNonGameplayRam
	ldrb r1, [r0, #1]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08080B28
	bl EraseSramApplyInput
	b _08080B2E
	.align 2, 0
_08080B24: .4byte gNonGameplayRam
_08080B28:
	bl EraseSramCheckForInput
	adds r4, r0, #0
_08080B2E:
	ldr r0, _08080B44 @ =gNonGameplayRam
	ldr r3, _08080B48 @ =gWrittenToBldy
	ldrh r1, [r3]
	ldrb r2, [r0, #8]
	adds r0, r1, #0
	cmp r2, r0
	beq _08080B50
	cmp r2, r0
	bls _08080B4C
	adds r0, r1, #1
	b _08080B4E
	.align 2, 0
_08080B44: .4byte gNonGameplayRam
_08080B48: .4byte gWrittenToBldy
_08080B4C:
	subs r0, r1, #1
_08080B4E:
	strh r0, [r3]
_08080B50:
	bl EraseSramUpdateCursorPosition
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start EraseSramApplyInput
EraseSramApplyInput: @ 0x08080B5C
	push {lr}
	ldr r1, _08080B84 @ =gNonGameplayRam
	ldrb r0, [r1, #0x16]
	adds r2, r1, #0
	cmp r0, #2
	beq _08080BE2
	ldrb r1, [r2, #1]
	movs r0, #0x7f
	ands r0, r1
	movs r3, #0
	strb r0, [r2, #1]
	strb r0, [r2]
	ldrb r0, [r2, #1]
	cmp r0, #1
	beq _08080B9C
	cmp r0, #1
	bgt _08080B88
	cmp r0, #0
	beq _08080B92
	b _08080BC6
	.align 2, 0
_08080B84: .4byte gNonGameplayRam
_08080B88:
	cmp r0, #2
	beq _08080BB4
	cmp r0, #3
	beq _08080BBC
	b _08080BC6
_08080B92:
	ldr r0, _08080B98 @ =0x0858B3B0
	b _08080B9E
	.align 2, 0
_08080B98: .4byte 0x0858B3B0
_08080B9C:
	ldr r0, _08080BB0 @ =0x0858B3B1
_08080B9E:
	ldrb r0, [r0]
	adds r1, r2, #0
	adds r1, #0x2e
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x22
	strb r3, [r0]
	b _08080BC6
	.align 2, 0
_08080BB0: .4byte 0x0858B3B1
_08080BB4:
	ldr r0, _08080BB8 @ =0x0858B3B2
	b _08080BBE
	.align 2, 0
_08080BB8: .4byte 0x0858B3B2
_08080BBC:
	ldr r0, _08080BE8 @ =0x0858B3B3
_08080BBE:
	ldrb r0, [r0]
	adds r1, r2, #0
	adds r1, #0x22
	strb r0, [r1]
_08080BC6:
	adds r0, r2, #0
	adds r0, #0x20
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #0xb
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	movs r0, #1
	strb r0, [r2, #0x16]
	strb r1, [r2, #0x14]
	strb r1, [r2, #0x15]
_08080BE2:
	pop {r0}
	bx r0
	.align 2, 0
_08080BE8: .4byte 0x0858B3B3

	thumb_func_start EraseSramCheckForInput
EraseSramCheckForInput: @ 0x08080BEC
	push {r4, r5, lr}
	movs r5, #0
	movs r4, #0
	ldr r0, _08080C08 @ =gNonGameplayRam
	ldrb r1, [r0]
	adds r3, r0, #0
	cmp r1, #1
	beq _08080C3A
	cmp r1, #1
	bgt _08080C0C
	cmp r1, #0
	beq _08080C16
	b _08080CCA
	.align 2, 0
_08080C08: .4byte gNonGameplayRam
_08080C0C:
	cmp r1, #2
	beq _08080C62
	cmp r1, #3
	beq _08080C94
	b _08080CCA
_08080C16:
	ldr r0, _08080C28 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08080C2C
	movs r0, #0x81
	b _08080CA2
	.align 2, 0
_08080C28: .4byte gChangedInput
_08080C2C:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08080CCA
	movs r5, #2
	movs r4, #1
	b _08080CD0
_08080C3A:
	ldr r0, _08080C4C @ =gChangedInput
	ldrh r2, [r0]
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	beq _08080C50
	movs r0, #0x80
	b _08080CA2
	.align 2, 0
_08080C4C: .4byte gChangedInput
_08080C50:
	ands r1, r2
	cmp r1, #0
	beq _08080CCA
	movs r0, #0x82
	strb r0, [r3, #1]
	movs r4, #1
	movs r0, #4
	strb r0, [r3, #8]
	b _08080CCA
_08080C62:
	ldr r0, _08080C74 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08080C78
	movs r0, #0x83
	b _08080CA2
	.align 2, 0
_08080C74: .4byte gChangedInput
_08080C78:
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _08080CCA
	movs r0, #0x80
	strb r0, [r3, #1]
	strb r5, [r3, #8]
	movs r0, #1
	ands r0, r1
	movs r4, #3
	cmp r0, #0
	beq _08080CCA
	movs r4, #1
	b _08080CCA
_08080C94:
	ldr r0, _08080CA8 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08080CAC
	movs r0, #0x82
_08080CA2:
	strb r0, [r3, #1]
	movs r4, #4
	b _08080CCA
	.align 2, 0
_08080CA8: .4byte gChangedInput
_08080CAC:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08080CBA
	movs r5, #1
	movs r4, #2
	b _08080CD0
_08080CBA:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08080CCA
	movs r0, #0x80
	strb r0, [r3, #1]
	movs r4, #3
	strb r5, [r3, #8]
_08080CCA:
	movs r0, #0
	cmp r0, #0
	beq _08080CDA
_08080CD0:
	movs r1, #0
	movs r0, #2
	strb r0, [r3, #0x16]
	strb r1, [r3, #0x14]
	strb r1, [r3, #0x15]
_08080CDA:
	ldr r0, _08080CF4 @ =0x0858B3B4
	lsls r1, r4, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _08080CEA
	bl SoundPlay
_08080CEA:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08080CF4: .4byte 0x0858B3B4

	thumb_func_start EraseSramMenuInit
EraseSramMenuInit: @ 0x08080CF8
	push {r4, r5, lr}
	sub sp, #4
	ldr r3, _08080E4C @ =0x04000208
	movs r5, #0
	strh r5, [r3]
	ldr r2, _08080E50 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _08080E54 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08080E58 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _08080E5C @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _08080E60 @ =EraseSramLoadingVBlank
	bl CallbackSetVBlank
	ldr r1, _08080E64 @ =0x04000050
	movs r0, #0xbf
	strh r0, [r1]
	ldr r0, _08080E68 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _08080E6C @ =0x04000054
	strh r1, [r0]
	movs r0, #0
	str r0, [sp]
	ldr r1, _08080E70 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r4, _08080E74 @ =gNonGameplayRam
	str r4, [r1, #4]
	ldr r0, _08080E78 @ =0x85000150
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	bl ClearGfxRam
	ldr r0, _08080E7C @ =gNextOamSlot
	strb r5, [r0]
	bl ResetFreeOam
	ldr r1, _08080E80 @ =0x03000011
	ldrb r0, [r1]
	strb r0, [r4, #2]
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bls _08080D66
	movs r0, #2
	strb r0, [r4, #2]
	strb r5, [r1]
_08080D66:
	ldr r1, _08080E84 @ =0x04000006
	ldrh r0, [r1]
	subs r0, #0x15
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _08080E88 @ =0x085823D0
	ldr r3, _08080E8C @ =0x085822F0
	ldr r4, _08080E90 @ =0x0858340C
	cmp r0, #0x8b
	bhi _08080D86
_08080D7A:
	ldrh r0, [r1]
	subs r0, #0x15
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x8b
	bls _08080D7A
_08080D86:
	ldr r0, _08080E70 @ =0x040000D4
	str r2, [r0]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	str r1, [r0, #4]
	ldr r1, _08080E94 @ =0x80000100
	str r1, [r0, #8]
	ldr r1, [r0, #8]
	str r3, [r0]
	ldr r1, _08080E98 @ =0x05000200
	str r1, [r0, #4]
	ldr r1, _08080E9C @ =0x80000070
	str r1, [r0, #8]
	ldr r0, [r0, #8]
	ldr r1, _08080EA0 @ =0x06001000
	adds r0, r4, #0
	bl LZ77UncompVram
	ldr r0, _08080EA4 @ =0x08582BBC
	ldr r1, _08080EA8 @ =0x06012000
	bl LZ77UncompVram
	ldr r5, _08080EAC @ =0x0879C228
	ldr r4, _08080E74 @ =gNonGameplayRam
	ldrb r0, [r4, #2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldrb r0, [r4, #2]
	lsls r0, r0, #3
	adds r1, r5, #4
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r1, _08080EB0 @ =0x06011000
	bl LZ77UncompVram
	ldrb r0, [r4, #2]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldr r0, [r0]
	ldr r1, _08080EB4 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _08080EB8 @ =0x0858ABE4
	ldr r1, _08080EBC @ =0x0600D000
	bl LZ77UncompVram
	ldr r0, _08080EC0 @ =0x0858ADF0
	ldr r1, _08080EC4 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _08080EC8 @ =0x04000008
	movs r1, #0
	strh r1, [r0]
	adds r0, #4
	strh r1, [r0]
	ldr r2, _08080ECC @ =0x0400000A
	ldr r3, _08080ED0 @ =0x00001A01
	adds r0, r3, #0
	strh r0, [r2]
	adds r2, #4
	ldr r3, _08080ED4 @ =0x00001E03
	adds r0, r3, #0
	strh r0, [r2]
	ldr r0, _08080ED8 @ =0x03001222
	strh r1, [r0]
	ldr r0, _08080EDC @ =0x04000052
	strh r1, [r0]
	ldr r0, _08080EE0 @ =gUnk_03000be3
	strb r1, [r0]
	ldr r0, _08080EE4 @ =gBg1XPosition
	strh r1, [r0]
	ldr r0, _08080EE8 @ =gBg1YPosition
	strh r1, [r0]
	ldr r0, _08080EEC @ =0x03001230
	strh r1, [r0]
	ldr r0, _08080EF0 @ =0x03001232
	strh r1, [r0]
	bl EraseSramResetOam
	bl EraseSramProcessOam
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xd0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08080EF4 @ =EraseSramVBlank
	bl CallbackSetVBlank
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08080E4C: .4byte 0x04000208
_08080E50: .4byte 0x04000004
_08080E54: .4byte 0x0000FFEF
_08080E58: .4byte 0x04000200
_08080E5C: .4byte 0x0000FFFD
_08080E60: .4byte EraseSramLoadingVBlank
_08080E64: .4byte 0x04000050
_08080E68: .4byte gWrittenToBldy
_08080E6C: .4byte 0x04000054
_08080E70: .4byte 0x040000D4
_08080E74: .4byte gNonGameplayRam
_08080E78: .4byte 0x85000150
_08080E7C: .4byte gNextOamSlot
_08080E80: .4byte 0x03000011
_08080E84: .4byte 0x04000006
_08080E88: .4byte 0x085823D0
_08080E8C: .4byte 0x085822F0
_08080E90: .4byte 0x0858340C
_08080E94: .4byte 0x80000100
_08080E98: .4byte 0x05000200
_08080E9C: .4byte 0x80000070
_08080EA0: .4byte 0x06001000
_08080EA4: .4byte 0x08582BBC
_08080EA8: .4byte 0x06012000
_08080EAC: .4byte 0x0879C228
_08080EB0: .4byte 0x06011000
_08080EB4: .4byte 0x06010000
_08080EB8: .4byte 0x0858ABE4
_08080EBC: .4byte 0x0600D000
_08080EC0: .4byte 0x0858ADF0
_08080EC4: .4byte 0x0600F000
_08080EC8: .4byte 0x04000008
_08080ECC: .4byte 0x0400000A
_08080ED0: .4byte 0x00001A01
_08080ED4: .4byte 0x00001E03
_08080ED8: .4byte 0x03001222
_08080EDC: .4byte 0x04000052
_08080EE0: .4byte gUnk_03000be3
_08080EE4: .4byte gBg1XPosition
_08080EE8: .4byte gBg1YPosition
_08080EEC: .4byte 0x03001230
_08080EF0: .4byte 0x03001232
_08080EF4: .4byte EraseSramVBlank

	thumb_func_start EraseSramResetOam
EraseSramResetOam: @ 0x08080EF8
	push {lr}
	ldr r3, _08080F48 @ =gNonGameplayRam
	movs r1, #0
	strb r1, [r3]
	movs r0, #0x80
	strb r0, [r3, #1]
	ldr r0, _08080F4C @ =0x0858B3B0
	ldrb r0, [r0]
	adds r2, r3, #0
	adds r2, #0x2e
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x2c
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	ldr r2, _08080F50 @ =0x0858B3BE
	ldrb r0, [r2, #1]
	strh r0, [r3, #0x24]
	ldrb r0, [r2]
	strh r0, [r3, #0x26]
	movs r0, #1
	strb r0, [r3, #0x16]
	strb r1, [r3, #0x14]
	strb r1, [r3, #0x15]
	adds r0, r3, #0
	adds r0, #0x22
	strb r1, [r0]
	subs r0, #2
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	ldrb r0, [r2, #3]
	strh r0, [r3, #0x18]
	ldrb r0, [r2, #2]
	strh r0, [r3, #0x1a]
	bl EraseSramUpdateCursorPosition
	pop {r0}
	bx r0
	.align 2, 0
_08080F48: .4byte gNonGameplayRam
_08080F4C: .4byte 0x0858B3B0
_08080F50: .4byte 0x0858B3BE

	thumb_func_start EraseSramUpdateCursorPosition
EraseSramUpdateCursorPosition: @ 0x08080F54
	push {r4, r5, r6, lr}
	ldr r4, _08080F94 @ =gNonGameplayRam
	ldr r6, _08080F98 @ =0x0858B3BE
	ldrb r2, [r4]
	lsrs r2, r2, #1
	lsls r2, r2, #1
	adds r3, r6, #1
	adds r3, r2, r3
	ldr r5, _08080F9C @ =0x0858B3C2
	ldrb r0, [r4]
	lsls r0, r0, #1
	adds r1, r5, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrb r3, [r3]
	adds r0, r0, r3
	strh r0, [r4, #0xc]
	adds r2, r2, r6
	ldrb r0, [r4]
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrb r2, [r2]
	adds r0, r0, r2
	strh r0, [r4, #0xe]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08080F94: .4byte gNonGameplayRam
_08080F98: .4byte 0x0858B3BE
_08080F9C: .4byte 0x0858B3C2

	thumb_func_start EraseSramVBlank
EraseSramVBlank: @ 0x08080FA0
	push {lr}
	ldr r1, _08080FF0 @ =0x040000D4
	ldr r0, _08080FF4 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08080FF8 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	subs r1, #0x80
	ldr r0, _08080FFC @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x40
	ldr r0, _08081000 @ =gBg1XPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08081004 @ =gBg1YPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #6
	ldr r0, _08081008 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808100C @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r2, _08081010 @ =gNonGameplayRam
	ldrh r1, [r2, #6]
	cmp r1, #0
	beq _08080FEC
	ldr r0, _08081014 @ =0x04000050
	strh r1, [r0]
	movs r0, #0
	strh r0, [r2, #6]
_08080FEC:
	pop {r0}
	bx r0
	.align 2, 0
_08080FF0: .4byte 0x040000D4
_08080FF4: .4byte gOamData
_08080FF8: .4byte 0x84000100
_08080FFC: .4byte gWrittenToBldy
_08081000: .4byte gBg1XPosition
_08081004: .4byte gBg1YPosition
_08081008: .4byte 0x03001230
_0808100C: .4byte 0x03001232
_08081010: .4byte gNonGameplayRam
_08081014: .4byte 0x04000050

	thumb_func_start EraseSramLoadingVBlank
EraseSramLoadingVBlank: @ 0x08081018
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start EraseSramProcessOam
EraseSramProcessOam: @ 0x08081024
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r1, _0808114C @ =gNextOamSlot
	movs r0, #0
	strb r0, [r1]
	ldr r5, _08081150 @ =gOamData
	movs r0, #0
	str r0, [sp]
	movs r6, #0
	movs r4, #0
_08081040:
	lsls r0, r4, #1
	adds r1, r0, r4
	lsls r1, r1, #2
	ldr r2, _08081154 @ =gNonGameplayRam
	adds r3, r1, r2
	ldrb r1, [r3, #0x16]
	adds r2, r0, #0
	adds r0, r4, #1
	mov r8, r0
	cmp r1, #0
	beq _0808112C
	adds r0, r1, #0
	cmp r0, #0
	beq _08081092
	cmp r0, #0
	blt _08081092
	cmp r0, #6
	bgt _08081092
	ldr r1, _08081158 @ =0x0879C260
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r7, [r0]
	ldrb r0, [r3, #0x15]
	lsls r0, r0, #3
	adds r0, r0, r7
	ldrb r1, [r3, #0x14]
	ldrb r0, [r0, #4]
	cmp r1, r0
	blo _08081092
	movs r0, #0
	strb r0, [r3, #0x14]
	ldrb r0, [r3, #0x15]
	adds r0, #1
	strb r0, [r3, #0x15]
	ldrb r0, [r3, #0x15]
	lsls r0, r0, #3
	adds r0, r0, r7
	ldrb r0, [r0, #4]
	cmp r0, #0
	bne _08081092
	strb r0, [r3, #0x15]
_08081092:
	adds r2, r2, r4
	lsls r2, r2, #2
	ldr r1, _08081154 @ =gNonGameplayRam
	adds r2, r2, r1
	ldrb r0, [r2, #0x14]
	adds r0, #1
	strb r0, [r2, #0x14]
	ldr r1, _0808115C @ =gBg1YPosition
	ldrh r0, [r2, #0xc]
	ldrh r1, [r1]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	ldr r1, _08081160 @ =gBg1XPosition
	ldrh r0, [r2, #0xe]
	ldrh r1, [r1]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldrb r0, [r2, #0x15]
	lsls r0, r0, #3
	adds r7, r7, r0
	ldr r3, [r7]
	ldrh r0, [r3]
	ldr r2, [sp]
	adds r2, r2, r0
	str r2, [sp]
	adds r3, #2
	adds r4, #1
	mov r8, r4
	cmp r6, r2
	bge _0808112C
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	mov ip, r0
	lsls r0, r6, #3
	ldr r1, _08081150 @ =gOamData
	adds r4, r0, r1
	ldr r2, _08081164 @ =0x000001FF
	mov sl, r2
	ldr r0, [sp]
	subs r6, r0, r6
_080810E8:
	ldrh r0, [r3]
	adds r3, #2
	strh r0, [r5]
	adds r5, #2
	add r0, sb
	strb r0, [r4]
	ldrh r1, [r3]
	adds r3, #2
	strh r1, [r5]
	adds r5, #2
	add r1, ip
	mov r2, sl
	ands r1, r2
	ldrh r2, [r4, #2]
	ldr r0, _08081168 @ =0xFFFFFE00
	ands r0, r2
	orrs r0, r1
	strh r0, [r4, #2]
	ldrh r0, [r3]
	strh r0, [r5]
	adds r3, #2
	ldrb r1, [r4, #5]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r4, #5]
	adds r5, #4
	adds r4, #8
	subs r6, #1
	cmp r6, #0
	bne _080810E8
	ldr r6, [sp]
_0808112C:
	mov r4, r8
	cmp r4, #2
	ble _08081040
	mov r0, sp
	ldrb r1, [r0]
	ldr r0, _0808114C @ =gNextOamSlot
	strb r1, [r0]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808114C: .4byte gNextOamSlot
_08081150: .4byte gOamData
_08081154: .4byte gNonGameplayRam
_08081158: .4byte 0x0879C260
_0808115C: .4byte gBg1YPosition
_08081160: .4byte gBg1XPosition
_08081164: .4byte 0x000001FF
_08081168: .4byte 0xFFFFFE00

	thumb_func_start ProjectileCount
ProjectileCount: @ 0x0808116C
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	movs r4, #0
	movs r3, #0
	ldr r7, _080811A4 @ =gProjectileData
	movs r0, #1
	mov ip, r0
_08081180:
	lsls r0, r3, #5
	adds r2, r0, r7
	ldrb r1, [r2]
	mov r0, ip
	ands r0, r1
	cmp r0, #0
	beq _080811A8
	ldrb r0, [r2, #0xf]
	cmp r0, r6
	bne _080811A8
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, r5
	blo _080811A8
	movs r0, #0
	b _080811B4
	.align 2, 0
_080811A4: .4byte gProjectileData
_080811A8:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _08081180
	movs r0, #1
_080811B4:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start ProjectileInit
ProjectileInit: @ 0x080811BC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov sl, r3
	movs r6, #0xff
	movs r4, #0
	ldr r7, _0808120C @ =gProjectileData
	ldr r0, _08081210 @ =gSamusData
	mov ip, r0
	movs r5, #0
_080811EC:
	lsls r2, r4, #5
	adds r3, r2, r7
	ldrb r1, [r3]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0808123E
	mov r0, ip
	ldrh r1, [r0, #0x12]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08081214
	movs r0, #0x47
	b _08081216
	.align 2, 0
_0808120C: .4byte gProjectileData
_08081210: .4byte gSamusData
_08081214:
	movs r0, #7
_08081216:
	strb r0, [r3]
	adds r0, r2, r7
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0, #0xf]
	mov r2, sb
	strh r2, [r0, #8]
	mov r1, r8
	strh r1, [r0, #0xa]
	strb r5, [r0, #0x12]
	strb r5, [r0, #0x11]
	mov r2, sl
	strb r2, [r0, #0x13]
	strb r5, [r0, #0x1e]
	mov r2, ip
	ldrb r1, [r2, #7]
	strb r1, [r0, #0x10]
	strb r4, [r0, #0x1f]
	adds r6, r4, #0
	b _08081248
_0808123E:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xf
	bls _080811EC
_08081248:
	adds r0, r6, #0
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start ProjectileInitSecondary
ProjectileInitSecondary: @ 0x0808125C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r4, [sp, #0x24]
	ldr r5, [sp, #0x28]
	ldr r6, [sp, #0x2c]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov sl, r3
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	mov ip, r5
	lsls r6, r6, #0x18
	lsrs r7, r6, #0x18
	movs r3, #0
	movs r0, #7
	orrs r4, r0
	movs r5, #0
	movs r6, #1
_0808129E:
	lsls r0, r3, #5
	ldr r1, _080812D0 @ =gProjectileData
	adds r2, r0, r1
	ldrb r1, [r2]
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	bne _080812D4
	strb r4, [r2]
	mov r0, sp
	ldrb r0, [r0]
	strb r0, [r2, #0xf]
	mov r1, sb
	strh r1, [r2, #8]
	mov r0, r8
	strh r0, [r2, #0xa]
	strb r5, [r2, #0x12]
	strb r5, [r2, #0x11]
	mov r1, sl
	strb r1, [r2, #0x13]
	strb r5, [r2, #0x1e]
	mov r0, ip
	strb r0, [r2, #0x10]
	strb r7, [r2, #0x1f]
	b _080812DE
	.align 2, 0
_080812D0: .4byte gProjectileData
_080812D4:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _0808129E
_080812DE:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ProjectileUpdate
ProjectileUpdate: @ 0x080812F0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	ldr r0, _080813BC @ =gSubGameMode1
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #2
	beq _08081304
	b _08081940
_08081304:
	bl CallUpdateArmCannonOffset
	ldr r2, _080813C0 @ =gArmCannonY
	ldr r1, _080813C4 @ =gSamusData
	ldrh r0, [r1, #0x18]
	ldr r3, _080813C8 @ =gSamusGraphicsInfo
	lsrs r0, r0, #2
	ldrh r4, [r3, #0x24]
	adds r0, r0, r4
	lsls r0, r0, #2
	strh r0, [r2]
	ldr r2, _080813CC @ =gArmCannonX
	ldrh r0, [r1, #0x16]
	lsrs r0, r0, #2
	ldrh r3, [r3, #0x22]
	adds r0, r0, r3
	lsls r0, r0, #2
	strh r0, [r2]
	ldrb r0, [r1, #0xc]
	cmp r0, #0x10
	bne _0808136A
	movs r3, #0
	movs r5, #0
	movs r4, #1
	ldr r2, _080813D0 @ =0x030007F8
_08081336:
	ldrb r1, [r2]
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _08081346
	ldrb r0, [r2, #2]
	cmp r0, #0x43
	beq _080813FC
_08081346:
	adds r2, #0xc
	adds r5, #1
	cmp r5, #0xf
	ble _08081336
_0808134E:
	cmp r3, #0
	bne _0808136A
	ldr r5, _080813C0 @ =gArmCannonY
	ldrh r0, [r5]
	ldr r4, _080813CC @ =gArmCannonX
	ldrh r1, [r4]
	movs r2, #0x43
	bl ParticleSet
	ldrh r0, [r5]
	ldrh r1, [r4]
	movs r2, #0x44
	bl ParticleSet
_0808136A:
	ldr r0, _080813D4 @ =0x030012F0
	ldrb r0, [r0, #0x13]
	cmp r0, #0x10
	bne _080813A4
	movs r3, #0
	movs r5, #0
	movs r4, #1
	ldr r2, _080813D0 @ =0x030007F8
_0808137A:
	ldrb r1, [r2]
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _0808138A
	ldrb r0, [r2, #2]
	cmp r0, #0x45
	beq _080813F4
_0808138A:
	adds r2, #0xc
	adds r5, #1
	cmp r5, #0xf
	ble _0808137A
_08081392:
	cmp r3, #0
	bne _080813A4
	ldr r0, _080813C0 @ =gArmCannonY
	ldrh r0, [r0]
	ldr r1, _080813CC @ =gArmCannonX
	ldrh r1, [r1]
	movs r2, #0x45
	bl ParticleSet
_080813A4:
	ldr r0, _080813C4 @ =gSamusData
	ldrb r0, [r0, #9]
	subs r0, #1
	cmp r0, #5
	bls _080813B0
	b _080818EA
_080813B0:
	lsls r0, r0, #2
	ldr r1, _080813D8 @ =_080813DC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080813BC: .4byte gSubGameMode1
_080813C0: .4byte gArmCannonY
_080813C4: .4byte gSamusData
_080813C8: .4byte gSamusGraphicsInfo
_080813CC: .4byte gArmCannonX
_080813D0: .4byte 0x030007F8
_080813D4: .4byte 0x030012F0
_080813D8: .4byte _080813DC
_080813DC: @ jump table
	.4byte _08081404 @ case 0
	.4byte _080815B8 @ case 1
	.4byte _080818EA @ case 2
	.4byte _080816E0 @ case 3
	.4byte _08081740 @ case 4
	.4byte _08081708 @ case 5
_080813F4:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	b _08081392
_080813FC:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	b _0808134E
_08081404:
	ldr r0, _0808144C @ =gEquipment
	ldrb r1, [r0, #0xa]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08081458
	movs r0, #4
	movs r1, #7
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08081420
	b _080818E4
_08081420:
	ldr r5, _08081450 @ =gArmCannonY
	ldrh r1, [r5]
	ldr r4, _08081454 @ =gArmCannonX
	ldrh r2, [r4]
	movs r0, #4
	movs r3, #0
	bl ProjectileInit
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #4
	movs r3, #1
	bl ProjectileInit
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #4
	movs r3, #2
	bl ProjectileInit
	b _08081556
	.align 2, 0
_0808144C: .4byte gEquipment
_08081450: .4byte gArmCannonY
_08081454: .4byte gArmCannonX
_08081458:
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080814A4
	movs r0, #3
	movs r1, #7
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08081470
	b _080818E4
_08081470:
	ldr r5, _0808149C @ =gArmCannonY
	ldrh r1, [r5]
	ldr r4, _080814A0 @ =gArmCannonX
	ldrh r2, [r4]
	movs r0, #3
	movs r3, #0
	bl ProjectileInit
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #3
	movs r3, #1
	bl ProjectileInit
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #3
	movs r3, #2
	bl ProjectileInit
	b _08081556
	.align 2, 0
_0808149C: .4byte gArmCannonY
_080814A0: .4byte gArmCannonX
_080814A4:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080814F0
	movs r0, #2
	movs r1, #7
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080814BC
	b _080818E4
_080814BC:
	ldr r5, _080814E8 @ =gArmCannonY
	ldrh r1, [r5]
	ldr r4, _080814EC @ =gArmCannonX
	ldrh r2, [r4]
	movs r0, #2
	movs r3, #0
	bl ProjectileInit
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #2
	movs r3, #1
	bl ProjectileInit
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #2
	movs r3, #2
	bl ProjectileInit
	b _08081556
	.align 2, 0
_080814E8: .4byte gArmCannonY
_080814EC: .4byte gArmCannonX
_080814F0:
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _08081578
	movs r1, #7
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08081506
	b _080818E4
_08081506:
	ldr r5, _08081568 @ =gArmCannonY
	ldrh r1, [r5]
	ldr r4, _0808156C @ =gArmCannonX
	ldrh r2, [r4]
	movs r0, #1
	movs r3, #0
	bl ProjectileInit
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r1, _08081570 @ =gProjectileData
	lsls r0, r6, #5
	adds r0, r0, r1
	ldrb r7, [r0, #0x10]
	mov r8, r7
	ldrb r1, [r0]
	movs r0, #0x40
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldrh r1, [r5]
	ldrh r2, [r4]
	str r7, [sp]
	mov r0, r8
	str r0, [sp, #4]
	str r6, [sp, #8]
	movs r0, #1
	movs r3, #1
	bl ProjectileInitSecondary
	ldrh r1, [r5]
	ldrh r2, [r4]
	str r7, [sp]
	mov r3, r8
	str r3, [sp, #4]
	str r6, [sp, #8]
	movs r0, #1
	movs r3, #2
	bl ProjectileInitSecondary
_08081556:
	ldr r1, _08081574 @ =gSamusData
	movs r0, #7
	strb r0, [r1, #0xa]
	ldrh r0, [r5]
	ldrh r1, [r4]
	movs r2, #0x2b
	bl ParticleSet
	b _080818E4
	.align 2, 0
_08081568: .4byte gArmCannonY
_0808156C: .4byte gArmCannonX
_08081570: .4byte gProjectileData
_08081574: .4byte gSamusData
_08081578:
	movs r0, #0
	movs r1, #3
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08081588
	b _080818E4
_08081588:
	ldr r5, _080815AC @ =gArmCannonY
	ldrh r1, [r5]
	ldr r4, _080815B0 @ =gArmCannonX
	ldrh r2, [r4]
	movs r0, #0
	movs r3, #0
	bl ProjectileInit
	ldr r1, _080815B4 @ =gSamusData
	movs r0, #7
	strb r0, [r1, #0xa]
	ldrh r0, [r5]
	ldrh r1, [r4]
	movs r2, #0x2b
	bl ParticleSet
	b _080818E4
	.align 2, 0
_080815AC: .4byte gArmCannonY
_080815B0: .4byte gArmCannonX
_080815B4: .4byte gSamusData
_080815B8:
	ldr r0, _080815F4 @ =gEquipment
	ldrb r1, [r0, #0xb]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08081634
	movs r0, #0xd
	movs r1, #2
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080815D4
	b _080818E4
_080815D4:
	ldr r0, _080815F8 @ =0x030012F0
	ldrb r0, [r0, #0x13]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bge _08081604
	ldr r0, _080815FC @ =gArmCannonY
	ldrh r1, [r0]
	ldr r0, _08081600 @ =gArmCannonX
	ldrh r2, [r0]
	movs r0, #0xe
	movs r3, #0
	bl ProjectileInit
	b _08081614
	.align 2, 0
_080815F4: .4byte gEquipment
_080815F8: .4byte 0x030012F0
_080815FC: .4byte gArmCannonY
_08081600: .4byte gArmCannonX
_08081604:
	ldr r0, _08081624 @ =gArmCannonY
	ldrh r1, [r0]
	ldr r0, _08081628 @ =gArmCannonX
	ldrh r2, [r0]
	movs r0, #0xd
	movs r3, #0
	bl ProjectileInit
_08081614:
	ldr r1, _0808162C @ =gSamusData
	movs r2, #0
	movs r0, #0x10
	strb r0, [r1, #0xa]
	ldr r0, _08081630 @ =0x030012F0
	strb r2, [r0, #0x13]
	b _080818E4
	.align 2, 0
_08081624: .4byte gArmCannonY
_08081628: .4byte gArmCannonX
_0808162C: .4byte gSamusData
_08081630: .4byte 0x030012F0
_08081634:
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08081670
	movs r0, #0xc
	movs r1, #2
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808164C
	b _080818E4
_0808164C:
	ldr r0, _08081664 @ =gArmCannonY
	ldrh r1, [r0]
	ldr r0, _08081668 @ =gArmCannonX
	ldrh r2, [r0]
	movs r0, #0xc
	movs r3, #0
	bl ProjectileInit
	ldr r1, _0808166C @ =gSamusData
	movs r0, #0xf
	b _080816D0
	.align 2, 0
_08081664: .4byte gArmCannonY
_08081668: .4byte gArmCannonX
_0808166C: .4byte gSamusData
_08081670:
	movs r0, #2
	ands r1, r0
	cmp r1, #0
	beq _080816AC
	movs r0, #0xb
	movs r1, #2
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08081688
	b _080818E4
_08081688:
	ldr r0, _080816A0 @ =gArmCannonY
	ldrh r1, [r0]
	ldr r0, _080816A4 @ =gArmCannonX
	ldrh r2, [r0]
	movs r0, #0xb
	movs r3, #0
	bl ProjectileInit
	ldr r1, _080816A8 @ =gSamusData
	movs r0, #0xe
	b _080816D0
	.align 2, 0
_080816A0: .4byte gArmCannonY
_080816A4: .4byte gArmCannonX
_080816A8: .4byte gSamusData
_080816AC:
	movs r0, #0xa
	movs r1, #2
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080816BC
	b _080818E4
_080816BC:
	ldr r0, _080816D4 @ =gArmCannonY
	ldrh r1, [r0]
	ldr r0, _080816D8 @ =gArmCannonX
	ldrh r2, [r0]
	movs r0, #0xa
	movs r3, #0
	bl ProjectileInit
	ldr r1, _080816DC @ =gSamusData
	movs r0, #9
_080816D0:
	strb r0, [r1, #0xa]
	b _080818E4
	.align 2, 0
_080816D4: .4byte gArmCannonY
_080816D8: .4byte gArmCannonX
_080816DC: .4byte gSamusData
_080816E0:
	movs r0, #0x10
	movs r1, #4
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080816F0
	b _080818E4
_080816F0:
	ldr r4, _08081704 @ =gSamusData
	ldrh r1, [r4, #0x18]
	ldrh r2, [r4, #0x16]
	movs r0, #0x10
	movs r3, #0
	bl ProjectileInit
	movs r0, #7
	strb r0, [r4, #0xa]
	b _080818E4
	.align 2, 0
_08081704: .4byte gSamusData
_08081708:
	movs r0, #0x11
	movs r1, #1
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08081718
	b _080818E4
_08081718:
	ldr r0, _08081738 @ =gCurrentPowerBomb
	ldrb r0, [r0]
	cmp r0, #0
	beq _08081722
	b _080818E4
_08081722:
	ldr r4, _0808173C @ =gSamusData
	ldrh r1, [r4, #0x18]
	ldrh r2, [r4, #0x16]
	movs r0, #0x11
	movs r3, #0
	bl ProjectileInit
	movs r0, #5
	strb r0, [r4, #0xa]
	b _080818E4
	.align 2, 0
_08081738: .4byte gCurrentPowerBomb
_0808173C: .4byte gSamusData
_08081740:
	ldr r0, _08081788 @ =gEquipment
	ldrb r1, [r0, #0xa]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08081794
	movs r0, #9
	movs r1, #7
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808175C
	b _080818E4
_0808175C:
	ldr r5, _0808178C @ =gArmCannonY
	ldrh r1, [r5]
	ldr r4, _08081790 @ =gArmCannonX
	ldrh r2, [r4]
	movs r0, #9
	movs r3, #0
	bl ProjectileInit
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #9
	movs r3, #1
	bl ProjectileInit
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #9
	movs r3, #2
	bl ProjectileInit
	b _0808188E
	.align 2, 0
_08081788: .4byte gEquipment
_0808178C: .4byte gArmCannonY
_08081790: .4byte gArmCannonX
_08081794:
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080817E0
	movs r0, #8
	movs r1, #7
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080817AC
	b _080818E4
_080817AC:
	ldr r5, _080817D8 @ =gArmCannonY
	ldrh r1, [r5]
	ldr r4, _080817DC @ =gArmCannonX
	ldrh r2, [r4]
	movs r0, #8
	movs r3, #0
	bl ProjectileInit
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #8
	movs r3, #1
	bl ProjectileInit
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #8
	movs r3, #2
	bl ProjectileInit
	b _0808188E
	.align 2, 0
_080817D8: .4byte gArmCannonY
_080817DC: .4byte gArmCannonX
_080817E0:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08081828
	movs r0, #7
	movs r1, #7
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080818E4
	ldr r5, _08081820 @ =gArmCannonY
	ldrh r1, [r5]
	ldr r4, _08081824 @ =gArmCannonX
	ldrh r2, [r4]
	movs r0, #7
	movs r3, #0
	bl ProjectileInit
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #7
	movs r3, #1
	bl ProjectileInit
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #7
	movs r3, #2
	bl ProjectileInit
	b _0808188E
	.align 2, 0
_08081820: .4byte gArmCannonY
_08081824: .4byte gArmCannonX
_08081828:
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080818B4
	movs r0, #6
	movs r1, #7
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080818E4
	ldr r5, _080818A4 @ =gArmCannonY
	ldrh r1, [r5]
	ldr r4, _080818A8 @ =gArmCannonX
	ldrh r2, [r4]
	movs r0, #6
	movs r3, #0
	bl ProjectileInit
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r1, _080818AC @ =gProjectileData
	lsls r0, r6, #5
	adds r0, r0, r1
	ldrb r7, [r0, #0x10]
	mov r8, r7
	ldrb r1, [r0]
	movs r0, #0x40
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldrh r1, [r5]
	ldrh r2, [r4]
	str r7, [sp]
	mov r0, r8
	str r0, [sp, #4]
	str r6, [sp, #8]
	movs r0, #6
	movs r3, #1
	bl ProjectileInitSecondary
	ldrh r1, [r5]
	ldrh r2, [r4]
	str r7, [sp]
	mov r3, r8
	str r3, [sp, #4]
	str r6, [sp, #8]
	movs r0, #6
	movs r3, #2
	bl ProjectileInitSecondary
_0808188E:
	ldr r1, _080818B0 @ =gSamusData
	movs r0, #3
	strb r0, [r1, #0xa]
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #0xf
	movs r3, #0
	bl ProjectileInit
	b _080818E4
	.align 2, 0
_080818A4: .4byte gArmCannonY
_080818A8: .4byte gArmCannonX
_080818AC: .4byte gProjectileData
_080818B0: .4byte gSamusData
_080818B4:
	movs r0, #5
	movs r1, #3
	bl ProjectileCount
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080818E4
	ldr r5, _0808194C @ =gArmCannonY
	ldrh r1, [r5]
	ldr r4, _08081950 @ =gArmCannonX
	ldrh r2, [r4]
	movs r0, #5
	movs r3, #0
	bl ProjectileInit
	ldr r1, _08081954 @ =gSamusData
	movs r0, #3
	strb r0, [r1, #0xa]
	ldrh r1, [r5]
	ldrh r2, [r4]
	movs r0, #0xf
	movs r3, #0
	bl ProjectileInit
_080818E4:
	ldr r1, _08081954 @ =gSamusData
	movs r0, #0
	strb r0, [r1, #9]
_080818EA:
	bl ProjectileCheckHittingSprite
	movs r5, #0
	ldr r6, _08081958 @ =gCurrentProjectile
	ldr r4, _0808195C @ =0x0879C27C
	mov r8, r4
_080818F6:
	ldr r1, _08081960 @ =gProjectileData
	lsls r0, r5, #5
	adds r4, r0, r1
	ldrb r1, [r4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808193A
	adds r1, r6, #0
	adds r0, r4, #0
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	ldrb r0, [r6, #0xf]
	lsls r0, r0, #2
	add r0, r8
	ldr r0, [r0]
	bl _call_via_r0
	bl ProjectileUpdateAnimation
	bl ProjectileCheckOnScreen
	adds r1, r4, #0
	adds r0, r6, #0
	ldm r0!, {r3, r4, r7}
	stm r1!, {r3, r4, r7}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
_0808193A:
	adds r5, #1
	cmp r5, #0xf
	ble _080818F6
_08081940:
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808194C: .4byte gArmCannonY
_08081950: .4byte gArmCannonX
_08081954: .4byte gSamusData
_08081958: .4byte gCurrentProjectile
_0808195C: .4byte 0x0879C27C
_08081960: .4byte gProjectileData

	thumb_func_start ProjectileUpdateAnimation
ProjectileUpdateAnimation: @ 0x08081964
	push {lr}
	ldr r2, _0808199C @ =gCurrentProjectile
	ldrb r0, [r2, #0xe]
	adds r0, #1
	strb r0, [r2, #0xe]
	ldrh r1, [r2, #0xc]
	ldr r3, [r2, #4]
	lsls r1, r1, #3
	adds r1, r1, r3
	ldrb r1, [r1, #4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r1, r0
	bhs _08081998
	movs r0, #1
	strb r0, [r2, #0xe]
	ldrh r0, [r2, #0xc]
	adds r0, #1
	strh r0, [r2, #0xc]
	ldrh r0, [r2, #0xc]
	lsls r0, r0, #3
	adds r0, r0, r3
	ldrb r0, [r0, #4]
	cmp r0, #0
	bne _08081998
	strh r0, [r2, #0xc]
_08081998:
	pop {r0}
	bx r0
	.align 2, 0
_0808199C: .4byte gCurrentProjectile

	thumb_func_start ProjectileDrawAll_False
ProjectileDrawAll_False: @ 0x080819A0
	push {r4, r5, r6, lr}
	ldr r0, _080819E0 @ =gSubGameMode1
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #2
	bne _080819D8
	movs r5, #0
	ldr r4, _080819E4 @ =gProjectileData
_080819B0:
	ldrb r1, [r4]
	movs r0, #0x87
	ands r0, r1
	cmp r0, #3
	bne _080819D0
	ldr r1, _080819E8 @ =gCurrentProjectile
	adds r0, r4, #0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	adds r0, r5, #0
	bl ProjectileDraw
_080819D0:
	adds r4, #0x20
	adds r5, #1
	cmp r5, #0xf
	ble _080819B0
_080819D8:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080819E0: .4byte gSubGameMode1
_080819E4: .4byte gProjectileData
_080819E8: .4byte gCurrentProjectile

	thumb_func_start ProjectileDrawAll_True
ProjectileDrawAll_True: @ 0x080819EC
	push {r4, r5, r6, lr}
	ldr r0, _08081A2C @ =gSubGameMode1
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #2
	bne _08081A24
	movs r5, #0
	ldr r4, _08081A30 @ =gProjectileData
_080819FC:
	ldrb r1, [r4]
	movs r0, #0x87
	ands r0, r1
	cmp r0, #0x83
	bne _08081A1C
	ldr r1, _08081A34 @ =gCurrentProjectile
	adds r0, r4, #0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	adds r0, r5, #0
	bl ProjectileDraw
_08081A1C:
	adds r4, #0x20
	adds r5, #1
	cmp r5, #0xf
	ble _080819FC
_08081A24:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08081A2C: .4byte gSubGameMode1
_08081A30: .4byte gProjectileData
_08081A34: .4byte gCurrentProjectile

	thumb_func_start ProjectileDraw
ProjectileDraw: @ 0x08081A38
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	ldr r0, _08081BD0 @ =gNextOamSlot
	ldrb r1, [r0]
	str r1, [sp, #4]
	ldr r3, _08081BD4 @ =gCurrentProjectile
	ldrh r1, [r3, #0xc]
	ldr r2, [r3, #4]
	lsls r1, r1, #3
	adds r1, r1, r2
	ldr r5, [r1]
	ldrh r2, [r5]
	str r2, [sp]
	adds r5, #2
	ldr r1, [sp, #4]
	adds r6, r2, r1
	cmp r6, #0x7f
	ble _08081A66
	b _08081BBE
_08081A66:
	lsls r0, r1, #3
	ldr r2, _08081BD8 @ =gOamData
	adds r4, r0, r2
	ldrh r1, [r3, #8]
	lsrs r1, r1, #2
	ldr r0, _08081BDC @ =gBg1YPosition
	ldrh r0, [r0]
	lsrs r0, r0, #2
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sl, r1
	ldrh r1, [r3, #0xa]
	lsrs r1, r1, #2
	ldr r0, _08081BE0 @ =gBg1XPosition
	ldrh r0, [r0]
	lsrs r0, r0, #2
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	ldrb r1, [r3]
	movs r0, #0x40
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	movs r0, #0x20
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
	ldrb r3, [r3, #0x11]
	str r3, [sp, #0x14]
	ldr r0, _08081BE4 @ =gIoRegisters
	ldrh r0, [r0, #0xa]
	movs r3, #3
	ands r3, r0
	str r3, [sp, #0x10]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _08081AC0
	adds r3, #1
	str r3, [sp, #0x10]
_08081AC0:
	movs r0, #0
	mov ip, r0
	str r6, [sp, #0x18]
	ldr r1, [sp]
	cmp ip, r1
	bge _08081BB6
	movs r2, #1
	mov r8, r2
_08081AD0:
	ldrh r0, [r5]
	adds r7, r0, #0
	adds r5, #2
	strh r7, [r4]
	adds r4, #2
	ldr r0, [sp, #4]
	add r0, ip
	lsls r0, r0, #3
	ldr r1, _08081BD8 @ =gOamData
	adds r3, r0, r1
	mov r2, sl
	adds r0, r7, r2
	strb r0, [r3]
	ldrh r6, [r5]
	adds r5, #2
	strh r6, [r4]
	adds r4, #2
	mov r0, sb
	adds r1, r6, r0
	ldr r2, _08081BE8 @ =0x000001FF
	ands r1, r2
	ldrh r2, [r3, #2]
	ldr r0, _08081BEC @ =0xFFFFFE00
	ands r0, r2
	orrs r0, r1
	strh r0, [r3, #2]
	ldrh r0, [r5]
	strh r0, [r4]
	adds r5, #2
	adds r4, #2
	movs r0, #3
	ldr r1, [sp, #0x10]
	ands r1, r0
	lsls r1, r1, #2
	ldrb r2, [r3, #5]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	lsrs r2, r0, #4
	ldr r1, [sp, #0x14]
	adds r2, r2, r1
	lsls r2, r2, #4
	movs r1, #0xf
	ands r0, r1
	orrs r0, r2
	strb r0, [r3, #5]
	ldr r2, [sp, #8]
	cmp r2, #0
	beq _08081B72
	ldrb r2, [r3, #3]
	lsls r0, r2, #0x1b
	lsrs r0, r0, #0x1f
	mov r1, r8
	eors r0, r1
	ands r0, r1
	lsls r0, r0, #4
	movs r1, #0x11
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r3, #3]
	ldrb r0, [r3, #1]
	lsrs r0, r0, #6
	lsrs r1, r1, #6
	lsls r0, r0, #2
	adds r0, r1, r0
	ldr r2, _08081BF0 @ =sOamXFlipOffsets
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r1, r0, #3
	adds r1, r6, r1
	mov r0, sb
	subs r1, r0, r1
	ldr r2, _08081BE8 @ =0x000001FF
	ands r1, r2
	ldrh r2, [r3, #2]
	ldr r0, _08081BEC @ =0xFFFFFE00
	ands r0, r2
	orrs r0, r1
	strh r0, [r3, #2]
_08081B72:
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _08081BAA
	ldrb r2, [r3, #3]
	lsls r0, r2, #0x1a
	lsrs r0, r0, #0x1f
	mov r1, r8
	eors r0, r1
	ands r0, r1
	lsls r0, r0, #5
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r3, #3]
	ldrb r0, [r3, #1]
	lsrs r0, r0, #6
	lsrs r1, r1, #6
	lsls r0, r0, #2
	adds r0, r1, r0
	ldr r2, _08081BF4 @ =sOamYFlipOffsets
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #3
	adds r0, r7, r0
	mov r1, sl
	subs r0, r1, r0
	strb r0, [r3]
_08081BAA:
	adds r4, #2
	movs r2, #1
	add ip, r2
	ldr r3, [sp]
	cmp ip, r3
	blt _08081AD0
_08081BB6:
	mov r0, sp
	ldrb r1, [r0, #0x18]
	ldr r0, _08081BD0 @ =gNextOamSlot
	strb r1, [r0]
_08081BBE:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08081BD0: .4byte gNextOamSlot
_08081BD4: .4byte gCurrentProjectile
_08081BD8: .4byte gOamData
_08081BDC: .4byte gBg1YPosition
_08081BE0: .4byte gBg1XPosition
_08081BE4: .4byte gIoRegisters
_08081BE8: .4byte 0x000001FF
_08081BEC: .4byte 0xFFFFFE00
_08081BF0: .4byte sOamXFlipOffsets
_08081BF4: .4byte sOamYFlipOffsets

	thumb_func_start ProjectileCheckOnScreen
ProjectileCheckOnScreen: @ 0x08081BF8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r1, _08081C8C @ =gCurrentProjectile
	ldrb r0, [r1]
	mov sl, r0
	movs r0, #1
	mov r2, sl
	ands r0, r2
	adds r7, r1, #0
	cmp r0, #0
	beq _08081CEA
	ldr r0, _08081C90 @ =gBg1YPosition
	ldr r4, _08081C94 @ =gBg1XPosition
	ldrh r6, [r7, #8]
	ldrh r1, [r7, #0xa]
	mov ip, r1
	movs r2, #0x80
	lsls r2, r2, #1
	adds r3, r2, #0
	ldrh r0, [r0]
	adds r1, r3, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, r3
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldrb r2, [r7, #0x14]
	lsls r2, r2, #2
	subs r0, r1, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r0, #0xa0
	lsls r0, r0, #2
	adds r2, r2, r0
	adds r1, r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	ldrh r4, [r4]
	adds r0, r3, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	add r3, ip
	lsls r3, r3, #0x10
	ldrb r1, [r7, #0x15]
	lsls r1, r1, #2
	subs r2, r0, r1
	lsls r2, r2, #0x10
	str r2, [sp]
	lsrs r4, r3, #0x10
	movs r2, #0xf0
	lsls r2, r2, #2
	adds r1, r1, r2
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, [sp]
	cmp r1, r3
	bhs _08081C98
	cmp r4, r0
	bhs _08081C98
	cmp sb, r5
	bhs _08081C98
	cmp r5, r8
	bhs _08081C98
	movs r0, #2
	mov r2, sl
	orrs r0, r2
	b _08081CE8
	.align 2, 0
_08081C8C: .4byte gCurrentProjectile
_08081C90: .4byte gBg1YPosition
_08081C94: .4byte gBg1XPosition
_08081C98:
	ldrb r0, [r7]
	movs r1, #0xfd
	ands r1, r0
	strb r1, [r7]
	ldrb r0, [r7, #0xf]
	cmp r0, #0xf
	bhi _08081CEA
	ldr r1, _08081CBC @ =gSamusData
	ldrh r0, [r1, #0x18]
	subs r0, #0x48
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldrh r4, [r1, #0x16]
	cmp r6, r5
	bls _08081CC0
	subs r0, r6, r5
	b _08081CC2
	.align 2, 0
_08081CBC: .4byte gSamusData
_08081CC0:
	subs r0, r5, r6
_08081CC2:
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp ip, r4
	bls _08081CD0
	mov r1, ip
	subs r0, r1, r4
	b _08081CD4
_08081CD0:
	mov r2, ip
	subs r0, r4, r2
_08081CD4:
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	movs r0, #0xc0
	lsls r0, r0, #2
	cmp r5, r0
	bhi _08081CE6
	subs r0, #0x80
	cmp r4, r0
	bls _08081CEA
_08081CE6:
	movs r0, #0
_08081CE8:
	strb r0, [r7]
_08081CEA:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ProjectileLoadEyeCoreXGraphics
ProjectileLoadEyeCoreXGraphics: @ 0x08081CFC
	push {lr}
	ldr r0, _08081D28 @ =gCurrentSprite
	ldrb r0, [r0, #0x1d]
	adds r1, r0, #0
	cmp r0, #0x59
	bne _08081D48
	ldr r1, _08081D2C @ =0x040000D4
	ldr r0, _08081D30 @ =0x0858C924
	str r0, [r1]
	ldr r0, _08081D34 @ =0x06016000
	str r0, [r1, #4]
	ldr r2, _08081D38 @ =0x80000140
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081D3C @ =0x0858CBA4
	str r0, [r1]
	ldr r0, _08081D40 @ =0x06016400
	str r0, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081D44 @ =0x0858B4E4
	b _08081E26
	.align 2, 0
_08081D28: .4byte gCurrentSprite
_08081D2C: .4byte 0x040000D4
_08081D30: .4byte 0x0858C924
_08081D34: .4byte 0x06016000
_08081D38: .4byte 0x80000140
_08081D3C: .4byte 0x0858CBA4
_08081D40: .4byte 0x06016400
_08081D44: .4byte 0x0858B4E4
_08081D48:
	cmp r0, #0x58
	bne _08081D88
	ldr r1, _08081D6C @ =0x040000D4
	ldr r0, _08081D70 @ =0x0858C424
	str r0, [r1]
	ldr r0, _08081D74 @ =0x06016000
	str r0, [r1, #4]
	ldr r2, _08081D78 @ =0x80000140
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081D7C @ =0x0858C6A4
	str r0, [r1]
	ldr r0, _08081D80 @ =0x06016400
	str r0, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081D84 @ =0x0858B4C4
	b _08081E26
	.align 2, 0
_08081D6C: .4byte 0x040000D4
_08081D70: .4byte 0x0858C424
_08081D74: .4byte 0x06016000
_08081D78: .4byte 0x80000140
_08081D7C: .4byte 0x0858C6A4
_08081D80: .4byte 0x06016400
_08081D84: .4byte 0x0858B4C4
_08081D88:
	cmp r0, #0x57
	bne _08081DC8
	ldr r1, _08081DAC @ =0x040000D4
	ldr r0, _08081DB0 @ =0x0858BF24
	str r0, [r1]
	ldr r0, _08081DB4 @ =0x06016000
	str r0, [r1, #4]
	ldr r2, _08081DB8 @ =0x80000140
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081DBC @ =0x0858C1A4
	str r0, [r1]
	ldr r0, _08081DC0 @ =0x06016400
	str r0, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081DC4 @ =0x0858B4A4
	b _08081E26
	.align 2, 0
_08081DAC: .4byte 0x040000D4
_08081DB0: .4byte 0x0858BF24
_08081DB4: .4byte 0x06016000
_08081DB8: .4byte 0x80000140
_08081DBC: .4byte 0x0858C1A4
_08081DC0: .4byte 0x06016400
_08081DC4: .4byte 0x0858B4A4
_08081DC8:
	cmp r1, #0x56
	bne _08081E08
	ldr r1, _08081DEC @ =0x040000D4
	ldr r0, _08081DF0 @ =0x0858BA24
	str r0, [r1]
	ldr r0, _08081DF4 @ =0x06016000
	str r0, [r1, #4]
	ldr r2, _08081DF8 @ =0x80000140
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081DFC @ =0x0858BCA4
	str r0, [r1]
	ldr r0, _08081E00 @ =0x06016400
	str r0, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081E04 @ =0x0858B484
	b _08081E26
	.align 2, 0
_08081DEC: .4byte 0x040000D4
_08081DF0: .4byte 0x0858BA24
_08081DF4: .4byte 0x06016000
_08081DF8: .4byte 0x80000140
_08081DFC: .4byte 0x0858BCA4
_08081E00: .4byte 0x06016400
_08081E04: .4byte 0x0858B484
_08081E08:
	ldr r1, _08081E38 @ =0x040000D4
	ldr r0, _08081E3C @ =0x0858CE24
	str r0, [r1]
	ldr r0, _08081E40 @ =0x06016000
	str r0, [r1, #4]
	ldr r2, _08081E44 @ =0x80000140
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081E48 @ =0x0858D0A4
	str r0, [r1]
	ldr r0, _08081E4C @ =0x06016400
	str r0, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081E50 @ =0x0858B504
_08081E26:
	str r0, [r1]
	ldr r0, _08081E54 @ =0x05000380
	str r0, [r1, #4]
	ldr r0, _08081E58 @ =0x80000005
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	pop {r0}
	bx r0
	.align 2, 0
_08081E38: .4byte 0x040000D4
_08081E3C: .4byte 0x0858CE24
_08081E40: .4byte 0x06016000
_08081E44: .4byte 0x80000140
_08081E48: .4byte 0x0858D0A4
_08081E4C: .4byte 0x06016400
_08081E50: .4byte 0x0858B504
_08081E54: .4byte 0x05000380
_08081E58: .4byte 0x80000005

	thumb_func_start ProjectileLoadBeamGraphics
ProjectileLoadBeamGraphics: @ 0x08081E5C
	push {lr}
	ldr r0, _08081E8C @ =gEquipment
	ldrb r1, [r0, #0xa]
	adds r2, r1, #0
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08081EAC
	ldr r1, _08081E90 @ =0x040000D4
	ldr r0, _08081E94 @ =0x0858CE24
	str r0, [r1]
	ldr r0, _08081E98 @ =0x06011000
	str r0, [r1, #4]
	ldr r2, _08081E9C @ =0x80000140
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081EA0 @ =0x0858D0A4
	str r0, [r1]
	ldr r0, _08081EA4 @ =0x06011400
	str r0, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081EA8 @ =0x0858B504
	b _08081FDA
	.align 2, 0
_08081E8C: .4byte gEquipment
_08081E90: .4byte 0x040000D4
_08081E94: .4byte 0x0858CE24
_08081E98: .4byte 0x06011000
_08081E9C: .4byte 0x80000140
_08081EA0: .4byte 0x0858D0A4
_08081EA4: .4byte 0x06011400
_08081EA8: .4byte 0x0858B504
_08081EAC:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08081EF0
	ldr r1, _08081ED4 @ =0x040000D4
	ldr r0, _08081ED8 @ =0x0858C924
	str r0, [r1]
	ldr r0, _08081EDC @ =0x06011000
	str r0, [r1, #4]
	ldr r2, _08081EE0 @ =0x80000140
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081EE4 @ =0x0858CBA4
	str r0, [r1]
	ldr r0, _08081EE8 @ =0x06011400
	str r0, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081EEC @ =0x0858B4E4
	b _08081FDA
	.align 2, 0
_08081ED4: .4byte 0x040000D4
_08081ED8: .4byte 0x0858C924
_08081EDC: .4byte 0x06011000
_08081EE0: .4byte 0x80000140
_08081EE4: .4byte 0x0858CBA4
_08081EE8: .4byte 0x06011400
_08081EEC: .4byte 0x0858B4E4
_08081EF0:
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08081F34
	ldr r1, _08081F18 @ =0x040000D4
	ldr r0, _08081F1C @ =0x0858C424
	str r0, [r1]
	ldr r0, _08081F20 @ =0x06011000
	str r0, [r1, #4]
	ldr r2, _08081F24 @ =0x80000140
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081F28 @ =0x0858C6A4
	str r0, [r1]
	ldr r0, _08081F2C @ =0x06011400
	str r0, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081F30 @ =0x0858B4C4
	b _08081FDA
	.align 2, 0
_08081F18: .4byte 0x040000D4
_08081F1C: .4byte 0x0858C424
_08081F20: .4byte 0x06011000
_08081F24: .4byte 0x80000140
_08081F28: .4byte 0x0858C6A4
_08081F2C: .4byte 0x06011400
_08081F30: .4byte 0x0858B4C4
_08081F34:
	movs r0, #2
	ands r1, r0
	cmp r1, #0
	beq _08081F78
	ldr r1, _08081F5C @ =0x040000D4
	ldr r0, _08081F60 @ =0x0858BF24
	str r0, [r1]
	ldr r0, _08081F64 @ =0x06011000
	str r0, [r1, #4]
	ldr r2, _08081F68 @ =0x80000140
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081F6C @ =0x0858C1A4
	str r0, [r1]
	ldr r0, _08081F70 @ =0x06011400
	str r0, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081F74 @ =0x0858B4A4
	b _08081FDA
	.align 2, 0
_08081F5C: .4byte 0x040000D4
_08081F60: .4byte 0x0858BF24
_08081F64: .4byte 0x06011000
_08081F68: .4byte 0x80000140
_08081F6C: .4byte 0x0858C1A4
_08081F70: .4byte 0x06011400
_08081F74: .4byte 0x0858B4A4
_08081F78:
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _08081FBC
	ldr r1, _08081FA0 @ =0x040000D4
	ldr r0, _08081FA4 @ =0x0858BA24
	str r0, [r1]
	ldr r0, _08081FA8 @ =0x06011000
	str r0, [r1, #4]
	ldr r2, _08081FAC @ =0x80000140
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081FB0 @ =0x0858BCA4
	str r0, [r1]
	ldr r0, _08081FB4 @ =0x06011400
	str r0, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081FB8 @ =0x0858B484
	b _08081FDA
	.align 2, 0
_08081FA0: .4byte 0x040000D4
_08081FA4: .4byte 0x0858BA24
_08081FA8: .4byte 0x06011000
_08081FAC: .4byte 0x80000140
_08081FB0: .4byte 0x0858BCA4
_08081FB4: .4byte 0x06011400
_08081FB8: .4byte 0x0858B484
_08081FBC:
	ldr r1, _08081FEC @ =0x040000D4
	ldr r0, _08081FF0 @ =0x0858B524
	str r0, [r1]
	ldr r0, _08081FF4 @ =0x06011000
	str r0, [r1, #4]
	ldr r2, _08081FF8 @ =0x80000140
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08081FFC @ =0x0858B7A4
	str r0, [r1]
	ldr r0, _08082000 @ =0x06011400
	str r0, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08082004 @ =0x0858B464
_08081FDA:
	str r0, [r1]
	ldr r0, _08082008 @ =0x05000240
	str r0, [r1, #4]
	ldr r0, _0808200C @ =0x80000005
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	pop {r0}
	bx r0
	.align 2, 0
_08081FEC: .4byte 0x040000D4
_08081FF0: .4byte 0x0858B524
_08081FF4: .4byte 0x06011000
_08081FF8: .4byte 0x80000140
_08081FFC: .4byte 0x0858B7A4
_08082000: .4byte 0x06011400
_08082004: .4byte 0x0858B464
_08082008: .4byte 0x05000240
_0808200C: .4byte 0x80000005

	thumb_func_start ProjectileLoadMissileGraphics
ProjectileLoadMissileGraphics: @ 0x08082010
	push {lr}
	ldr r0, _08082034 @ =gEquipment
	ldrb r1, [r0, #0xb]
	adds r2, r1, #0
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0808204C
	ldr r0, _08082038 @ =0x040000D4
	ldr r1, _0808203C @ =0x0858D624
	str r1, [r0]
	ldr r1, _08082040 @ =0x06011380
	str r1, [r0, #4]
	ldr r2, _08082044 @ =0x80000040
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	ldr r1, _08082048 @ =0x0858D6A4
	b _080820C6
	.align 2, 0
_08082034: .4byte gEquipment
_08082038: .4byte 0x040000D4
_0808203C: .4byte 0x0858D624
_08082040: .4byte 0x06011380
_08082044: .4byte 0x80000040
_08082048: .4byte 0x0858D6A4
_0808204C:
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0808207C
	ldr r0, _08082068 @ =0x040000D4
	ldr r1, _0808206C @ =0x0858D524
	str r1, [r0]
	ldr r1, _08082070 @ =0x06011380
	str r1, [r0, #4]
	ldr r2, _08082074 @ =0x80000040
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	ldr r1, _08082078 @ =0x0858D5A4
	b _080820C6
	.align 2, 0
_08082068: .4byte 0x040000D4
_0808206C: .4byte 0x0858D524
_08082070: .4byte 0x06011380
_08082074: .4byte 0x80000040
_08082078: .4byte 0x0858D5A4
_0808207C:
	movs r0, #2
	ands r1, r0
	cmp r1, #0
	beq _080820AC
	ldr r0, _08082098 @ =0x040000D4
	ldr r1, _0808209C @ =0x0858D424
	str r1, [r0]
	ldr r1, _080820A0 @ =0x06011380
	str r1, [r0, #4]
	ldr r2, _080820A4 @ =0x80000040
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	ldr r1, _080820A8 @ =0x0858D4A4
	b _080820C6
	.align 2, 0
_08082098: .4byte 0x040000D4
_0808209C: .4byte 0x0858D424
_080820A0: .4byte 0x06011380
_080820A4: .4byte 0x80000040
_080820A8: .4byte 0x0858D4A4
_080820AC:
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _080820D0
	ldr r0, _080820D4 @ =0x040000D4
	ldr r1, _080820D8 @ =0x0858D324
	str r1, [r0]
	ldr r1, _080820DC @ =0x06011380
	str r1, [r0, #4]
	ldr r2, _080820E0 @ =0x80000040
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	ldr r1, _080820E4 @ =0x0858D3A4
_080820C6:
	str r1, [r0]
	ldr r1, _080820E8 @ =0x06011780
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r0, [r0, #8]
_080820D0:
	pop {r0}
	bx r0
	.align 2, 0
_080820D4: .4byte 0x040000D4
_080820D8: .4byte 0x0858D324
_080820DC: .4byte 0x06011380
_080820E0: .4byte 0x80000040
_080820E4: .4byte 0x0858D3A4
_080820E8: .4byte 0x06011780

	thumb_func_start ProjectileCallLoadGraphicsAndClearProjectiles
ProjectileCallLoadGraphicsAndClearProjectiles: @ 0x080820EC
	push {lr}
	bl ProjectileLoadBeamGraphics
	bl ProjectileLoadMissileGraphics
	ldr r0, _08082118 @ =gPauseScreenFlag
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _08082114
	ldr r1, _0808211C @ =gProjectileData
	movs r2, #0
	movs r3, #0xf0
	lsls r3, r3, #1
	adds r0, r1, r3
_0808210C:
	strb r2, [r0]
	subs r0, #0x20
	cmp r0, r1
	bge _0808210C
_08082114:
	pop {r0}
	bx r0
	.align 2, 0
_08082118: .4byte gPauseScreenFlag
_0808211C: .4byte gProjectileData

	thumb_func_start ProjectileMove
ProjectileMove: @ 0x08082120
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldr r0, _0808213C @ =gCurrentProjectile
	ldrb r2, [r0, #0x10]
	adds r4, r0, #0
	cmp r2, #3
	beq _0808217A
	cmp r2, #3
	bgt _08082140
	cmp r2, #2
	beq _0808215A
	b _0808219A
	.align 2, 0
_0808213C: .4byte gCurrentProjectile
_08082140:
	cmp r2, #4
	beq _0808214A
	cmp r2, #5
	beq _08082152
	b _0808219A
_0808214A:
	ldrh r0, [r4, #8]
	subs r0, r0, r3
	strh r0, [r4, #8]
	b _080821E6
_08082152:
	ldrh r0, [r4, #8]
	adds r0, r0, r3
	strh r0, [r4, #8]
	b _080821E6
_0808215A:
	lsls r0, r3, #1
	adds r0, r0, r3
	asrs r0, r0, #2
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldrh r0, [r4, #8]
	subs r0, r0, r3
	strh r0, [r4, #8]
	ldrb r1, [r4]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080821AA
	ldrh r0, [r4, #0xa]
	adds r0, r0, r3
	b _080821AE
_0808217A:
	lsls r0, r3, #1
	adds r0, r0, r3
	asrs r0, r0, #2
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldrh r0, [r4, #8]
	adds r0, r0, r3
	strh r0, [r4, #8]
	ldrb r1, [r4]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080821AA
	ldrh r0, [r4, #0xa]
	adds r0, r0, r3
	b _080821AE
_0808219A:
	ldrb r1, [r4]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080821AA
	ldrh r0, [r4, #0xa]
	adds r0, r0, r3
	b _080821AE
_080821AA:
	ldrh r0, [r4, #0xa]
	subs r0, r0, r3
_080821AE:
	strh r0, [r4, #0xa]
	ldr r0, _080821D8 @ =gSamusData
	ldrh r0, [r0, #0x1a]
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	asrs r0, r0, #0x13
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	adds r6, r3, #0
	adds r2, r4, #0
	ldrb r1, [r2]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080821DC
	cmp r5, #0
	ble _080821E6
	ldrh r0, [r2, #0xa]
	adds r0, r0, r3
	strh r0, [r2, #0xa]
	b _080821E6
	.align 2, 0
_080821D8: .4byte gSamusData
_080821DC:
	cmp r5, #0
	bge _080821E6
	ldrh r0, [r4, #0xa]
	adds r0, r0, r6
	strh r0, [r4, #0xa]
_080821E6:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start ProjectileCheckHittingSolid
ProjectileCheckHittingSolid: @ 0x080821EC
	push {lr}
	ldr r2, _08082208 @ =gCurrentProjectile
	ldrb r1, [r2]
	movs r0, #0x10
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	bne _08082210
	ldr r0, _0808220C @ =gCurrentClipdataAffectingAction
	strb r1, [r0]
	movs r0, #0
	b _08082228
	.align 2, 0
_08082208: .4byte gCurrentProjectile
_0808220C: .4byte gCurrentClipdataAffectingAction
_08082210:
	ldrh r0, [r2, #8]
	ldrh r1, [r2, #0xa]
	bl ProcessClipdata
	movs r1, #0x80
	lsls r1, r1, #0x11
	ands r1, r0
	cmp r1, #0
	bne _08082226
	movs r0, #0
	b _08082228
_08082226:
	movs r0, #1
_08082228:
	pop {r1}
	bx r1

	thumb_func_start ProjectileCheckVerticalCollisionAtPosition
ProjectileCheckVerticalCollisionAtPosition: @ 0x0808222C
	push {r4, r5, r6, r7, lr}
	ldr r2, _08082248 @ =gCurrentProjectile
	ldrb r1, [r2]
	movs r0, #0x10
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	bne _08082250
	ldr r0, _0808224C @ =gCurrentClipdataAffectingAction
	strb r1, [r0]
	movs r0, #0
	b _0808245E
	.align 2, 0
_08082248: .4byte gCurrentProjectile
_0808224C: .4byte gCurrentClipdataAffectingAction
_08082250:
	ldrh r6, [r2, #8]
	ldrh r7, [r2, #0xa]
	adds r4, r6, #0
	adds r5, r7, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl ProcessClipdata
	adds r1, r0, #0
	movs r0, #0x80
	lsls r0, r0, #0x11
	ands r0, r1
	movs r3, #0x11
	cmp r0, #0
	bne _08082272
	movs r0, #0
	b _0808245E
_08082272:
	movs r0, #0xff
	ands r0, r1
	subs r0, #2
	cmp r0, #0xa
	bls _0808227E
	b _080823E4
_0808227E:
	lsls r0, r0, #2
	ldr r1, _08082288 @ =_0808228C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08082288: .4byte _0808228C
_0808228C: @ jump table
	.4byte _0808234C @ case 0
	.4byte _080822B8 @ case 1
	.4byte _080823A0 @ case 2
	.4byte _08082374 @ case 3
	.4byte _080822EC @ case 4
	.4byte _08082314 @ case 5
	.4byte _080823E4 @ case 6
	.4byte _080823E4 @ case 7
	.4byte _080823E4 @ case 8
	.4byte _080823E4 @ case 9
	.4byte _080823D0 @ case 10
_080822B8:
	ldr r3, _080822E4 @ =0x0000FFC0
	adds r1, r6, #0
	ands r1, r3
	movs r2, #0x3f
	adds r0, r7, #0
	ands r0, r2
	subs r0, #0x3f
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	adds r1, r7, #0
	ands r1, r3
	adds r0, r6, #0
	ands r0, r2
	subs r0, #0x3f
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	movs r3, #5
	ldr r2, _080822E8 @ =gCurrentProjectile
	b _08082402
	.align 2, 0
_080822E4: .4byte 0x0000FFC0
_080822E8: .4byte gCurrentProjectile
_080822EC:
	ldr r3, _08082310 @ =0x0000FFC0
	adds r1, r6, #0
	ands r1, r3
	movs r2, #0x3f
	adds r0, r7, #0
	ands r0, r2
	lsrs r0, r0, #1
	subs r0, #0x3f
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	adds r1, r7, #0
	ands r1, r3
	adds r0, r6, #0
	ands r0, r2
	lsls r0, r0, #1
	subs r0, #0x7e
	b _08082336
	.align 2, 0
_08082310: .4byte 0x0000FFC0
_08082314:
	ldr r3, _08082344 @ =0x0000FFC0
	adds r1, r6, #0
	ands r1, r3
	movs r2, #0x3f
	adds r0, r7, #0
	ands r0, r2
	lsrs r0, r0, #1
	subs r0, #0x1f
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	adds r1, r7, #0
	ands r1, r3
	adds r0, r6, #0
	ands r0, r2
	lsls r0, r0, #1
	subs r0, #0x3e
_08082336:
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	movs r3, #3
	ldr r2, _08082348 @ =gCurrentProjectile
	b _08082402
	.align 2, 0
_08082344: .4byte 0x0000FFC0
_08082348: .4byte gCurrentProjectile
_0808234C:
	ldr r2, _0808236C @ =0x0000FFC0
	adds r4, r6, #0
	ands r4, r2
	movs r1, #0x3f
	adds r0, r7, #0
	ands r0, r1
	orrs r4, r0
	adds r5, r7, #0
	ands r5, r2
	adds r0, r6, #0
	ands r0, r1
	orrs r5, r0
	movs r3, #4
	ldr r2, _08082370 @ =gCurrentProjectile
	b _08082402
	.align 2, 0
_0808236C: .4byte 0x0000FFC0
_08082370: .4byte gCurrentProjectile
_08082374:
	ldr r3, _08082398 @ =0x0000FFC0
	adds r4, r6, #0
	ands r4, r3
	movs r2, #0x3f
	adds r0, r7, #0
	ands r0, r2
	lsrs r0, r0, #1
	adds r0, #0x1f
	orrs r4, r0
	adds r1, r7, #0
	ands r1, r3
	adds r0, r6, #0
	ands r0, r2
	lsls r0, r0, #1
	ldr r2, _0808239C @ =0x0000FFC1
	adds r0, r0, r2
	b _080823BA
	.align 2, 0
_08082398: .4byte 0x0000FFC0
_0808239C: .4byte 0x0000FFC1
_080823A0:
	ldr r3, _080823C8 @ =0x0000FFC0
	adds r4, r6, #0
	ands r4, r3
	movs r2, #0x3f
	adds r0, r7, #0
	ands r0, r2
	lsrs r0, r0, #1
	orrs r4, r0
	adds r1, r7, #0
	ands r1, r3
	adds r0, r6, #0
	ands r0, r2
	lsls r0, r0, #1
_080823BA:
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	movs r3, #2
	ldr r2, _080823CC @ =gCurrentProjectile
	b _08082402
	.align 2, 0
_080823C8: .4byte 0x0000FFC0
_080823CC: .4byte gCurrentProjectile
_080823D0:
	ldr r4, _080823DC @ =0x0000FFC0
	ands r4, r6
	movs r3, #0x10
	ldr r2, _080823E0 @ =gCurrentProjectile
	b _08082402
	.align 2, 0
_080823DC: .4byte 0x0000FFC0
_080823E0: .4byte gCurrentProjectile
_080823E4:
	ldr r0, _08082414 @ =0x0000FFC0
	adds r4, r6, #0
	ands r4, r0
	adds r5, r7, #0
	ands r5, r0
	ldr r2, _08082418 @ =gCurrentProjectile
	ldrb r1, [r2]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	bne _08082402
	adds r0, r5, #0
	adds r0, #0x40
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_08082402:
	ldrb r0, [r2, #0x10]
	cmp r0, #4
	beq _08082426
	cmp r0, #4
	ble _0808241C
	cmp r0, #5
	beq _08082432
	b _0808243A
	.align 2, 0
_08082414: .4byte 0x0000FFC0
_08082418: .4byte gCurrentProjectile
_0808241C:
	cmp r0, #2
	blt _0808243A
	cmp r3, #0x10
	bne _0808245C
	b _0808245A
_08082426:
	cmp r3, #0x11
	bne _0808245A
	adds r0, r4, #0
	adds r0, #0x40
	strh r0, [r2, #8]
	b _0808245C
_08082432:
	cmp r6, r4
	blo _0808245A
	strh r4, [r2, #8]
	b _0808245C
_0808243A:
	cmp r3, #0xc
	beq _0808245A
	adds r4, r2, #0
	ldrb r1, [r4]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08082452
	cmp r7, r5
	blo _0808245A
	strh r5, [r4, #0xa]
	b _0808245C
_08082452:
	cmp r7, r5
	bhi _0808245A
	strh r5, [r2, #0xa]
	b _0808245C
_0808245A:
	movs r3, #0
_0808245C:
	adds r0, r3, #0
_0808245E:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start ProjectileMovePart
ProjectileMovePart: @ 0x08082464
	push {r4, lr}
	movs r3, #4
	movs r4, #5
	ldr r1, _08082480 @ =gCurrentProjectile
	ldrb r0, [r1, #0x10]
	subs r0, #1
	adds r2, r1, #0
	cmp r0, #4
	bhi _08082514
	lsls r0, r0, #2
	ldr r1, _08082484 @ =_08082488
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08082480: .4byte gCurrentProjectile
_08082484: .4byte _08082488
_08082488: @ jump table
	.4byte _08082514 @ case 0
	.4byte _080824C0 @ case 1
	.4byte _0808249C @ case 2
	.4byte _080824FE @ case 3
	.4byte _080824FE @ case 4
_0808249C:
	ldrb r1, [r2]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080824AE
	ldrb r0, [r2, #0x13]
	cmp r0, #1
	beq _080824E2
	b _080824F0
_080824AE:
	ldrb r0, [r2, #0x13]
	cmp r0, #1
	bne _080824BA
	ldrh r0, [r2, #8]
	subs r0, r0, r3
	b _080824F4
_080824BA:
	ldrh r0, [r2, #8]
	adds r0, r3, r0
	b _080824E6
_080824C0:
	ldrb r1, [r2]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080824DC
	ldrb r0, [r2, #0x13]
	cmp r0, #1
	bne _080824D6
	ldrh r0, [r2, #8]
	subs r0, r0, r3
	b _080824F4
_080824D6:
	ldrh r0, [r2, #8]
	adds r0, r3, r0
	b _080824E6
_080824DC:
	ldrb r0, [r2, #0x13]
	cmp r0, #1
	bne _080824F0
_080824E2:
	ldrh r0, [r2, #8]
	subs r0, r0, r3
_080824E6:
	strh r0, [r2, #8]
	ldrh r0, [r2, #0xa]
	adds r0, r3, r0
	strh r0, [r2, #0xa]
	b _08082526
_080824F0:
	ldrh r0, [r2, #8]
	adds r0, r3, r0
_080824F4:
	strh r0, [r2, #8]
	ldrh r0, [r2, #0xa]
	subs r0, r0, r3
	strh r0, [r2, #0xa]
	b _08082526
_080824FE:
	ldrb r0, [r2, #0x13]
	cmp r0, #1
	bne _0808250C
	ldrh r0, [r2, #0xa]
	subs r0, r0, r4
	strh r0, [r2, #0xa]
	b _08082526
_0808250C:
	ldrh r0, [r2, #0xa]
	adds r0, r4, r0
	strh r0, [r2, #0xa]
	b _08082526
_08082514:
	ldrb r0, [r2, #0x13]
	cmp r0, #1
	bne _08082520
	ldrh r0, [r2, #8]
	subs r0, r0, r4
	b _08082524
_08082520:
	ldrh r0, [r2, #8]
	adds r0, r4, r0
_08082524:
	strh r0, [r2, #8]
_08082526:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start ProjectileMoveWaveBeamParts
ProjectileMoveWaveBeamParts: @ 0x0808252C
	push {r4, r5, r6, lr}
	ldr r5, _08082564 @ =gCurrentProjectile
	ldrb r0, [r5, #0x1e]
	movs r4, #7
	ands r4, r0
	ldr r1, _08082568 @ =0x0858B3CC
	lsls r0, r4, #1
	adds r0, r0, r1
	ldrh r6, [r0]
	adds r0, r6, #0
	bl __floatsidf
	ldr r2, _0808256C @ =0x3FF66666
	ldr r3, _08082570 @ =0x66666666
	bl __muldf3
	bl __fixunsdfsi
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldrb r2, [r5, #0x13]
	cmp r4, #3
	bls _0808257A
	cmp r2, #1
	bne _08082574
	movs r2, #2
	b _0808257A
	.align 2, 0
_08082564: .4byte gCurrentProjectile
_08082568: .4byte 0x0858B3CC
_0808256C: .4byte 0x3FF66666
_08082570: .4byte 0x66666666
_08082574:
	cmp r2, #2
	bne _0808257A
	movs r2, #1
_0808257A:
	ldrb r0, [r5, #0x10]
	subs r0, #1
	cmp r0, #4
	bhi _08082612
	lsls r0, r0, #2
	ldr r1, _0808258C @ =_08082590
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808258C: .4byte _08082590
_08082590: @ jump table
	.4byte _08082612 @ case 0
	.4byte _080825C4 @ case 1
	.4byte _080825A4 @ case 2
	.4byte _080825FE @ case 3
	.4byte _080825FE @ case 4
_080825A4:
	ldrb r1, [r5]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080825B4
	cmp r2, #1
	beq _080825E2
	b _080825F0
_080825B4:
	cmp r2, #1
	bne _080825BE
	ldrh r0, [r5, #8]
	subs r0, r0, r6
	b _080825F4
_080825BE:
	ldrh r0, [r5, #8]
	adds r0, r6, r0
	b _080825E6
_080825C4:
	ldrb r1, [r5]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080825DE
	cmp r2, #1
	bne _080825D8
	ldrh r0, [r5, #8]
	subs r0, r0, r6
	b _080825F4
_080825D8:
	ldrh r0, [r5, #8]
	adds r0, r6, r0
	b _080825E6
_080825DE:
	cmp r2, #1
	bne _080825F0
_080825E2:
	ldrh r0, [r5, #8]
	subs r0, r0, r6
_080825E6:
	strh r0, [r5, #8]
	ldrh r0, [r5, #0xa]
	adds r0, r6, r0
	strh r0, [r5, #0xa]
	b _08082622
_080825F0:
	ldrh r0, [r5, #8]
	adds r0, r6, r0
_080825F4:
	strh r0, [r5, #8]
	ldrh r0, [r5, #0xa]
	subs r0, r0, r6
	strh r0, [r5, #0xa]
	b _08082622
_080825FE:
	cmp r2, #1
	bne _0808260A
	ldrh r0, [r5, #0xa]
	subs r0, r0, r3
	strh r0, [r5, #0xa]
	b _08082622
_0808260A:
	ldrh r0, [r5, #0xa]
	adds r0, r3, r0
	strh r0, [r5, #0xa]
	b _08082622
_08082612:
	cmp r2, #1
	bne _0808261C
	ldrh r0, [r5, #8]
	subs r0, r0, r3
	b _08082620
_0808261C:
	ldrh r0, [r5, #8]
	adds r0, r3, r0
_08082620:
	strh r0, [r5, #8]
_08082622:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start ProjectileMoveWaveBeamParts_Unused
ProjectileMoveWaveBeamParts_Unused: @ 0x08082628
	push {r4, r5, r6, lr}
	ldr r5, _08082660 @ =gCurrentProjectile
	ldrb r0, [r5, #0x1e]
	movs r4, #0xf
	ands r4, r0
	ldr r1, _08082664 @ =0x0858B3EC
	lsls r0, r4, #1
	adds r0, r0, r1
	ldrh r6, [r0]
	adds r0, r6, #0
	bl __floatsidf
	ldr r2, _08082668 @ =0x3FF66666
	ldr r3, _0808266C @ =0x66666666
	bl __muldf3
	bl __fixunsdfsi
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldrb r2, [r5, #0x13]
	cmp r4, #7
	bls _08082676
	cmp r2, #1
	bne _08082670
	movs r2, #2
	b _08082676
	.align 2, 0
_08082660: .4byte gCurrentProjectile
_08082664: .4byte 0x0858B3EC
_08082668: .4byte 0x3FF66666
_0808266C: .4byte 0x66666666
_08082670:
	cmp r2, #2
	bne _08082676
	movs r2, #1
_08082676:
	ldrb r0, [r5, #0x10]
	subs r0, #1
	cmp r0, #4
	bhi _0808270E
	lsls r0, r0, #2
	ldr r1, _08082688 @ =_0808268C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08082688: .4byte _0808268C
_0808268C: @ jump table
	.4byte _0808270E @ case 0
	.4byte _080826C0 @ case 1
	.4byte _080826A0 @ case 2
	.4byte _080826FA @ case 3
	.4byte _080826FA @ case 4
_080826A0:
	ldrb r1, [r5]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080826B0
	cmp r2, #1
	beq _080826DE
	b _080826EC
_080826B0:
	cmp r2, #1
	bne _080826BA
	ldrh r0, [r5, #8]
	subs r0, r0, r6
	b _080826F0
_080826BA:
	ldrh r0, [r5, #8]
	adds r0, r6, r0
	b _080826E2
_080826C0:
	ldrb r1, [r5]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080826DA
	cmp r2, #1
	bne _080826D4
	ldrh r0, [r5, #8]
	subs r0, r0, r6
	b _080826F0
_080826D4:
	ldrh r0, [r5, #8]
	adds r0, r6, r0
	b _080826E2
_080826DA:
	cmp r2, #1
	bne _080826EC
_080826DE:
	ldrh r0, [r5, #8]
	subs r0, r0, r6
_080826E2:
	strh r0, [r5, #8]
	ldrh r0, [r5, #0xa]
	adds r0, r6, r0
	strh r0, [r5, #0xa]
	b _0808271E
_080826EC:
	ldrh r0, [r5, #8]
	adds r0, r6, r0
_080826F0:
	strh r0, [r5, #8]
	ldrh r0, [r5, #0xa]
	subs r0, r0, r6
	strh r0, [r5, #0xa]
	b _0808271E
_080826FA:
	cmp r2, #1
	bne _08082706
	ldrh r0, [r5, #0xa]
	subs r0, r0, r3
	strh r0, [r5, #0xa]
	b _0808271E
_08082706:
	ldrh r0, [r5, #0xa]
	adds r0, r3, r0
	strh r0, [r5, #0xa]
	b _0808271E
_0808270E:
	cmp r2, #1
	bne _08082718
	ldrh r0, [r5, #8]
	subs r0, r0, r3
	b _0808271C
_08082718:
	ldrh r0, [r5, #8]
	adds r0, r3, r0
_0808271C:
	strh r0, [r5, #8]
_0808271E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start ProjectileSetMissileTrail
ProjectileSetMissileTrail: @ 0x08082724
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r4, _0808274C @ =gCurrentProjectile
	ldrb r0, [r4, #0x13]
	ands r0, r1
	cmp r0, #0
	bne _080827CC
	movs r5, #0x20
	ldrh r2, [r4, #8]
	ldrh r3, [r4, #0xa]
	ldrb r0, [r4, #0x10]
	cmp r0, #3
	beq _08082788
	cmp r0, #3
	bgt _08082750
	cmp r0, #2
	beq _0808276A
	b _080827A6
	.align 2, 0
_0808274C: .4byte gCurrentProjectile
_08082750:
	cmp r0, #4
	beq _0808275A
	cmp r0, #5
	beq _08082760
	b _080827A6
_0808275A:
	adds r0, r2, #0
	adds r0, #0x20
	b _08082764
_08082760:
	adds r0, r2, #0
	subs r0, #0x20
_08082764:
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	b _080827C2
_0808276A:
	movs r0, #0x40
	adds r1, r2, #0
	adds r1, #0x18
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x10
	ldrb r1, [r4]
	ands r0, r1
	cmp r0, #0
	beq _08082782
	adds r0, r3, #0
	subs r0, #0x18
	b _080827BE
_08082782:
	adds r0, r3, #0
	adds r0, #0x18
	b _080827BE
_08082788:
	movs r0, #0x40
	adds r1, r2, #0
	subs r1, #0x18
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x10
	ldrb r1, [r4]
	ands r0, r1
	cmp r0, #0
	beq _080827A0
	adds r0, r3, #0
	subs r0, #0x18
	b _080827BE
_080827A0:
	adds r0, r3, #0
	adds r0, #0x18
	b _080827BE
_080827A6:
	ldr r0, _080827B8 @ =gCurrentProjectile
	ldrb r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080827BC
	subs r0, r3, r5
	b _080827BE
	.align 2, 0
_080827B8: .4byte gCurrentProjectile
_080827BC:
	adds r0, r3, r5
_080827BE:
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
_080827C2:
	adds r0, r2, #0
	adds r1, r3, #0
	adds r2, r6, #0
	bl ParticleSet
_080827CC:
	ldr r1, _080827DC @ =gCurrentProjectile
	ldrb r0, [r1, #0x13]
	adds r0, #1
	strb r0, [r1, #0x13]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080827DC: .4byte gCurrentProjectile

	thumb_func_start ProjectileSetBeamTrail
ProjectileSetBeamTrail: @ 0x080827E0
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r2, _08082808 @ =gCurrentProjectile
	ldrb r0, [r2, #0x1e]
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	bne _08082880
	movs r5, #0x20
	ldrh r2, [r4, #8]
	ldrh r3, [r4, #0xa]
	ldrb r0, [r4, #0x10]
	cmp r0, #3
	beq _08082844
	cmp r0, #3
	bgt _0808280C
	cmp r0, #2
	beq _08082826
	b _08082862
	.align 2, 0
_08082808: .4byte gCurrentProjectile
_0808280C:
	cmp r0, #4
	beq _08082816
	cmp r0, #5
	beq _0808281C
	b _08082862
_08082816:
	adds r0, r2, #0
	adds r0, #0x20
	b _08082820
_0808281C:
	adds r0, r2, #0
	subs r0, #0x20
_08082820:
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	b _08082876
_08082826:
	movs r0, #0x40
	adds r1, r2, #0
	adds r1, #0x18
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x10
	ldrb r1, [r4]
	ands r0, r1
	cmp r0, #0
	beq _0808283E
	adds r0, r3, #0
	subs r0, #0x18
	b _08082872
_0808283E:
	adds r0, r3, #0
	adds r0, #0x18
	b _08082872
_08082844:
	movs r0, #0x40
	adds r1, r2, #0
	subs r1, #0x18
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x10
	ldrb r1, [r4]
	ands r0, r1
	cmp r0, #0
	beq _0808285C
	adds r0, r3, #0
	subs r0, #0x18
	b _08082872
_0808285C:
	adds r0, r3, #0
	adds r0, #0x18
	b _08082872
_08082862:
	ldrb r1, [r4]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08082870
	subs r0, r3, r5
	b _08082872
_08082870:
	adds r0, r3, r5
_08082872:
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
_08082876:
	adds r0, r2, #0
	adds r1, r3, #0
	adds r2, r6, #0
	bl ParticleSet
_08082880:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ProjectileCheckHittingSprite
ProjectileCheckHittingSprite: @ 0x08082888
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	ldr r2, _0808296C @ =gCurrentPowerBomb
	ldrb r0, [r2]
	cmp r0, #0
	bne _0808289E
	b _080829F6
_0808289E:
	ldr r0, _08082970 @ =gEquipment
	ldrb r1, [r0, #0xb]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	bne _080828AC
	b _080829F6
_080828AC:
	ldrh r0, [r2, #6]
	str r0, [sp, #0x20]
	ldrh r1, [r2, #4]
	ldrh r0, [r2, #0xc]
	ldr r3, [sp, #0x20]
	adds r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x28]
	ldrh r0, [r2, #0xe]
	adds r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x2c]
	ldrh r0, [r2, #8]
	adds r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x30]
	ldrh r0, [r2, #0xa]
	adds r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x34]
	ldr r4, _08082974 @ =0x0000A001
	str r4, [sp, #0x1c]
	ldr r4, _08082978 @ =0x00002001
	movs r0, #0
	mov r8, r0
_080828E6:
	ldr r1, _0808297C @ =gSpriteData
	mov r2, r8
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #3
	adds r3, r0, r1
	adds r0, r3, #0
	adds r0, #0x24
	ldrb r0, [r0]
	cmp r0, #0x5a
	bhi _08082980
	ldrh r0, [r3]
	ldr r1, [sp, #0x1c]
	ands r0, r1
	cmp r0, #1
	bne _080829E6
	ldrh r0, [r3, #0x14]
	cmp r0, #0
	beq _080829E6
	adds r0, r3, #0
	adds r0, #0x2c
	ldrb r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _080829E6
	ldrh r5, [r3, #2]
	ldrh r6, [r3, #4]
	ldrh r0, [r3, #0xa]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x38]
	ldrh r0, [r3, #0xc]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	ldrh r0, [r3, #0xe]
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	ldrh r0, [r3, #0x10]
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldr r2, [sp, #0x28]
	str r2, [sp]
	ldr r3, [sp, #0x2c]
	str r3, [sp, #4]
	ldr r0, [sp, #0x30]
	str r0, [sp, #8]
	ldr r1, [sp, #0x34]
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x38]
	mov r1, sb
	mov r2, sl
	adds r3, r7, #0
	bl CheckObjectsTouching
	cmp r0, #0
	beq _080829E6
	mov r0, r8
	bl ProjectilePowerBombHitSprite
	b _080829E6
	.align 2, 0
_0808296C: .4byte gCurrentPowerBomb
_08082970: .4byte gEquipment
_08082974: .4byte 0x0000A001
_08082978: .4byte 0x00002001
_0808297C: .4byte gSpriteData
_08082980:
	ldrh r0, [r3]
	ands r0, r4
	cmp r0, #1
	bne _080829E6
	ldrh r0, [r3, #0x14]
	cmp r0, #0
	beq _080829E6
	ldrh r5, [r3, #2]
	ldrh r6, [r3, #4]
	ldrh r0, [r3, #0xa]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x38]
	ldrh r0, [r3, #0xc]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	ldrh r0, [r3, #0xe]
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	ldrh r0, [r3, #0x10]
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldr r2, [sp, #0x28]
	str r2, [sp]
	ldr r3, [sp, #0x2c]
	str r3, [sp, #4]
	ldr r0, [sp, #0x30]
	str r0, [sp, #8]
	ldr r1, [sp, #0x34]
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x38]
	mov r1, sb
	mov r2, sl
	adds r3, r7, #0
	bl CheckObjectsTouching
	cmp r0, #0
	beq _080829E0
	mov r0, r8
	bl ProjectileSetIsftForPowerBomb
	b _080829E6
_080829E0:
	mov r0, r8
	bl ProjectileBringSpriteToPowerBombCenter
_080829E6:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #0x17
	bhi _080829F6
	b _080828E6
_080829F6:
	movs r2, #0
	str r2, [sp, #0x18]
	bl SamusCheckDamagingPose
	cmp r0, #0
	beq _08082A08
	movs r3, #1
	str r3, [sp, #0x18]
	b _08082A1E
_08082A08:
	movs r0, #0x80
	bl SamusCheckSudoScrew
	cmp r0, #0
	beq _08082A16
	movs r4, #2
	str r4, [sp, #0x18]
_08082A16:
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _08082A1E
	b _08082B3C
_08082A1E:
	ldr r1, _08082AF4 @ =gSamusData
	ldrh r2, [r1, #0x18]
	ldrh r3, [r1, #0x16]
	ldrh r0, [r1, #0x26]
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x28]
	ldrh r0, [r1, #0x2a]
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x2c]
	ldrh r0, [r1, #0x24]
	adds r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x30]
	ldrh r0, [r1, #0x28]
	adds r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x34]
	ldr r4, _08082AF8 @ =0x0000A001
	str r4, [sp, #0x1c]
	movs r0, #0
	mov r8, r0
_08082A54:
	ldr r0, _08082AFC @ =gSpriteData
	mov r2, r8
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r1, r1, #3
	adds r4, r1, r0
	ldrh r0, [r4]
	ldr r3, [sp, #0x1c]
	ands r0, r3
	cmp r0, #1
	bne _08082B2E
	ldrh r0, [r4, #0x14]
	cmp r0, #0
	beq _08082B2E
	ldrh r5, [r4, #2]
	ldrh r6, [r4, #4]
	ldrh r0, [r4, #0xa]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x38]
	ldrh r0, [r4, #0xc]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	ldrh r0, [r4, #0xe]
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	ldrh r0, [r4, #0x10]
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldr r0, [sp, #0x28]
	str r0, [sp]
	ldr r1, [sp, #0x2c]
	str r1, [sp, #4]
	ldr r2, [sp, #0x30]
	str r2, [sp, #8]
	ldr r3, [sp, #0x34]
	str r3, [sp, #0xc]
	ldr r0, [sp, #0x38]
	mov r1, sb
	mov r2, sl
	adds r3, r7, #0
	bl CheckObjectsTouching
	cmp r0, #0
	beq _08082B2E
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r0, [r0]
	cmp r0, #0x5a
	bhi _08082B2E
	ldr r4, [sp, #0x18]
	cmp r4, #1
	bne _08082B00
	mov r0, sb
	ldr r2, [sp, #0x38]
	subs r1, r0, r2
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r1, r1, #1
	adds r1, r2, r1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r3, sl
	subs r2, r7, r3
	lsrs r0, r2, #0x1f
	adds r2, r2, r0
	asrs r2, r2, #1
	add r2, sl
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r0, r8
	bl ProjectileContactDamageHitSprite
	b _08082B2E
	.align 2, 0
_08082AF4: .4byte gSamusData
_08082AF8: .4byte 0x0000A001
_08082AFC: .4byte gSpriteData
_08082B00:
	ldr r4, [sp, #0x18]
	cmp r4, #2
	bne _08082B2E
	mov r0, sb
	ldr r2, [sp, #0x38]
	subs r1, r0, r2
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r1, r1, #1
	adds r1, r2, r1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r3, sl
	subs r2, r7, r3
	lsrs r0, r2, #0x1f
	adds r2, r2, r0
	asrs r2, r2, #1
	add r2, sl
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r0, r8
	bl ProjectileSudoScrewHitSprite
_08082B2E:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #0x17
	bls _08082A54
_08082B3C:
	ldr r4, _08082B70 @ =0x0000A001
	str r4, [sp, #0x1c]
	movs r0, #0
	mov r8, r0
	ldr r3, _08082B74 @ =gSpriteData
	ldr r2, _08082B78 @ =gSpriteDrawOrder
_08082B48:
	mov r1, r8
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #3
	adds r1, r0, r3
	ldrh r0, [r1]
	ldr r4, [sp, #0x1c]
	ands r0, r4
	cmp r0, #1
	bne _08082B7C
	ldrh r0, [r1, #0x14]
	cmp r0, #0
	beq _08082B7C
	mov r4, r8
	adds r0, r4, r2
	adds r1, #0x22
	ldrb r1, [r1]
	strb r1, [r0]
	b _08082B84
	.align 2, 0
_08082B70: .4byte 0x0000A001
_08082B74: .4byte gSpriteData
_08082B78: .4byte gSpriteDrawOrder
_08082B7C:
	mov r0, r8
	adds r1, r0, r2
	movs r0, #0
	strb r0, [r1]
_08082B84:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #0x17
	bls _08082B48
	movs r1, #1
	str r1, [sp, #0x14]
_08082B96:
	movs r2, #0
	mov r8, r2
	ldr r3, [sp, #0x14]
	adds r3, #1
	str r3, [sp, #0x40]
_08082BA0:
	ldr r0, _08082C6C @ =gSpriteDrawOrder
	add r0, r8
	ldrb r0, [r0]
	mov r4, r8
	adds r4, #1
	str r4, [sp, #0x3c]
	ldr r1, [sp, #0x14]
	cmp r0, r1
	beq _08082BB4
	b _08082FC0
_08082BB4:
	ldr r0, _08082C70 @ =gSpriteData
	mov r3, r8
	lsls r2, r3, #3
	subs r1, r2, r3
	lsls r1, r1, #3
	adds r1, r1, r0
	ldrh r4, [r1, #2]
	str r4, [sp, #0x20]
	ldrh r0, [r1, #4]
	str r0, [sp, #0x24]
	ldrh r0, [r1, #0xa]
	adds r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x28]
	ldrh r0, [r1, #0xc]
	adds r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x2c]
	ldrh r0, [r1, #0xe]
	ldr r3, [sp, #0x24]
	adds r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x30]
	ldrh r0, [r1, #0x10]
	adds r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x34]
	movs r4, #0x11
	str r4, [sp, #0x1c]
	movs r0, #0
	str r0, [sp, #0x10]
	str r2, [sp, #0x44]
_08082BFC:
	ldr r1, _08082C74 @ =gProjectileData
	ldr r2, [sp, #0x10]
	lsls r0, r2, #5
	adds r4, r0, r1
	ldrb r0, [r4]
	ldr r3, [sp, #0x1c]
	ands r0, r3
	cmp r0, r3
	beq _08082C10
	b _08082FB0
_08082C10:
	ldrh r5, [r4, #8]
	ldrh r6, [r4, #0xa]
	ldrh r0, [r4, #0x16]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x38]
	ldrh r0, [r4, #0x18]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	ldrh r0, [r4, #0x1a]
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	ldrh r0, [r4, #0x1c]
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldr r0, [sp, #0x38]
	str r0, [sp]
	mov r1, sb
	str r1, [sp, #4]
	mov r2, sl
	str r2, [sp, #8]
	str r7, [sp, #0xc]
	ldr r0, [sp, #0x28]
	ldr r1, [sp, #0x2c]
	ldr r2, [sp, #0x30]
	ldr r3, [sp, #0x34]
	bl CheckObjectsTouching
	cmp r0, #0
	bne _08082C5A
	b _08082FB0
_08082C5A:
	ldrb r0, [r4, #0xf]
	cmp r0, #0x12
	bls _08082C62
	b _08082FB0
_08082C62:
	lsls r0, r0, #2
	ldr r1, _08082C78 @ =_08082C7C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08082C6C: .4byte gSpriteDrawOrder
_08082C70: .4byte gSpriteData
_08082C74: .4byte gProjectileData
_08082C78: .4byte _08082C7C
_08082C7C: @ jump table
	.4byte _08082CC8 @ case 0
	.4byte _08082CF0 @ case 1
	.4byte _08082D18 @ case 2
	.4byte _08082D40 @ case 3
	.4byte _08082D68 @ case 4
	.4byte _08082D90 @ case 5
	.4byte _08082DB8 @ case 6
	.4byte _08082DEE @ case 7
	.4byte _08082E14 @ case 8
	.4byte _08082E3C @ case 9
	.4byte _08082EA8 @ case 10
	.4byte _08082ED0 @ case 11
	.4byte _08082EF8 @ case 12
	.4byte _08082F20 @ case 13
	.4byte _08082F20 @ case 14
	.4byte _08082E72 @ case 15
	.4byte _08082F7E @ case 16
	.4byte _08082FB0 @ case 17
	.4byte _08082F48 @ case 18
_08082CC8:
	ldr r0, _08082CEC @ =gSpriteData
	ldr r3, [sp, #0x44]
	mov r4, r8
	subs r1, r3, r4
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bls _08082CDE
	b _08082E64
_08082CDE:
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileNormalBeamHitSprite
	b _08082FB0
	.align 2, 0
_08082CEC: .4byte gSpriteData
_08082CF0:
	ldr r0, _08082D14 @ =gSpriteData
	ldr r2, [sp, #0x44]
	mov r3, r8
	subs r1, r2, r3
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bhi _08082DE0
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileChargeBeamHitSprite
	b _08082FB0
	.align 2, 0
_08082D14: .4byte gSpriteData
_08082D18:
	ldr r0, _08082D3C @ =gSpriteData
	ldr r4, [sp, #0x44]
	mov r2, r8
	subs r1, r4, r2
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bls _08082D2E
	b _08082E64
_08082D2E:
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileWideBeamHitSprite
	b _08082FB0
	.align 2, 0
_08082D3C: .4byte gSpriteData
_08082D40:
	ldr r0, _08082D64 @ =gSpriteData
	ldr r3, [sp, #0x44]
	mov r4, r8
	subs r1, r3, r4
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bls _08082D56
	b _08082E64
_08082D56:
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectilePlasmaBeamHitSprite
	b _08082FB0
	.align 2, 0
_08082D64: .4byte gSpriteData
_08082D68:
	ldr r0, _08082D8C @ =gSpriteData
	ldr r2, [sp, #0x44]
	mov r3, r8
	subs r1, r2, r3
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bhi _08082E64
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileWaveBeamHitSprite
	b _08082FB0
	.align 2, 0
_08082D8C: .4byte gSpriteData
_08082D90:
	ldr r0, _08082DB4 @ =gSpriteData
	ldr r4, [sp, #0x44]
	mov r2, r8
	subs r1, r4, r2
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bhi _08082E64
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileChargedNormalBeamHitSprite
	b _08082FB0
	.align 2, 0
_08082DB4: .4byte gSpriteData
_08082DB8:
	ldr r0, _08082DDC @ =gSpriteData
	ldr r3, [sp, #0x44]
	mov r4, r8
	subs r1, r3, r4
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bhi _08082DE0
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileChargedChargeBeamHitSprite
	b _08082FB0
	.align 2, 0
_08082DDC: .4byte gSpriteData
_08082DE0:
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl unk_84cc8
	b _08082FB0
_08082DEE:
	ldr r0, _08082E10 @ =gSpriteData
	ldr r2, [sp, #0x44]
	mov r3, r8
	subs r1, r2, r3
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bhi _08082E64
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileChargedWideBeamHitSprite
	b _08082FB0
	.align 2, 0
_08082E10: .4byte gSpriteData
_08082E14:
	ldr r0, _08082E38 @ =gSpriteData
	ldr r4, [sp, #0x44]
	mov r2, r8
	subs r1, r4, r2
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bhi _08082E64
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileChargedPlasmaBeamHitSprite
	b _08082FB0
	.align 2, 0
_08082E38: .4byte gSpriteData
_08082E3C:
	ldr r0, _08082E60 @ =gSpriteData
	ldr r3, [sp, #0x44]
	mov r4, r8
	subs r1, r3, r4
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bhi _08082E64
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileChargedWaveBeamHitSprite
	b _08082FB0
	.align 2, 0
_08082E60: .4byte gSpriteData
_08082E64:
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl unk_84cac
	b _08082FB0
_08082E72:
	ldr r1, _08082E9C @ =gSpriteData
	ldr r2, [sp, #0x44]
	mov r3, r8
	subs r0, r2, r3
	lsls r0, r0, #3
	adds r1, r0, r1
	adds r0, r1, #0
	adds r0, #0x24
	ldrb r0, [r0]
	cmp r0, #0x5a
	bhi _08082EA0
	ldr r4, [sp, #0x24]
	str r4, [sp]
	mov r0, r8
	adds r1, r5, #0
	adds r2, r6, #0
	ldr r3, [sp, #0x20]
	bl ProjectileFlareHitSprite
	b _08082FB0
	.align 2, 0
_08082E9C: .4byte gSpriteData
_08082EA0:
	adds r1, #0x2c
	movs r0, #0x78
	strb r0, [r1]
	b _08082FB0
_08082EA8:
	ldr r0, _08082ECC @ =gSpriteData
	ldr r2, [sp, #0x44]
	mov r3, r8
	subs r1, r2, r3
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bhi _08082F70
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileNormalMissileHitSprite
	b _08082FB0
	.align 2, 0
_08082ECC: .4byte gSpriteData
_08082ED0:
	ldr r0, _08082EF4 @ =gSpriteData
	ldr r4, [sp, #0x44]
	mov r2, r8
	subs r1, r4, r2
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bhi _08082F70
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileSuperMissileHitSprite
	b _08082FB0
	.align 2, 0
_08082EF4: .4byte gSpriteData
_08082EF8:
	ldr r0, _08082F1C @ =gSpriteData
	ldr r3, [sp, #0x44]
	mov r4, r8
	subs r1, r3, r4
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bhi _08082F70
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileIceMissileHitSprite
	b _08082FB0
	.align 2, 0
_08082F1C: .4byte gSpriteData
_08082F20:
	ldr r0, _08082F44 @ =gSpriteData
	ldr r2, [sp, #0x44]
	mov r3, r8
	subs r1, r2, r3
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bhi _08082F70
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileDiffusionMissileHitSprite
	b _08082FB0
	.align 2, 0
_08082F44: .4byte gSpriteData
_08082F48:
	ldr r0, _08082F6C @ =gSpriteData
	ldr r4, [sp, #0x44]
	mov r2, r8
	subs r1, r4, r2
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bhi _08082F70
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileDiffusionFlakeHitSprite
	b _08082FB0
	.align 2, 0
_08082F6C: .4byte gSpriteData
_08082F70:
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl unk_84ce4
	b _08082FB0
_08082F7E:
	ldr r0, _08082FA0 @ =gSpriteData
	ldr r3, [sp, #0x44]
	mov r4, r8
	subs r1, r3, r4
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0x5a
	bhi _08082FA4
	mov r0, r8
	adds r1, r5, #0
	adds r2, r6, #0
	bl ProjectileBombHitSprite
	b _08082FB0
	.align 2, 0
_08082FA0: .4byte gSpriteData
_08082FA4:
	mov r0, r8
	ldr r1, [sp, #0x10]
	adds r2, r5, #0
	adds r3, r6, #0
	bl unk_84cac
_08082FB0:
	ldr r0, [sp, #0x10]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x10]
	cmp r0, #0xf
	bhi _08082FC0
	b _08082BFC
_08082FC0:
	ldr r1, [sp, #0x3c]
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #0x17
	bhi _08082FCE
	b _08082BA0
_08082FCE:
	ldr r2, [sp, #0x40]
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x14]
	cmp r0, #0x10
	bhi _08082FDC
	b _08082B96
_08082FDC:
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start ProjectileCheckSpriteCreateDebris
ProjectileCheckSpriteCreateDebris: @ 0x08082FEC
	push {lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08083018 @ =gSpriteData
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #3
	adds r3, r1, r2
	adds r0, r3, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08083020
	ldr r1, _0808301C @ =sSecondarySpriteStats
	ldrb r0, [r3, #0x1d]
	lsls r0, r0, #3
	adds r1, #4
	adds r0, r0, r1
	b _0808302E
	.align 2, 0
_08083018: .4byte gSpriteData
_0808301C: .4byte sSecondarySpriteStats
_08083020:
	ldr r2, _08083040 @ =sPrimarySpriteStats
	ldrb r1, [r3, #0x1d]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #1
	adds r2, #4
	adds r0, r0, r2
_0808302E:
	ldrh r1, [r0]
	movs r0, #0x10
	ands r1, r0
	lsls r0, r1, #0x10
	lsrs r1, r0, #0x10
	adds r0, r1, #0
	pop {r1}
	bx r1
	.align 2, 0
_08083040: .4byte sPrimarySpriteStats

	thumb_func_start ProjectileGetSpriteWeakness
ProjectileGetSpriteWeakness: @ 0x08083044
	push {lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08083070 @ =gSpriteData
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #3
	adds r3, r1, r2
	adds r0, r3, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08083078
	ldr r1, _08083074 @ =sSecondarySpriteStats
	ldrb r0, [r3, #0x1d]
	lsls r0, r0, #3
	adds r1, #6
	adds r0, r0, r1
	b _08083086
	.align 2, 0
_08083070: .4byte gSpriteData
_08083074: .4byte sSecondarySpriteStats
_08083078:
	ldr r2, _0808308C @ =sPrimarySpriteStats
	ldrb r1, [r3, #0x1d]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #1
	adds r2, #6
	adds r0, r0, r2
_08083086:
	ldrh r0, [r0]
	pop {r1}
	bx r1
	.align 2, 0
_0808308C: .4byte sPrimarySpriteStats

	thumb_func_start ProjectileRandomSpriteDebris
ProjectileRandomSpriteDebris: @ 0x08083090
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r1, #0
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r6, r3, #0x10
	cmp r1, #9
	beq _080830EE
	cmp r1, #9
	bgt _080830B2
	cmp r1, #5
	beq _080830B8
	b _080831B4
_080830B2:
	cmp r0, #0x11
	beq _08083140
	b _080831B4
_080830B8:
	ldr r0, _080830D8 @ =gFrameCounter8Bit
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080830DC
	adds r2, r5, #0
	subs r2, #8
	adds r3, r6, #0
	adds r3, #8
	adds r0, r7, #0
	movs r1, #2
	bl SpriteDebrisInit
	b _080831B4
	.align 2, 0
_080830D8: .4byte gFrameCounter8Bit
_080830DC:
	adds r2, r5, #0
	adds r2, #8
	adds r3, r6, #0
	subs r3, #8
	adds r0, r7, #0
	movs r1, #1
	bl SpriteDebrisInit
	b _080831B4
_080830EE:
	ldr r0, _0808311C @ =gFrameCounter8Bit
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08083120
	adds r2, r5, #0
	subs r2, #8
	adds r3, r6, #0
	adds r3, #8
	adds r0, r7, #0
	movs r1, #2
	bl SpriteDebrisInit
	adds r2, r5, #0
	adds r2, #8
	adds r3, r6, #0
	subs r3, #8
	adds r0, r7, #0
	movs r1, #4
	bl SpriteDebrisInit
	b _080831B4
	.align 2, 0
_0808311C: .4byte gFrameCounter8Bit
_08083120:
	adds r2, r5, #0
	subs r2, #8
	adds r3, r6, #0
	subs r3, #8
	adds r0, r7, #0
	movs r1, #1
	bl SpriteDebrisInit
	adds r3, r6, #0
	adds r3, #8
	adds r0, r7, #0
	movs r1, #3
	adds r2, r5, #0
	bl SpriteDebrisInit
	b _080831B4
_08083140:
	ldr r0, _08083180 @ =gFrameCounter8Bit
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08083184
	adds r2, r5, #0
	subs r2, #8
	adds r4, r6, #0
	subs r4, #8
	adds r0, r7, #0
	movs r1, #1
	adds r3, r4, #0
	bl SpriteDebrisInit
	adds r2, r5, #0
	subs r2, #0x10
	adds r3, r6, #0
	adds r3, #8
	adds r0, r7, #0
	movs r1, #3
	bl SpriteDebrisInit
	adds r2, r5, #0
	adds r2, #8
	adds r0, r7, #0
	movs r1, #4
	adds r3, r4, #0
	bl SpriteDebrisInit
	b _080831B4
	.align 2, 0
_08083180: .4byte gFrameCounter8Bit
_08083184:
	adds r2, r5, #0
	subs r2, #0x10
	adds r4, r6, #0
	adds r4, #8
	adds r0, r7, #0
	movs r1, #2
	adds r3, r4, #0
	bl SpriteDebrisInit
	adds r2, r5, #0
	adds r2, #8
	adds r0, r7, #0
	movs r1, #3
	adds r3, r4, #0
	bl SpriteDebrisInit
	adds r2, r5, #0
	adds r2, #0x10
	adds r3, r6, #0
	subs r3, #8
	adds r0, r7, #0
	movs r1, #4
	bl SpriteDebrisInit
_080831B4:
	ldr r0, _080831C0 @ =0x000001BF
	bl SoundPlay
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080831C0: .4byte 0x000001BF

	thumb_func_start ProjectileRandomSpriteDebrisPiercing
ProjectileRandomSpriteDebrisPiercing: @ 0x080831C4
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r1, #0
	lsls r2, r2, #0x10
	lsrs r4, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r5, r3, #0x10
	cmp r1, #9
	beq _08083216
	cmp r1, #9
	bgt _080831E6
	cmp r1, #5
	beq _080831EC
	b _080832AC
_080831E6:
	cmp r0, #0x11
	beq _08083268
	b _080832AC
_080831EC:
	ldr r0, _0808320C @ =gFrameCounter8Bit
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08083210
	adds r2, r4, #0
	subs r2, #8
	adds r3, r5, #0
	adds r3, #8
	adds r0, r6, #0
	movs r1, #2
	bl SpriteDebrisInit
	b _080832AC
	.align 2, 0
_0808320C: .4byte gFrameCounter8Bit
_08083210:
	adds r2, r4, #0
	adds r2, #8
	b _08083278
_08083216:
	ldr r0, _08083244 @ =gFrameCounter8Bit
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08083248
	adds r2, r4, #0
	subs r2, #8
	adds r3, r5, #0
	adds r3, #8
	adds r0, r6, #0
	movs r1, #2
	bl SpriteDebrisInit
	adds r2, r4, #0
	adds r2, #8
	adds r3, r5, #0
	subs r3, #8
	adds r0, r6, #0
	movs r1, #4
	bl SpriteDebrisInit
	b _080832AC
	.align 2, 0
_08083244: .4byte gFrameCounter8Bit
_08083248:
	adds r2, r4, #0
	subs r2, #8
	adds r3, r5, #0
	subs r3, #8
	adds r0, r6, #0
	movs r1, #1
	bl SpriteDebrisInit
	adds r3, r5, #0
	adds r3, #8
	adds r0, r6, #0
	movs r1, #3
	adds r2, r4, #0
	bl SpriteDebrisInit
	b _080832AC
_08083268:
	ldr r0, _08083288 @ =gFrameCounter8Bit
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808328C
	adds r2, r4, #0
	subs r2, #8
_08083278:
	adds r3, r5, #0
	subs r3, #8
	adds r0, r6, #0
	movs r1, #1
	bl SpriteDebrisInit
	b _080832AC
	.align 2, 0
_08083288: .4byte gFrameCounter8Bit
_0808328C:
	adds r2, r4, #0
	subs r2, #0x10
	adds r3, r5, #0
	adds r3, #8
	adds r0, r6, #0
	movs r1, #2
	bl SpriteDebrisInit
	adds r2, r4, #0
	adds r2, #0x10
	adds r3, r5, #0
	subs r3, #8
	adds r0, r6, #0
	movs r1, #4
	bl SpriteDebrisInit
_080832AC:
	ldr r0, _080832B8 @ =0x000001BF
	bl SoundPlay
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080832B8: .4byte 0x000001BF

	thumb_func_start ProjectileSetIsftForPowerBomb
ProjectileSetIsftForPowerBomb: @ 0x080832BC
	push {lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080832E8 @ =gSpriteData
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #3
	adds r1, r1, r2
	adds r0, r1, #0
	adds r0, #0x26
	ldrb r0, [r0]
	cmp r0, #0
	bne _080832E2
	adds r2, r1, #0
	adds r2, #0x2c
	ldrb r1, [r2]
	movs r0, #0x80
	orrs r0, r1
	strb r0, [r2]
_080832E2:
	pop {r0}
	bx r0
	.align 2, 0
_080832E8: .4byte gSpriteData

	thumb_func_start ProjectileBringSpriteToPowerBombCenter
ProjectileBringSpriteToPowerBombCenter: @ 0x080832EC
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r5, _08083334 @ =gCurrentPowerBomb
	ldrb r0, [r5]
	cmp r0, #4
	bne _08083368
	ldr r1, _08083338 @ =gSpriteData
	lsls r2, r4, #3
	subs r0, r2, r4
	lsls r0, r0, #3
	adds r3, r0, r1
	adds r0, r3, #0
	adds r0, #0x26
	ldrb r0, [r0]
	mov ip, r1
	adds r6, r2, #0
	cmp r0, #0
	bne _08083368
	adds r0, r3, #0
	adds r0, #0x2c
	ldrb r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08083368
	ldrh r1, [r3, #2]
	ldrh r3, [r3, #4]
	ldrh r0, [r5, #6]
	ldrh r2, [r5, #4]
	movs r5, #0x18
	cmp r1, r0
	bls _0808333C
	adds r0, r1, #0
	subs r0, #0x14
	b _08083344
	.align 2, 0
_08083334: .4byte gCurrentPowerBomb
_08083338: .4byte gSpriteData
_0808333C:
	cmp r1, r0
	bhs _08083348
	ldr r7, _08083350 @ =0x00010014
	adds r0, r1, r7
_08083344:
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
_08083348:
	cmp r3, r2
	bls _08083354
	subs r0, r3, r5
	b _0808335A
	.align 2, 0
_08083350: .4byte 0x00010014
_08083354:
	cmp r3, r2
	bhs _0808335E
	adds r0, r3, r5
_0808335A:
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
_0808335E:
	subs r0, r6, r4
	lsls r0, r0, #3
	add r0, ip
	strh r1, [r0, #2]
	strh r3, [r0, #4]
_08083368:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ProjectilePowerBombHitSprite
ProjectilePowerBombHitSprite: @ 0x08083370
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _080833B0 @ =gSpriteData
	mov sb, r0
	lsls r7, r5, #3
	subs r0, r7, r5
	lsls r0, r0, #3
	mov r1, sb
	adds r4, r0, r1
	adds r6, r4, #0
	adds r6, #0x34
	ldrb r1, [r6]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	bne _08083468
	movs r0, #8
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #0
	beq _080833B4
	adds r0, r5, #0
	bl ProjectileSetIsftForSolid
	b _08083468
	.align 2, 0
_080833B0: .4byte gSpriteData
_080833B4:
	adds r0, r5, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #0x10
	ands r1, r0
	cmp r1, #0
	beq _08083440
	ldrh r0, [r4, #0x14]
	cmp r0, #0x32
	bls _080833D2
	subs r0, #0x32
	strh r0, [r4, #0x14]
	mov r4, sb
	adds r2, r7, #0
	b _0808343C
_080833D2:
	movs r2, #0
	mov r0, r8
	strh r0, [r4, #0x14]
	ldrb r1, [r6]
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r6]
	adds r0, r4, #0
	adds r0, #0x32
	strb r2, [r0]
	subs r0, #0x12
	strb r2, [r0]
	adds r0, #0x13
	ldrb r0, [r0]
	cmp r0, #0
	beq _08083402
	ldr r0, _0808342C @ =gSamusData
	adds r1, r0, #0
	adds r1, #0x20
	ldrb r0, [r1]
	cmp r0, #1
	bne _08083402
	movs r0, #2
	strb r0, [r1]
_08083402:
	ldr r1, _08083430 @ =gSpriteData
	lsls r2, r5, #3
	subs r0, r2, r5
	lsls r0, r0, #3
	adds r3, r0, r1
	adds r0, r3, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	subs r0, #0x20
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r1, #0
	cmp r0, #0x2f
	bhi _08083434
	adds r1, r3, #0
	adds r1, #0x24
	movs r0, #0x57
	strb r0, [r1]
	adds r1, #2
	movs r0, #1
	b _0808343A
	.align 2, 0
_0808342C: .4byte gSamusData
_08083430: .4byte gSpriteData
_08083434:
	adds r1, r3, #0
	adds r1, #0x26
	movs r0, #0x28
_0808343A:
	strb r0, [r1]
_0808343C:
	movs r3, #0x11
	b _08083446
_08083440:
	movs r3, #2
	mov r4, sb
	adds r2, r7, #0
_08083446:
	subs r0, r2, r5
	lsls r0, r0, #3
	adds r0, r0, r4
	adds r1, r0, #0
	adds r1, #0x2c
	ldrb r2, [r1]
	movs r0, #0x7f
	ands r0, r2
	cmp r0, r3
	bhs _08083462
	movs r0, #0x80
	orrs r3, r0
	strb r3, [r1]
	b _08083468
_08083462:
	movs r0, #0x80
	orrs r0, r2
	strb r0, [r1]
_08083468:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start ProjectileContactDamageHitSprite
ProjectileContactDamageHitSprite: @ 0x08083474
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	ldr r1, _08083534 @ =gSpriteData
	lsls r0, r5, #3
	subs r0, r0, r5
	lsls r0, r0, #3
	adds r2, r0, r1
	adds r0, r2, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080834A6
	b _080835E6
_080834A6:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080834BA
	ldrb r0, [r2, #0x1d]
	cmp r0, #0xc0
	beq _080834BA
	cmp r0, #0xa2
	beq _080834BA
	b _080835E6
_080834BA:
	adds r0, r5, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #0x20
	mov sb, r1
	ands r1, r0
	cmp r1, #0
	beq _08083584
	ldr r1, _08083534 @ =gSpriteData
	lsls r4, r5, #3
	subs r0, r4, r5
	lsls r0, r0, #3
	adds r0, r0, r1
	mov ip, r0
	movs r3, #0
	movs r0, #0
	mov r2, ip
	strh r0, [r2, #0x14]
	adds r2, #0x34
	ldrb r1, [r2]
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x32
	strb r3, [r0]
	subs r0, #0x12
	strb r3, [r0]
	adds r0, #0x13
	ldrb r0, [r0]
	adds r6, r4, #0
	cmp r0, #0
	beq _0808350C
	ldr r0, _08083538 @ =gSamusData
	adds r1, r0, #0
	adds r1, #0x20
	ldrb r0, [r1]
	cmp r0, #1
	bne _0808350C
	movs r0, #2
	strb r0, [r1]
_0808350C:
	ldr r1, _08083534 @ =gSpriteData
	subs r0, r6, r5
	lsls r0, r0, #3
	adds r2, r0, r1
	adds r0, r2, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	subs r0, #0x20
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x2f
	bhi _0808353C
	adds r1, r2, #0
	adds r1, #0x24
	movs r0, #0x57
	strb r0, [r1]
	adds r1, #2
	movs r0, #1
	b _08083542
	.align 2, 0
_08083534: .4byte gSpriteData
_08083538: .4byte gSamusData
_0808353C:
	adds r1, r2, #0
	adds r1, #0x26
	movs r0, #0x28
_08083542:
	strb r0, [r1]
	adds r0, r5, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080835C8
	ldr r0, _08083564 @ =gSamusData
	ldrb r0, [r0, #1]
	cmp r0, #0x1e
	bne _08083568
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0x3d
	bl ParticleSet
	b _080835C8
	.align 2, 0
_08083564: .4byte gSamusData
_08083568:
	cmp r0, #0x24
	bne _08083578
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0x3f
	bl ParticleSet
	b _080835C8
_08083578:
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0x3e
	bl ParticleSet
	b _080835C8
_08083584:
	ldr r2, _080835AC @ =gSpriteData
	lsls r1, r5, #3
	subs r0, r1, r5
	lsls r0, r0, #3
	adds r4, r0, r2
	ldrb r0, [r4, #0x1d]
	adds r6, r1, #0
	cmp r0, #0xc0
	bne _080835C4
	adds r0, r5, #0
	movs r1, #0xa
	bl ProjecileDealDamage
	ldr r1, _080835B0 @ =gSamusData
	ldrh r0, [r1, #0x16]
	ldrh r4, [r4, #4]
	cmp r0, r4
	bls _080835B4
	mov r0, sb
	b _080835B6
	.align 2, 0
_080835AC: .4byte gSpriteData
_080835B0: .4byte gSamusData
_080835B4:
	movs r0, #0x10
_080835B6:
	strh r0, [r1, #0x12]
	movs r0, #1
	adds r1, r5, #0
	movs r2, #1
	bl TakeDamageFromSprite
	b _080835E6
_080835C4:
	movs r1, #2
	mov sl, r1
_080835C8:
	ldr r0, _080835F4 @ =gSpriteData
	subs r1, r6, r5
	lsls r1, r1, #3
	adds r1, r1, r0
	adds r1, #0x2c
	ldrb r2, [r1]
	movs r0, #0x7f
	ands r0, r2
	cmp r0, sl
	bhs _080835E6
	movs r0, #0x80
	ands r0, r2
	mov r2, sl
	orrs r0, r2
	strb r0, [r1]
_080835E6:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080835F4: .4byte gSpriteData

	thumb_func_start ProjecileDealDamage
ProjecileDealDamage: @ 0x080835F8
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x10
	ldr r1, _0808362C @ =gSpriteData
	lsls r4, r5, #3
	subs r0, r4, r5
	lsls r0, r0, #3
	adds r0, r0, r1
	mov ip, r0
	ldrh r0, [r0, #0x14]
	adds r6, r1, #0
	cmp r0, r2
	bls _08083630
	subs r0, r0, r2
	mov r1, ip
	strh r0, [r1, #0x14]
	movs r3, #5
	cmp r2, #2
	bls _0808369E
	movs r3, #0x11
	cmp r2, #3
	bhi _0808369E
	movs r3, #9
	b _0808369E
	.align 2, 0
_0808362C: .4byte gSpriteData
_08083630:
	movs r3, #0
	movs r0, #0
	mov r1, ip
	strh r0, [r1, #0x14]
	mov r2, ip
	adds r2, #0x34
	ldrb r1, [r2]
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x32
	strb r3, [r0]
	subs r0, #0x12
	strb r3, [r0]
	adds r0, #0x13
	ldrb r0, [r0]
	cmp r0, #0
	beq _08083666
	ldr r0, _08083690 @ =gSamusData
	adds r1, r0, #0
	adds r1, #0x20
	ldrb r0, [r1]
	cmp r0, #1
	bne _08083666
	movs r0, #2
	strb r0, [r1]
_08083666:
	lsls r1, r5, #3
	subs r0, r1, r5
	lsls r0, r0, #3
	adds r2, r0, r6
	adds r0, r2, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	subs r0, #0x20
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r1, #0
	cmp r0, #0x2f
	bhi _08083694
	adds r1, r2, #0
	adds r1, #0x24
	movs r0, #0x57
	strb r0, [r1]
	adds r1, #2
	movs r0, #1
	b _0808369A
	.align 2, 0
_08083690: .4byte gSamusData
_08083694:
	adds r1, r2, #0
	adds r1, #0x26
	movs r0, #0x28
_0808369A:
	strb r0, [r1]
	movs r3, #0x11
_0808369E:
	subs r0, r4, r5
	lsls r0, r0, #3
	adds r0, r0, r6
	adds r1, r0, #0
	adds r1, #0x2c
	ldrb r2, [r1]
	movs r0, #0x7f
	ands r0, r2
	cmp r0, r3
	bhs _080836BA
	movs r0, #0x80
	ands r0, r2
	orrs r0, r3
	strb r0, [r1]
_080836BA:
	adds r0, r3, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start ProjectileSudoScrewHitSprite
ProjectileSudoScrewHitSprite: @ 0x080836C4
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	ldr r1, _08083718 @ =gSpriteData
	lsls r0, r5, #3
	subs r0, r0, r5
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r0, [r0]
	movs r4, #0x48
	ands r4, r0
	cmp r4, #0
	bne _0808377C
	adds r0, r5, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #3
	ands r1, r0
	cmp r1, #0
	beq _0808377C
	ldr r0, _0808371C @ =gSamusData
	strb r4, [r0, #0xc]
	movs r1, #0
	ldr r0, _08083720 @ =gEquipment
	ldrb r2, [r0, #0xa]
	adds r3, r2, #0
	movs r0, #0x10
	ands r0, r2
	cmp r0, #0
	bne _08083712
	movs r0, #8
	ands r0, r2
	cmp r0, #0
	beq _08083724
_08083712:
	movs r1, #0x30
	b _0808374A
	.align 2, 0
_08083718: .4byte gSpriteData
_0808371C: .4byte gSamusData
_08083720: .4byte gEquipment
_08083724:
	movs r0, #4
	ands r0, r2
	cmp r0, #0
	beq _08083730
	movs r1, #0x1e
	b _0808374A
_08083730:
	movs r0, #2
	ands r2, r0
	cmp r2, #0
	beq _0808373C
	movs r1, #0x15
	b _0808374A
_0808373C:
	movs r0, #1
	ands r3, r0
	cmp r3, #0
	beq _08083746
	movs r1, #0xe
_08083746:
	cmp r1, #0
	beq _0808377C
_0808374A:
	adds r0, r5, #0
	bl ProjecileDealDamage
	adds r0, r5, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08083766
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0x40
	bl ParticleSet
_08083766:
	ldr r0, _08083784 @ =gSpriteData
	lsls r1, r5, #3
	subs r1, r1, r5
	lsls r1, r1, #3
	adds r1, r1, r0
	ldrh r0, [r1, #0x14]
	cmp r0, #0
	beq _0808377C
	adds r1, #0x26
	movs r0, #0
	strb r0, [r1]
_0808377C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083784: .4byte gSpriteData

	thumb_func_start ProjectileIceMissileDealDamage
ProjectileIceMissileDealDamage: @ 0x08083788
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	movs r0, #0
	str r0, [sp]
	mov sl, r0
	adds r0, r6, #0
	bl ProjectileGetSpriteWeakness
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r4, r5, #0
	movs r0, #0xc
	ands r0, r5
	cmp r0, #0
	beq _0808389A
	ldr r0, _080837E0 @ =gSpriteData
	lsls r2, r6, #3
	subs r1, r2, r6
	lsls r1, r1, #3
	adds r1, r1, r0
	ldrh r3, [r1, #0x14]
	mov sb, r0
	mov r8, r2
	cmp r3, r7
	bls _080837E4
	subs r0, r3, r7
	strh r0, [r1, #0x14]
	movs r1, #0x11
	str r1, [sp]
	movs r0, #0x40
	ands r0, r5
	cmp r0, #0
	beq _08083878
	movs r3, #0xf0
	mov sl, r3
	b _08083878
	.align 2, 0
_080837E0: .4byte gSpriteData
_080837E4:
	movs r0, #0x11
	str r0, [sp]
	movs r0, #0x40
	ands r4, r0
	cmp r4, #0
	beq _08083804
	adds r0, r1, #0
	adds r0, #0x32
	ldrb r0, [r0]
	cmp r0, #0
	bne _08083804
	movs r0, #1
	strh r0, [r1, #0x14]
	movs r1, #0xf0
	mov sl, r1
	b _08083878
_08083804:
	mov r3, r8
	subs r0, r3, r6
	lsls r0, r0, #3
	add r0, sb
	mov ip, r0
	movs r3, #0
	movs r0, #0
	mov r1, ip
	strh r0, [r1, #0x14]
	mov r2, ip
	adds r2, #0x34
	ldrb r1, [r2]
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x32
	strb r3, [r0]
	subs r0, #0x12
	strb r3, [r0]
	adds r0, #0x13
	ldrb r0, [r0]
	cmp r0, #0
	beq _08083844
	ldr r0, _0808386C @ =gSamusData
	adds r1, r0, #0
	adds r1, #0x20
	ldrb r0, [r1]
	cmp r0, #1
	bne _08083844
	movs r0, #2
	strb r0, [r1]
_08083844:
	mov r3, r8
	subs r0, r3, r6
	lsls r0, r0, #3
	mov r1, sb
	adds r2, r0, r1
	adds r0, r2, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	subs r0, #0x20
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x2f
	bhi _08083870
	adds r1, r2, #0
	adds r1, #0x24
	movs r0, #0x57
	strb r0, [r1]
	adds r1, #2
	movs r0, #1
	b _08083876
	.align 2, 0
_0808386C: .4byte gSamusData
_08083870:
	adds r1, r2, #0
	adds r1, #0x26
	movs r0, #0x28
_08083876:
	strb r0, [r1]
_08083878:
	mov r3, r8
	subs r0, r3, r6
	lsls r0, r0, #3
	add r0, sb
	adds r2, r0, #0
	adds r2, #0x2c
	ldrb r1, [r2]
	movs r0, #0x7f
	ands r0, r1
	ldr r3, [sp]
	cmp r0, r3
	bhs _0808389E
	movs r0, #0x80
	ands r0, r1
	orrs r0, r3
	strb r0, [r2]
	b _0808389E
_0808389A:
	movs r0, #0xf0
	mov sl, r0
_0808389E:
	mov r1, sl
	cmp r1, #0
	beq _080838D8
	ldr r1, _080838EC @ =gSpriteData
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #3
	adds r2, r0, r1
	adds r1, r2, #0
	adds r1, #0x33
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x32
	mov r3, sl
	strb r3, [r0]
	adds r0, #3
	ldrb r0, [r0]
	ldrb r1, [r2, #0x1f]
	adds r0, r0, r1
	movs r1, #0xf
	subs r1, r1, r0
	adds r0, r2, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0xa3
	lsls r0, r0, #1
	bl CheckPlayNotAlreadyPlayingSound
_080838D8:
	ldr r0, [sp]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080838EC: .4byte gSpriteData

	thumb_func_start ProjectileDiffusionFlakeDealDamage
ProjectileDiffusionFlakeDealDamage: @ 0x080838F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	movs r0, #0
	mov sl, r0
	mov sb, r0
	adds r0, r6, #0
	bl ProjectileGetSpriteWeakness
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r4, r5, #0
	movs r0, #0xc
	ands r0, r5
	cmp r0, #0
	beq _080839F8
	ldr r0, _08083944 @ =gSpriteData
	lsls r2, r6, #3
	subs r1, r2, r6
	lsls r1, r1, #3
	adds r1, r1, r0
	ldrh r3, [r1, #0x14]
	mov r8, r0
	adds r7, r2, #0
	cmp r3, #1
	bls _08083948
	subs r0, r3, #1
	strh r0, [r1, #0x14]
	movs r1, #5
	mov sl, r1
	movs r0, #0x40
	ands r0, r5
	cmp r0, #0
	beq _080839D8
	movs r0, #0xf0
	mov sb, r0
	b _080839D8
	.align 2, 0
_08083944: .4byte gSpriteData
_08083948:
	movs r0, #0x11
	mov sl, r0
	movs r0, #0x40
	ands r4, r0
	cmp r4, #0
	beq _08083968
	adds r0, r1, #0
	adds r0, #0x32
	ldrb r0, [r0]
	cmp r0, #0
	bne _08083968
	movs r0, #1
	strh r0, [r1, #0x14]
	movs r1, #0xf0
	mov sb, r1
	b _080839D8
_08083968:
	subs r0, r7, r6
	lsls r0, r0, #3
	add r0, r8
	mov ip, r0
	movs r3, #0
	movs r0, #0
	mov r1, ip
	strh r0, [r1, #0x14]
	mov r2, ip
	adds r2, #0x34
	ldrb r1, [r2]
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x32
	strb r3, [r0]
	subs r0, #0x12
	strb r3, [r0]
	adds r0, #0x13
	ldrb r0, [r0]
	cmp r0, #0
	beq _080839A6
	ldr r0, _080839CC @ =gSamusData
	adds r1, r0, #0
	adds r1, #0x20
	ldrb r0, [r1]
	cmp r0, #1
	bne _080839A6
	movs r0, #2
	strb r0, [r1]
_080839A6:
	subs r0, r7, r6
	lsls r0, r0, #3
	mov r1, r8
	adds r2, r0, r1
	adds r0, r2, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	subs r0, #0x20
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x2f
	bhi _080839D0
	adds r1, r2, #0
	adds r1, #0x24
	movs r0, #0x57
	strb r0, [r1]
	adds r1, #2
	movs r0, #1
	b _080839D6
	.align 2, 0
_080839CC: .4byte gSamusData
_080839D0:
	adds r1, r2, #0
	adds r1, #0x26
	movs r0, #0x28
_080839D6:
	strb r0, [r1]
_080839D8:
	subs r0, r7, r6
	lsls r0, r0, #3
	add r0, r8
	adds r2, r0, #0
	adds r2, #0x2c
	ldrb r1, [r2]
	movs r0, #0x7f
	ands r0, r1
	cmp r0, sl
	bhs _080839FC
	movs r0, #0x80
	ands r0, r1
	mov r1, sl
	orrs r0, r1
	strb r0, [r2]
	b _080839FC
_080839F8:
	movs r0, #0xf0
	mov sb, r0
_080839FC:
	mov r1, sb
	cmp r1, #0
	beq _08083A36
	ldr r1, _08083A48 @ =gSpriteData
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #3
	adds r2, r0, r1
	adds r1, r2, #0
	adds r1, #0x33
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x32
	mov r1, sb
	strb r1, [r0]
	adds r0, #3
	ldrb r0, [r0]
	ldrb r1, [r2, #0x1f]
	adds r0, r0, r1
	movs r1, #0xf
	subs r1, r1, r0
	adds r0, r2, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0xa3
	lsls r0, r0, #1
	bl CheckPlayNotAlreadyPlayingSound
_08083A36:
	mov r0, sl
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08083A48: .4byte gSpriteData

	thumb_func_start ProjectileIceBeamDealDamage
ProjectileIceBeamDealDamage: @ 0x08083A4C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	movs r6, #0
	movs r7, #0
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	movs r0, #3
	ands r0, r3
	cmp r0, #0
	beq _08083B2C
	ldr r0, _08083A9C @ =gSpriteData
	lsls r2, r4, #3
	subs r1, r2, r4
	lsls r1, r1, #3
	adds r1, r1, r0
	mov ip, r1
	ldrh r1, [r1, #0x14]
	mov sb, r0
	mov r8, r2
	cmp r1, r5
	bls _08083AA0
	subs r0, r1, r5
	mov r1, ip
	strh r0, [r1, #0x14]
	movs r6, #0x11
	movs r0, #0x40
	ands r0, r3
	cmp r0, #0
	beq _08083B0C
	movs r7, #0xf0
	b _08083B0C
	.align 2, 0
_08083A9C: .4byte gSpriteData
_08083AA0:
	movs r6, #0x11
	movs r3, #0
	mov r0, ip
	strh r7, [r0, #0x14]
	mov r2, ip
	adds r2, #0x34
	ldrb r1, [r2]
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x32
	strb r3, [r0]
	subs r0, #0x12
	strb r3, [r0]
	adds r0, #0x13
	ldrb r0, [r0]
	cmp r0, #0
	beq _08083AD6
	ldr r0, _08083B00 @ =gSamusData
	adds r1, r0, #0
	adds r1, #0x20
	ldrb r0, [r1]
	cmp r0, #1
	bne _08083AD6
	movs r0, #2
	strb r0, [r1]
_08083AD6:
	mov r1, r8
	subs r0, r1, r4
	lsls r0, r0, #3
	mov r1, sb
	adds r2, r0, r1
	adds r0, r2, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	subs r0, #0x20
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x2f
	bhi _08083B04
	adds r1, r2, #0
	adds r1, #0x24
	movs r0, #0x57
	strb r0, [r1]
	adds r1, #2
	movs r0, #1
	b _08083B0A
	.align 2, 0
_08083B00: .4byte gSamusData
_08083B04:
	adds r1, r2, #0
	adds r1, #0x26
	movs r0, #0x28
_08083B0A:
	strb r0, [r1]
_08083B0C:
	mov r1, r8
	subs r0, r1, r4
	lsls r0, r0, #3
	add r0, sb
	adds r2, r0, #0
	adds r2, #0x2c
	ldrb r1, [r2]
	movs r0, #0x7f
	ands r0, r1
	cmp r0, r6
	bhs _08083B2E
	movs r0, #0x80
	ands r0, r1
	orrs r0, r6
	strb r0, [r2]
	b _08083B2E
_08083B2C:
	movs r7, #0xf0
_08083B2E:
	cmp r7, #0
	beq _08083B64
	ldr r1, _08083B74 @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r2, r0, r1
	adds r1, r2, #0
	adds r1, #0x33
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x32
	strb r7, [r0]
	adds r0, #3
	ldrb r0, [r0]
	ldrb r1, [r2, #0x1f]
	adds r0, r0, r1
	movs r1, #0xf
	subs r1, r1, r0
	adds r0, r2, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0xa3
	lsls r0, r0, #1
	bl CheckPlayNotAlreadyPlayingSound
_08083B64:
	adds r0, r6, #0
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08083B74: .4byte gSpriteData

	thumb_func_start ProjectileSetIsftForSolid
ProjectileSetIsftForSolid: @ 0x08083B78
	push {lr}
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r3, _08083BA8 @ =gSpriteData
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r1, r1, #3
	adds r1, r1, r3
	adds r3, r1, #0
	adds r3, #0x2c
	ldrb r2, [r3]
	movs r1, #0x7f
	ands r1, r2
	cmp r1, #2
	bhs _08083BA2
	movs r1, #0x80
	ands r1, r2
	movs r2, #2
	orrs r1, r2
	strb r1, [r3]
_08083BA2:
	pop {r1}
	bx r1
	.align 2, 0
_08083BA8: .4byte gSpriteData

	thumb_func_start ProjectileNormalBeamHitSprite
ProjectileNormalBeamHitSprite: @ 0x08083BAC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	mov sb, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	mov r8, r5
	lsls r3, r3, #0x10
	lsrs r6, r3, #0x10
	adds r7, r6, #0
	ldr r1, _08083BEC @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08083BF0
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	b _08083C36
	.align 2, 0
_08083BEC: .4byte gSpriteData
_08083BF0:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08083C04
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #7
	bl ParticleSet
	b _08083C52
_08083C04:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _08083C42
	adds r0, r4, #0
	movs r1, #2
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08083C36
	movs r0, #1
	adds r1, r7, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileRandomSpriteDebris
_08083C36:
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #3
	bl ParticleSet
	b _08083C52
_08083C42:
	mov r0, sb
	bl ProjectileSetIsftForSolid
	mov r0, r8
	adds r1, r7, #0
	movs r2, #7
	bl ParticleSet
_08083C52:
	ldr r0, _08083C6C @ =gProjectileData
	mov r2, sl
	lsls r1, r2, #5
	adds r1, r1, r0
	movs r0, #0
	strb r0, [r1]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083C6C: .4byte gProjectileData

	thumb_func_start ProjectileChargedNormalBeamHitSprite
ProjectileChargedNormalBeamHitSprite: @ 0x08083C70
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	mov sb, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	mov r8, r5
	lsls r3, r3, #0x10
	lsrs r6, r3, #0x10
	adds r7, r6, #0
	ldr r1, _08083CB0 @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08083CB4
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	b _08083CFA
	.align 2, 0
_08083CB0: .4byte gSpriteData
_08083CB4:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08083CC8
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #7
	bl ParticleSet
	b _08083D16
_08083CC8:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #3
	ands r1, r0
	cmp r1, #0
	beq _08083D06
	adds r0, r4, #0
	movs r1, #0xa
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08083CFA
	movs r0, #1
	adds r1, r7, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileRandomSpriteDebris
_08083CFA:
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #3
	bl ParticleSet
	b _08083D16
_08083D06:
	mov r0, sb
	bl ProjectileSetIsftForSolid
	mov r0, r8
	adds r1, r7, #0
	movs r2, #7
	bl ParticleSet
_08083D16:
	ldr r0, _08083D30 @ =gProjectileData
	mov r2, sl
	lsls r1, r2, #5
	adds r1, r1, r0
	movs r0, #0
	strb r0, [r1]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083D30: .4byte gProjectileData

	thumb_func_start ProjectileChargeBeamHitSprite
ProjectileChargeBeamHitSprite: @ 0x08083D34
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	mov sb, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	mov r8, r5
	lsls r3, r3, #0x10
	lsrs r6, r3, #0x10
	adds r7, r6, #0
	ldr r1, _08083D74 @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08083D78
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	b _08083DBE
	.align 2, 0
_08083D74: .4byte gSpriteData
_08083D78:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08083D8C
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #7
	bl ParticleSet
	b _08083DDA
_08083D8C:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _08083DCA
	adds r0, r4, #0
	movs r1, #2
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08083DBE
	movs r0, #1
	adds r1, r7, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileRandomSpriteDebris
_08083DBE:
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #4
	bl ParticleSet
	b _08083DDA
_08083DCA:
	mov r0, sb
	bl ProjectileSetIsftForSolid
	mov r0, r8
	adds r1, r7, #0
	movs r2, #7
	bl ParticleSet
_08083DDA:
	ldr r2, _08083E10 @ =gProjectileData
	mov r0, sl
	lsls r3, r0, #5
	adds r4, r3, r2
	ldrb r1, [r4]
	movs r5, #4
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _08083DFC
	ldrb r0, [r4, #0x1f]
	lsls r0, r0, #5
	adds r1, r0, r2
	ldrb r0, [r1, #0x12]
	cmp r0, #3
	bhi _08083DFC
	strb r5, [r1, #0x12]
_08083DFC:
	adds r1, r3, r2
	movs r0, #0
	strb r0, [r1]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083E10: .4byte gProjectileData

	thumb_func_start ProjectileChargedChargeBeamHitSprite
ProjectileChargedChargeBeamHitSprite: @ 0x08083E14
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	mov sb, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	mov r8, r5
	lsls r3, r3, #0x10
	lsrs r6, r3, #0x10
	adds r7, r6, #0
	ldr r1, _08083E54 @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08083E58
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	b _08083E9E
	.align 2, 0
_08083E54: .4byte gSpriteData
_08083E58:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08083E6C
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #7
	bl ParticleSet
	b _08083EBA
_08083E6C:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #3
	ands r1, r0
	cmp r1, #0
	beq _08083EAA
	adds r0, r4, #0
	movs r1, #0xa
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08083E9E
	movs r0, #1
	adds r1, r7, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileRandomSpriteDebris
_08083E9E:
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #4
	bl ParticleSet
	b _08083EBA
_08083EAA:
	mov r0, sb
	bl ProjectileSetIsftForSolid
	mov r0, r8
	adds r1, r7, #0
	movs r2, #7
	bl ParticleSet
_08083EBA:
	ldr r2, _08083EF0 @ =gProjectileData
	mov r0, sl
	lsls r3, r0, #5
	adds r4, r3, r2
	ldrb r1, [r4]
	movs r5, #4
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _08083EDC
	ldrb r0, [r4, #0x1f]
	lsls r0, r0, #5
	adds r1, r0, r2
	ldrb r0, [r1, #0x12]
	cmp r0, #3
	bhi _08083EDC
	strb r5, [r1, #0x12]
_08083EDC:
	adds r1, r3, r2
	movs r0, #0
	strb r0, [r1]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083EF0: .4byte gProjectileData

	thumb_func_start ProjectileWideBeamHitSprite
ProjectileWideBeamHitSprite: @ 0x08083EF4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	mov sb, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	mov r8, r5
	lsls r3, r3, #0x10
	lsrs r6, r3, #0x10
	adds r7, r6, #0
	ldr r1, _08083F34 @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08083F38
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	b _08083F7E
	.align 2, 0
_08083F34: .4byte gSpriteData
_08083F38:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08083F4C
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #7
	bl ParticleSet
	b _08083F9A
_08083F4C:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _08083F8A
	adds r0, r4, #0
	movs r1, #3
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08083F7E
	movs r0, #1
	adds r1, r7, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileRandomSpriteDebris
_08083F7E:
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #5
	bl ParticleSet
	b _08083F9A
_08083F8A:
	mov r0, sb
	bl ProjectileSetIsftForSolid
	mov r0, r8
	adds r1, r7, #0
	movs r2, #7
	bl ParticleSet
_08083F9A:
	ldr r0, _08083FB4 @ =gProjectileData
	mov r2, sl
	lsls r1, r2, #5
	adds r1, r1, r0
	movs r0, #0
	strb r0, [r1]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083FB4: .4byte gProjectileData

	thumb_func_start ProjectileChargedWideBeamHitSprite
ProjectileChargedWideBeamHitSprite: @ 0x08083FB8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	mov sb, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	mov r8, r5
	lsls r3, r3, #0x10
	lsrs r6, r3, #0x10
	adds r7, r6, #0
	ldr r1, _08083FF8 @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08083FFC
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	b _08084042
	.align 2, 0
_08083FF8: .4byte gSpriteData
_08083FFC:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08084010
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #7
	bl ParticleSet
	b _0808405E
_08084010:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #3
	ands r1, r0
	cmp r1, #0
	beq _0808404E
	adds r0, r4, #0
	movs r1, #0xf
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08084042
	movs r0, #1
	adds r1, r7, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileRandomSpriteDebris
_08084042:
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #5
	bl ParticleSet
	b _0808405E
_0808404E:
	mov r0, sb
	bl ProjectileSetIsftForSolid
	mov r0, r8
	adds r1, r7, #0
	movs r2, #7
	bl ParticleSet
_0808405E:
	ldr r0, _08084078 @ =gProjectileData
	mov r2, sl
	lsls r1, r2, #5
	adds r1, r1, r0
	movs r0, #0
	strb r0, [r1]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08084078: .4byte gProjectileData

	thumb_func_start ProjectilePlasmaBeamHitSprite
ProjectilePlasmaBeamHitSprite: @ 0x0808407C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	str r4, [sp]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	mov sb, r8
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	str r6, [sp, #4]
	lsls r3, r3, #0x10
	lsrs r7, r3, #0x10
	mov sl, r7
	ldr r1, _080840DC @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0
	beq _080840E4
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #6
	bl ParticleSet
	ldr r0, _080840E0 @ =gProjectileData
	mov r2, r8
	lsls r1, r2, #5
	adds r1, r1, r0
	movs r0, #0
	strb r0, [r1]
	b _0808414C
	.align 2, 0
_080840DC: .4byte gSpriteData
_080840E0: .4byte gProjectileData
_080840E4:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08084108
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #7
	bl ParticleSet
	ldr r1, _08084104 @ =gProjectileData
	mov r2, sb
	lsls r0, r2, #5
	adds r0, r0, r1
	strb r5, [r0]
	b _0808414C
	.align 2, 0
_08084104: .4byte gProjectileData
_08084108:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _0808413C
	adds r0, r4, #0
	movs r1, #3
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808414C
	movs r0, #1
	adds r1, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl ProjectileRandomSpriteDebrisPiercing
	b _0808414C
_0808413C:
	ldr r0, [sp]
	bl ProjectileSetIsftForSolid
	ldr r0, [sp, #4]
	mov r1, sl
	movs r2, #7
	bl ParticleSet
_0808414C:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start ProjectileChargedPlasmaBeamHitSprite
ProjectileChargedPlasmaBeamHitSprite: @ 0x0808415C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	str r4, [sp]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	mov sb, r8
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	str r6, [sp, #4]
	lsls r3, r3, #0x10
	lsrs r7, r3, #0x10
	mov sl, r7
	ldr r1, _080841BC @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0
	beq _080841C4
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #6
	bl ParticleSet
	ldr r0, _080841C0 @ =gProjectileData
	mov r2, r8
	lsls r1, r2, #5
	adds r1, r1, r0
	movs r0, #0
	strb r0, [r1]
	b _0808422C
	.align 2, 0
_080841BC: .4byte gSpriteData
_080841C0: .4byte gProjectileData
_080841C4:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080841E8
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #7
	bl ParticleSet
	ldr r1, _080841E4 @ =gProjectileData
	mov r2, sb
	lsls r0, r2, #5
	adds r0, r0, r1
	strb r5, [r0]
	b _0808422C
	.align 2, 0
_080841E4: .4byte gProjectileData
_080841E8:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #3
	ands r1, r0
	cmp r1, #0
	beq _0808421C
	adds r0, r4, #0
	movs r1, #9
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808422C
	movs r0, #1
	adds r1, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl ProjectileRandomSpriteDebrisPiercing
	b _0808422C
_0808421C:
	ldr r0, [sp]
	bl ProjectileSetIsftForSolid
	ldr r0, [sp, #4]
	mov r1, sl
	movs r2, #7
	bl ParticleSet
_0808422C:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start ProjectileWaveBeamHitSprite
ProjectileWaveBeamHitSprite: @ 0x0808423C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	str r4, [sp]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	mov r0, sb
	str r0, [sp, #4]
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	str r7, [sp, #8]
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov r8, r3
	mov sl, r8
	ldr r1, _080842D0 @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r5, r0, r1
	adds r0, r5, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0
	beq _080842D8
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	ldr r0, _080842D4 @ =gEquipment
	ldrb r1, [r0, #0xa]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _08084296
	b _0808438E
_08084296:
	adds r7, r5, #0
	adds r7, #0x32
	ldrb r6, [r7]
	cmp r6, #0
	bne _0808438E
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #0x40
	ands r1, r0
	cmp r1, #0
	beq _0808438E
	adds r0, r5, #0
	adds r0, #0x33
	strb r6, [r0]
	movs r0, #0xf0
	strb r0, [r7]
	adds r0, r5, #0
	adds r0, #0x35
	ldrb r0, [r0]
	ldrb r1, [r5, #0x1f]
	adds r0, r0, r1
	movs r1, #0xf
	subs r1, r1, r0
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	b _0808438E
	.align 2, 0
_080842D0: .4byte gSpriteData
_080842D4: .4byte gEquipment
_080842D8:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080842FC
	adds r0, r7, #0
	mov r1, r8
	movs r2, #7
	bl ParticleSet
	ldr r1, _080842F8 @ =gProjectileData
	mov r2, sb
	lsls r0, r2, #5
	adds r0, r0, r1
	strb r6, [r0]
	b _0808438E
	.align 2, 0
_080842F8: .4byte gProjectileData
_080842FC:
	ldr r0, _08084334 @ =gEquipment
	ldrb r1, [r0, #0xa]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0808434A
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #0x42
	ands r1, r0
	cmp r1, #0
	beq _08084338
	adds r0, r4, #0
	ldr r1, [sp, #4]
	movs r2, #6
	bl ProjectileIceBeamDealDamage
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808438E
	movs r0, #2
	b _08084372
	.align 2, 0
_08084334: .4byte gEquipment
_08084338:
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	adds r0, r7, #0
	mov r1, r8
	movs r2, #7
	bl ParticleSet
	b _0808438E
_0808434A:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _0808437E
	adds r0, r4, #0
	movs r1, #3
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808438E
	movs r0, #1
_08084372:
	adds r1, r5, #0
	adds r2, r7, #0
	mov r3, r8
	bl ProjectileRandomSpriteDebrisPiercing
	b _0808438E
_0808437E:
	ldr r0, [sp]
	bl ProjectileSetIsftForSolid
	ldr r0, [sp, #8]
	mov r1, sl
	movs r2, #7
	bl ParticleSet
_0808438E:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ProjectileChargedWaveBeamHitSprite
ProjectileChargedWaveBeamHitSprite: @ 0x080843A0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	str r4, [sp]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	mov sl, sb
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	str r7, [sp, #4]
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov r8, r3
	mov r0, r8
	str r0, [sp, #8]
	ldr r1, _08084438 @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r5, r0, r1
	adds r0, r5, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0
	beq _08084440
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	ldr r0, _0808443C @ =gEquipment
	ldrb r1, [r0, #0xa]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _080843FA
	b _08084522
_080843FA:
	adds r7, r5, #0
	adds r7, #0x32
	ldrb r6, [r7]
	cmp r6, #0
	beq _08084406
	b _08084522
_08084406:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #0x40
	ands r1, r0
	cmp r1, #0
	bne _08084416
	b _08084522
_08084416:
	adds r0, r5, #0
	adds r0, #0x33
	strb r6, [r0]
	movs r0, #0xf0
	strb r0, [r7]
	adds r0, r5, #0
	adds r0, #0x35
	ldrb r0, [r0]
	ldrb r1, [r5, #0x1f]
	adds r0, r0, r1
	movs r1, #0xf
	subs r1, r1, r0
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	b _08084522
	.align 2, 0
_08084438: .4byte gSpriteData
_0808443C: .4byte gEquipment
_08084440:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08084464
	adds r0, r7, #0
	mov r1, r8
	movs r2, #7
	bl ParticleSet
	ldr r1, _08084460 @ =gProjectileData
	mov r2, sb
	lsls r0, r2, #5
	adds r0, r0, r1
	strb r6, [r0]
	b _08084522
	.align 2, 0
_08084460: .4byte gProjectileData
_08084464:
	ldr r0, _0808449C @ =gEquipment
	ldrb r1, [r0, #0xa]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080844B2
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #0x43
	ands r1, r0
	cmp r1, #0
	beq _080844A0
	adds r0, r4, #0
	mov r1, sl
	movs r2, #0xc
	bl ProjectileIceBeamDealDamage
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08084522
	movs r0, #2
	b _080844DA
	.align 2, 0
_0808449C: .4byte gEquipment
_080844A0:
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	adds r0, r7, #0
	mov r1, r8
	movs r2, #7
	bl ParticleSet
	b _08084522
_080844B2:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #3
	ands r1, r0
	cmp r1, #0
	beq _080844E6
	adds r0, r4, #0
	movs r1, #9
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08084522
	movs r0, #1
_080844DA:
	adds r1, r5, #0
	adds r2, r7, #0
	mov r3, r8
	bl ProjectileRandomSpriteDebrisPiercing
	b _08084522
_080844E6:
	ldrb r0, [r5, #0x1d]
	cmp r0, #0xc0
	bne _08084512
	adds r0, r4, #0
	movs r1, #9
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08084522
	movs r0, #1
	adds r1, r5, #0
	adds r2, r7, #0
	mov r3, r8
	bl ProjectileRandomSpriteDebris
	b _08084522
_08084512:
	ldr r0, [sp]
	bl ProjectileSetIsftForSolid
	ldr r0, [sp, #4]
	ldr r1, [sp, #8]
	movs r2, #7
	bl ParticleSet
_08084522:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ProjectileFlareHitSprite
ProjectileFlareHitSprite: @ 0x08084534
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r4, [sp, #0x24]
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	mov sb, r5
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp]
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r7, r3, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r8, r4
	ldr r1, _08084584 @ =gSpriteData
	lsls r0, r5, #3
	subs r0, r0, r5
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	bne _0808464E
	movs r4, #8
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _08084588
	adds r0, r5, #0
	bl ProjectileSetIsftForSolid
	b _0808464E
	.align 2, 0
_08084584: .4byte gSpriteData
_08084588:
	adds r0, r5, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #3
	ands r1, r0
	cmp r1, #0
	beq _0808463E
	ldr r0, _080845A8 @ =gEquipment
	ldrb r2, [r0, #0xa]
	adds r0, r2, #0
	ands r0, r4
	cmp r0, #0
	beq _080845AC
	movs r1, #0xf
	b _080845C4
	.align 2, 0
_080845A8: .4byte gEquipment
_080845AC:
	movs r0, #4
	ands r0, r2
	cmp r0, #0
	beq _080845B8
	movs r1, #0xc
	b _080845C4
_080845B8:
	movs r0, #2
	ands r2, r0
	movs r1, #6
	cmp r2, #0
	beq _080845C4
	movs r1, #9
_080845C4:
	mov r0, sb
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	ldr r4, [sp]
	adds r5, r6, #0
	cmp r7, r4
	bls _080845E4
	subs r0, r7, r4
	cmp r0, #0x60
	ble _080845F2
	adds r0, r4, #0
	adds r0, #0x40
	b _080845EE
_080845E4:
	subs r0, r4, r7
	cmp r0, #0x60
	ble _080845F2
	adds r0, r4, #0
	subs r0, #0x40
_080845EE:
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_080845F2:
	cmp r8, r6
	bls _08084604
	mov r1, r8
	subs r0, r1, r6
	cmp r0, #0x30
	ble _08084614
	adds r0, r6, #0
	adds r0, #0x40
	b _08084610
_08084604:
	mov r1, r8
	subs r0, r6, r1
	cmp r0, #0x30
	ble _08084614
	adds r0, r6, #0
	subs r0, #0x40
_08084610:
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_08084614:
	mov r0, sb
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808462C
	movs r0, #0
	mov r1, sl
	adds r2, r4, #0
	adds r3, r5, #0
	bl ProjectileRandomSpriteDebris
_0808462C:
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #2
	bl ParticleSet
	movs r0, #0xf7
	bl SoundPlay
	b _0808464E
_0808463E:
	mov r0, sb
	bl ProjectileSetIsftForSolid
	ldr r0, [sp]
	adds r1, r6, #0
	movs r2, #7
	bl ParticleSet
_0808464E:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ProjectileStartMissileTumble
ProjectileStartMissileTumble: @ 0x08084660
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r1, #0x18
	ldr r5, _080846A8 @ =gProjectileData
	lsrs r1, r1, #0x13
	adds r6, r1, r5
	movs r4, #0
	movs r2, #7
	strb r2, [r6, #0x12]
	strb r4, [r6, #0x1e]
	ldrb r3, [r6]
	movs r2, #0xef
	ands r2, r3
	movs r3, #8
	orrs r2, r3
	strb r2, [r6]
	strb r4, [r6, #0xe]
	strh r4, [r6, #0xc]
	adds r5, #4
	adds r1, r1, r5
	ldr r2, _080846AC @ =0x0858EA20
	str r2, [r1]
	ldr r2, _080846B0 @ =gSpriteData
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #3
	adds r1, r1, r2
	ldrh r0, [r6, #0xa]
	ldrh r1, [r1, #4]
	cmp r0, r1
	bls _080846B4
	ldrb r0, [r6]
	movs r1, #0x40
	orrs r0, r1
	b _080846BA
	.align 2, 0
_080846A8: .4byte gProjectileData
_080846AC: .4byte 0x0858EA20
_080846B0: .4byte gSpriteData
_080846B4:
	ldrb r1, [r6]
	movs r0, #0xbf
	ands r0, r1
_080846BA:
	strb r0, [r6]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ProjectileNormalMissileHitSprite
ProjectileNormalMissileHitSprite: @ 0x080846C4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	mov sb, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	str r5, [sp]
	lsls r3, r3, #0x10
	lsrs r6, r3, #0x10
	mov sl, r6
	ldr r1, _08084708 @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r1, [r0]
	movs r7, #8
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	beq _0808470C
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	b _08084754
	.align 2, 0
_08084708: .4byte gSpriteData
_0808470C:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08084722
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #7
	bl ParticleSet
	adds r0, r4, #0
	b _08084772
_08084722:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	adds r1, r7, #0
	ands r1, r0
	cmp r1, #0
	beq _08084760
	adds r0, r4, #0
	movs r1, #0xa
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08084754
	movs r0, #1
	adds r1, r7, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileRandomSpriteDebris
_08084754:
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #8
	bl ParticleSet
	b _0808477A
_08084760:
	mov r0, sb
	bl ProjectileSetIsftForSolid
	ldr r0, [sp]
	mov r1, sl
	movs r2, #7
	bl ParticleSet
	mov r0, sb
_08084772:
	mov r1, r8
	bl ProjectileStartMissileTumble
	b _08084786
_0808477A:
	ldr r0, _08084798 @ =gProjectileData
	mov r2, r8
	lsls r1, r2, #5
	adds r1, r1, r0
	movs r0, #0
	strb r0, [r1]
_08084786:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08084798: .4byte gProjectileData

	thumb_func_start ProjectileSuperMissileHitSprite
ProjectileSuperMissileHitSprite: @ 0x0808479C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r7, r4, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	mov sl, r5
	lsls r3, r3, #0x10
	lsrs r6, r3, #0x10
	mov sb, r6
	ldr r1, _080847DC @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080847E0
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	b _08084828
	.align 2, 0
_080847DC: .4byte gSpriteData
_080847E0:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080847F6
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #7
	bl ParticleSet
	adds r0, r4, #0
	b _08084846
_080847F6:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #0xc
	ands r1, r0
	cmp r1, #0
	beq _08084834
	adds r0, r4, #0
	movs r1, #0x1e
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08084828
	movs r0, #1
	adds r1, r7, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl ProjectileRandomSpriteDebris
_08084828:
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #9
	bl ParticleSet
	b _0808484E
_08084834:
	adds r0, r7, #0
	bl ProjectileSetIsftForSolid
	mov r0, sl
	mov r1, sb
	movs r2, #7
	bl ParticleSet
	adds r0, r7, #0
_08084846:
	mov r1, r8
	bl ProjectileStartMissileTumble
	b _0808485A
_0808484E:
	ldr r0, _08084868 @ =gProjectileData
	mov r2, r8
	lsls r1, r2, #5
	adds r1, r1, r0
	movs r0, #0
	strb r0, [r1]
_0808485A:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08084868: .4byte gProjectileData

	thumb_func_start ProjectileIceMissileHitSprite
ProjectileIceMissileHitSprite: @ 0x0808486C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	mov sb, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	str r6, [sp]
	lsls r3, r3, #0x10
	lsrs r7, r3, #0x10
	mov sl, r7
	ldr r1, _080848F0 @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r5, r0, r1
	adds r0, r5, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080848F4
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0xa
	bl ParticleSet
	adds r7, r5, #0
	adds r7, #0x32
	ldrb r6, [r7]
	cmp r6, #0
	bne _08084964
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #0x40
	ands r1, r0
	cmp r1, #0
	beq _08084964
	adds r0, r5, #0
	adds r0, #0x33
	strb r6, [r0]
	movs r0, #0xf0
	strb r0, [r7]
	adds r0, r5, #0
	adds r0, #0x35
	ldrb r0, [r0]
	ldrb r1, [r5, #0x1f]
	adds r0, r0, r1
	movs r1, #0xf
	subs r1, r1, r0
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	b _08084964
	.align 2, 0
_080848F0: .4byte gSpriteData
_080848F4:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0808490A
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #7
	bl ParticleSet
	adds r0, r4, #0
	b _0808495C
_0808490A:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #0x4c
	ands r1, r0
	cmp r1, #0
	beq _0808494A
	adds r0, r4, #0
	mov r1, r8
	movs r2, #0x28
	bl ProjectileIceMissileDealDamage
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808493E
	movs r0, #2
	adds r1, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl ProjectileRandomSpriteDebris
_0808493E:
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0xa
	bl ParticleSet
	b _08084964
_0808494A:
	mov r0, sb
	bl ProjectileSetIsftForSolid
	ldr r0, [sp]
	mov r1, sl
	movs r2, #7
	bl ParticleSet
	mov r0, sb
_0808495C:
	mov r1, r8
	bl ProjectileStartMissileTumble
	b _08084970
_08084964:
	ldr r0, _08084980 @ =gProjectileData
	mov r2, r8
	lsls r1, r2, #5
	adds r1, r1, r0
	movs r0, #0
	strb r0, [r1]
_08084970:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08084980: .4byte gProjectileData

	thumb_func_start ProjectileDiffusionMissileHitSprite
ProjectileDiffusionMissileHitSprite: @ 0x08084984
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	mov r8, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r7, r3, #0x10
	movs r0, #0
	str r0, [sp, #0xc]
	ldr r1, _080849DC @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08084A3C
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	ldr r0, _080849E0 @ =gProjectileData
	mov r2, sb
	lsls r1, r2, #5
	adds r0, r1, r0
	ldrb r0, [r0, #0xf]
	mov sl, r1
	cmp r0, #0xe
	bne _080849E4
	movs r0, #1
	str r0, [sp, #0xc]
	b _080849EE
	.align 2, 0
_080849DC: .4byte gSpriteData
_080849E0: .4byte gProjectileData
_080849E4:
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0xb
	bl ParticleSet
_080849EE:
	ldr r1, _08084A38 @ =gSpriteData
	mov r2, r8
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #3
	adds r4, r0, r1
	movs r0, #0x32
	adds r0, r0, r4
	mov sb, r0
	ldrb r5, [r0]
	cmp r5, #0
	bne _08084AC2
	mov r0, r8
	bl ProjectileGetSpriteWeakness
	movs r1, #0x40
	ands r1, r0
	cmp r1, #0
	beq _08084AC2
	adds r0, r4, #0
	adds r0, #0x33
	strb r5, [r0]
	movs r0, #0xf0
	mov r1, sb
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x35
	ldrb r0, [r0]
	ldrb r2, [r4, #0x1f]
	adds r0, r0, r2
	movs r1, #0xf
	subs r1, r1, r0
	adds r0, r4, #0
	adds r0, #0x20
	strb r1, [r0]
	b _08084AC2
	.align 2, 0
_08084A38: .4byte gSpriteData
_08084A3C:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08084A52
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #7
	bl ParticleSet
	adds r0, r4, #0
	b _08084ABA
_08084A52:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #0x4c
	ands r1, r0
	cmp r1, #0
	beq _08084AA8
	adds r0, r4, #0
	mov r1, sb
	movs r2, #0x2d
	bl ProjectileIceMissileDealDamage
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08084A86
	movs r0, #2
	adds r1, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl ProjectileRandomSpriteDebris
_08084A86:
	ldr r0, _08084AA4 @ =gProjectileData
	mov r2, sb
	lsls r1, r2, #5
	adds r0, r1, r0
	ldrb r0, [r0, #0xf]
	mov sl, r1
	cmp r0, #0xe
	beq _08084AC8
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0xb
	bl ParticleSet
	b _08084AC2
	.align 2, 0
_08084AA4: .4byte gProjectileData
_08084AA8:
	mov r0, r8
	bl ProjectileSetIsftForSolid
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #7
	bl ParticleSet
	mov r0, r8
_08084ABA:
	mov r1, sb
	bl ProjectileStartMissileTumble
	b _08084B4A
_08084AC2:
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _08084B40
_08084AC8:
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0xc
	bl ParticleSet
	ldr r4, _08084B3C @ =gProjectileData
	add r4, sl
	movs r5, #0
	movs r0, #3
	strb r0, [r4, #0x12]
	strb r5, [r4, #0x1e]
	ldrb r1, [r4]
	movs r0, #0xef
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r4]
	str r5, [sp]
	str r5, [sp, #4]
	ldrb r0, [r4, #0x1f]
	str r0, [sp, #8]
	movs r0, #0x12
	adds r1, r6, #0
	adds r2, r7, #0
	movs r3, #0
	bl ProjectileInitSecondary
	str r5, [sp]
	str r5, [sp, #4]
	ldrb r0, [r4, #0x1f]
	str r0, [sp, #8]
	movs r0, #0x12
	adds r1, r6, #0
	adds r2, r7, #0
	movs r3, #0x40
	bl ProjectileInitSecondary
	str r5, [sp]
	str r5, [sp, #4]
	ldrb r0, [r4, #0x1f]
	str r0, [sp, #8]
	movs r0, #0x12
	adds r1, r6, #0
	adds r2, r7, #0
	movs r3, #0x80
	bl ProjectileInitSecondary
	str r5, [sp]
	str r5, [sp, #4]
	ldrb r0, [r4, #0x1f]
	str r0, [sp, #8]
	movs r0, #0x12
	adds r1, r6, #0
	adds r2, r7, #0
	movs r3, #0xc0
	bl ProjectileInitSecondary
	b _08084B4A
	.align 2, 0
_08084B3C: .4byte gProjectileData
_08084B40:
	ldr r0, _08084B5C @ =gProjectileData
	add r0, sl
	mov r1, sp
	ldrb r1, [r1, #0xc]
	strb r1, [r0]
_08084B4A:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08084B5C: .4byte gProjectileData

	thumb_func_start ProjectileDiffusionFlakeHitSprite
ProjectileDiffusionFlakeHitSprite: @ 0x08084B60
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r6, r5, #0
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sl, r2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov sb, r3
	ldr r1, _08084BE0 @ =gSpriteData
	lsls r0, r5, #3
	subs r0, r0, r5
	lsls r0, r0, #3
	adds r4, r0, r1
	adds r0, r4, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #0x40
	mov r8, r0
	ands r0, r1
	cmp r0, #0
	bne _08084C20
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08084BE4
	adds r0, r5, #0
	bl ProjectileSetIsftForSolid
	adds r7, r4, #0
	adds r7, #0x32
	ldrb r6, [r7]
	cmp r6, #0
	bne _08084C20
	adds r0, r5, #0
	bl ProjectileGetSpriteWeakness
	mov r1, r8
	ands r1, r0
	cmp r1, #0
	beq _08084C20
	adds r0, r4, #0
	adds r0, #0x33
	strb r6, [r0]
	movs r0, #0xf0
	strb r0, [r7]
	adds r0, r4, #0
	adds r0, #0x35
	ldrb r0, [r0]
	ldrb r1, [r4, #0x1f]
	adds r0, r0, r1
	movs r1, #0xf
	subs r1, r1, r0
	adds r0, r4, #0
	adds r0, #0x20
	strb r1, [r0]
	b _08084C20
	.align 2, 0
_08084BE0: .4byte gSpriteData
_08084BE4:
	adds r0, r4, #0
	adds r0, #0x32
	ldrb r0, [r0]
	cmp r0, #0
	bne _08084C20
	adds r0, r6, #0
	bl ProjectileGetSpriteWeakness
	mov r1, r8
	ands r1, r0
	cmp r1, #0
	beq _08084C20
	adds r0, r6, #0
	adds r1, r7, #0
	bl ProjectileDiffusionFlakeDealDamage
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r6, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08084C20
	movs r0, #2
	adds r1, r4, #0
	mov r2, sl
	mov r3, sb
	bl ProjectileRandomSpriteDebris
_08084C20:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ProjectileBombHitSprite
ProjectileBombHitSprite: @ 0x08084C30
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r5, r4, #0
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	ldr r1, _08084C68 @ =gSpriteData
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	adds r0, #0x34
	ldrb r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	bne _08084CA6
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08084C6C
	adds r0, r4, #0
	bl ProjectileSetIsftForSolid
	b _08084CA6
	.align 2, 0
_08084C68: .4byte gSpriteData
_08084C6C:
	adds r0, r4, #0
	bl ProjectileGetSpriteWeakness
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _08084CA0
	adds r0, r4, #0
	movs r1, #8
	bl ProjecileDealDamage
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl ProjectileCheckSpriteCreateDebris
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08084CA6
	movs r0, #1
	adds r1, r5, #0
	adds r2, r7, #0
	adds r3, r6, #0
	bl ProjectileRandomSpriteDebris
	b _08084CA6
_08084CA0:
	adds r0, r5, #0
	bl ProjectileSetIsftForSolid
_08084CA6:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start unk_84cac
unk_84cac: @ 0x08084CAC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08084CC4 @ =gSpriteData
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #3
	adds r1, r1, r2
	adds r1, #0x2c
	movs r0, #0x78
	strb r0, [r1]
	bx lr
	.align 2, 0
_08084CC4: .4byte gSpriteData

	thumb_func_start unk_84cc8
unk_84cc8: @ 0x08084CC8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08084CE0 @ =gSpriteData
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #3
	adds r1, r1, r2
	adds r1, #0x2c
	movs r0, #0x78
	strb r0, [r1]
	bx lr
	.align 2, 0
_08084CE0: .4byte gSpriteData

	thumb_func_start unk_84ce4
unk_84ce4: @ 0x08084CE4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08084CFC @ =gSpriteData
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #3
	adds r1, r1, r2
	adds r1, #0x2c
	movs r0, #0x78
	strb r0, [r1]
	bx lr
	.align 2, 0
_08084CFC: .4byte gSpriteData

	thumb_func_start ProjectileDealDamageToZazabi
ProjectileDealDamageToZazabi: @ 0x08084D00
	push {lr}
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldr r1, _08084D18 @ =gCurrentSprite
	ldrh r0, [r1, #0x14]
	mov ip, r1
	cmp r0, r2
	bls _08084D1C
	subs r0, r0, r2
	strh r0, [r1, #0x14]
	b _08084D52
	.align 2, 0
_08084D18: .4byte gCurrentSprite
_08084D1C:
	movs r3, #0
	movs r0, #0
	mov r1, ip
	strh r0, [r1, #0x14]
	mov r2, ip
	adds r2, #0x34
	ldrb r1, [r2]
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x32
	strb r3, [r0]
	subs r0, #0x12
	strb r3, [r0]
	adds r0, #0x13
	ldrb r0, [r0]
	cmp r0, #0
	beq _08084D52
	ldr r0, _08084D70 @ =gSamusData
	adds r1, r0, #0
	adds r1, #0x20
	ldrb r0, [r1]
	cmp r0, #1
	bne _08084D52
	movs r0, #2
	strb r0, [r1]
_08084D52:
	mov r2, ip
	adds r2, #0x2c
	ldrb r1, [r2]
	movs r0, #0x7f
	ands r0, r1
	cmp r0, #0x10
	bhi _08084D6A
	movs r0, #0x80
	ands r0, r1
	movs r1, #0x11
	orrs r0, r1
	strb r0, [r2]
_08084D6A:
	pop {r0}
	bx r0
	.align 2, 0
_08084D70: .4byte gSamusData

	thumb_func_start ProjectileChargedNormalBeamInit
ProjectileChargedNormalBeamInit: @ 0x08084D74
	push {lr}
	movs r0, #0xc8
	bl SoundPlay
	ldr r3, _08084DB4 @ =gCurrentProjectile
	ldrb r1, [r3]
	movs r2, #0x10
	movs r0, #0
	orrs r2, r1
	strb r0, [r3, #0xe]
	strh r0, [r3, #0xc]
	movs r0, #0x10
	strb r0, [r3, #0x14]
	strb r0, [r3, #0x15]
	ldr r1, _08084DB8 @ =0x0000FFF0
	strh r1, [r3, #0x16]
	strh r0, [r3, #0x18]
	strh r1, [r3, #0x1a]
	strh r0, [r3, #0x1c]
	movs r0, #0xfb
	ands r2, r0
	strb r2, [r3]
	ldrb r0, [r3, #0x10]
	subs r0, #1
	cmp r0, #4
	bhi _08084E04
	lsls r0, r0, #2
	ldr r1, _08084DBC @ =_08084DC0
	adds r0, r0, r1
	ldr r0, [r0]
	adds r1, r3, #0
	mov pc, r0
	.align 2, 0
_08084DB4: .4byte gCurrentProjectile
_08084DB8: .4byte 0x0000FFF0
_08084DBC: .4byte _08084DC0
_08084DC0: @ jump table
	.4byte _08084E04 @ case 0
	.4byte _08084DE0 @ case 1
	.4byte _08084DD4 @ case 2
	.4byte _08084DF8 @ case 3
	.4byte _08084DEC @ case 4
_08084DD4:
	ldr r0, _08084DE4 @ =gCurrentProjectile
	ldrb r2, [r0]
	movs r1, #0x20
	orrs r1, r2
	strb r1, [r0]
	adds r1, r0, #0
_08084DE0:
	ldr r0, _08084DE8 @ =0x0858D80C
	b _08084E08
	.align 2, 0
_08084DE4: .4byte gCurrentProjectile
_08084DE8: .4byte 0x0858D80C
_08084DEC:
	ldr r0, _08084DFC @ =gCurrentProjectile
	ldrb r2, [r0]
	movs r1, #0x20
	orrs r1, r2
	strb r1, [r0]
	adds r1, r0, #0
_08084DF8:
	ldr r0, _08084E00 @ =0x0858D824
	b _08084E08
	.align 2, 0
_08084DFC: .4byte gCurrentProjectile
_08084E00: .4byte 0x0858D824
_08084E04:
	ldr r1, _08084E10 @ =gCurrentProjectile
	ldr r0, _08084E14 @ =0x0858D7F4
_08084E08:
	str r0, [r1, #4]
	pop {r0}
	bx r0
	.align 2, 0
_08084E10: .4byte gCurrentProjectile
_08084E14: .4byte 0x0858D7F4

	thumb_func_start ProjectileChargedNormalBeamSubroutine
ProjectileChargedNormalBeamSubroutine: @ 0x08084E18
	push {r4, lr}
	ldr r0, _08084E3C @ =gCurrentClipdataAffectingAction
	movs r1, #6
	strb r1, [r0]
	bl ProjectileCheckVerticalCollisionAtPosition
	cmp r0, #0
	beq _08084E44
	ldr r1, _08084E40 @ =gCurrentProjectile
	movs r0, #0
	strb r0, [r1]
	ldrh r0, [r1, #8]
	ldrh r1, [r1, #0xa]
	movs r2, #3
	bl ParticleSet
	b _08084E7E
	.align 2, 0
_08084E3C: .4byte gCurrentClipdataAffectingAction
_08084E40: .4byte gCurrentProjectile
_08084E44:
	ldr r4, _08084E60 @ =gCurrentProjectile
	ldrb r0, [r4, #0x12]
	cmp r0, #0
	beq _08084E64
	cmp r0, #1
	beq _08084E6A
	movs r0, #0x18
	bl ProjectileMove
	movs r0, #0xf
	movs r1, #3
	bl ProjectileSetBeamTrail
	b _08084E76
	.align 2, 0
_08084E60: .4byte gCurrentProjectile
_08084E64:
	bl ProjectileChargedNormalBeamInit
	b _08084E70
_08084E6A:
	movs r0, #0x10
	bl ProjectileMove
_08084E70:
	ldrb r0, [r4, #0x12]
	adds r0, #1
	strb r0, [r4, #0x12]
_08084E76:
	ldr r1, _08084E84 @ =gCurrentProjectile
	ldrb r0, [r1, #0x1e]
	adds r0, #1
	strb r0, [r1, #0x1e]
_08084E7E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08084E84: .4byte gCurrentProjectile

	thumb_func_start ProjectileNormalBeamInit
ProjectileNormalBeamInit: @ 0x08084E88
	push {lr}
	movs r0, #0xc8
	bl SoundPlay
	ldr r3, _08084ECC @ =gCurrentProjectile
	ldrb r2, [r3]
	movs r1, #0x10
	movs r0, #0
	orrs r1, r2
	strb r0, [r3, #0xe]
	strh r0, [r3, #0xc]
	movs r0, #0x10
	strb r0, [r3, #0x14]
	strb r0, [r3, #0x15]
	ldr r2, _08084ED0 @ =0x0000FFF8
	strh r2, [r3, #0x16]
	movs r0, #8
	strh r0, [r3, #0x18]
	strh r2, [r3, #0x1a]
	strh r0, [r3, #0x1c]
	movs r0, #0xfb
	ands r1, r0
	strb r1, [r3]
	ldrb r0, [r3, #0x10]
	subs r0, #1
	cmp r0, #4
	bhi _08084F24
	lsls r0, r0, #2
	ldr r1, _08084ED4 @ =_08084ED8
	adds r0, r0, r1
	ldr r0, [r0]
	adds r2, r3, #0
	mov pc, r0
	.align 2, 0
_08084ECC: .4byte gCurrentProjectile
_08084ED0: .4byte 0x0000FFF8
_08084ED4: .4byte _08084ED8
_08084ED8: @ jump table
	.4byte _08084F24 @ case 0
	.4byte _08084EF8 @ case 1
	.4byte _08084EEC @ case 2
	.4byte _08084F14 @ case 3
	.4byte _08084F08 @ case 4
_08084EEC:
	ldr r0, _08084F00 @ =gCurrentProjectile
	ldrb r2, [r0]
	movs r1, #0x20
	orrs r1, r2
	strb r1, [r0]
	adds r2, r0, #0
_08084EF8:
	ldr r0, _08084F04 @ =0x0858D7C4
	str r0, [r2, #4]
	b _08084F2A
	.align 2, 0
_08084F00: .4byte gCurrentProjectile
_08084F04: .4byte 0x0858D7C4
_08084F08:
	ldr r0, _08084F1C @ =gCurrentProjectile
	ldrb r2, [r0]
	movs r1, #0x20
	orrs r1, r2
	strb r1, [r0]
	adds r2, r0, #0
_08084F14:
	ldr r0, _08084F20 @ =0x0858D7DC
	str r0, [r2, #4]
	b _08084F2A
	.align 2, 0
_08084F1C: .4byte gCurrentProjectile
_08084F20: .4byte 0x0858D7DC
_08084F24:
	ldr r1, _08084F30 @ =gCurrentProjectile
	ldr r0, _08084F34 @ =0x0858D7AC
	str r0, [r1, #4]
_08084F2A:
	pop {r0}
	bx r0
	.align 2, 0
_08084F30: .4byte gCurrentProjectile
_08084F34: .4byte 0x0858D7AC

	thumb_func_start ProjectileNormalBeamSubroutine
ProjectileNormalBeamSubroutine: @ 0x08084F38
	push {r4, lr}
	ldr r0, _08084F5C @ =gCurrentClipdataAffectingAction
	movs r1, #6
	strb r1, [r0]
	bl ProjectileCheckVerticalCollisionAtPosition
	cmp r0, #0
	beq _08084F64
	ldr r1, _08084F60 @ =gCurrentProjectile
	movs r0, #0
	strb r0, [r1]
	ldrh r0, [r1, #8]
	ldrh r1, [r1, #0xa]
	movs r2, #3
	bl ParticleSet
	b _08084F96
	.align 2, 0
_08084F5C: .4byte gCurrentClipdataAffectingAction
_08084F60: .4byte gCurrentProjectile
_08084F64:
	ldr r4, _08084F78 @ =gCurrentProjectile
	ldrb r0, [r4, #0x12]
	cmp r0, #0
	beq _08084F7C
	cmp r0, #1
	beq _08084F82
	movs r0, #0x18
	bl ProjectileMove
	b _08084F8E
	.align 2, 0
_08084F78: .4byte gCurrentProjectile
_08084F7C:
	bl ProjectileNormalBeamInit
	b _08084F88
_08084F82:
	movs r0, #0x10
	bl ProjectileMove
_08084F88:
	ldrb r0, [r4, #0x12]
	adds r0, #1
	strb r0, [r4, #0x12]
_08084F8E:
	ldr r1, _08084F9C @ =gCurrentProjectile
	ldrb r0, [r1, #0x1e]
	adds r0, #1
	strb r0, [r1, #0x1e]
_08084F96:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08084F9C: .4byte gCurrentProjectile

	thumb_func_start ProjectileMissileInit
ProjectileMissileInit: @ 0x08084FA0
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r1, _08084FF8 @ =gEquipment
	ldrh r0, [r1, #4]
	cmp r0, #0
	beq _08084FC2
	subs r0, #1
	strh r0, [r1, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08084FC2
	ldr r0, _08084FFC @ =gSamusData
	ldrb r1, [r0, #8]
	movs r2, #1
	eors r1, r2
	strb r1, [r0, #8]
_08084FC2:
	ldr r1, _08085000 @ =gCurrentProjectile
	movs r0, #0
	strb r0, [r1, #0xe]
	strh r0, [r1, #0xc]
	movs r3, #0x10
	movs r0, #0x10
	strb r0, [r1, #0x14]
	strb r0, [r1, #0x15]
	ldrb r2, [r1]
	movs r0, #0xfb
	ands r0, r2
	orrs r0, r3
	strb r0, [r1]
	ldrb r0, [r1, #0x12]
	adds r0, #1
	strb r0, [r1, #0x12]
	ldrb r0, [r1, #0x10]
	subs r0, #1
	adds r2, r1, #0
	cmp r0, #4
	bhi _0808506C
	lsls r0, r0, #2
	ldr r1, _08085004 @ =_08085008
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08084FF8: .4byte gEquipment
_08084FFC: .4byte gSamusData
_08085000: .4byte gCurrentProjectile
_08085004: .4byte _08085008
_08085008: @ jump table
	.4byte _0808506C @ case 0
	.4byte _08085024 @ case 1
	.4byte _0808501C @ case 2
	.4byte _0808504C @ case 3
	.4byte _08085044 @ case 4
_0808501C:
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08085024:
	cmp r4, #0
	bne _08085030
	ldr r0, _0808502C @ =0x0858E7C0
	b _08085086
	.align 2, 0
_0808502C: .4byte 0x0858E7C0
_08085030:
	cmp r4, #1
	bne _0808503C
	ldr r0, _08085038 @ =0x0858E858
	b _08085086
	.align 2, 0
_08085038: .4byte 0x0858E858
_0808503C:
	ldr r0, _08085040 @ =0x0858E998
	b _08085086
	.align 2, 0
_08085040: .4byte 0x0858E998
_08085044:
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_0808504C:
	cmp r4, #0
	bne _08085058
	ldr r0, _08085054 @ =0x0858E7D8
	b _08085086
	.align 2, 0
_08085054: .4byte 0x0858E7D8
_08085058:
	cmp r4, #1
	bne _08085064
	ldr r0, _08085060 @ =0x0858E870
	b _08085086
	.align 2, 0
_08085060: .4byte 0x0858E870
_08085064:
	ldr r0, _08085068 @ =0x0858E9B0
	b _08085086
	.align 2, 0
_08085068: .4byte 0x0858E9B0
_0808506C:
	cmp r4, #0
	bne _08085078
	ldr r0, _08085074 @ =0x0858E7A8
	b _08085086
	.align 2, 0
_08085074: .4byte 0x0858E7A8
_08085078:
	cmp r4, #1
	bne _08085084
	ldr r0, _08085080 @ =0x0858E840
	b _08085086
	.align 2, 0
_08085080: .4byte 0x0858E840
_08085084:
	ldr r0, _08085090 @ =0x0858E980
_08085086:
	str r0, [r2, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08085090: .4byte 0x0858E980

	thumb_func_start ProjectileMoveTumblingMissile
ProjectileMoveTumblingMissile: @ 0x08085094
	push {r4, r5, r6, lr}
	ldr r2, _080850AC @ =gCurrentProjectile
	ldrb r1, [r2]
	movs r0, #2
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080850B0
	strb r0, [r2]
	b _080850FC
	.align 2, 0
_080850AC: .4byte gCurrentProjectile
_080850B0:
	ldrb r3, [r2, #0x1e]
	ldr r5, _080850D4 @ =0x0858B444
	lsls r0, r3, #1
	adds r0, r0, r5
	ldrh r4, [r0]
	movs r6, #0
	ldrsh r1, [r0, r6]
	ldr r0, _080850D8 @ =0x00007FFF
	cmp r1, r0
	bne _080850DC
	subs r1, r3, #1
	lsls r1, r1, #1
	adds r1, r1, r5
	ldrh r0, [r2, #8]
	ldrh r1, [r1]
	adds r0, r0, r1
	b _080850E4
	.align 2, 0
_080850D4: .4byte 0x0858B444
_080850D8: .4byte 0x00007FFF
_080850DC:
	adds r0, r3, #1
	strb r0, [r2, #0x1e]
	ldrh r0, [r2, #8]
	adds r0, r0, r4
_080850E4:
	strh r0, [r2, #8]
	ldrb r1, [r2]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080850F6
	ldrh r0, [r2, #0xa]
	adds r0, #4
	b _080850FA
_080850F6:
	ldrh r0, [r2, #0xa]
	subs r0, #4
_080850FA:
	strh r0, [r2, #0xa]
_080850FC:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ProjectileNormalMissileSubroutine
ProjectileNormalMissileSubroutine: @ 0x08085104
	push {r4, lr}
	ldr r0, _08085128 @ =gCurrentClipdataAffectingAction
	movs r1, #8
	strb r1, [r0]
	bl ProjectileCheckVerticalCollisionAtPosition
	cmp r0, #0
	beq _08085130
	ldr r1, _0808512C @ =gCurrentProjectile
	movs r0, #0
	strb r0, [r1]
	ldrh r0, [r1, #8]
	ldrh r1, [r1, #0xa]
	movs r2, #8
	bl ParticleSet
	b _080851A8
	.align 2, 0
_08085128: .4byte gCurrentClipdataAffectingAction
_0808512C: .4byte gCurrentProjectile
_08085130:
	ldr r0, _08085144 @ =gCurrentProjectile
	ldrb r1, [r0, #0x12]
	adds r4, r0, #0
	cmp r1, #1
	beq _08085174
	cmp r1, #1
	bgt _08085148
	cmp r1, #0
	beq _0808514E
	b _08085186
	.align 2, 0
_08085144: .4byte gCurrentProjectile
_08085148:
	cmp r1, #7
	beq _08085180
	b _08085186
_0808514E:
	ldr r1, _08085170 @ =0x0000FFF8
	strh r1, [r4, #0x16]
	movs r0, #8
	strh r0, [r4, #0x18]
	strh r1, [r4, #0x1a]
	strh r0, [r4, #0x1c]
	movs r0, #0
	bl ProjectileMissileInit
	movs r0, #0xce
	bl SoundPlay
	movs r0, #0xcf
	bl SoundPlay
	b _080851A8
	.align 2, 0
_08085170: .4byte 0x0000FFF8
_08085174:
	movs r0, #2
	strb r0, [r4, #0x12]
	movs r0, #0x30
	bl ProjectileMove
	b _080851A8
_08085180:
	bl ProjectileMoveTumblingMissile
	b _080851A8
_08085186:
	ldr r0, _080851B0 @ =0x0858B40C
	ldrb r1, [r4, #0x1e]
	lsrs r1, r1, #2
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrb r0, [r1]
	bl ProjectileMove
	ldrb r0, [r4, #0x1e]
	cmp r0, #0x1a
	bhi _080851A0
	adds r0, #1
	strb r0, [r4, #0x1e]
_080851A0:
	movs r0, #0x15
	movs r1, #7
	bl ProjectileSetMissileTrail
_080851A8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080851B0: .4byte 0x0858B40C

	thumb_func_start ProjectileSuperMissileSubroutine
ProjectileSuperMissileSubroutine: @ 0x080851B4
	push {r4, lr}
	ldr r0, _080851D8 @ =gCurrentClipdataAffectingAction
	movs r1, #8
	strb r1, [r0]
	bl ProjectileCheckVerticalCollisionAtPosition
	cmp r0, #0
	beq _080851E0
	ldr r1, _080851DC @ =gCurrentProjectile
	movs r0, #0
	strb r0, [r1]
	ldrh r0, [r1, #8]
	ldrh r1, [r1, #0xa]
	movs r2, #9
	bl ParticleSet
	b _08085258
	.align 2, 0
_080851D8: .4byte gCurrentClipdataAffectingAction
_080851DC: .4byte gCurrentProjectile
_080851E0:
	ldr r0, _080851F4 @ =gCurrentProjectile
	ldrb r1, [r0, #0x12]
	adds r4, r0, #0
	cmp r1, #1
	beq _08085224
	cmp r1, #1
	bgt _080851F8
	cmp r1, #0
	beq _080851FE
	b _08085236
	.align 2, 0
_080851F4: .4byte gCurrentProjectile
_080851F8:
	cmp r1, #7
	beq _08085230
	b _08085236
_080851FE:
	ldr r1, _08085220 @ =0x0000FFF4
	strh r1, [r4, #0x16]
	movs r0, #0xc
	strh r0, [r4, #0x18]
	strh r1, [r4, #0x1a]
	strh r0, [r4, #0x1c]
	movs r0, #0
	bl ProjectileMissileInit
	movs r0, #0xd1
	bl SoundPlay
	movs r0, #0xd2
	bl SoundPlay
	b _08085258
	.align 2, 0
_08085220: .4byte 0x0000FFF4
_08085224:
	movs r0, #2
	strb r0, [r4, #0x12]
	movs r0, #0x30
	bl ProjectileMove
	b _08085258
_08085230:
	bl ProjectileMoveTumblingMissile
	b _08085258
_08085236:
	ldr r0, _08085260 @ =0x0858B41A
	ldrb r1, [r4, #0x1e]
	lsrs r1, r1, #2
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrb r0, [r1]
	bl ProjectileMove
	ldrb r0, [r4, #0x1e]
	cmp r0, #0x1a
	bhi _08085250
	adds r0, #1
	strb r0, [r4, #0x1e]
_08085250:
	movs r0, #0x16
	movs r1, #7
	bl ProjectileSetMissileTrail
_08085258:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08085260: .4byte 0x0858B41A

	thumb_func_start ProjectileIceMissilesSubroutine
ProjectileIceMissilesSubroutine: @ 0x08085264
	push {r4, lr}
	ldr r0, _08085288 @ =gCurrentClipdataAffectingAction
	movs r1, #8
	strb r1, [r0]
	bl ProjectileCheckVerticalCollisionAtPosition
	cmp r0, #0
	beq _08085290
	ldr r1, _0808528C @ =gCurrentProjectile
	movs r0, #0
	strb r0, [r1]
	ldrh r0, [r1, #8]
	ldrh r1, [r1, #0xa]
	movs r2, #0xa
	bl ParticleSet
	b _08085310
	.align 2, 0
_08085288: .4byte gCurrentClipdataAffectingAction
_0808528C: .4byte gCurrentProjectile
_08085290:
	ldr r0, _080852A4 @ =gCurrentProjectile
	ldrb r1, [r0, #0x12]
	adds r4, r0, #0
	cmp r1, #1
	beq _080852DC
	cmp r1, #1
	bgt _080852A8
	cmp r1, #0
	beq _080852AE
	b _080852EE
	.align 2, 0
_080852A4: .4byte gCurrentProjectile
_080852A8:
	cmp r1, #7
	beq _080852E8
	b _080852EE
_080852AE:
	ldr r0, _080852D4 @ =0x0000FFF4
	strh r0, [r4, #0x16]
	movs r0, #0xc
	strh r0, [r4, #0x18]
	ldr r0, _080852D8 @ =0x0000FFF0
	strh r0, [r4, #0x1a]
	movs r0, #0x10
	strh r0, [r4, #0x1c]
	movs r0, #1
	bl ProjectileMissileInit
	movs r0, #0xd4
	bl SoundPlay
	movs r0, #0xd5
	bl SoundPlay
	b _08085310
	.align 2, 0
_080852D4: .4byte 0x0000FFF4
_080852D8: .4byte 0x0000FFF0
_080852DC:
	movs r0, #2
	strb r0, [r4, #0x12]
	movs r0, #0x30
	bl ProjectileMove
	b _08085310
_080852E8:
	bl ProjectileMoveTumblingMissile
	b _08085310
_080852EE:
	ldr r0, _08085318 @ =0x0858B428
	ldrb r1, [r4, #0x1e]
	lsrs r1, r1, #2
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrb r0, [r1]
	bl ProjectileMove
	ldrb r0, [r4, #0x1e]
	cmp r0, #0x1a
	bhi _08085308
	adds r0, #1
	strb r0, [r4, #0x1e]
_08085308:
	movs r0, #0x17
	movs r1, #3
	bl ProjectileSetMissileTrail
_08085310:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08085318: .4byte 0x0858B428

	thumb_func_start ProjectileDiffusionMissileSubroutine
ProjectileDiffusionMissileSubroutine: @ 0x0808531C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	ldr r5, _08085354 @ =gCurrentProjectile
	ldrh r0, [r5, #8]
	mov r8, r0
	mov r7, r8
	ldrh r4, [r5, #0xa]
	adds r6, r4, #0
	ldr r0, _08085358 @ =gCurrentClipdataAffectingAction
	movs r1, #8
	strb r1, [r0]
	bl ProjectileCheckVerticalCollisionAtPosition
	cmp r0, #0
	beq _080853CA
	ldrb r0, [r5, #0xf]
	cmp r0, #0xe
	beq _0808535C
	mov r0, r8
	adds r1, r4, #0
	movs r2, #0xb
	bl ParticleSet
	movs r0, #0
	strb r0, [r5]
	b _080854A4
	.align 2, 0
_08085354: .4byte gCurrentProjectile
_08085358: .4byte gCurrentClipdataAffectingAction
_0808535C:
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0xc
	bl ParticleSet
	movs r4, #0
	movs r0, #3
	strb r0, [r5, #0x12]
	strb r4, [r5, #0x1e]
	ldrb r1, [r5]
	movs r0, #0xef
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r5]
	str r4, [sp]
	str r4, [sp, #4]
	ldrb r0, [r5, #0x1f]
	str r0, [sp, #8]
	movs r0, #0x12
	adds r1, r7, #0
	adds r2, r6, #0
	movs r3, #0
	bl ProjectileInitSecondary
	str r4, [sp]
	str r4, [sp, #4]
	ldrb r0, [r5, #0x1f]
	str r0, [sp, #8]
	movs r0, #0x12
	adds r1, r7, #0
	adds r2, r6, #0
	movs r3, #0x40
	bl ProjectileInitSecondary
	str r4, [sp]
	str r4, [sp, #4]
	ldrb r0, [r5, #0x1f]
	str r0, [sp, #8]
	movs r0, #0x12
	adds r1, r7, #0
	adds r2, r6, #0
	movs r3, #0x80
	bl ProjectileInitSecondary
	str r4, [sp]
	str r4, [sp, #4]
	ldrb r0, [r5, #0x1f]
	str r0, [sp, #8]
	movs r0, #0x12
	adds r1, r7, #0
	adds r2, r6, #0
	movs r3, #0xc0
	bl ProjectileInitSecondary
_080853CA:
	ldr r0, _080853E0 @ =gCurrentProjectile
	ldrb r1, [r0, #0x12]
	adds r4, r0, #0
	cmp r1, #1
	beq _08085444
	cmp r1, #1
	bgt _080853E4
	cmp r1, #0
	beq _080853EE
	b _0808546A
	.align 2, 0
_080853E0: .4byte gCurrentProjectile
_080853E4:
	cmp r1, #3
	beq _08085450
	cmp r1, #7
	beq _08085464
	b _0808546A
_080853EE:
	ldr r0, _08085420 @ =0x0000FFF4
	strh r0, [r4, #0x16]
	movs r0, #0xc
	strh r0, [r4, #0x18]
	ldr r0, _08085424 @ =0x0000FFF0
	strh r0, [r4, #0x1a]
	movs r0, #0x10
	strh r0, [r4, #0x1c]
	ldrb r0, [r4, #0xf]
	cmp r0, #0xe
	bne _08085428
	movs r0, #2
	bl ProjectileMissileInit
	movs r0, #0x19
	movs r1, #3
	bl ProjectileSetMissileTrail
	movs r0, #0xda
	bl SoundPlay
	movs r0, #0xdb
	bl SoundPlay
	b _080854A4
	.align 2, 0
_08085420: .4byte 0x0000FFF4
_08085424: .4byte 0x0000FFF0
_08085428:
	movs r0, #2
	bl ProjectileMissileInit
	movs r0, #0x18
	movs r1, #3
	bl ProjectileSetMissileTrail
	movs r0, #0xd7
	bl SoundPlay
	movs r0, #0xd8
	bl SoundPlay
	b _080854A4
_08085444:
	movs r0, #2
	strb r0, [r4, #0x12]
	movs r0, #0x30
	bl ProjectileMove
	b _080854A4
_08085450:
	ldrb r0, [r4, #0x1e]
	adds r0, #1
	strb r0, [r4, #0x1e]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x78
	bls _080854A4
	movs r0, #0
	strb r0, [r4]
	b _080854A4
_08085464:
	bl ProjectileMoveTumblingMissile
	b _080854A4
_0808546A:
	ldr r0, _08085498 @ =0x0858B436
	adds r5, r4, #0
	ldrb r1, [r5, #0x1e]
	lsrs r1, r1, #2
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrb r0, [r1]
	bl ProjectileMove
	ldrb r0, [r5, #0x1e]
	cmp r0, #0x1a
	bhi _08085486
	adds r0, #1
	strb r0, [r5, #0x1e]
_08085486:
	ldrb r0, [r4, #0xf]
	cmp r0, #0xe
	bne _0808549C
	movs r0, #0x19
	movs r1, #3
	bl ProjectileSetMissileTrail
	b _080854A4
	.align 2, 0
_08085498: .4byte 0x0858B436
_0808549C:
	movs r0, #0x18
	movs r1, #3
	bl ProjectileSetMissileTrail
_080854A4:
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start ProjectileDiffusionFlakeSubroutine
ProjectileDiffusionFlakeSubroutine: @ 0x080854B0
	push {r4, r5, r6, r7, lr}
	ldr r0, _080854EC @ =gCurrentProjectile
	ldrb r1, [r0, #0x1f]
	ldrb r2, [r0, #0x12]
	adds r4, r2, #0
	adds r3, r0, #0
	cmp r4, #0
	bne _080854F8
	adds r0, r2, #1
	strb r0, [r3, #0x12]
	ldrb r1, [r3]
	movs r0, #0x18
	orrs r0, r1
	movs r1, #0xfb
	ands r0, r1
	strb r0, [r3]
	movs r0, #0x10
	strb r0, [r3, #0x14]
	strb r0, [r3, #0x15]
	movs r2, #0
	ldr r1, _080854F0 @ =0x0000FFF0
	strh r1, [r3, #0x16]
	strh r0, [r3, #0x18]
	strh r1, [r3, #0x1a]
	strh r0, [r3, #0x1c]
	ldr r0, _080854F4 @ =0x083EACE4
	str r0, [r3, #4]
	strb r2, [r3, #0xe]
	strh r4, [r3, #0xc]
	b _080855C2
	.align 2, 0
_080854EC: .4byte gCurrentProjectile
_080854F0: .4byte 0x0000FFF0
_080854F4: .4byte 0x083EACE4
_080854F8:
	ldr r0, _0808550C @ =gProjectileData
	lsls r1, r1, #5
	adds r5, r1, r0
	ldrb r2, [r5]
	mov ip, r0
	adds r6, r1, #0
	cmp r2, #0
	bne _08085510
	strb r2, [r3]
	b _080855C2
	.align 2, 0
_0808550C: .4byte gProjectileData
_08085510:
	ldrb r0, [r3, #0x10]
	adds r0, #2
	strb r0, [r3, #0x10]
	ldrb r0, [r3, #0x10]
	lsls r2, r0, #1
	ldrb r4, [r3, #0x13]
	adds r0, r4, #0
	adds r0, #8
	strb r0, [r3, #0x13]
	ldr r1, _08085548 @ =0x080A4FA4
	lsls r0, r4, #1
	adds r0, r0, r1
	movs r7, #0
	ldrsh r0, [r0, r7]
	adds r7, r1, #0
	cmp r0, #0
	bge _0808554C
	rsbs r0, r0, #0
	muls r0, r2, r0
	lsls r2, r2, #0x10
	cmp r0, #0
	bge _0808553E
	adds r0, #0xff
_0808553E:
	lsls r0, r0, #8
	lsrs r1, r0, #0x10
	ldrh r0, [r5, #8]
	subs r0, r0, r1
	b _0808555E
	.align 2, 0
_08085548: .4byte 0x080A4FA4
_0808554C:
	muls r0, r2, r0
	lsls r2, r2, #0x10
	cmp r0, #0
	bge _08085556
	adds r0, #0xff
_08085556:
	lsls r0, r0, #8
	lsrs r0, r0, #0x10
	ldrh r5, [r5, #8]
	adds r0, r0, r5
_0808555E:
	strh r0, [r3, #8]
	adds r0, r4, #0
	adds r0, #0x40
	lsls r0, r0, #1
	adds r0, r0, r7
	movs r4, #0
	ldrsh r1, [r0, r4]
	cmp r1, #0
	bge _0808558A
	rsbs r1, r1, #0
	asrs r0, r2, #0x10
	muls r0, r1, r0
	cmp r0, #0
	bge _0808557C
	adds r0, #0xff
_0808557C:
	lsls r0, r0, #8
	lsrs r1, r0, #0x10
	mov r7, ip
	adds r0, r6, r7
	ldrh r0, [r0, #0xa]
	subs r0, r0, r1
	b _080855A0
_0808558A:
	asrs r0, r2, #0x10
	muls r0, r1, r0
	cmp r0, #0
	bge _08085594
	adds r0, #0xff
_08085594:
	lsls r0, r0, #8
	mov r2, ip
	adds r1, r6, r2
	lsrs r0, r0, #0x10
	ldrh r1, [r1, #0xa]
	adds r0, r0, r1
_080855A0:
	strh r0, [r3, #0xa]
	ldr r0, _080855C8 @ =gFrameCounter8Bit
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	bne _080855B8
	ldrh r0, [r3, #8]
	ldrh r1, [r3, #0xa]
	movs r2, #0x20
	bl ParticleSet
_080855B8:
	ldr r1, _080855CC @ =gCurrentClipdataAffectingAction
	movs r0, #8
	strb r0, [r1]
	bl ProjectileCheckHittingSolid
_080855C2:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080855C8: .4byte gFrameCounter8Bit
_080855CC: .4byte gCurrentClipdataAffectingAction

	thumb_func_start ProjectileCheckSamusBombBounce
ProjectileCheckSamusBombBounce: @ 0x080855D0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	ldr r0, _0808568C @ =gSamusData
	mov sl, r0
	ldrh r4, [r0, #0x18]
	str r4, [sp, #0x10]
	ldrh r5, [r0, #0x16]
	str r5, [sp, #0x14]
	adds r0, r4, #0
	adds r0, #0x20
	adds r1, r5, #0
	bl ProcessClipdata
	movs r6, #0x80
	lsls r6, r6, #0x11
	ands r0, r6
	cmp r0, #0
	beq _0808560C
	adds r0, r4, #0
	subs r0, #0x60
	adds r1, r5, #0
	bl ProcessClipdata
	ands r0, r6
	cmp r0, #0
	bne _080856FA
_0808560C:
	ldr r0, _08085690 @ =gPreviousXPosition
	ldrh r0, [r0]
	str r0, [sp, #0x18]
	mov r1, sl
	ldrh r0, [r1, #0x26]
	adds r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r1, [r1, #0x2a]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r3, sl
	ldrh r2, [r3, #0x24]
	adds r2, r5, r2
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldrh r3, [r3, #0x28]
	adds r3, r5, r3
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r4, _08085694 @ =gCurrentProjectile
	mov r8, r4
	ldrh r6, [r4, #8]
	str r6, [sp, #0x1c]
	ldrh r4, [r4, #0xa]
	mov sb, r4
	mov r4, r8
	ldrh r6, [r4, #0x16]
	ldr r4, [sp, #0x1c]
	adds r6, r4, r6
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov ip, r6
	mov r6, r8
	ldrh r5, [r6, #0x18]
	adds r5, r4, r5
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldrh r4, [r6, #0x1a]
	add r4, sb
	lsls r4, r4, #0x10
	lsrs r7, r4, #0x10
	ldrh r4, [r6, #0x1c]
	add r4, sb
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r6, ip
	str r6, [sp]
	str r5, [sp, #4]
	str r7, [sp, #8]
	str r4, [sp, #0xc]
	bl CheckObjectsTouching
	cmp r0, #0
	beq _080856FA
	mov r1, sl
	ldrb r0, [r1, #1]
	cmp r0, #0x3c
	bne _0808569C
	ldr r1, _08085698 @ =gBossWork0
	movs r0, #1
	strb r0, [r1]
	b _080856FA
	.align 2, 0
_0808568C: .4byte gSamusData
_08085690: .4byte gPreviousXPosition
_08085694: .4byte gCurrentProjectile
_08085698: .4byte gBossWork0
_0808569C:
	subs r0, r4, r7
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	adds r0, r7, r0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	mov r2, sl
	ldrb r0, [r2, #5]
	cmp r0, #0
	bne _080856FA
	bl SamusCheckDamagingPose
	cmp r0, #0
	bne _080856FA
	ldr r0, [sp, #0x10]
	subs r0, #0x20
	movs r1, #0
	ldr r3, [sp, #0x1c]
	cmp r0, r3
	ble _080856C8
	movs r1, #0x80
_080856C8:
	mov r0, sb
	adds r0, #5
	ldr r6, [sp, #0x14]
	cmp r6, r0
	bge _080856E2
	subs r0, #0xa
	cmp r6, r0
	ble _080856E2
	adds r0, r1, #0
	adds r0, #0xb
	bl SamusBombBounce
	b _080856FA
_080856E2:
	ldr r0, [sp, #0x18]
	cmp r4, r0
	blo _080856F2
	adds r0, r1, #0
	adds r0, #0xc
	bl SamusBombBounce
	b _080856FA
_080856F2:
	adds r0, r1, #0
	adds r0, #0xa
	bl SamusBombBounce
_080856FA:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start ProjectileBombInit
ProjectileBombInit: @ 0x0808570C
	push {lr}
	movs r0, #0xdd
	bl SoundPlay
	ldr r1, _08085750 @ =gCurrentProjectile
	ldr r0, _08085754 @ =0x0858EAE8
	str r0, [r1, #4]
	movs r0, #0
	strb r0, [r1, #0xe]
	strh r0, [r1, #0xc]
	movs r3, #8
	movs r0, #8
	strb r0, [r1, #0x14]
	strb r0, [r1, #0x15]
	ldr r2, _08085758 @ =0x0000FFE0
	strh r2, [r1, #0x16]
	movs r0, #0x1c
	strh r0, [r1, #0x18]
	strh r2, [r1, #0x1a]
	movs r0, #0x20
	strh r0, [r1, #0x1c]
	ldrb r2, [r1]
	movs r0, #0xfb
	ands r0, r2
	orrs r0, r3
	strb r0, [r1]
	movs r0, #0x32
	strb r0, [r1, #0x1e]
	ldrb r0, [r1, #0x12]
	adds r0, #1
	strb r0, [r1, #0x12]
	pop {r0}
	bx r0
	.align 2, 0
_08085750: .4byte gCurrentProjectile
_08085754: .4byte 0x0858EAE8
_08085758: .4byte 0x0000FFE0

	thumb_func_start ProjectileBombSubroutine
ProjectileBombSubroutine: @ 0x0808575C
	push {r4, lr}
	ldr r4, _08085770 @ =gCurrentProjectile
	ldrb r0, [r4, #0x12]
	cmp r0, #1
	beq _08085784
	cmp r0, #1
	bgt _08085774
	cmp r0, #0
	beq _0808577E
	b _080858DA
	.align 2, 0
_08085770: .4byte gCurrentProjectile
_08085774:
	cmp r0, #2
	beq _080857AC
	cmp r0, #3
	beq _080857D8
	b _080858DA
_0808577E:
	bl ProjectileBombInit
	b _080858DA
_08085784:
	ldrb r0, [r4, #0x1e]
	subs r0, #1
	strb r0, [r4, #0x1e]
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	beq _08085794
	b _080858DA
_08085794:
	ldr r0, _080857A8 @ =0x0858EB10
	str r0, [r4, #4]
	strb r1, [r4, #0xe]
	strh r1, [r4, #0xc]
	movs r0, #0x1e
	strb r0, [r4, #0x1e]
	ldrb r0, [r4, #0x12]
	adds r0, #1
	strb r0, [r4, #0x12]
	b _080858DA
	.align 2, 0
_080857A8: .4byte 0x0858EB10
_080857AC:
	ldrb r0, [r4, #0x1e]
	subs r0, #1
	strb r0, [r4, #0x1e]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080857BA
	b _080858DA
_080857BA:
	movs r0, #0x10
	strb r0, [r4, #0x1e]
	ldrb r0, [r4, #0x12]
	adds r0, #1
	strb r0, [r4, #0x12]
	ldrb r0, [r4]
	movs r1, #0x14
	orrs r0, r1
	strb r0, [r4]
	ldrh r0, [r4, #8]
	ldrh r1, [r4, #0xa]
	movs r2, #1
	bl ParticleSet
	b _080858DA
_080857D8:
	ldrb r0, [r4, #0x1e]
	subs r1, r0, #1
	strb r1, [r4, #0x1e]
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080857E8
	b _080858D8
_080857E8:
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0xf
	bne _08085810
	ldr r1, _0808580C @ =gCurrentClipdataAffectingAction
	movs r0, #7
	strb r0, [r1]
	ldrh r0, [r4, #8]
	subs r0, #8
	ldrh r1, [r4, #0xa]
	bl ProcessClipdata
	bl ProjectileCheckSamusBombBounce
	ldrb r1, [r4]
	movs r0, #0xef
	ands r0, r1
	b _080858D8
	.align 2, 0
_0808580C: .4byte gCurrentClipdataAffectingAction
_08085810:
	cmp r1, #0xe
	bne _08085824
	ldr r1, _08085820 @ =gCurrentClipdataAffectingAction
	movs r0, #7
	strb r0, [r1]
	ldrh r0, [r4, #8]
	adds r0, #0x38
	b _08085892
	.align 2, 0
_08085820: .4byte gCurrentClipdataAffectingAction
_08085824:
	cmp r1, #0xd
	bne _08085840
	ldr r1, _0808583C @ =gCurrentClipdataAffectingAction
	movs r0, #7
	strb r0, [r1]
	ldrh r0, [r4, #8]
	subs r0, #8
	ldrh r1, [r4, #0xa]
	adds r1, #0x30
	bl ProcessClipdata
	b _080858DA
	.align 2, 0
_0808583C: .4byte gCurrentClipdataAffectingAction
_08085840:
	cmp r1, #0xc
	bne _0808585C
	ldr r1, _08085858 @ =gCurrentClipdataAffectingAction
	movs r0, #7
	strb r0, [r1]
	ldrh r0, [r4, #8]
	subs r0, #8
	ldrh r1, [r4, #0xa]
	subs r1, #0x30
	bl ProcessClipdata
	b _080858DA
	.align 2, 0
_08085858: .4byte gCurrentClipdataAffectingAction
_0808585C:
	cmp r1, #0xb
	bne _08085870
	ldr r1, _0808586C @ =gCurrentClipdataAffectingAction
	movs r0, #7
	strb r0, [r1]
	ldrh r0, [r4, #8]
	adds r0, #0x38
	b _080858AE
	.align 2, 0
_0808586C: .4byte gCurrentClipdataAffectingAction
_08085870:
	cmp r1, #0xa
	bne _08085884
	ldr r1, _08085880 @ =gCurrentClipdataAffectingAction
	movs r0, #7
	strb r0, [r1]
	ldrh r0, [r4, #8]
	adds r0, #0x38
	b _080858C8
	.align 2, 0
_08085880: .4byte gCurrentClipdataAffectingAction
_08085884:
	cmp r1, #9
	bne _080858A0
	ldr r1, _0808589C @ =gCurrentClipdataAffectingAction
	movs r0, #7
	strb r0, [r1]
	ldrh r0, [r4, #8]
	subs r0, #0x48
_08085892:
	ldrh r1, [r4, #0xa]
	bl ProcessClipdata
	b _080858DA
	.align 2, 0
_0808589C: .4byte gCurrentClipdataAffectingAction
_080858A0:
	cmp r1, #8
	bne _080858BC
	ldr r1, _080858B8 @ =gCurrentClipdataAffectingAction
	movs r0, #7
	strb r0, [r1]
	ldrh r0, [r4, #8]
	subs r0, #0x48
_080858AE:
	ldrh r1, [r4, #0xa]
	adds r1, #0x24
	bl ProcessClipdata
	b _080858DA
	.align 2, 0
_080858B8: .4byte gCurrentClipdataAffectingAction
_080858BC:
	cmp r1, #7
	bne _080858DA
	ldr r0, _080858D4 @ =gCurrentClipdataAffectingAction
	strb r1, [r0]
	ldrh r0, [r4, #8]
	subs r0, #0x48
_080858C8:
	ldrh r1, [r4, #0xa]
	subs r1, #0x24
	bl ProcessClipdata
	b _080858DA
	.align 2, 0
_080858D4: .4byte gCurrentClipdataAffectingAction
_080858D8:
	strb r0, [r4]
_080858DA:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start ProjectilePowerBombInit
ProjectilePowerBombInit: @ 0x080858E0
	push {r4, r5, r6, lr}
	ldr r1, _08085974 @ =gEquipment
	ldrb r0, [r1, #8]
	cmp r0, #0
	beq _080858FE
	subs r0, #1
	strb r0, [r1, #8]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080858FE
	ldr r0, _08085978 @ =gSamusData
	ldrb r1, [r0, #8]
	movs r2, #0x10
	eors r1, r2
	strb r1, [r0, #8]
_080858FE:
	ldr r1, _0808597C @ =gCurrentProjectile
	ldr r0, _08085980 @ =0x0858EB38
	str r0, [r1, #4]
	movs r0, #0
	strb r0, [r1, #0xe]
	strh r0, [r1, #0xc]
	movs r3, #8
	movs r0, #8
	strb r0, [r1, #0x14]
	strb r0, [r1, #0x15]
	ldr r2, _08085984 @ =0x0000FFF0
	strh r2, [r1, #0x16]
	movs r0, #0x10
	strh r0, [r1, #0x18]
	strh r2, [r1, #0x1a]
	strh r0, [r1, #0x1c]
	ldrb r2, [r1]
	movs r0, #0xfb
	ands r0, r2
	orrs r0, r3
	strb r0, [r1]
	movs r0, #0x46
	strb r0, [r1, #0x1e]
	ldrb r0, [r1, #0x12]
	adds r0, #1
	strb r0, [r1, #0x12]
	movs r3, #0
	ldr r5, _08085988 @ =gSpriteData
	movs r6, #1
	movs r4, #0x7f
_0808593A:
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #3
	adds r2, r0, r5
	ldrh r1, [r2]
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _08085956
	adds r2, #0x2c
	ldrb r1, [r2]
	adds r0, r4, #0
	ands r0, r1
	strb r0, [r2]
_08085956:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x17
	bls _0808593A
	movs r0, #0xdf
	bl SoundPlay
	ldr r1, _0808598C @ =gCurrentPowerBomb
	movs r0, #1
	strb r0, [r1, #0x10]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08085974: .4byte gEquipment
_08085978: .4byte gSamusData
_0808597C: .4byte gCurrentProjectile
_08085980: .4byte 0x0858EB38
_08085984: .4byte 0x0000FFF0
_08085988: .4byte gSpriteData
_0808598C: .4byte gCurrentPowerBomb

	thumb_func_start ProjectilePowerBombSubroutine
ProjectilePowerBombSubroutine: @ 0x08085990
	push {r4, r5, lr}
	ldr r4, _080859A4 @ =gCurrentProjectile
	ldrb r0, [r4, #0x12]
	cmp r0, #1
	beq _080859B4
	cmp r0, #1
	bgt _080859A8
	cmp r0, #0
	beq _080859AE
	b _08085A00
	.align 2, 0
_080859A4: .4byte gCurrentProjectile
_080859A8:
	cmp r0, #2
	beq _080859DC
	b _08085A00
_080859AE:
	bl ProjectilePowerBombInit
	b _08085A00
_080859B4:
	ldrb r0, [r4, #0x1e]
	subs r0, #1
	strb r0, [r4, #0x1e]
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	bne _08085A00
	ldr r0, _080859D8 @ =0x0858EB58
	str r0, [r4, #4]
	strb r1, [r4, #0xe]
	strh r1, [r4, #0xc]
	movs r0, #0x46
	strb r0, [r4, #0x1e]
	ldrb r0, [r4, #0x12]
	adds r0, #1
	strb r0, [r4, #0x12]
	b _08085A00
	.align 2, 0
_080859D8: .4byte 0x0858EB58
_080859DC:
	ldr r0, _08085A08 @ =gSubGameMode1
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #2
	bne _08085A00
	ldrb r0, [r4, #0x1e]
	subs r0, #1
	strb r0, [r4, #0x1e]
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0
	bne _08085A00
	ldrh r0, [r4, #0xa]
	ldrh r1, [r4, #8]
	movs r2, #0
	bl PowerBombExplosionStart
	strb r5, [r4]
_08085A00:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08085A08: .4byte gSubGameMode1

	thumb_func_start ProjectileChargedChargeBeamInit
ProjectileChargedChargeBeamInit: @ 0x08085A0C
	push {r4, lr}
	ldr r0, _08085A4C @ =gCurrentProjectile
	movs r1, #0
	strb r1, [r0, #0xe]
	strh r1, [r0, #0xc]
	movs r1, #0x10
	strb r1, [r0, #0x14]
	strb r1, [r0, #0x15]
	ldr r2, _08085A50 @ =0x0000FFF4
	strh r2, [r0, #0x16]
	movs r1, #0xc
	strh r1, [r0, #0x18]
	strh r2, [r0, #0x1a]
	strh r1, [r0, #0x1c]
	ldrb r1, [r0, #0x13]
	adds r4, r0, #0
	cmp r1, #0
	beq _08085AA0
	ldrb r0, [r4]
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r4]
	ldrb r0, [r4, #0x10]
	subs r0, #1
	cmp r0, #4
	bhi _08085A94
	lsls r0, r0, #2
	ldr r1, _08085A54 @ =_08085A58
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08085A4C: .4byte gCurrentProjectile
_08085A50: .4byte 0x0000FFF4
_08085A54: .4byte _08085A58
_08085A58: @ jump table
	.4byte _08085A94 @ case 0
	.4byte _08085A74 @ case 1
	.4byte _08085A6C @ case 2
	.4byte _08085A88 @ case 3
	.4byte _08085A80 @ case 4
_08085A6C:
	ldrb r1, [r4]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r4]
_08085A74:
	ldr r0, _08085A7C @ =0x0858DA60
	str r0, [r4, #4]
	b _08085B16
	.align 2, 0
_08085A7C: .4byte 0x0858DA60
_08085A80:
	ldrb r1, [r4]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r4]
_08085A88:
	ldr r0, _08085A90 @ =0x0858DA70
	str r0, [r4, #4]
	b _08085B16
	.align 2, 0
_08085A90: .4byte 0x0858DA70
_08085A94:
	ldr r0, _08085A9C @ =0x0858DA50
	str r0, [r4, #4]
	b _08085B16
	.align 2, 0
_08085A9C: .4byte 0x0858DA50
_08085AA0:
	movs r0, #0xed
	bl SoundPlay
	ldrb r0, [r4]
	movs r1, #0xfb
	ands r1, r0
	strb r1, [r4]
	ldrb r0, [r4, #0x10]
	subs r0, #1
	cmp r0, #4
	bhi _08085B10
	lsls r0, r0, #2
	ldr r1, _08085AC0 @ =_08085AC4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08085AC0: .4byte _08085AC4
_08085AC4: @ jump table
	.4byte _08085B10 @ case 0
	.4byte _08085AE4 @ case 1
	.4byte _08085AD8 @ case 2
	.4byte _08085B00 @ case 3
	.4byte _08085AF4 @ case 4
_08085AD8:
	ldr r0, _08085AEC @ =gCurrentProjectile
	ldrb r2, [r0]
	movs r1, #0x20
	orrs r1, r2
	strb r1, [r0]
	adds r4, r0, #0
_08085AE4:
	ldr r0, _08085AF0 @ =0x0858DA20
	str r0, [r4, #4]
	b _08085B16
	.align 2, 0
_08085AEC: .4byte gCurrentProjectile
_08085AF0: .4byte 0x0858DA20
_08085AF4:
	ldr r0, _08085B08 @ =gCurrentProjectile
	ldrb r2, [r0]
	movs r1, #0x20
	orrs r1, r2
	strb r1, [r0]
	adds r4, r0, #0
_08085B00:
	ldr r0, _08085B0C @ =0x0858DA38
	str r0, [r4, #4]
	b _08085B16
	.align 2, 0
_08085B08: .4byte gCurrentProjectile
_08085B0C: .4byte 0x0858DA38
_08085B10:
	ldr r1, _08085B1C @ =gCurrentProjectile
	ldr r0, _08085B20 @ =0x0858DA08
	str r0, [r1, #4]
_08085B16:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08085B1C: .4byte gCurrentProjectile
_08085B20: .4byte 0x0858DA08

	thumb_func_start ProjectileChargedChargeBeamSubroutine
ProjectileChargedChargeBeamSubroutine: @ 0x08085B24
	push {r4, lr}
	ldr r2, _08085B8C @ =gCurrentProjectile
	ldrb r0, [r2, #0x13]
	cmp r0, #0
	beq _08085BA4
	ldrb r3, [r2]
	movs r0, #4
	ands r0, r3
	cmp r0, #0
	beq _08085B4C
	ldr r0, _08085B90 @ =gProjectileData
	ldrb r1, [r2, #0x1f]
	lsls r1, r1, #5
	adds r1, r1, r0
	ldrb r0, [r1, #0x12]
	cmp r0, #3
	bls _08085B4C
	movs r0, #0xfb
	ands r0, r3
	strb r0, [r2]
_08085B4C:
	ldr r0, _08085B94 @ =gCurrentClipdataAffectingAction
	movs r1, #6
	strb r1, [r0]
	bl ProjectileCheckVerticalCollisionAtPosition
	cmp r0, #0
	beq _08085B98
	ldr r2, _08085B8C @ =gCurrentProjectile
	ldrb r1, [r2]
	movs r3, #4
	adds r0, r3, #0
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	beq _08085B7A
	ldr r0, _08085B90 @ =gProjectileData
	ldrb r1, [r4, #0x1f]
	lsls r1, r1, #5
	adds r1, r1, r0
	ldrb r0, [r1, #0x12]
	cmp r0, #3
	bhi _08085B7A
	strb r3, [r1, #0x12]
_08085B7A:
	ldrh r0, [r4, #8]
	ldrh r1, [r4, #0xa]
	movs r2, #4
	bl ParticleSet
	movs r0, #0
	strb r0, [r4]
	b _08085C24
	.align 2, 0
_08085B8C: .4byte gCurrentProjectile
_08085B90: .4byte gProjectileData
_08085B94: .4byte gCurrentClipdataAffectingAction
_08085B98:
	ldr r0, _08085BB8 @ =gCurrentProjectile
	ldrb r0, [r0, #0x12]
	cmp r0, #2
	bhi _08085BA4
	bl ProjectileMovePart
_08085BA4:
	ldr r1, _08085BB8 @ =gCurrentProjectile
	ldrb r0, [r1, #0x12]
	cmp r0, #4
	bhi _08085C18
	lsls r0, r0, #2
	ldr r1, _08085BBC @ =_08085BC0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08085BB8: .4byte gCurrentProjectile
_08085BBC: .4byte _08085BC0
_08085BC0: @ jump table
	.4byte _08085BD4 @ case 0
	.4byte _08085BDA @ case 1
	.4byte _08085BE2 @ case 2
	.4byte _08085BEA @ case 3
	.4byte _08085C08 @ case 4
_08085BD4:
	bl ProjectileChargedChargeBeamInit
	b _08085C08
_08085BDA:
	movs r0, #0x10
	bl ProjectileMove
	b _08085C08
_08085BE2:
	ldr r1, _08085C04 @ =gCurrentProjectile
	ldrb r0, [r1, #0x12]
	adds r0, #1
	strb r0, [r1, #0x12]
_08085BEA:
	movs r0, #0x18
	bl ProjectileMove
	ldr r0, _08085C04 @ =gCurrentProjectile
	ldrb r0, [r0, #0x13]
	cmp r0, #0
	bne _08085C1C
	movs r0, #0x10
	movs r1, #3
	bl ProjectileSetBeamTrail
	b _08085C1C
	.align 2, 0
_08085C04: .4byte gCurrentProjectile
_08085C08:
	ldr r1, _08085C14 @ =gCurrentProjectile
	ldrb r0, [r1, #0x12]
	adds r0, #1
	strb r0, [r1, #0x12]
	b _08085C1C
	.align 2, 0
_08085C14: .4byte gCurrentProjectile
_08085C18:
	movs r0, #0
	strb r0, [r1]
_08085C1C:
	ldr r1, _08085C2C @ =gCurrentProjectile
	ldrb r0, [r1, #0x1e]
	adds r0, #1
	strb r0, [r1, #0x1e]
_08085C24:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08085C2C: .4byte gCurrentProjectile

	thumb_func_start ProjectileChargeBeamInit
ProjectileChargeBeamInit: @ 0x08085C30
	push {r4, lr}
	ldr r0, _08085C70 @ =gCurrentProjectile
	movs r1, #0
	strb r1, [r0, #0xe]
	strh r1, [r0, #0xc]
	movs r1, #0x10
	strb r1, [r0, #0x14]
	strb r1, [r0, #0x15]
	ldr r2, _08085C74 @ =0x0000FFF4
	strh r2, [r0, #0x16]
	movs r1, #0xc
	strh r1, [r0, #0x18]
	strh r2, [r0, #0x1a]
	strh r1, [r0, #0x1c]
	ldrb r1, [r0, #0x13]
	adds r4, r0, #0
	cmp r1, #0
	beq _08085CC4
	ldrb r0, [r4]
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r4]
	ldrb r0, [r4, #0x10]
	subs r0, #1
	cmp r0, #4
	bhi _08085CB8
	lsls r0, r0, #2
	ldr r1, _08085C78 @ =_08085C7C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08085C70: .4byte gCurrentProjectile
_08085C74: .4byte 0x0000FFF4
_08085C78: .4byte _08085C7C
_08085C7C: @ jump table
	.4byte _08085CB8 @ case 0
	.4byte _08085C98 @ case 1
	.4byte _08085C90 @ case 2
	.4byte _08085CAC @ case 3
	.4byte _08085CA4 @ case 4
_08085C90:
	ldrb r1, [r4]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r4]
_08085C98:
	ldr r0, _08085CA0 @ =0x0858D9E8
	str r0, [r4, #4]
	b _08085D3A
	.align 2, 0
_08085CA0: .4byte 0x0858D9E8
_08085CA4:
	ldrb r1, [r4]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r4]
_08085CAC:
	ldr r0, _08085CB4 @ =0x0858D9F8
	str r0, [r4, #4]
	b _08085D3A
	.align 2, 0
_08085CB4: .4byte 0x0858D9F8
_08085CB8:
	ldr r0, _08085CC0 @ =0x0858D9D8
	str r0, [r4, #4]
	b _08085D3A
	.align 2, 0
_08085CC0: .4byte 0x0858D9D8
_08085CC4:
	movs r0, #0xca
	bl SoundPlay
	ldrb r0, [r4]
	movs r1, #0xfb
	ands r1, r0
	strb r1, [r4]
	ldrb r0, [r4, #0x10]
	subs r0, #1
	cmp r0, #4
	bhi _08085D34
	lsls r0, r0, #2
	ldr r1, _08085CE4 @ =_08085CE8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08085CE4: .4byte _08085CE8
_08085CE8: @ jump table
	.4byte _08085D34 @ case 0
	.4byte _08085D08 @ case 1
	.4byte _08085CFC @ case 2
	.4byte _08085D24 @ case 3
	.4byte _08085D18 @ case 4
_08085CFC:
	ldr r0, _08085D10 @ =gCurrentProjectile
	ldrb r2, [r0]
	movs r1, #0x20
	orrs r1, r2
	strb r1, [r0]
	adds r4, r0, #0
_08085D08:
	ldr r0, _08085D14 @ =0x0858D9A8
	str r0, [r4, #4]
	b _08085D3A
	.align 2, 0
_08085D10: .4byte gCurrentProjectile
_08085D14: .4byte 0x0858D9A8
_08085D18:
	ldr r0, _08085D2C @ =gCurrentProjectile
	ldrb r2, [r0]
	movs r1, #0x20
	orrs r1, r2
	strb r1, [r0]
	adds r4, r0, #0
_08085D24:
	ldr r0, _08085D30 @ =0x0858D9C0
	str r0, [r4, #4]
	b _08085D3A
	.align 2, 0
_08085D2C: .4byte gCurrentProjectile
_08085D30: .4byte 0x0858D9C0
_08085D34:
	ldr r1, _08085D40 @ =gCurrentProjectile
	ldr r0, _08085D44 @ =0x0858D990
	str r0, [r1, #4]
_08085D3A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08085D40: .4byte gCurrentProjectile
_08085D44: .4byte 0x0858D990

	thumb_func_start ProjectileChargeBeamSubroutine
ProjectileChargeBeamSubroutine: @ 0x08085D48
	push {r4, lr}
	ldr r2, _08085DB0 @ =gCurrentProjectile
	ldrb r0, [r2, #0x13]
	cmp r0, #0
	beq _08085DC8
	ldrb r3, [r2]
	movs r0, #4
	ands r0, r3
	cmp r0, #0
	beq _08085D70
	ldr r0, _08085DB4 @ =gProjectileData
	ldrb r1, [r2, #0x1f]
	lsls r1, r1, #5
	adds r1, r1, r0
	ldrb r0, [r1, #0x12]
	cmp r0, #3
	bls _08085D70
	movs r0, #0xfb
	ands r0, r3
	strb r0, [r2]
_08085D70:
	ldr r0, _08085DB8 @ =gCurrentClipdataAffectingAction
	movs r1, #6
	strb r1, [r0]
	bl ProjectileCheckVerticalCollisionAtPosition
	cmp r0, #0
	beq _08085DBC
	ldr r2, _08085DB0 @ =gCurrentProjectile
	ldrb r1, [r2]
	movs r3, #4
	adds r0, r3, #0
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	beq _08085D9E
	ldr r0, _08085DB4 @ =gProjectileData
	ldrb r1, [r4, #0x1f]
	lsls r1, r1, #5
	adds r1, r1, r0
	ldrb r0, [r1, #0x12]
	cmp r0, #3
	bhi _08085D9E
	strb r3, [r1, #0x12]
_08085D9E:
	ldrh r0, [r4, #8]
	ldrh r1, [r4, #0xa]
	movs r2, #4
	bl ParticleSet
	movs r0, #0
	strb r0, [r4]
	b _08085E38
	.align 2, 0
_08085DB0: .4byte gCurrentProjectile
_08085DB4: .4byte gProjectileData
_08085DB8: .4byte gCurrentClipdataAffectingAction
_08085DBC:
	ldr r0, _08085DDC @ =gCurrentProjectile
	ldrb r0, [r0, #0x12]
	cmp r0, #2
	bhi _08085DC8
	bl ProjectileMovePart
_08085DC8:
	ldr r1, _08085DDC @ =gCurrentProjectile
	ldrb r0, [r1, #0x12]
	cmp r0, #4
	bhi _08085E2C
	lsls r0, r0, #2
	ldr r1, _08085DE0 @ =_08085DE4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08085DDC: .4byte gCurrentProjectile
_08085DE0: .4byte _08085DE4
_08085DE4: @ jump table
	.4byte _08085DF8 @ case 0
	.4byte _08085DFE @ case 1
	.4byte _08085E06 @ case 2
	.4byte _08085E0E @ case 3
	.4byte _08085E1C @ case 4
_08085DF8:
	bl ProjectileChargeBeamInit
	b _08085E1C
_08085DFE:
	movs r0, #0x10
	bl ProjectileMove
	b _08085E1C
_08085E06:
	ldr r1, _08085E18 @ =gCurrentProjectile
	ldrb r0, [r1, #0x12]
	adds r0, #1
	strb r0, [r1, #0x12]
_08085E0E:
	movs r0, #0x18
	bl ProjectileMove
	b _08085E30
	.align 2, 0
_08085E18: .4byte gCurrentProjectile
_08085E1C:
	ldr r1, _08085E28 @ =gCurrentProjectile
	ldrb r0, [r1, #0x12]
	adds r0, #1
	strb r0, [r1, #0x12]
	b _08085E30
	.align 2, 0
_08085E28: .4byte gCurrentProjectile
_08085E2C:
	movs r0, #0
	strb r0, [r1]
_08085E30:
	ldr r1, _08085E40 @ =gCurrentProjectile
	ldrb r0, [r1, #0x1e]
	adds r0, #1
	strb r0, [r1, #0x1e]
_08085E38:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08085E40: .4byte gCurrentProjectile

	thumb_func_start ProjectileChargedWideBeaminit
ProjectileChargedWideBeaminit: @ 0x08085E44
	push {lr}
	movs r0, #0xee
	bl SoundPlay
	ldr r3, _08085E88 @ =gCurrentProjectile
	ldrb r2, [r3]
	movs r1, #0x10
	movs r0, #0
	orrs r1, r2
	strb r0, [r3, #0xe]
	strh r0, [r3, #0xc]
	movs r0, #0x10
	strb r0, [r3, #0x14]
	strb r0, [r3, #0x15]
	ldr r2, _08085E8C @ =0x0000FFEC
	strh r2, [r3, #0x16]
	movs r0, #0x14
	strh r0, [r3, #0x18]
	strh r2, [r3, #0x1a]
	strh r0, [r3, #0x1c]
	movs r0, #0xfb
	ands r1, r0
	strb r1, [r3]
	ldrb r0, [r3, #0x10]
	subs r0, #1
	cmp r0, #4
	bhi _08085EEC
	lsls r0, r0, #2
	ldr r1, _08085E90 @ =_08085E94
	adds r0, r0, r1
	ldr r0, [r0]
	adds r2, r3, #0
	mov pc, r0
	.align 2, 0
_08085E88: .4byte gCurrentProjectile
_08085E8C: .4byte 0x0000FFEC
_08085E90: .4byte _08085E94
_08085E94: @ jump table
	.4byte _08085EEC @ case 0
	.4byte _08085EC0 @ case 1
	.4byte _08085EA8 @ case 2
	.4byte _08085EDC @ case 3
	.4byte _08085ED0 @ case 4
_08085EA8:
	ldr r1, _08085EB8 @ =gCurrentProjectile
	ldrb r2, [r1]
	movs r0, #0x20
	orrs r0, r2
	strb r0, [r1]
	ldr r0, _08085EBC @ =0x0858DC54
	b _08085EF0
	.align 2, 0
_08085EB8: .4byte gCurrentProjectile
_08085EBC: .4byte 0x0858DC54
_08085EC0:
	ldr r1, _08085EC8 @ =gCurrentProjectile
	ldr r0, _08085ECC @ =0x0858DC54
	b _08085EF0
	.align 2, 0
_08085EC8: .4byte gCurrentProjectile
_08085ECC: .4byte 0x0858DC54
_08085ED0:
	ldr r0, _08085EE4 @ =gCurrentProjectile
	ldrb r2, [r0]
	movs r1, #0x20
	orrs r1, r2
	strb r1, [r0]
	adds r2, r0, #0
_08085EDC:
	ldr r0, _08085EE8 @ =0x0858DC6C
	str r0, [r2, #4]
	b _08085EF2
	.align 2, 0
_08085EE4: .4byte gCurrentProjectile
_08085EE8: .4byte 0x0858DC6C
_08085EEC:
	ldr r1, _08085EF8 @ =gCurrentProjectile
	ldr r0, _08085EFC @ =0x0858DC3C
_08085EF0:
	str r0, [r1, #4]
_08085EF2:
	pop {r0}
	bx r0
	.align 2, 0
_08085EF8: .4byte gCurrentProjectile
_08085EFC: .4byte 0x0858DC3C

	thumb_func_start ProjectileChargedWideBeamSubroutine
ProjectileChargedWideBeamSubroutine: @ 0x08085F00
	push {r4, lr}
	ldr r1, _08085F34 @ =gCurrentProjectile
	ldrb r0, [r1, #0x13]
	cmp r0, #0
	beq _08085F14
	ldrb r0, [r1, #0x12]
	cmp r0, #8
	bhi _08085F14
	bl ProjectileMovePart
_08085F14:
	ldr r0, _08085F38 @ =gCurrentClipdataAffectingAction
	movs r1, #6
	strb r1, [r0]
	bl ProjectileCheckVerticalCollisionAtPosition
	cmp r0, #0
	beq _08085F3C
	ldr r1, _08085F34 @ =gCurrentProjectile
	movs r0, #0
	strb r0, [r1]
	ldrh r0, [r1, #8]
	ldrh r1, [r1, #0xa]
	movs r2, #5
	bl ParticleSet
	b _08085F82
	.align 2, 0
_08085F34: .4byte gCurrentProjectile
_08085F38: .4byte gCurrentClipdataAffectingAction
_08085F3C:
	ldr r4, _08085F54 @ =gCurrentProjectile
	ldrb r0, [r4, #0x12]
	cmp r0, #0
	beq _08085F58
	cmp r0, #1
	beq _08085F5E
	cmp r0, #8
	bhi _08085F6C
	adds r0, #1
	strb r0, [r4, #0x12]
	b _08085F6C
	.align 2, 0
_08085F54: .4byte gCurrentProjectile
_08085F58:
	bl ProjectileChargedWideBeaminit
	b _08085F64
_08085F5E:
	movs r0, #0x10
	bl ProjectileMove
_08085F64:
	ldrb r0, [r4, #0x12]
	adds r0, #1
	strb r0, [r4, #0x12]
	b _08085F7A
_08085F6C:
	movs r0, #0x18
	bl ProjectileMove
	movs r0, #0x11
	movs r1, #3
	bl ProjectileSetBeamTrail
_08085F7A:
	ldr r1, _08085F88 @ =gCurrentProjectile
	ldrb r0, [r1, #0x1e]
	adds r0, #1
	strb r0, [r1, #0x1e]
_08085F82:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08085F88: .4byte gCurrentProjectile

	thumb_func_start ProjectileWideBeamInit
ProjectileWideBeamInit: @ 0x08085F8C
	push {lr}
	movs r0, #0xc9
	bl SoundPlay
	ldr r3, _08085FCC @ =gCurrentProjectile
	ldrb r1, [r3]
	movs r2, #0x10
	movs r0, #0
	orrs r2, r1
	strb r0, [r3, #0xe]
	strh r0, [r3, #0xc]
	movs r0, #0x10
	strb r0, [r3, #0x14]
	strb r0, [r3, #0x15]
	ldr r1, _08085FD0 @ =0x0000FFF0
	strh r1, [r3, #0x16]
	strh r0, [r3, #0x18]
	strh r1, [r3, #0x1a]
	strh r0, [r3, #0x1c]
	movs r0, #0xfb
	ands r2, r0
	strb r2, [r3]
	ldrb r0, [r3, #0x10]
	subs r0, #1
	cmp r0, #4
	bhi _0808602C
	lsls r0, r0, #2
	ldr r1, _08085FD4 @ =_08085FD8
	adds r0, r0, r1
	ldr r0, [r0]
	adds r1, r3, #0
	mov pc, r0
	.align 2, 0
_08085FCC: .4byte gCurrentProjectile
_08085FD0: .4byte 0x0000FFF0
_08085FD4: .4byte _08085FD8
_08085FD8: @ jump table
	.4byte _0808602C @ case 0
	.4byte _08086004 @ case 1
	.4byte _08085FEC @ case 2
	.4byte _08086020 @ case 3
	.4byte _08086014 @ case 4
_08085FEC:
	ldr r1, _08085FFC @ =gCurrentProjectile
	ldrb r2, [r1]
	movs r0, #0x20
	orrs r0, r2
	strb r0, [r1]
	ldr r0, _08086000 @ =0x0858DBFC
	b _08086030
	.align 2, 0
_08085FFC: .4byte gCurrentProjectile
_08086000: .4byte 0x0858DBFC
_08086004:
	ldr r1, _0808600C @ =gCurrentProjectile
	ldr r0, _08086010 @ =0x0858DBFC
	b _08086030
	.align 2, 0
_0808600C: .4byte gCurrentProjectile
_08086010: .4byte 0x0858DBFC
_08086014:
	ldr r0, _08086024 @ =gCurrentProjectile
	ldrb r2, [r0]
	movs r1, #0x20
	orrs r1, r2
	strb r1, [r0]
	adds r1, r0, #0
_08086020:
	ldr r0, _08086028 @ =0x0858DC1C
	b _08086030
	.align 2, 0
_08086024: .4byte gCurrentProjectile
_08086028: .4byte 0x0858DC1C
_0808602C:
	ldr r1, _08086038 @ =gCurrentProjectile
	ldr r0, _0808603C @ =0x0858DBDC
_08086030:
	str r0, [r1, #4]
	pop {r0}
	bx r0
	.align 2, 0
_08086038: .4byte gCurrentProjectile
_0808603C: .4byte 0x0858DBDC

	thumb_func_start ProjectileWideBeamSubroutine
ProjectileWideBeamSubroutine: @ 0x08086040
	push {r4, lr}
	ldr r1, _08086074 @ =gCurrentProjectile
	ldrb r0, [r1, #0x13]
	cmp r0, #0
	beq _08086054
	ldrb r0, [r1, #0x12]
	cmp r0, #8
	bhi _08086054
	bl ProjectileMovePart
_08086054:
	ldr r0, _08086078 @ =gCurrentClipdataAffectingAction
	movs r1, #6
	strb r1, [r0]
	bl ProjectileCheckVerticalCollisionAtPosition
	cmp r0, #0
	beq _0808607C
	ldr r1, _08086074 @ =gCurrentProjectile
	movs r0, #0
	strb r0, [r1]
	ldrh r0, [r1, #8]
	ldrh r1, [r1, #0xa]
	movs r2, #5
	bl ParticleSet
	b _080860BA
	.align 2, 0
_08086074: .4byte gCurrentProjectile
_08086078: .4byte gCurrentClipdataAffectingAction
_0808607C:
	ldr r4, _08086094 @ =gCurrentProjectile
	ldrb r0, [r4, #0x12]
	cmp r0, #0
	beq _08086098
	cmp r0, #1
	beq _0808609E
	cmp r0, #8
	bhi _080860AC
	adds r0, #1
	strb r0, [r4, #0x12]
	b _080860AC
	.align 2, 0
_08086094: .4byte gCurrentProjectile
_08086098:
	bl ProjectileWideBeamInit
	b _080860A4
_0808609E:
	movs r0, #0x10
	bl ProjectileMove
_080860A4:
	ldrb r0, [r4, #0x12]
	adds r0, #1
	strb r0, [r4, #0x12]
	b _080860B2
_080860AC:
	movs r0, #0x18
	bl ProjectileMove
_080860B2:
	ldr r1, _080860C0 @ =gCurrentProjectile
	ldrb r0, [r1, #0x1e]
	adds r0, #1
	strb r0, [r1, #0x1e]
_080860BA:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080860C0: .4byte gCurrentProjectile

	thumb_func_start ProjectileChargedPlasmaBeamInit
ProjectileChargedPlasmaBeamInit: @ 0x080860C4
	push {lr}
	movs r0, #0xef
	bl SoundPlay
	ldr r3, _0808610C @ =gCurrentProjectile
	ldrb r2, [r3]
	movs r1, #0x10
	movs r0, #0
	orrs r1, r2
	strb r0, [r3, #0xe]
	strh r0, [r3, #0xc]
	movs r0, #0x10
	strb r0, [r3, #0x14]
	strb r0, [r3, #0x15]
	ldr r2, _08086110 @ =0x0000FFEC
	strh r2, [r3, #0x16]
	movs r0, #0x14
	strh r0, [r3, #0x18]
	strh r2, [r3, #0x1a]
	strh r0, [r3, #0x1c]
	movs r0, #0xfb
	ands r1, r0
	strb r1, [r3]
	ldrb r0, [r3, #0x12]
	adds r0, #1
	strb r0, [r3, #0x12]
	ldrb r0, [r3, #0x10]
	subs r0, #1
	cmp r0, #4
	bhi _08086170
	lsls r0, r0, #2
	ldr r1, _08086114 @ =_08086118
	adds r0, r0, r1
	ldr r0, [r0]
	adds r2, r3, #0
	mov pc, r0
	.align 2, 0
_0808610C: .4byte gCurrentProjectile
_08086110: .4byte 0x0000FFEC
_08086114: .4byte _08086118
_08086118: @ jump table
	.4byte _08086170 @ case 0
	.4byte _08086144 @ case 1
	.4byte _0808612C @ case 2
	.4byte _08086160 @ case 3
	.4byte _08086154 @ case 4
_0808612C:
	ldr r1, _0808613C @ =gCurrentProjectile
	ldrb r2, [r1]
	movs r0, #0x20
	orrs r0, r2
	strb r0, [r1]
	ldr r0, _08086140 @ =0x0858DE54
	b _08086174
	.align 2, 0
_0808613C: .4byte gCurrentProjectile
_08086140: .4byte 0x0858DE54
_08086144:
	ldr r1, _0808614C @ =gCurrentProjectile
	ldr r0, _08086150 @ =0x0858DE54
	b _08086174
	.align 2, 0
_0808614C: .4byte gCurrentProjectile
_08086150: .4byte 0x0858DE54
_08086154:
	ldr r0, _08086168 @ =gCurrentProjectile
	ldrb r2, [r0]
	movs r1, #0x20
	orrs r1, r2
	strb r1, [r0]
	adds r2, r0, #0
_08086160:
	ldr r0, _0808616C @ =0x0858DE6C
	str r0, [r2, #4]
	b _08086176
	.align 2, 0
_08086168: .4byte gCurrentProjectile
_0808616C: .4byte 0x0858DE6C
_08086170:
	ldr r1, _0808617C @ =gCurrentProjectile
	ldr r0, _08086180 @ =0x0858DE3C
_08086174:
	str r0, [r1, #4]
_08086176:
	pop {r0}
	bx r0
	.align 2, 0
_0808617C: .4byte gCurrentProjectile
_08086180: .4byte 0x0858DE3C

	thumb_func_start ProjectileChargedPlasmaBeamSubroutine
ProjectileChargedPlasmaBeamSubroutine: @ 0x08086184
	push {r4, lr}
	ldr r1, _080861B8 @ =gCurrentProjectile
	ldrb r0, [r1, #0x13]
	cmp r0, #0
	beq _08086198
	ldrb r0, [r1, #0x12]
	cmp r0, #8
	bhi _08086198
	bl ProjectileMovePart
_08086198:
	ldr r0, _080861BC @ =gCurrentClipdataAffectingAction
	movs r1, #6
	strb r1, [r0]
	bl ProjectileCheckVerticalCollisionAtPosition
	cmp r0, #0
	beq _080861C0
	ldr r1, _080861B8 @ =gCurrentProjectile
	movs r0, #0
	strb r0, [r1]
	ldrh r0, [r1, #8]
	ldrh r1, [r1, #0xa]
	movs r2, #6
	bl ParticleSet
	b _08086206
	.align 2, 0
_080861B8: .4byte gCurrentProjectile
_080861BC: .4byte gCurrentClipdataAffectingAction
_080861C0:
	ldr r4, _080861D8 @ =gCurrentProjectile
	ldrb r0, [r4, #0x12]
	cmp r0, #0
	beq _080861DC
	cmp r0, #1
	beq _080861E2
	cmp r0, #8
	bhi _080861F0
	adds r0, #1
	strb r0, [r4, #0x12]
	b _080861F0
	.align 2, 0
_080861D8: .4byte gCurrentProjectile
_080861DC:
	bl ProjectileChargedPlasmaBeamInit
	b _080861E8
_080861E2:
	movs r0, #0x10
	bl ProjectileMove
_080861E8:
	ldrb r0, [r4, #0x12]
	adds r0, #1
	strb r0, [r4, #0x12]
	b _080861FE
_080861F0:
	movs r0, #0x1c
	bl ProjectileMove
	movs r0, #0x12
	movs r1, #3
	bl ProjectileSetBeamTrail
_080861FE:
	ldr r1, _0808620C @ =gCurrentProjectile
	ldrb r0, [r1, #0x1e]
	adds r0, #1
	strb r0, [r1, #0x1e]
_08086206:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808620C: .4byte gCurrentProjectile

	thumb_func_start ProjectilePlasmaBeamInit
ProjectilePlasmaBeamInit: @ 0x08086210
	push {lr}
	movs r0, #0xcb
	bl SoundPlay
	ldr r3, _08086254 @ =gCurrentProjectile
	ldrb r2, [r3]
	movs r1, #0x10
	movs r0, #0
	orrs r1, r2
	strb r0, [r3, #0xe]
	strh r0, [r3, #0xc]
	movs r0, #0x10
	strb r0, [r3, #0x14]
	strb r0, [r3, #0x15]
	ldr r2, _08086258 @ =0x0000FFF4
	strh r2, [r3, #0x16]
	movs r0, #0xc
	strh r0, [r3, #0x18]
	strh r2, [r3, #0x1a]
	strh r0, [r3, #0x1c]
	movs r0, #0xfb
	ands r1, r0
	strb r1, [r3]
	ldrb r0, [r3, #0x10]
	subs r0, #1
	cmp r0, #4
	bhi _080862B8
	lsls r0, r0, #2
	ldr r1, _0808625C @ =_08086260
	adds r0, r0, r1
	ldr r0, [r0]
	adds r2, r3, #0
	mov pc, r0
	.align 2, 0
_08086254: .4byte gCurrentProjectile
_08086258: .4byte 0x0000FFF4
_0808625C: .4byte _08086260
_08086260: @ jump table
	.4byte _080862B8 @ case 0
	.4byte _0808628C @ case 1
	.4byte _08086274 @ case 2
	.4byte _080862A8 @ case 3
	.4byte _0808629C @ case 4
_08086274:
	ldr r1, _08086284 @ =gCurrentProjectile
	ldrb r2, [r1]
	movs r0, #0x20
	orrs r0, r2
	strb r0, [r1]
	ldr r0, _08086288 @ =0x0858DE0C
	b _080862BC
	.align 2, 0
_08086284: .4byte gCurrentProjectile
_08086288: .4byte 0x0858DE0C
_0808628C:
	ldr r1, _08086294 @ =gCurrentProjectile
	ldr r0, _08086298 @ =0x0858DE0C
	b _080862BC
	.align 2, 0
_08086294: .4byte gCurrentProjectile
_08086298: .4byte 0x0858DE0C
_0808629C:
	ldr r0, _080862B0 @ =gCurrentProjectile
	ldrb r2, [r0]
	movs r1, #0x20
	orrs r1, r2
	strb r1, [r0]
	adds r2, r0, #0
_080862A8:
	ldr r0, _080862B4 @ =0x0858DE24
	str r0, [r2, #4]
	b _080862BE
	.align 2, 0
_080862B0: .4byte gCurrentProjectile
_080862B4: .4byte 0x0858DE24
_080862B8:
	ldr r1, _080862C4 @ =gCurrentProjectile
	ldr r0, _080862C8 @ =0x0858DDF4
_080862BC:
	str r0, [r1, #4]
_080862BE:
	pop {r0}
	bx r0
	.align 2, 0
_080862C4: .4byte gCurrentProjectile
_080862C8: .4byte 0x0858DDF4

	thumb_func_start ProjectilePlasmaBeamSubroutine
ProjectilePlasmaBeamSubroutine: @ 0x080862CC
	push {r4, lr}
	ldr r1, _08086300 @ =gCurrentProjectile
	ldrb r0, [r1, #0x13]
	cmp r0, #0
	beq _080862E0
	ldrb r0, [r1, #0x12]
	cmp r0, #8
	bhi _080862E0
	bl ProjectileMovePart
_080862E0:
	ldr r0, _08086304 @ =gCurrentClipdataAffectingAction
	movs r1, #6
	strb r1, [r0]
	bl ProjectileCheckVerticalCollisionAtPosition
	cmp r0, #0
	beq _08086308
	ldr r1, _08086300 @ =gCurrentProjectile
	movs r0, #0
	strb r0, [r1]
	ldrh r0, [r1, #8]
	ldrh r1, [r1, #0xa]
	movs r2, #6
	bl ParticleSet
	b _08086346
	.align 2, 0
_08086300: .4byte gCurrentProjectile
_08086304: .4byte gCurrentClipdataAffectingAction
_08086308:
	ldr r4, _08086320 @ =gCurrentProjectile
	ldrb r0, [r4, #0x12]
	cmp r0, #0
	beq _08086324
	cmp r0, #1
	beq _0808632A
	cmp r0, #8
	bhi _08086338
	adds r0, #1
	strb r0, [r4, #0x12]
	b _08086338
	.align 2, 0
_08086320: .4byte gCurrentProjectile
_08086324:
	bl ProjectilePlasmaBeamInit
	b _08086330
_0808632A:
	movs r0, #0x10
	bl ProjectileMove
_08086330:
	ldrb r0, [r4, #0x12]
	adds r0, #1
	strb r0, [r4, #0x12]
	b _0808633E
_08086338:
	movs r0, #0x1c
	bl ProjectileMove
_0808633E:
	ldr r1, _0808634C @ =gCurrentProjectile
	ldrb r0, [r1, #0x1e]
	adds r0, #1
	strb r0, [r1, #0x1e]
_08086346:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808634C: .4byte gCurrentProjectile

	thumb_func_start ProjectileChargedWaveBeamInit
ProjectileChargedWaveBeamInit: @ 0x08086350
	push {r4, lr}
	ldr r0, _08086370 @ =gEquipment
	ldrb r4, [r0, #0xa]
	movs r0, #0x10
	ands r0, r4
	cmp r0, #0
	beq _0808637C
	movs r0, #0xf1
	bl SoundPlay
	ldr r0, _08086374 @ =gCurrentProjectile
	ldr r2, _08086378 @ =0x0000FFF4
	strh r2, [r0, #0x16]
	movs r1, #0xc
	b _0808638A
	.align 2, 0
_08086370: .4byte gEquipment
_08086374: .4byte gCurrentProjectile
_08086378: .4byte 0x0000FFF4
_0808637C:
	movs r0, #0xf0
	bl SoundPlay
	ldr r0, _080863C0 @ =gCurrentProjectile
	ldr r2, _080863C4 @ =0x0000FFEC
	strh r2, [r0, #0x16]
	movs r1, #0x14
_0808638A:
	strh r1, [r0, #0x18]
	strh r2, [r0, #0x1a]
	strh r1, [r0, #0x1c]
	ldr r1, _080863C0 @ =gCurrentProjectile
	ldrb r3, [r1]
	movs r2, #0x18
	movs r0, #0
	orrs r2, r3
	strb r0, [r1, #0xe]
	strh r0, [r1, #0xc]
	movs r0, #0x10
	strb r0, [r1, #0x14]
	strb r0, [r1, #0x15]
	movs r0, #0xfb
	ands r2, r0
	strb r2, [r1]
	ldrb r0, [r1, #0x10]
	subs r0, #1
	adds r2, r1, #0
	cmp r0, #4
	bhi _08086438
	lsls r0, r0, #2
	ldr r1, _080863C8 @ =_080863CC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080863C0: .4byte gCurrentProjectile
_080863C4: .4byte 0x0000FFEC
_080863C8: .4byte _080863CC
_080863CC: @ jump table
	.4byte _08086438 @ case 0
	.4byte _08086400 @ case 1
	.4byte _080863E0 @ case 2
	.4byte _08086420 @ case 3
	.4byte _08086418 @ case 4
_080863E0:
	ldrb r0, [r2]
	movs r1, #0x20
	orrs r1, r0
	strb r1, [r2]
	movs r0, #0x10
	ands r4, r0
	cmp r4, #0
	beq _080863F8
	ldr r0, _080863F4 @ =0x0858E218
	b _0808644A
	.align 2, 0
_080863F4: .4byte 0x0858E218
_080863F8:
	ldr r0, _080863FC @ =0x0858DFAC
	b _0808644A
	.align 2, 0
_080863FC: .4byte 0x0858DFAC
_08086400:
	movs r0, #0x10
	ands r4, r0
	cmp r4, #0
	beq _08086410
	ldr r0, _0808640C @ =0x0858E218
	b _0808644A
	.align 2, 0
_0808640C: .4byte 0x0858E218
_08086410:
	ldr r0, _08086414 @ =0x0858DFAC
	b _0808644A
	.align 2, 0
_08086414: .4byte 0x0858DFAC
_08086418:
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08086420:
	movs r0, #0x10
	ands r4, r0
	cmp r4, #0
	beq _08086430
	ldr r0, _0808642C @ =0x0858E228
	b _0808644A
	.align 2, 0
_0808642C: .4byte 0x0858E228
_08086430:
	ldr r0, _08086434 @ =0x0858DFC4
	b _0808644A
	.align 2, 0
_08086434: .4byte 0x0858DFC4
_08086438:
	movs r0, #0x10
	ands r4, r0
	cmp r4, #0
	beq _08086448
	ldr r0, _08086444 @ =0x0858E208
	b _0808644A
	.align 2, 0
_08086444: .4byte 0x0858E208
_08086448:
	ldr r0, _08086454 @ =0x0858DF94
_0808644A:
	str r0, [r2, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08086454: .4byte 0x0858DF94

	thumb_func_start ProjectileChargedWaveBeamSubroutine
ProjectileChargedWaveBeamSubroutine: @ 0x08086458
	push {r4, lr}
	ldr r4, _08086498 @ =gCurrentProjectile
	ldrb r0, [r4, #0x13]
	cmp r0, #0
	beq _08086466
	bl ProjectileMoveWaveBeamParts
_08086466:
	ldr r1, _0808649C @ =gCurrentClipdataAffectingAction
	movs r0, #6
	strb r0, [r1]
	bl ProjectileCheckHittingSolid
	ldrb r0, [r4, #0x12]
	cmp r0, #0
	beq _080864A4
	cmp r0, #1
	beq _080864AA
	movs r0, #0x1c
	bl ProjectileMove
	ldr r0, _080864A0 @ =gEquipment
	ldrb r1, [r0, #0xa]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080864B8
	movs r0, #0x14
	movs r1, #3
	bl ProjectileSetBeamTrail
	b _080864C0
	.align 2, 0
_08086498: .4byte gCurrentProjectile
_0808649C: .4byte gCurrentClipdataAffectingAction
_080864A0: .4byte gEquipment
_080864A4:
	bl ProjectileChargedWaveBeamInit
	b _080864B0
_080864AA:
	movs r0, #0x10
	bl ProjectileMove
_080864B0:
	ldrb r0, [r4, #0x12]
	adds r0, #1
	strb r0, [r4, #0x12]
	b _080864C0
_080864B8:
	movs r0, #0x13
	movs r1, #3
	bl ProjectileSetBeamTrail
_080864C0:
	ldr r1, _080864D0 @ =gCurrentProjectile
	ldrb r0, [r1, #0x1e]
	adds r0, #1
	strb r0, [r1, #0x1e]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080864D0: .4byte gCurrentProjectile

	thumb_func_start ProjectileWaveBeamInit
ProjectileWaveBeamInit: @ 0x080864D4
	push {r4, lr}
	ldr r0, _080864F4 @ =gEquipment
	ldrb r4, [r0, #0xa]
	movs r0, #0x10
	ands r0, r4
	cmp r0, #0
	beq _08086500
	movs r0, #0xcd
	bl SoundPlay
	ldr r0, _080864F8 @ =gCurrentProjectile
	ldr r2, _080864FC @ =0x0000FFF4
	strh r2, [r0, #0x16]
	movs r1, #0xc
	b _0808650E
	.align 2, 0
_080864F4: .4byte gEquipment
_080864F8: .4byte gCurrentProjectile
_080864FC: .4byte 0x0000FFF4
_08086500:
	movs r0, #0xcc
	bl SoundPlay
	ldr r0, _08086544 @ =gCurrentProjectile
	ldr r2, _08086548 @ =0x0000FFEC
	strh r2, [r0, #0x16]
	movs r1, #0x14
_0808650E:
	strh r1, [r0, #0x18]
	strh r2, [r0, #0x1a]
	strh r1, [r0, #0x1c]
	ldr r1, _08086544 @ =gCurrentProjectile
	ldrb r3, [r1]
	movs r2, #0x18
	movs r0, #0
	orrs r2, r3
	strb r0, [r1, #0xe]
	strh r0, [r1, #0xc]
	movs r0, #0x10
	strb r0, [r1, #0x14]
	strb r0, [r1, #0x15]
	movs r0, #0xfb
	ands r2, r0
	strb r2, [r1]
	ldrb r0, [r1, #0x10]
	subs r0, #1
	adds r2, r1, #0
	cmp r0, #4
	bhi _080865BC
	lsls r0, r0, #2
	ldr r1, _0808654C @ =_08086550
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08086544: .4byte gCurrentProjectile
_08086548: .4byte 0x0000FFEC
_0808654C: .4byte _08086550
_08086550: @ jump table
	.4byte _080865BC @ case 0
	.4byte _08086584 @ case 1
	.4byte _08086564 @ case 2
	.4byte _080865A4 @ case 3
	.4byte _0808659C @ case 4
_08086564:
	ldrb r0, [r2]
	movs r1, #0x20
	orrs r1, r0
	strb r1, [r2]
	movs r0, #0x10
	ands r4, r0
	cmp r4, #0
	beq _0808657C
	ldr r0, _08086578 @ =0x0858E1E8
	b _080865CE
	.align 2, 0
_08086578: .4byte 0x0858E1E8
_0808657C:
	ldr r0, _08086580 @ =0x0858DF74
	b _080865CE
	.align 2, 0
_08086580: .4byte 0x0858DF74
_08086584:
	movs r0, #0x10
	ands r4, r0
	cmp r4, #0
	beq _08086594
	ldr r0, _08086590 @ =0x0858E1E8
	b _080865CE
	.align 2, 0
_08086590: .4byte 0x0858E1E8
_08086594:
	ldr r0, _08086598 @ =0x0858DF74
	b _080865CE
	.align 2, 0
_08086598: .4byte 0x0858DF74
_0808659C:
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_080865A4:
	movs r0, #0x10
	ands r4, r0
	cmp r4, #0
	beq _080865B4
	ldr r0, _080865B0 @ =0x0858E1F8
	b _080865CE
	.align 2, 0
_080865B0: .4byte 0x0858E1F8
_080865B4:
	ldr r0, _080865B8 @ =0x0858DF84
	b _080865CE
	.align 2, 0
_080865B8: .4byte 0x0858DF84
_080865BC:
	movs r0, #0x10
	ands r4, r0
	cmp r4, #0
	beq _080865CC
	ldr r0, _080865C8 @ =0x0858E1D8
	b _080865CE
	.align 2, 0
_080865C8: .4byte 0x0858E1D8
_080865CC:
	ldr r0, _080865D8 @ =0x0858DF64
_080865CE:
	str r0, [r2, #4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080865D8: .4byte 0x0858DF64

	thumb_func_start ProjectileWaveBeamSubroutine
ProjectileWaveBeamSubroutine: @ 0x080865DC
	push {r4, lr}
	ldr r4, _0808661C @ =gCurrentProjectile
	ldrb r0, [r4, #0x13]
	cmp r0, #0
	beq _080865EA
	bl ProjectileMoveWaveBeamParts
_080865EA:
	ldr r1, _08086620 @ =gCurrentClipdataAffectingAction
	movs r0, #6
	strb r0, [r1]
	bl ProjectileCheckHittingSolid
	ldrb r0, [r4, #0x12]
	cmp r0, #0
	beq _08086628
	cmp r0, #1
	beq _0808662E
	movs r0, #0x1c
	bl ProjectileMove
	ldr r0, _08086624 @ =gEquipment
	ldrb r1, [r0, #0xa]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0808663A
	movs r0, #0xe
	movs r1, #3
	bl ProjectileSetBeamTrail
	b _0808663A
	.align 2, 0
_0808661C: .4byte gCurrentProjectile
_08086620: .4byte gCurrentClipdataAffectingAction
_08086624: .4byte gEquipment
_08086628:
	bl ProjectileWaveBeamInit
	b _08086634
_0808662E:
	movs r0, #0x10
	bl ProjectileMove
_08086634:
	ldrb r0, [r4, #0x12]
	adds r0, #1
	strb r0, [r4, #0x12]
_0808663A:
	ldr r1, _08086648 @ =gCurrentProjectile
	ldrb r0, [r1, #0x1e]
	adds r0, #1
	strb r0, [r1, #0x1e]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08086648: .4byte gCurrentProjectile

	thumb_func_start ProjectileFlareLoadGraphics
ProjectileFlareLoadGraphics: @ 0x0808664C
	push {lr}
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldr r0, _08086668 @ =gCurrentProjectile
	ldrb r0, [r0, #0x10]
	subs r0, #1
	cmp r0, #4
	bhi _080866DC
	lsls r0, r0, #2
	ldr r1, _0808666C @ =_08086670
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08086668: .4byte gCurrentProjectile
_0808666C: .4byte _08086670
_08086670: @ jump table
	.4byte _080866DC @ case 0
	.4byte _08086684 @ case 1
	.4byte _08086684 @ case 2
	.4byte _080866B0 @ case 3
	.4byte _080866B0 @ case 4
_08086684:
	ldr r1, _0808669C @ =0x040000D4
	lsls r2, r2, #8
	ldr r0, _080866A0 @ =0x0858F578
	adds r0, r2, r0
	str r0, [r1]
	ldr r0, _080866A4 @ =0x06011280
	str r0, [r1, #4]
	ldr r3, _080866A8 @ =0x80000080
	str r3, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _080866AC @ =0x0858FA78
	b _080866F2
	.align 2, 0
_0808669C: .4byte 0x040000D4
_080866A0: .4byte 0x0858F578
_080866A4: .4byte 0x06011280
_080866A8: .4byte 0x80000080
_080866AC: .4byte 0x0858FA78
_080866B0:
	ldr r1, _080866C8 @ =0x040000D4
	lsls r2, r2, #8
	ldr r0, _080866CC @ =0x0858FF78
	adds r0, r2, r0
	str r0, [r1]
	ldr r0, _080866D0 @ =0x06011280
	str r0, [r1, #4]
	ldr r3, _080866D4 @ =0x80000080
	str r3, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _080866D8 @ =0x08590478
	b _080866F2
	.align 2, 0
_080866C8: .4byte 0x040000D4
_080866CC: .4byte 0x0858FF78
_080866D0: .4byte 0x06011280
_080866D4: .4byte 0x80000080
_080866D8: .4byte 0x08590478
_080866DC:
	ldr r1, _08086704 @ =0x040000D4
	lsls r2, r2, #8
	ldr r0, _08086708 @ =0x0858EB78
	adds r0, r2, r0
	str r0, [r1]
	ldr r0, _0808670C @ =0x06011280
	str r0, [r1, #4]
	ldr r3, _08086710 @ =0x80000080
	str r3, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08086714 @ =0x0858F078
_080866F2:
	adds r2, r2, r0
	str r2, [r1]
	ldr r0, _08086718 @ =0x06011680
	str r0, [r1, #4]
	str r3, [r1, #8]
	ldr r0, [r1, #8]
	pop {r0}
	bx r0
	.align 2, 0
_08086704: .4byte 0x040000D4
_08086708: .4byte 0x0858EB78
_0808670C: .4byte 0x06011280
_08086710: .4byte 0x80000080
_08086714: .4byte 0x0858F078
_08086718: .4byte 0x06011680

	thumb_func_start ProjectileFlareInit
ProjectileFlareInit: @ 0x0808671C
	push {lr}
	ldr r1, _08086764 @ =gCurrentProjectile
	ldr r0, _08086768 @ =0x08590988
	str r0, [r1, #4]
	movs r0, #0
	strb r0, [r1, #0xe]
	strh r0, [r1, #0xc]
	movs r0, #0x10
	strb r0, [r1, #0x14]
	strb r0, [r1, #0x15]
	ldr r2, _0808676C @ =0x0000FFC0
	strh r2, [r1, #0x16]
	movs r0, #0x40
	strh r0, [r1, #0x18]
	strh r2, [r1, #0x1a]
	strh r0, [r1, #0x1c]
	ldrb r2, [r1]
	movs r0, #0xfb
	ands r0, r2
	movs r2, #8
	orrs r0, r2
	strb r0, [r1]
	ldrb r0, [r1, #0x12]
	adds r0, #1
	strb r0, [r1, #0x12]
	ldrb r0, [r1, #0x10]
	subs r0, #1
	adds r2, r1, #0
	cmp r0, #4
	bhi _08086790
	lsls r0, r0, #2
	ldr r1, _08086770 @ =_08086774
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08086764: .4byte gCurrentProjectile
_08086768: .4byte 0x08590988
_0808676C: .4byte 0x0000FFC0
_08086770: .4byte _08086774
_08086774: @ jump table
	.4byte _08086790 @ case 0
	.4byte _08086790 @ case 1
	.4byte _08086788 @ case 2
	.4byte _08086790 @ case 3
	.4byte _08086788 @ case 4
_08086788:
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08086790:
	movs r0, #0
	bl ProjectileFlareLoadGraphics
	movs r0, #0xf6
	bl SoundPlay
	pop {r0}
	bx r0

	thumb_func_start ProjectileFlareSubroutine
ProjectileFlareSubroutine: @ 0x080867A0
	push {lr}
	ldr r0, _080867C0 @ =gCurrentClipdataAffectingAction
	movs r1, #6
	strb r1, [r0]
	bl ProjectileCheckVerticalCollisionAtPosition
	ldr r0, _080867C4 @ =gCurrentProjectile
	ldrb r0, [r0, #0x1e]
	cmp r0, #0xa
	bhi _08086842
	lsls r0, r0, #2
	ldr r1, _080867C8 @ =_080867CC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080867C0: .4byte gCurrentClipdataAffectingAction
_080867C4: .4byte gCurrentProjectile
_080867C8: .4byte _080867CC
_080867CC: @ jump table
	.4byte _080867F8 @ case 0
	.4byte _0808680C @ case 1
	.4byte _0808681C @ case 2
	.4byte _08086842 @ case 3
	.4byte _08086824 @ case 4
	.4byte _08086842 @ case 5
	.4byte _0808682C @ case 6
	.4byte _08086842 @ case 7
	.4byte _08086834 @ case 8
	.4byte _08086842 @ case 9
	.4byte _0808683C @ case 10
_080867F8:
	bl ProjectileFlareInit
	ldr r2, _08086808 @ =gCurrentProjectile
	ldrb r1, [r2]
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r2]
	b _08086842
	.align 2, 0
_08086808: .4byte gCurrentProjectile
_0808680C:
	ldr r2, _08086818 @ =gCurrentProjectile
	ldrb r1, [r2]
	movs r0, #0xef
	ands r0, r1
	strb r0, [r2]
	b _08086842
	.align 2, 0
_08086818: .4byte gCurrentProjectile
_0808681C:
	movs r0, #1
	bl ProjectileFlareLoadGraphics
	b _08086842
_08086824:
	movs r0, #2
	bl ProjectileFlareLoadGraphics
	b _08086842
_0808682C:
	movs r0, #3
	bl ProjectileFlareLoadGraphics
	b _08086842
_08086834:
	movs r0, #4
	bl ProjectileFlareLoadGraphics
	b _08086842
_0808683C:
	ldr r1, _08086850 @ =gCurrentProjectile
	movs r0, #0
	strb r0, [r1]
_08086842:
	ldr r1, _08086850 @ =gCurrentProjectile
	ldrb r0, [r1, #0x1e]
	adds r0, #1
	strb r0, [r1, #0x1e]
	pop {r0}
	bx r0
	.align 2, 0
_08086850: .4byte gCurrentProjectile

	thumb_func_start unk_86854
unk_86854: @ 0x08086854
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _0808686C @ =gSubGameMode1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08086884
	cmp r0, #1
	bgt _08086870
	cmp r0, #0
	beq _0808687A
	b _08086900
	.align 2, 0
_0808686C: .4byte gSubGameMode1
_08086870:
	cmp r0, #2
	beq _080868C8
	cmp r0, #3
	beq _080868D6
	b _08086900
_0808687A:
	bl unk_8690c
	ldrh r0, [r4]
	adds r0, #1
	b _080868FE
_08086884:
	ldr r3, _080868AC @ =gWrittenToBldy
	ldrh r1, [r3]
	adds r0, r1, #0
	cmp r0, #0
	beq _080868B4
	cmp r0, #8
	bhi _080868A4
	ldr r2, _080868B0 @ =gNonGameplayRam
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _08086900
	strh r5, [r2]
_080868A4:
	subs r0, r1, #1
	strh r0, [r3]
	b _08086900
	.align 2, 0
_080868AC: .4byte gWrittenToBldy
_080868B0: .4byte gNonGameplayRam
_080868B4:
	ldr r1, _080868C0 @ =gNonGameplayRam
	ldr r0, _080868C4 @ =0x000007CB
	strh r0, [r1]
	ldrh r0, [r4]
	adds r0, #1
	b _080868FE
	.align 2, 0
_080868C0: .4byte gNonGameplayRam
_080868C4: .4byte 0x000007CB
_080868C8:
	bl unk_86b58
	cmp r0, #0
	beq _08086900
	ldrh r0, [r4]
	adds r0, #1
	b _080868FE
_080868D6:
	bl TitleScreenCallObjectsSubroutine
	bl TitleScreenDrawAllObjects
	ldr r1, _080868EC @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _080868F0
	adds r0, #1
	strh r0, [r1]
	b _08086900
	.align 2, 0
_080868EC: .4byte gWrittenToBldy
_080868F0:
	ldr r0, _08086908 @ =gNonGameplayRam
	ldrb r0, [r0, #4]
	movs r5, #1
	cmp r0, #1
	bne _080868FC
	movs r5, #0x64
_080868FC:
	movs r0, #0
_080868FE:
	strh r0, [r4]
_08086900:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08086908: .4byte gNonGameplayRam

	thumb_func_start unk_8690c
unk_8690c: @ 0x0808690C
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #4
	ldr r3, _08086A74 @ =0x04000208
	movs r6, #0
	strh r6, [r3]
	ldr r2, _08086A78 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _08086A7C @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08086A80 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _08086A84 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _08086A88 @ =TitleScreenVblank_Empty
	bl CallbackSetVBlank
	movs r0, #0x80
	lsls r0, r0, #0x13
	mov sl, r0
	strh r6, [r0]
	movs r4, #0
	str r4, [sp]
	ldr r5, _08086A8C @ =0x040000D4
	mov r1, sp
	str r1, [r5]
	ldr r0, _08086A90 @ =gNonGameplayRam
	str r0, [r5, #4]
	ldr r0, _08086A94 @ =0x85000150
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #0x11
	bl unk_24ec
	ldr r1, _08086A98 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _08086A9C @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _08086AA0 @ =0x04000054
	strh r1, [r0]
	bl ClearGfxRam
	ldr r0, _08086AA4 @ =gNextOamSlot
	strb r6, [r0]
	bl ResetFreeOam
	ldr r0, _08086AA8 @ =0x0400000E
	mov sb, r0
	strh r4, [r0]
	subs r0, #2
	strh r4, [r0]
	ldr r1, _08086AAC @ =0x0400000A
	mov r8, r1
	strh r4, [r1]
	subs r0, #4
	strh r4, [r0]
	adds r0, #8
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #0xa
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, _08086AB0 @ =0x08605D08
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _08086AB4 @ =0x08593274
	ldr r1, _08086AB8 @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _08086ABC @ =0x085963B8
	ldr r1, _08086AC0 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _08086AC4 @ =0x08609220
	ldr r6, _08086AC8 @ =0x0600F800
	adds r1, r6, #0
	bl LZ77UncompVram
	ldr r0, _08086ACC @ =0x08596D0C
	str r0, [r5]
	movs r2, #0xa0
	lsls r2, r2, #0x13
	str r2, [r5, #4]
	ldr r1, _08086AD0 @ =0x84000040
	str r1, [r5, #8]
	ldr r0, [r5, #8]
	ldr r0, _08086AD4 @ =0x08609120
	str r0, [r5]
	ldr r0, _08086AD8 @ =0x05000100
	str r0, [r5, #4]
	str r1, [r5, #8]
	ldr r0, [r5, #8]
	strh r4, [r2]
	ldr r0, _08086ADC @ =0x0879C2C8
	ldr r0, [r0]
	adds r1, r6, #0
	movs r2, #0
	bl TitleScreenLoadDebugText
	ldr r0, _08086AE0 @ =0x08590C9C
	ldr r1, _08086AE4 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _08086AE8 @ =0x08592B74
	str r0, [r5]
	ldr r0, _08086AEC @ =0x05000200
	str r0, [r5, #4]
	ldr r0, _08086AF0 @ =0x84000080
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	ldr r1, _08086AF4 @ =0x00001E09
	adds r0, r1, #0
	mov r1, r8
	strh r0, [r1]
	ldr r1, _08086AF8 @ =0x00001F03
	adds r0, r1, #0
	mov r1, sb
	strh r0, [r1]
	movs r1, #0xd0
	lsls r1, r1, #5
	adds r0, r1, #0
	mov r1, sl
	strh r0, [r1]
	ldr r0, _08086AFC @ =TitleScreenVblank
	bl CallbackSetVBlank
	movs r0, #1
	movs r1, #0x80
	movs r2, #0x9a
	bl TitleScreenSetupObject
	movs r0, #2
	movs r1, #0x78
	movs r2, #0x88
	bl TitleScreenSetupObject
	bl TitleScreenDrawAllObjects
	movs r0, #0x4a
	movs r1, #0x10
	bl PlayMusic
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08086A74: .4byte 0x04000208
_08086A78: .4byte 0x04000004
_08086A7C: .4byte 0x0000FFEF
_08086A80: .4byte 0x04000200
_08086A84: .4byte 0x0000FFFD
_08086A88: .4byte TitleScreenVblank_Empty
_08086A8C: .4byte 0x040000D4
_08086A90: .4byte gNonGameplayRam
_08086A94: .4byte 0x85000150
_08086A98: .4byte 0x04000050
_08086A9C: .4byte gWrittenToBldy
_08086AA0: .4byte 0x04000054
_08086AA4: .4byte gNextOamSlot
_08086AA8: .4byte 0x0400000E
_08086AAC: .4byte 0x0400000A
_08086AB0: .4byte 0x08605D08
_08086AB4: .4byte 0x08593274
_08086AB8: .4byte 0x06008000
_08086ABC: .4byte 0x085963B8
_08086AC0: .4byte 0x0600F000
_08086AC4: .4byte 0x08609220
_08086AC8: .4byte 0x0600F800
_08086ACC: .4byte 0x08596D0C
_08086AD0: .4byte 0x84000040
_08086AD4: .4byte 0x08609120
_08086AD8: .4byte 0x05000100
_08086ADC: .4byte 0x0879C2C8
_08086AE0: .4byte 0x08590C9C
_08086AE4: .4byte 0x06010000
_08086AE8: .4byte 0x08592B74
_08086AEC: .4byte 0x05000200
_08086AF0: .4byte 0x84000080
_08086AF4: .4byte 0x00001E09
_08086AF8: .4byte 0x00001F03
_08086AFC: .4byte TitleScreenVblank

	thumb_func_start TitleScreenVblank
TitleScreenVblank: @ 0x08086B00
	ldr r1, _08086B2C @ =0x040000D4
	ldr r0, _08086B30 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08086B34 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _08086B38 @ =0x04000052
	ldr r0, _08086B3C @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08086B40 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08086B44 @ =0x04000054
	ldr r0, _08086B48 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_08086B2C: .4byte 0x040000D4
_08086B30: .4byte gOamData
_08086B34: .4byte 0x84000100
_08086B38: .4byte 0x04000052
_08086B3C: .4byte 0x03001222
_08086B40: .4byte 0x03001220
_08086B44: .4byte 0x04000054
_08086B48: .4byte gWrittenToBldy

	thumb_func_start TitleScreenVblank_Empty
TitleScreenVblank_Empty: @ 0x08086B4C
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_86b58
unk_86b58: @ 0x08086B58
	push {r4, lr}
	movs r4, #0
	bl TitleScreenCallObjectsSubroutine
	bl TitleScreenDrawAllObjects
	ldr r2, _08086B74 @ =gNonGameplayRam
	ldrb r0, [r2, #5]
	cmp r0, #0
	beq _08086B78
	cmp r0, #1
	beq _08086BC8
	b _08086BDE
	.align 2, 0
_08086B74: .4byte gNonGameplayRam
_08086B78:
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
	ldrh r1, [r2, #2]
	adds r1, #1
	strh r1, [r2, #2]
	lsls r0, r0, #0x10
	movs r1, #0xfa
	lsls r1, r1, #0x13
	cmp r0, r1
	bne _08086B90
	strh r4, [r2]
_08086B90:
	ldr r0, _08086BAC @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	beq _08086BB4
	strh r4, [r2]
	strh r4, [r2, #2]
	movs r0, #1
	strb r0, [r2, #5]
	ldr r0, _08086BB0 @ =0x000001FF
	bl SoundPlay
	b _08086BE0
	.align 2, 0
_08086BAC: .4byte gChangedInput
_08086BB0: .4byte 0x000001FF
_08086BB4:
	ldrh r1, [r2, #2]
	movs r0, #0x96
	lsls r0, r0, #3
	cmp r1, r0
	bne _08086BE0
	strh r4, [r2]
	strh r4, [r2, #2]
	movs r0, #1
	strb r0, [r2, #4]
	b _08086BD8
_08086BC8:
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x22
	bls _08086BE0
	strh r4, [r2]
_08086BD8:
	ldr r1, _08086BE8 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
_08086BDE:
	movs r4, #1
_08086BE0:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08086BE8: .4byte 0x04000050

	thumb_func_start TitleScreenSetupObject
TitleScreenSetupObject: @ 0x08086BEC
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	movs r4, #0
	ldr r1, _08086C28 @ =gNonGameplayRam
	ldrb r0, [r1, #0x10]
	cmp r0, #0
	beq _08086C1E
_08086C06:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bhi _08086C22
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	ldrb r0, [r0, #0x10]
	cmp r0, #0
	bne _08086C06
_08086C1E:
	cmp r4, #3
	bls _08086C2C
_08086C22:
	movs r0, #4
	b _08086CDE
	.align 2, 0
_08086C28: .4byte gNonGameplayRam
_08086C2C:
	movs r0, #0
	str r0, [sp]
	ldr r1, _08086C70 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r2, r0, #3
	ldr r3, _08086C74 @ =0x03001490
	adds r0, r2, r3
	str r0, [r1, #4]
	ldr r0, _08086C78 @ =0x85000006
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	adds r0, r3, #0
	subs r0, #0xc
	adds r0, r2, r0
	strh r7, [r0, #0xc]
	strh r6, [r0, #0xe]
	strb r5, [r0, #0x10]
	movs r1, #1
	strb r1, [r0, #0x12]
	cmp r5, #1
	bne _08086C84
	adds r0, r3, #0
	adds r0, #0x10
	adds r0, r2, r0
	ldr r1, _08086C7C @ =0x085973D0
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x14
	adds r0, r2, r0
	ldr r1, _08086C80 @ =TitleScreenProcessCopyright
	b _08086CDA
	.align 2, 0
_08086C70: .4byte 0x040000D4
_08086C74: .4byte 0x03001490
_08086C78: .4byte 0x85000006
_08086C7C: .4byte 0x085973D0
_08086C80: .4byte TitleScreenProcessCopyright
_08086C84:
	cmp r5, #2
	bne _08086CA4
	adds r0, r3, #0
	adds r0, #0x10
	adds r0, r2, r0
	ldr r1, _08086C9C @ =0x08597460
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x14
	adds r0, r2, r0
	ldr r1, _08086CA0 @ =TitleScreenProcessPressStart
	b _08086CDA
	.align 2, 0
_08086C9C: .4byte 0x08597460
_08086CA0: .4byte TitleScreenProcessPressStart
_08086CA4:
	cmp r5, #3
	bne _08086CC4
	adds r0, r3, #0
	adds r0, #0x10
	adds r0, r2, r0
	ldr r1, _08086CBC @ =0x08597408
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x14
	adds r0, r2, r0
	ldr r1, _08086CC0 @ =TitleScreenProcessLanguage
	b _08086CDA
	.align 2, 0
_08086CBC: .4byte 0x08597408
_08086CC0: .4byte TitleScreenProcessLanguage
_08086CC4:
	cmp r5, #4
	bne _08086CDC
	adds r0, r3, #0
	adds r0, #0x10
	adds r0, r2, r0
	ldr r1, _08086CE8 @ =0x08597418
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x14
	adds r0, r2, r0
	ldr r1, _08086CEC @ =TitleScreenProcess_OamSection4
_08086CDA:
	str r1, [r0]
_08086CDC:
	adds r0, r4, #0
_08086CDE:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08086CE8: .4byte 0x08597418
_08086CEC: .4byte TitleScreenProcess_OamSection4

	thumb_func_start unk_86cf0
unk_86cf0: @ 0x08086CF0
	push {lr}
	adds r3, r0, #0
	ldrb r2, [r3, #0xa]
	cmp r2, #0
	bne _08086D20
	ldrb r0, [r3, #9]
	cmp r0, #0x22
	bne _08086D0A
	strb r2, [r3, #7]
	strb r2, [r3, #8]
	strb r2, [r3, #9]
	movs r0, #1
	strb r0, [r3, #0xa]
_08086D0A:
	ldr r0, _08086D1C @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	beq _08086D8C
	strb r2, [r3, #7]
	strb r2, [r3, #8]
	b _08086D84
	.align 2, 0
_08086D1C: .4byte gChangedInput
_08086D20:
	cmp r2, #1
	bne _08086D8C
	ldrb r0, [r3, #9]
	cmp r0, #2
	bne _08086D72
	ldrb r0, [r3, #5]
	adds r0, #1
	strb r0, [r3, #5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x20
	bne _08086D3C
	movs r0, #0
	strb r0, [r3, #5]
_08086D3C:
	ldrb r0, [r3, #5]
	adds r1, r0, #0
	cmp r1, #0xf
	bhi _08086D54
	ldr r2, _08086D4C @ =0x040000D4
	lsls r0, r0, #5
	ldr r1, _08086D50 @ =0x08592D74
	b _08086D60
	.align 2, 0
_08086D4C: .4byte 0x040000D4
_08086D50: .4byte 0x08592D74
_08086D54:
	cmp r1, #0x1f
	bhi _08086D6E
	ldr r2, _08086DAC @ =0x040000D4
	subs r0, #0x10
	lsls r0, r0, #5
	ldr r1, _08086DB0 @ =0x08592F74
_08086D60:
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, _08086DB4 @ =0x05000200
	str r0, [r2, #4]
	ldr r0, _08086DB8 @ =0x84000008
	str r0, [r2, #8]
	ldr r0, [r2, #8]
_08086D6E:
	movs r0, #0
	strb r0, [r3, #9]
_08086D72:
	ldr r0, _08086DBC @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	beq _08086D8C
	movs r0, #0
	strb r0, [r3, #7]
	strb r0, [r3, #8]
_08086D84:
	movs r0, #4
	strb r0, [r3, #9]
	movs r0, #2
	strb r0, [r3, #0xa]
_08086D8C:
	ldrb r0, [r3, #0xa]
	cmp r0, #2
	bne _08086DC4
	ldrb r0, [r3, #9]
	cmp r0, #4
	bne _08086DCC
	movs r0, #0
	strb r0, [r3, #7]
	strb r0, [r3, #8]
	strb r0, [r3, #9]
	movs r0, #3
	strb r0, [r3, #0xa]
	ldr r0, _08086DC0 @ =0x085973F0
	str r0, [r3, #0x10]
	b _08086DCC
	.align 2, 0
_08086DAC: .4byte 0x040000D4
_08086DB0: .4byte 0x08592F74
_08086DB4: .4byte 0x05000200
_08086DB8: .4byte 0x84000008
_08086DBC: .4byte gChangedInput
_08086DC0: .4byte 0x085973F0
_08086DC4:
	cmp r0, #3
	bne _08086DCC
	movs r0, #0
	strb r0, [r3, #9]
_08086DCC:
	ldrb r0, [r3, #9]
	adds r0, #1
	strb r0, [r3, #9]
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start TitleScreenProcessPressStart
TitleScreenProcessPressStart: @ 0x08086DD8
	push {lr}
	adds r3, r0, #0
	ldrb r1, [r3, #0xa]
	cmp r1, #0
	bne _08086E32
	ldrb r0, [r3, #9]
	adds r0, #1
	strb r0, [r3, #9]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xc
	bne _08086E18
	strb r1, [r3, #9]
	ldrb r0, [r3, #5]
	adds r0, #1
	strb r0, [r3, #5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	bne _08086E02
	strb r1, [r3, #5]
_08086E02:
	ldr r2, _08086E38 @ =0x040000D4
	ldrb r0, [r3, #5]
	lsls r0, r0, #5
	ldr r1, _08086E3C @ =0x08593174
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, _08086E40 @ =0x05000200
	str r0, [r2, #4]
	ldr r0, _08086E44 @ =0x84000008
	str r0, [r2, #8]
	ldr r0, [r2, #8]
_08086E18:
	ldr r0, _08086E48 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	beq _08086E32
	movs r0, #0
	strb r0, [r3, #7]
	strb r0, [r3, #8]
	ldr r0, _08086E4C @ =0x08597470
	str r0, [r3, #0x10]
	movs r0, #1
	strb r0, [r3, #0xa]
_08086E32:
	pop {r0}
	bx r0
	.align 2, 0
_08086E38: .4byte 0x040000D4
_08086E3C: .4byte 0x08593174
_08086E40: .4byte 0x05000200
_08086E44: .4byte 0x84000008
_08086E48: .4byte gChangedInput
_08086E4C: .4byte 0x08597470

	thumb_func_start TitleScreenProcessLanguage
TitleScreenProcessLanguage: @ 0x08086E50
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #7]
	lsls r0, r0, #3
	ldr r1, [r4, #0x10]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #8]
	cmp r0, r2
	bne _08086E66
	adds r1, #8
_08086E66:
	ldrb r1, [r1, #4]
	cmp r1, #0
	bne _08086E70
	strb r1, [r4, #4]
	strb r1, [r4, #6]
_08086E70:
	ldrb r0, [r4, #9]
	adds r1, r0, #0
	cmp r1, #0xd
	bls _08086E88
	cmp r1, #0xe
	bne _08086E8C
	movs r0, #4
	movs r1, #0x70
	movs r2, #0x50
	bl TitleScreenSetupObject
	ldrb r0, [r4, #9]
_08086E88:
	adds r0, #1
	strb r0, [r4, #9]
_08086E8C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start TitleScreenProcess_OamSection4
TitleScreenProcess_OamSection4: @ 0x08086E94
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #7]
	lsls r0, r0, #3
	ldr r1, [r2, #0x10]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r2, #8]
	cmp r0, r3
	bne _08086EAA
	adds r1, #8
_08086EAA:
	ldrb r1, [r1, #4]
	cmp r1, #0
	bne _08086EB4
	strb r1, [r2, #4]
	strb r1, [r2, #6]
_08086EB4:
	pop {r0}
	bx r0

	thumb_func_start TitleScreenDrawAllObjects
TitleScreenDrawAllObjects: @ 0x08086EB8
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r5, _08086EF0 @ =gNonGameplayRam
	adds r6, r5, #0
	adds r6, #0xc
_08086EC2:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r1, r0, #3
	adds r0, r1, r5
	ldrb r0, [r0, #0x12]
	cmp r0, #0
	beq _08086ED6
	adds r0, r1, r6
	bl TitleScreenDrawObject
_08086ED6:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _08086EC2
	bl ResetFreeOam
	ldr r1, _08086EF4 @ =gNextOamSlot
	movs r0, #0
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08086EF0: .4byte gNonGameplayRam
_08086EF4: .4byte gNextOamSlot

	thumb_func_start TitleScreenDrawObject
TitleScreenDrawObject: @ 0x08086EF8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	ldr r2, _08086FC0 @ =gNextOamSlot
	ldrb r0, [r2]
	lsls r0, r0, #3
	ldr r1, _08086FC4 @ =gOamData
	adds r5, r0, r1
	ldrb r4, [r6, #7]
	lsls r1, r4, #3
	ldr r0, [r6, #0x10]
	adds r3, r0, r1
	ldrb r0, [r3, #4]
	mov r8, r2
	ldrb r1, [r6, #8]
	cmp r0, r1
	bne _08086F2A
	adds r0, r4, #1
	movs r1, #0
	strb r0, [r6, #7]
	strb r1, [r6, #8]
	adds r3, #8
_08086F2A:
	ldrb r1, [r3, #4]
	cmp r1, #0
	bne _08086F38
	ldrb r0, [r6, #7]
	lsls r0, r0, #3
	subs r3, r3, r0
	strb r1, [r6, #7]
_08086F38:
	ldr r4, [r3]
	ldrh r0, [r4]
	mov ip, r0
	adds r4, #2
	movs r7, #0
	cmp r7, ip
	bge _08086FA4
	movs r1, #0xd
	rsbs r1, r1, #0
	mov sl, r1
	ldr r0, _08086FC8 @ =0x000001FF
	mov sb, r0
_08086F50:
	ldrh r1, [r4]
	adds r4, #2
	ldrh r3, [r4]
	adds r4, #2
	strh r1, [r5]
	adds r5, #2
	strh r3, [r5]
	adds r5, #2
	ldrh r0, [r4]
	strh r0, [r5]
	adds r4, #2
	mov r0, r8
	ldrb r2, [r0]
	adds r2, r2, r7
	lsls r2, r2, #3
	ldr r0, _08086FC4 @ =gOamData
	adds r2, r2, r0
	ldrb r0, [r6, #2]
	adds r0, r0, r1
	strb r0, [r2]
	ldrh r0, [r6]
	adds r3, r3, r0
	mov r1, sb
	ands r3, r1
	ldrh r1, [r2, #2]
	ldr r0, _08086FCC @ =0xFFFFFE00
	ands r0, r1
	orrs r0, r3
	strh r0, [r2, #2]
	ldrb r1, [r6, #0xb]
	movs r0, #3
	ands r1, r0
	lsls r1, r1, #2
	ldrb r3, [r2, #1]
	mov r0, sl
	ands r0, r3
	orrs r0, r1
	strb r0, [r2, #1]
	adds r5, #4
	adds r7, #1
	cmp r7, ip
	blt _08086F50
_08086FA4:
	mov r1, r8
	ldrb r0, [r1]
	add r0, ip
	strb r0, [r1]
	ldrb r0, [r6, #8]
	adds r0, #1
	strb r0, [r6, #8]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08086FC0: .4byte gNextOamSlot
_08086FC4: .4byte gOamData
_08086FC8: .4byte 0x000001FF
_08086FCC: .4byte 0xFFFFFE00

	thumb_func_start TitleScreenCallObjectsSubroutine
TitleScreenCallObjectsSubroutine: @ 0x08086FD0
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r5, _08087008 @ =gNonGameplayRam
	adds r6, r5, #0
	adds r6, #0xc
_08086FDA:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r2, r0, #3
	adds r0, r2, r5
	ldrb r0, [r0, #0x10]
	cmp r0, #0
	beq _08086FF6
	adds r1, r5, #0
	adds r1, #0x20
	adds r1, r2, r1
	adds r0, r2, r6
	ldr r1, [r1]
	bl _call_via_r1
_08086FF6:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _08086FDA
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08087008: .4byte gNonGameplayRam

	thumb_func_start TitleScreenProcessCopyright
TitleScreenProcessCopyright: @ 0x0808700C
	bx lr
	.align 2, 0

	thumb_func_start TItleScreenInit
TItleScreenInit: @ 0x08087010
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r3, _0808715C @ =0x04000208
	movs r6, #0
	strh r6, [r3]
	ldr r2, _08087160 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _08087164 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08087168 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0808716C @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _08087170 @ =TitleScreenVblank_Empty
	bl CallbackSetVBlank
	movs r7, #0x80
	lsls r7, r7, #0x13
	strh r6, [r7]
	movs r4, #0
	str r4, [sp]
	ldr r5, _08087174 @ =0x040000D4
	mov r0, sp
	str r0, [r5]
	ldr r0, _08087178 @ =gNonGameplayRam
	str r0, [r5, #4]
	ldr r0, _0808717C @ =0x85000150
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #0x11
	bl unk_24ec
	ldr r0, _08087180 @ =gWrittenToBldy
	movs r1, #0x10
	mov r8, r1
	strh r1, [r0]
	ldr r0, _08087184 @ =0x04000054
	strh r1, [r0]
	ldr r0, _08087188 @ =gNextOamSlot
	strb r6, [r0]
	bl ResetFreeOam
	ldr r0, _0808718C @ =0x0400000E
	mov sl, r0
	strh r4, [r0]
	subs r0, #2
	strh r4, [r0]
	ldr r1, _08087190 @ =0x0400000A
	mov sb, r1
	strh r4, [r1]
	subs r0, #4
	strh r4, [r0]
	adds r0, #8
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #0xa
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, _08087194 @ =0x08605D08
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _08087198 @ =0x08593274
	ldr r1, _0808719C @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _080871A0 @ =0x085963B8
	ldr r1, _080871A4 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _080871A8 @ =0x08609220
	ldr r6, _080871AC @ =0x0600F800
	adds r1, r6, #0
	bl LZ77UncompVram
	ldr r0, _080871B0 @ =0x08596D0C
	str r0, [r5]
	movs r2, #0xa0
	lsls r2, r2, #0x13
	str r2, [r5, #4]
	ldr r1, _080871B4 @ =0x84000040
	str r1, [r5, #8]
	ldr r0, [r5, #8]
	ldr r0, _080871B8 @ =0x08609120
	str r0, [r5]
	ldr r0, _080871BC @ =0x05000100
	str r0, [r5, #4]
	str r1, [r5, #8]
	ldr r0, [r5, #8]
	strh r4, [r2]
	ldr r0, _080871C0 @ =0x0879C2C8
	ldr r0, [r0]
	adds r1, r6, #0
	movs r2, #0
	bl TitleScreenLoadDebugText
	ldr r0, _080871C4 @ =0x08590C9C
	ldr r1, _080871C8 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _080871CC @ =0x08592B74
	str r0, [r5]
	ldr r0, _080871D0 @ =0x05000200
	str r0, [r5, #4]
	ldr r0, _080871D4 @ =0x84000080
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	ldr r0, _080871D8 @ =0x03001220
	strh r4, [r0]
	ldr r0, _080871DC @ =0x03001222
	mov r1, r8
	strh r1, [r0]
	ldr r1, _080871E0 @ =0x00001E09
	adds r0, r1, #0
	mov r1, sb
	strh r0, [r1]
	ldr r1, _080871E4 @ =0x00001F03
	adds r0, r1, #0
	mov r1, sl
	strh r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #4
	adds r0, r1, #0
	strh r0, [r7]
	ldr r0, _080871E8 @ =TitleScreenVblank
	bl CallbackSetVBlank
	bl TitleScreenDrawAllObjects
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808715C: .4byte 0x04000208
_08087160: .4byte 0x04000004
_08087164: .4byte 0x0000FFEF
_08087168: .4byte 0x04000200
_0808716C: .4byte 0x0000FFFD
_08087170: .4byte TitleScreenVblank_Empty
_08087174: .4byte 0x040000D4
_08087178: .4byte gNonGameplayRam
_0808717C: .4byte 0x85000150
_08087180: .4byte gWrittenToBldy
_08087184: .4byte 0x04000054
_08087188: .4byte gNextOamSlot
_0808718C: .4byte 0x0400000E
_08087190: .4byte 0x0400000A
_08087194: .4byte 0x08605D08
_08087198: .4byte 0x08593274
_0808719C: .4byte 0x06008000
_080871A0: .4byte 0x085963B8
_080871A4: .4byte 0x0600F000
_080871A8: .4byte 0x08609220
_080871AC: .4byte 0x0600F800
_080871B0: .4byte 0x08596D0C
_080871B4: .4byte 0x84000040
_080871B8: .4byte 0x08609120
_080871BC: .4byte 0x05000100
_080871C0: .4byte 0x0879C2C8
_080871C4: .4byte 0x08590C9C
_080871C8: .4byte 0x06010000
_080871CC: .4byte 0x08592B74
_080871D0: .4byte 0x05000200
_080871D4: .4byte 0x84000080
_080871D8: .4byte 0x03001220
_080871DC: .4byte 0x03001222
_080871E0: .4byte 0x00001E09
_080871E4: .4byte 0x00001F03
_080871E8: .4byte TitleScreenVblank

	thumb_func_start TitleScreenSpawningIn
TitleScreenSpawningIn: @ 0x080871EC
	push {r4, r5, r6, r7, lr}
	movs r7, #0
	ldr r0, _08087204 @ =gNonGameplayRam
	ldrb r0, [r0, #5]
	cmp r0, #6
	bls _080871FA
	b _08087460
_080871FA:
	lsls r0, r0, #2
	ldr r1, _08087208 @ =_0808720C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08087204: .4byte gNonGameplayRam
_08087208: .4byte _0808720C
_0808720C: @ jump table
	.4byte _08087228 @ case 0
	.4byte _08087290 @ case 1
	.4byte _080872B0 @ case 2
	.4byte _080872FC @ case 3
	.4byte _08087390 @ case 4
	.4byte _080873DC @ case 5
	.4byte _0808743C @ case 6
_08087228:
	ldr r4, _08087250 @ =gWrittenToBldy
	ldrh r2, [r4]
	adds r3, r2, #0
	cmp r3, #0
	beq _08087258
	ldr r1, _08087254 @ =gNonGameplayRam
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #6
	beq _08087244
	b _08087460
_08087244:
	movs r0, #0
	strh r0, [r1]
	subs r0, r2, #1
	strh r0, [r4]
	b _08087460
	.align 2, 0
_08087250: .4byte gWrittenToBldy
_08087254: .4byte gNonGameplayRam
_08087258:
	ldr r1, _08087284 @ =0x04000050
	ldr r2, _08087288 @ =0x00002842
	adds r0, r2, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r4, #0x80
	lsls r4, r4, #2
	adds r1, r4, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r4, _0808728C @ =gNonGameplayRam
	strh r3, [r4]
	movs r0, #0x4a
	movs r1, #0x10
	bl PlayMusic
	movs r0, #1
	strb r0, [r4, #5]
	b _08087460
	.align 2, 0
_08087284: .4byte 0x04000050
_08087288: .4byte 0x00002842
_0808728C: .4byte gNonGameplayRam
_08087290:
	ldr r1, _080872AC @ =gNonGameplayRam
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1e
	beq _080872A2
	b _08087460
_080872A2:
	movs r0, #0
	strh r0, [r1]
	movs r0, #2
	strb r0, [r1, #5]
	b _08087460
	.align 2, 0
_080872AC: .4byte gNonGameplayRam
_080872B0:
	ldr r3, _080872EC @ =gNonGameplayRam
	ldrh r0, [r3]
	adds r0, #1
	movs r4, #0
	strh r0, [r3]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	beq _080872C4
	b _08087460
_080872C4:
	strh r4, [r3]
	ldr r0, _080872F0 @ =0x03001220
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	ldr r2, _080872F4 @ =0x03001222
	ldrh r0, [r2]
	subs r0, #1
	strh r0, [r2]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	cmp r1, #0x10
	beq _080872E0
	b _08087460
_080872E0:
	ldr r0, _080872F8 @ =gWrittenToBldy
	strh r4, [r0]
	movs r0, #3
	strb r0, [r3, #5]
	b _08087460
	.align 2, 0
_080872EC: .4byte gNonGameplayRam
_080872F0: .4byte 0x03001220
_080872F4: .4byte 0x03001222
_080872F8: .4byte gWrittenToBldy
_080872FC:
	ldr r5, _08087320 @ =gNonGameplayRam
	ldrh r0, [r5]
	adds r0, #1
	movs r6, #0
	strh r0, [r5]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08087330
	ldr r1, _08087324 @ =0x04000050
	movs r0, #0xbf
	strh r0, [r1]
	ldr r0, _08087328 @ =0x03001220
	strh r6, [r0]
	ldr r1, _0808732C @ =0x03001222
	movs r0, #0x10
	strh r0, [r1]
	b _080873C4
	.align 2, 0
_08087320: .4byte gNonGameplayRam
_08087324: .4byte 0x04000050
_08087328: .4byte 0x03001220
_0808732C: .4byte 0x03001222
_08087330:
	cmp r0, #0x1e
	bne _080873C4
	ldr r1, _08087388 @ =0x04000050
	ldr r2, _0808738C @ =0x00002F50
	adds r0, r2, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #5
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #1
	movs r1, #0x80
	movs r2, #0x9a
	bl TitleScreenSetupObject
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r5
	movs r4, #1
	strb r4, [r0, #0x17]
	movs r0, #2
	movs r1, #0x78
	movs r2, #0x88
	bl TitleScreenSetupObject
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r5
	strb r4, [r0, #0x17]
	strh r6, [r5]
	movs r0, #4
	strb r0, [r5, #5]
	b _080873C4
	.align 2, 0
_08087388: .4byte 0x04000050
_0808738C: .4byte 0x00002F50
_08087390:
	ldr r3, _080873CC @ =gNonGameplayRam
	ldrh r0, [r3]
	adds r0, #1
	movs r4, #0
	strh r0, [r3]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _080873C4
	strh r4, [r3]
	ldr r0, _080873D0 @ =0x03001220
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	ldr r2, _080873D4 @ =0x03001222
	ldrh r0, [r2]
	subs r0, #1
	strh r0, [r2]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	cmp r1, #0x10
	bne _080873C4
	ldr r0, _080873D8 @ =gWrittenToBldy
	strh r4, [r0]
	movs r0, #5
	strb r0, [r3, #5]
_080873C4:
	bl TitleScreenDrawAllObjects
	b _08087460
	.align 2, 0
_080873CC: .4byte gNonGameplayRam
_080873D0: .4byte 0x03001220
_080873D4: .4byte 0x03001222
_080873D8: .4byte gWrittenToBldy
_080873DC:
	bl TitleScreenCallObjectsSubroutine
	bl TitleScreenDrawAllObjects
	ldr r2, _0808741C @ =gNonGameplayRam
	ldrh r0, [r2]
	adds r0, #1
	movs r4, #0
	strh r0, [r2]
	ldrh r1, [r2, #2]
	adds r1, #1
	strh r1, [r2, #2]
	lsls r0, r0, #0x10
	movs r1, #0xfa
	lsls r1, r1, #0x13
	cmp r0, r1
	bne _08087400
	strh r4, [r2]
_08087400:
	ldr r0, _08087420 @ =gChangedInput
	ldrh r0, [r0]
	movs r3, #9
	ands r3, r0
	cmp r3, #0
	beq _08087428
	strh r4, [r2]
	strh r4, [r2, #2]
	movs r0, #6
	strb r0, [r2, #5]
	ldr r0, _08087424 @ =0x000001FF
	bl SoundPlay
	b _08087460
	.align 2, 0
_0808741C: .4byte gNonGameplayRam
_08087420: .4byte gChangedInput
_08087424: .4byte 0x000001FF
_08087428:
	ldrh r1, [r2, #2]
	movs r0, #0x96
	lsls r0, r0, #3
	cmp r1, r0
	bne _08087460
	strh r3, [r2]
	strh r3, [r2, #2]
	movs r0, #1
	strb r0, [r2, #4]
	b _08087458
_0808743C:
	bl TitleScreenCallObjectsSubroutine
	bl TitleScreenDrawAllObjects
	ldr r1, _08087474 @ =gNonGameplayRam
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x22
	bls _08087460
	movs r0, #0
	strh r0, [r1]
_08087458:
	ldr r1, _08087478 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	movs r7, #1
_08087460:
	ldr r6, _08087474 @ =gNonGameplayRam
	ldrb r0, [r6, #5]
	cmp r0, #0
	blt _0808752C
	cmp r0, #3
	ble _0808747C
	cmp r0, #4
	beq _080874FC
	b _0808752C
	.align 2, 0
_08087474: .4byte gNonGameplayRam
_08087478: .4byte 0x04000050
_0808747C:
	ldr r0, _080874EC @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	beq _0808752C
	ldr r0, _080874F0 @ =gWrittenToBldy
	movs r1, #0
	strh r1, [r0]
	ldr r0, _080874F4 @ =0x04000054
	strh r1, [r0]
	ldr r1, _080874F8 @ =0x04000050
	movs r0, #0xbf
	strh r0, [r1]
	subs r1, #0x50
	movs r4, #0xd0
	lsls r4, r4, #5
	adds r0, r4, #0
	strh r0, [r1]
	movs r0, #1
	movs r1, #0x80
	movs r2, #0x9a
	bl TitleScreenSetupObject
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r6
	movs r5, #0
	movs r4, #1
	strb r4, [r0, #0x17]
	movs r0, #2
	movs r1, #0x78
	movs r2, #0x88
	bl TitleScreenSetupObject
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r6
	strb r4, [r0, #0x17]
	strh r5, [r6]
	strh r5, [r6, #2]
	ldrb r0, [r6, #5]
	cmp r0, #0
	bne _08087528
	movs r0, #0x4a
	movs r1, #0x10
	bl PlayMusic
	b _08087528
	.align 2, 0
_080874EC: .4byte gChangedInput
_080874F0: .4byte gWrittenToBldy
_080874F4: .4byte 0x04000054
_080874F8: .4byte 0x04000050
_080874FC:
	ldr r0, _08087534 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	beq _0808752C
	ldr r0, _08087538 @ =gWrittenToBldy
	movs r1, #0
	strh r1, [r0]
	ldr r0, _0808753C @ =0x04000054
	strh r1, [r0]
	ldr r1, _08087540 @ =0x04000050
	movs r0, #0xbf
	strh r0, [r1]
	subs r1, #0x50
	movs r2, #0xd0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	movs r0, #0
	strh r0, [r6]
	strh r0, [r6, #2]
_08087528:
	movs r0, #5
	strb r0, [r6, #5]
_0808752C:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08087534: .4byte gChangedInput
_08087538: .4byte gWrittenToBldy
_0808753C: .4byte 0x04000054
_08087540: .4byte 0x04000050

	thumb_func_start TitleScreenSubroutine
TitleScreenSubroutine: @ 0x08087544
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _0808755C @ =gSubGameMode1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080875A8
	cmp r0, #1
	bgt _08087560
	cmp r0, #0
	beq _0808756A
	b _080875A8
	.align 2, 0
_0808755C: .4byte gSubGameMode1
_08087560:
	cmp r0, #2
	beq _08087572
	cmp r0, #3
	beq _0808757E
	b _080875A8
_0808756A:
	bl TItleScreenInit
	movs r0, #2
	b _080875A6
_08087572:
	bl TitleScreenSpawningIn
	cmp r0, #0
	beq _080875A8
	movs r0, #3
	b _080875A6
_0808757E:
	bl TitleScreenCallObjectsSubroutine
	bl TitleScreenDrawAllObjects
	ldr r1, _08087594 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _08087598
	adds r0, #1
	strh r0, [r1]
	b _080875A8
	.align 2, 0
_08087594: .4byte gWrittenToBldy
_08087598:
	ldr r0, _080875B0 @ =gNonGameplayRam
	ldrb r0, [r0, #4]
	movs r5, #1
	cmp r0, #1
	bne _080875A4
	movs r5, #0x64
_080875A4:
	movs r0, #0
_080875A6:
	strh r0, [r4]
_080875A8:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080875B0: .4byte gNonGameplayRam

	thumb_func_start TitleScreenLoadDebugText
TitleScreenLoadDebugText: @ 0x080875B4
	push {r4, r5, lr}
	adds r3, r0, #0
	adds r4, r1, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r1, _08087600 @ =0x040000D4
	ldr r0, _08087604 @ =0x08590998
	str r0, [r1]
	ldr r0, _08087608 @ =0x06007C00
	str r0, [r1, #4]
	ldr r0, _0808760C @ =0x840000C0
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldrb r0, [r3]
	cmp r0, #0
	beq _080875F8
	lsls r2, r2, #0xc
	movs r5, #0xf8
	lsls r5, r5, #2
	adds r1, r5, #0
_080875DC:
	cmp r0, #0x20
	beq _080875EE
	ldrb r0, [r3]
	subs r0, #0x30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r0, r0, r1
	orrs r0, r2
	strh r0, [r4]
_080875EE:
	adds r4, #2
	adds r3, #1
	ldrb r0, [r3]
	cmp r0, #0
	bne _080875DC
_080875F8:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08087600: .4byte 0x040000D4
_08087604: .4byte 0x08590998
_08087608: .4byte 0x06007C00
_0808760C: .4byte 0x840000C0

	thumb_func_start IntroSubroutine
IntroSubroutine: @ 0x08087610
	push {r4, r5, lr}
	movs r5, #0
	ldr r0, _0808763C @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	beq _0808767C
	ldr r3, _08087640 @ =gSubGameMode1
	movs r1, #0
	ldrsh r0, [r3, r1]
	cmp r0, #3
	bne _0808764C
	ldr r0, _08087644 @ =gNonGameplayRam
	ldr r2, _08087648 @ =0x0000020E
	adds r1, r0, r2
	ldrh r0, [r1]
	cmp r0, #0
	beq _0808767C
	strh r5, [r1]
	b _0808767C
	.align 2, 0
_0808763C: .4byte gChangedInput
_08087640: .4byte gSubGameMode1
_08087644: .4byte gNonGameplayRam
_08087648: .4byte 0x0000020E
_0808764C:
	cmp r0, #0
	beq _0808767C
	cmp r0, #3
	beq _0808767C
	ldr r2, _08087690 @ =0x04000050
	ldrh r1, [r2]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08087664
	movs r0, #0xff
	strh r0, [r2]
_08087664:
	ldr r0, _08087694 @ =gNonGameplayRam
	ldr r1, _08087698 @ =0x0000020E
	adds r0, r0, r1
	strh r5, [r0]
	movs r0, #3
	strh r0, [r3]
	movs r0, #0x14
	bl unk_27e8
	movs r0, #0x14
	bl FadeMusic
_0808767C:
	ldr r4, _0808769C @ =gSubGameMode1
	movs r2, #0
	ldrsh r0, [r4, r2]
	cmp r0, #1
	beq _080876B4
	cmp r0, #1
	bgt _080876A0
	cmp r0, #0
	beq _080876AA
	b _08087700
	.align 2, 0
_08087690: .4byte 0x04000050
_08087694: .4byte gNonGameplayRam
_08087698: .4byte 0x0000020E
_0808769C: .4byte gSubGameMode1
_080876A0:
	cmp r0, #2
	beq _080876C2
	cmp r0, #3
	beq _080876D0
	b _08087700
_080876AA:
	bl NewFileIntroInit
	movs r0, #1
	strh r0, [r4]
	b _08087700
_080876B4:
	bl IntroSpaceView
	cmp r0, #0
	beq _08087700
	movs r0, #2
	strh r0, [r4]
	b _08087700
_080876C2:
	bl IntroSamusShipCrashing
	cmp r0, #0
	beq _08087700
	movs r0, #3
	strh r0, [r4]
	b _08087700
_080876D0:
	ldr r0, _080876E8 @ =gNonGameplayRam
	ldr r2, _080876EC @ =0x0000020E
	adds r1, r0, r2
	ldrh r0, [r1]
	cmp r0, #0
	bne _080876F8
	ldr r1, _080876F0 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _080876F4
	adds r0, #1
	b _080876FA
	.align 2, 0
_080876E8: .4byte gNonGameplayRam
_080876EC: .4byte 0x0000020E
_080876F0: .4byte gWrittenToBldy
_080876F4:
	movs r5, #1
	b _080876FC
_080876F8:
	subs r0, #1
_080876FA:
	strh r0, [r1]
_080876FC:
	bl SpecialCutsceneDrawAllOam
_08087700:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start NewFileIntroSubroutine
NewFileIntroSubroutine: @ 0x08087708
	push {r4, r5, r6, r7, lr}
	movs r7, #0
	ldr r0, _08087724 @ =gSubGameMode1
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #0xc
	bls _0808771A
	b _08087916
_0808771A:
	lsls r0, r1, #2
	ldr r1, _08087728 @ =_0808772C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08087724: .4byte gSubGameMode1
_08087728: .4byte _0808772C
_0808772C: @ jump table
	.4byte _08087760 @ case 0
	.4byte _08087788 @ case 1
	.4byte _080877B0 @ case 2
	.4byte _080877C8 @ case 3
	.4byte _080877E0 @ case 4
	.4byte _080877F8 @ case 5
	.4byte _08087810 @ case 6
	.4byte _08087828 @ case 7
	.4byte _0808783C @ case 8
	.4byte _08087850 @ case 9
	.4byte _08087864 @ case 10
	.4byte _08087878 @ case 11
	.4byte _080878A0 @ case 12
_08087760:
	bl StopAllMusicsAndSounds
	bl NewFileIntroInit
	ldr r0, _08087778 @ =0x03000014
	ldrb r0, [r0, #1]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808777C
	movs r0, #1
	b _08087918
	.align 2, 0
_08087778: .4byte 0x03000014
_0808777C:
	ldr r1, _08087784 @ =gSubGameMode1
	movs r0, #1
	strh r0, [r1]
	b _08087916
	.align 2, 0
_08087784: .4byte gSubGameMode1
_08087788:
	ldr r0, _080877AC @ =gNonGameplayRam
	movs r3, #0x84
	lsls r3, r3, #2
	adds r1, r0, r3
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x63
	bhi _080877A0
	b _08087916
_080877A0:
	movs r0, #0
	strh r0, [r1]
	movs r0, #2
	strh r0, [r2]
	b _08087916
	.align 2, 0
_080877AC: .4byte gNonGameplayRam
_080877B0:
	bl NewFileIntroSr388Preview
	cmp r0, #0
	bne _080877BA
	b _08087916
_080877BA:
	ldr r1, _080877C4 @ =gSubGameMode1
	movs r0, #3
	strh r0, [r1]
	b _08087916
	.align 2, 0
_080877C4: .4byte gSubGameMode1
_080877C8:
	bl NewFileIntroInSr388
	cmp r0, #0
	bne _080877D2
	b _08087916
_080877D2:
	ldr r1, _080877DC @ =gSubGameMode1
	movs r0, #4
	strh r0, [r1]
	b _08087916
	.align 2, 0
_080877DC: .4byte gSubGameMode1
_080877E0:
	bl NewFileIntroSamusShipFlying
	cmp r0, #0
	bne _080877EA
	b _08087916
_080877EA:
	ldr r1, _080877F4 @ =gSubGameMode1
	movs r0, #5
	strh r0, [r1]
	b _08087916
	.align 2, 0
_080877F4: .4byte gSubGameMode1
_080877F8:
	bl NewFileIntroSamusFainting
	cmp r0, #0
	bne _08087802
	b _08087916
_08087802:
	ldr r1, _0808780C @ =gSubGameMode1
	movs r0, #6
	strh r0, [r1]
	b _08087916
	.align 2, 0
_0808780C: .4byte gSubGameMode1
_08087810:
	bl NewFileIntroSamusDrifting
	cmp r0, #0
	bne _0808781A
	b _08087916
_0808781A:
	ldr r1, _08087824 @ =gSubGameMode1
	movs r0, #7
	strh r0, [r1]
	b _08087916
	.align 2, 0
_08087824: .4byte gSubGameMode1
_08087828:
	bl NewFileIntroSamusFound
	cmp r0, #0
	beq _08087916
	ldr r1, _08087838 @ =gSubGameMode1
	movs r0, #8
	strh r0, [r1]
	b _08087916
	.align 2, 0
_08087838: .4byte gSubGameMode1
_0808783C:
	bl NewFileIntroSamusGettingCured
	cmp r0, #0
	beq _08087916
	ldr r1, _0808784C @ =gSubGameMode1
	movs r0, #9
	strh r0, [r1]
	b _08087916
	.align 2, 0
_0808784C: .4byte gSubGameMode1
_08087850:
	bl NewFileIntroSamusCured
	cmp r0, #0
	beq _08087916
	ldr r1, _08087860 @ =gSubGameMode1
	movs r0, #0xa
	strh r0, [r1]
	b _08087916
	.align 2, 0
_08087860: .4byte gSubGameMode1
_08087864:
	bl NewFileIntroArrivingAtBsl
	cmp r0, #0
	beq _08087916
	ldr r1, _08087874 @ =gSubGameMode1
	movs r0, #0xb
	strh r0, [r1]
	b _08087916
	.align 2, 0
_08087874: .4byte gSubGameMode1
_08087878:
	bl NewFileIntroLandingOnBsl
	cmp r0, #0
	beq _08087916
	ldr r0, _08087894 @ =gNonGameplayRam
	ldr r1, _08087898 @ =0x0000020E
	adds r0, r0, r1
	movs r1, #0
	strh r1, [r0]
	ldr r1, _0808789C @ =gSubGameMode1
	movs r0, #0xc
	strh r0, [r1]
	b _08087916
	.align 2, 0
_08087894: .4byte gNonGameplayRam
_08087898: .4byte 0x0000020E
_0808789C: .4byte gSubGameMode1
_080878A0:
	ldr r6, _080878C8 @ =gNonGameplayRam
	ldr r2, _080878CC @ =0x0000020E
	adds r4, r6, r2
	ldrh r0, [r4]
	adds r0, #1
	movs r5, #0
	strh r0, [r4]
	ldr r2, _080878D0 @ =gWrittenToBldy
	ldrh r1, [r2]
	cmp r1, #0xf
	bhi _080878D4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08087912
	strh r5, [r4]
	adds r0, r1, #1
	strh r0, [r2]
	b _08087912
	.align 2, 0
_080878C8: .4byte gNonGameplayRam
_080878CC: .4byte 0x0000020E
_080878D0: .4byte gWrittenToBldy
_080878D4:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080878E4
	movs r0, #0
	bl Sram_ProcessIntroSave
	b _08087912
_080878E4:
	cmp r0, #2
	bne _080878F0
	movs r0, #1
	bl Sram_ProcessIntroSave
	b _08087912
_080878F0:
	cmp r0, #3
	bne _080878FC
	movs r0, #2
	bl Sram_ProcessIntroSave
	b _08087912
_080878FC:
	cmp r0, #4
	bne _08087912
	movs r0, #3
	bl Sram_ProcessIntroSave
	movs r3, #0x84
	lsls r3, r3, #2
	adds r0, r6, r3
	strh r5, [r0]
	strh r5, [r4]
	movs r7, #1
_08087912:
	bl SpecialCutsceneDrawAllOam
_08087916:
	adds r0, r7, #0
_08087918:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start unk_87920
unk_87920: @ 0x08087920
	push {r4, lr}
	movs r4, #0
	ldr r0, _08087938 @ =gCurrentCutscene
	ldrb r0, [r0]
	cmp r0, #2
	beq _0808794C
	cmp r0, #2
	bgt _0808793C
	cmp r0, #1
	beq _08087946
	b _08087964
	.align 2, 0
_08087938: .4byte gCurrentCutscene
_0808793C:
	cmp r0, #3
	beq _08087952
	cmp r0, #4
	beq _08087958
	b _08087964
_08087946:
	bl IntroSubroutine
	b _0808795C
_0808794C:
	bl NewFileIntroSubroutine
	b _0808795C
_08087952:
	bl EndingSubroutine
	b _0808795C
_08087958:
	bl DiedFromSr388CollisionSubroutine
_0808795C:
	cmp r0, #0
	beq _08087966
	bl StopAllMusicsAndSounds
_08087964:
	movs r4, #1
_08087966:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start NewFileIntroSamusShipFlyingVblank
NewFileIntroSamusShipFlyingVblank: @ 0x08087970
	ldr r1, _080879CC @ =0x040000D4
	ldr r0, _080879D0 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _080879D4 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _080879D8 @ =0x04000052
	ldr r0, _080879DC @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _080879E0 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _080879E4 @ =0x04000054
	ldr r0, _080879E8 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x40
	ldr r0, _080879EC @ =gBg1XPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080879F0 @ =gBg1YPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080879F4 @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080879F8 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080879FC @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08087A00 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_080879CC: .4byte 0x040000D4
_080879D0: .4byte gOamData
_080879D4: .4byte 0x84000100
_080879D8: .4byte 0x04000052
_080879DC: .4byte 0x03001222
_080879E0: .4byte 0x03001220
_080879E4: .4byte 0x04000054
_080879E8: .4byte gWrittenToBldy
_080879EC: .4byte gBg1XPosition
_080879F0: .4byte gBg1YPosition
_080879F4: .4byte 0x0300122C
_080879F8: .4byte 0x0300122E
_080879FC: .4byte 0x03001230
_08087A00: .4byte 0x03001232

	thumb_func_start NewFileIntroSamusShipFlyingInit
NewFileIntroSamusShipFlyingInit: @ 0x08087A04
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _08087BB4 @ =unk_99940
	bl CallbackSetVBlank
	movs r0, #0
	str r0, [sp]
	ldr r1, _08087BB8 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r0, _08087BBC @ =gNonGameplayRam
	str r0, [r1, #4]
	ldr r0, _08087BC0 @ =0x85000150
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r5, #0
	ldr r4, _08087BC4 @ =0x0879C3FC
_08087A26:
	lsls r0, r5, #2
	adds r0, r0, r4
	ldr r0, [r0]
	lsls r1, r5, #0xc
	ldr r2, _08087BC8 @ =0x06010000
	adds r1, r1, r2
	bl LZ77UncompVram
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #7
	bls _08087A26
	ldr r4, _08087BB8 @ =0x040000D4
	ldr r0, _08087BCC @ =0x085980B0
	str r0, [r4]
	ldr r0, _08087BD0 @ =0x05000200
	str r0, [r4, #4]
	ldr r0, _08087BD4 @ =0x84000028
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08087BD8 @ =0x08598150
	str r0, [r4]
	ldr r0, _08087BDC @ =0x05000300
	str r0, [r4, #4]
	ldr r0, _08087BE0 @ =0x84000010
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08087BE4 @ =0x08613148
	str r0, [r4]
	ldr r0, _08087BE8 @ =0x06017FE0
	str r0, [r4, #4]
	ldr r1, _08087BEC @ =0x84000008
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08087BF0 @ =0x086131A8
	str r0, [r4]
	ldr r0, _08087BF4 @ =0x050003E0
	str r0, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08087BF8 @ =0x0860BCA4
	ldr r5, _08087BFC @ =0x02010000
	adds r1, r5, #0
	bl LZ77UncompWram
	str r5, [r4]
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _08087C00 @ =0x84002000
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08087C04 @ =0x0860B670
	ldr r1, _08087C08 @ =0x0600E800
	bl LZ77UncompVram
	ldr r0, _08087C0C @ =0x0860B148
	ldr r1, _08087C10 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _08087C14 @ =0x08612E48
	str r0, [r4]
	ldr r0, _08087C18 @ =0x05000100
	str r0, [r4, #4]
	ldr r0, _08087C1C @ =0x84000040
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	movs r4, #0
	strh r4, [r0]
	ldr r0, _08087C20 @ =0x08598898
	ldr r1, _08087C24 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _08087C28 @ =0x04000010
	ldr r2, _08087C2C @ =0x0000FFF8
	adds r1, r2, #0
	strh r1, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, _08087C30 @ =gBg1XPosition
	strh r4, [r0]
	ldr r0, _08087C34 @ =gBg1YPosition
	strh r4, [r0]
	ldr r6, _08087C38 @ =0x0300122C
	movs r0, #0x30
	strh r0, [r6]
	ldr r5, _08087C3C @ =0x0300122E
	strh r1, [r5]
	ldr r0, _08087C40 @ =0x03001230
	strh r4, [r0]
	ldr r0, _08087C44 @ =0x03001232
	strh r4, [r0]
	ldr r1, _08087C48 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	subs r1, #0x48
	ldr r2, _08087C4C @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	ldr r2, _08087C50 @ =0x00005D02
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _08087C54 @ =0x00001F03
	adds r0, r2, #0
	strh r0, [r1]
	movs r0, #0xc8
	movs r1, #0xfa
	movs r2, #0
	movs r3, #0
	bl NewFileIntroSetupOam
	movs r0, #0
	ldrsh r1, [r6, r0]
	movs r0, #0
	ldrsh r2, [r5, r0]
	movs r0, #1
	movs r3, #0
	bl NewFileIntroSetupOam
	movs r0, #2
	movs r1, #0xa0
	movs r2, #0x5a
	movs r3, #0
	bl NewFileIntroSetupOam
	movs r0, #4
	movs r1, #0
	movs r2, #0
	movs r3, #1
	bl NewFileIntroSetupOam
	movs r5, #0
_08087B50:
	bl SpecialCutsceneGetRandomNumber
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl SpecialCutsceneGetRandomNumber
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #3
	adds r1, r4, #0
	movs r3, #1
	bl NewFileIntroSetupOam
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #9
	bls _08087B50
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	movs r0, #0
	str r0, [sp]
	ldr r1, _08087BB8 @ =0x040000D4
	mov r2, sp
	str r2, [r1]
	ldr r0, _08087C58 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _08087C5C @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r1, _08087BBC @ =gNonGameplayRam
	ldr r0, _08087C60 @ =0x0863A19C
	str r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xe0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08087C64 @ =NewFileIntroSamusShipFlyingVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08087BB4: .4byte unk_99940
_08087BB8: .4byte 0x040000D4
_08087BBC: .4byte gNonGameplayRam
_08087BC0: .4byte 0x85000150
_08087BC4: .4byte 0x0879C3FC
_08087BC8: .4byte 0x06010000
_08087BCC: .4byte 0x085980B0
_08087BD0: .4byte 0x05000200
_08087BD4: .4byte 0x84000028
_08087BD8: .4byte 0x08598150
_08087BDC: .4byte 0x05000300
_08087BE0: .4byte 0x84000010
_08087BE4: .4byte 0x08613148
_08087BE8: .4byte 0x06017FE0
_08087BEC: .4byte 0x84000008
_08087BF0: .4byte 0x086131A8
_08087BF4: .4byte 0x050003E0
_08087BF8: .4byte 0x0860BCA4
_08087BFC: .4byte 0x02010000
_08087C00: .4byte 0x84002000
_08087C04: .4byte 0x0860B670
_08087C08: .4byte 0x0600E800
_08087C0C: .4byte 0x0860B148
_08087C10: .4byte 0x0600F800
_08087C14: .4byte 0x08612E48
_08087C18: .4byte 0x05000100
_08087C1C: .4byte 0x84000040
_08087C20: .4byte 0x08598898
_08087C24: .4byte 0x0600E000
_08087C28: .4byte 0x04000010
_08087C2C: .4byte 0x0000FFF8
_08087C30: .4byte gBg1XPosition
_08087C34: .4byte gBg1YPosition
_08087C38: .4byte 0x0300122C
_08087C3C: .4byte 0x0300122E
_08087C40: .4byte 0x03001230
_08087C44: .4byte 0x03001232
_08087C48: .4byte 0x04000050
_08087C4C: .4byte 0x00001C08
_08087C50: .4byte 0x00005D02
_08087C54: .4byte 0x00001F03
_08087C58: .4byte 0x0600D000
_08087C5C: .4byte 0x85000400
_08087C60: .4byte 0x0863A19C
_08087C64: .4byte NewFileIntroSamusShipFlyingVblank

	thumb_func_start NewFileIntroSamusShipFlyingProcess
NewFileIntroSamusShipFlyingProcess: @ 0x08087C68
	push {r4, r5, r6, lr}
	movs r6, #0
	ldr r1, _08087CBC @ =gNonGameplayRam
	ldr r0, [r1]
	ldrh r2, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	adds r5, r1, #0
	cmp r2, r0
	bne _08087C98
	ldr r0, _08087CC0 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08087C98
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _08087C98
	movs r0, #1
	strb r0, [r1]
_08087C98:
	adds r4, r5, #0
	movs r1, #0x84
	lsls r1, r1, #2
	adds r2, r4, r1
	ldrh r0, [r2]
	adds r1, r0, #1
	strh r1, [r2]
	movs r3, #0x85
	lsls r3, r3, #2
	adds r0, r4, r3
	ldrb r0, [r0]
	cmp r0, #1
	beq _08087D5C
	cmp r0, #1
	bgt _08087CC4
	cmp r0, #0
	beq _08087CCC
	b _08087DD6
	.align 2, 0
_08087CBC: .4byte gNonGameplayRam
_08087CC0: .4byte gChangedInput
_08087CC4:
	cmp r0, #2
	bne _08087CCA
	b _08087DC2
_08087CCA:
	b _08087DD6
_08087CCC:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	blt _08087CF4
	ldr r1, _08087D14 @ =0x00000215
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0xb
	bhi _08087CF4
	bl SpecialCutsceneGetRandomNumber
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #3
	movs r1, #0
	movs r3, #1
	bl NewFileIntroSetupOam
_08087CF4:
	ldr r3, _08087D18 @ =gNonGameplayRam
	movs r0, #0x84
	lsls r0, r0, #2
	adds r4, r3, r0
	ldrh r0, [r4]
	cmp r0, #0x63
	bne _08087D1C
	movs r0, #0x80
	lsls r0, r0, #0x13
	ldrh r1, [r0]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r3, #0
	orrs r1, r2
	strh r1, [r0]
	b _08087DD6
	.align 2, 0
_08087D14: .4byte 0x00000215
_08087D18: .4byte gNonGameplayRam
_08087D1C:
	cmp r0, #0x64
	bne _08087DD6
	movs r2, #0
	movs r1, #0
	strh r1, [r4]
	ldr r4, _08087D50 @ =0x00000212
	adds r0, r3, r4
	strb r2, [r0]
	strh r1, [r3, #0xe]
	strh r1, [r3, #0xc]
	ldr r1, _08087D54 @ =0x0879C5A4
	ldr r0, _08087D58 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x28]
	str r0, [r3]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #1
	strb r0, [r1]
	b _08087DD6
	.align 2, 0
_08087D50: .4byte 0x00000212
_08087D54: .4byte 0x0879C5A4
_08087D58: .4byte 0x03000011
_08087D5C:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	blt _08087D84
	ldr r1, _08087DA8 @ =0x00000215
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0xb
	bhi _08087D84
	bl SpecialCutsceneGetRandomNumber
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #3
	movs r1, #0
	movs r3, #1
	bl NewFileIntroSetupOam
_08087D84:
	ldr r2, _08087DAC @ =gNonGameplayRam
	movs r3, #0x84
	lsls r3, r3, #2
	adds r1, r2, r3
	movs r3, #0
	movs r0, #0
	strh r0, [r1]
	movs r4, #0x86
	lsls r4, r4, #2
	adds r1, r2, r4
	ldrb r0, [r1]
	cmp r0, #2
	beq _08087DA2
	cmp r0, #4
	bne _08087DB0
_08087DA2:
	strb r3, [r1]
	b _08087DD6
	.align 2, 0
_08087DA8: .4byte 0x00000215
_08087DAC: .4byte gNonGameplayRam
_08087DB0:
	cmp r0, #3
	bne _08087DD6
	strb r3, [r1]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r2, r0
	movs r0, #2
	strb r0, [r1]
	b _08087DD6
_08087DC2:
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1e
	bne _08087DD6
	movs r0, #0
	strh r0, [r2]
	ldr r1, _08087DEC @ =gWrittenToBldy
	movs r0, #0x10
	strh r0, [r1]
	movs r6, #1
_08087DD6:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	bl IntroProcessText
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08087DEC: .4byte gWrittenToBldy

	thumb_func_start NewFileIntroSamusShipFlying
NewFileIntroSamusShipFlying: @ 0x08087DF0
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _08087E08 @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _08087E20
	cmp r0, #1
	bgt _08087E0C
	cmp r0, #0
	beq _08087E16
	b _08087E82
	.align 2, 0
_08087E08: .4byte gNonGameplayRam
_08087E0C:
	cmp r0, #2
	beq _08087E38
	cmp r0, #3
	beq _08087E56
	b _08087E82
_08087E16:
	bl NewFileIntroSamusShipFlyingInit
	movs r0, #1
	strh r0, [r4, #8]
	b _08087E82
_08087E20:
	bl SpecialCutsceneFadeIn
	ldr r0, _08087E34 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _08087E82
	movs r0, #2
	strh r0, [r4, #8]
	b _08087E82
	.align 2, 0
_08087E34: .4byte gWrittenToBldy
_08087E38:
	bl NewFileIntroSamusShipFlyingProcess
	cmp r0, #0
	beq _08087E82
	movs r1, #0
	movs r0, #3
	strh r0, [r4, #8]
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r4, r2
	strh r5, [r0]
	adds r2, #4
	adds r0, r4, r2
	strb r1, [r0]
	b _08087E82
_08087E56:
	ldr r1, _08087E64 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _08087E68
	adds r0, #1
	strh r0, [r1]
	b _08087E7A
	.align 2, 0
_08087E64: .4byte gWrittenToBldy
_08087E68:
	ldr r1, _08087E8C @ =0x00000213
	adds r0, r4, r1
	strb r5, [r0]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r4, r2
	strb r5, [r0]
	strh r5, [r4, #8]
	movs r5, #1
_08087E7A:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_08087E82:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08087E8C: .4byte 0x00000213

	thumb_func_start NewFileIntroSamusFaintingInit
NewFileIntroSamusFaintingInit: @ 0x08087E90
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	ldr r0, _08087FC8 @ =unk_99940
	bl CallbackSetVBlank
	movs r5, #0
	str r5, [sp]
	ldr r4, _08087FCC @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r1, _08087FD0 @ =gNonGameplayRam
	mov r8, r1
	str r1, [r4, #4]
	ldr r0, _08087FD4 @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08087FD8 @ =0x08613148
	str r0, [r4]
	ldr r0, _08087FDC @ =0x06017FE0
	str r0, [r4, #4]
	ldr r1, _08087FE0 @ =0x84000008
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08087FE4 @ =0x086131A8
	str r0, [r4]
	ldr r0, _08087FE8 @ =0x050003E0
	str r0, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r6, _08087FEC @ =0x08605684
	ldr r1, _08087FF0 @ =0x0600F000
	adds r0, r6, #0
	bl LZ77UncompVram
	ldr r1, _08087FF4 @ =0x0600F800
	adds r0, r6, #0
	bl LZ77UncompVram
	ldr r0, _08087FF8 @ =0x0860093C
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _08087FFC @ =0x08605484
	str r0, [r4]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	str r1, [r4, #4]
	ldr r0, _08088000 @ =0x84000080
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	strh r5, [r1]
	ldr r0, _08088004 @ =0x08598898
	ldr r1, _08088008 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _0808800C @ =0x08612E48
	str r0, [r4]
	ldr r0, _08088010 @ =0x05000100
	str r0, [r4, #4]
	ldr r0, _08088014 @ =0x84000040
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r1, _08088018 @ =0x04000010
	ldr r2, _0808801C @ =0x0000FFF8
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08088020 @ =0x04000012
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r0, _08088024 @ =gBg1XPosition
	strh r5, [r0]
	ldr r0, _08088028 @ =gBg1YPosition
	strh r5, [r0]
	ldr r1, _0808802C @ =0x0300122C
	movs r0, #0xa
	strh r0, [r1]
	ldr r1, _08088030 @ =0x0300122E
	movs r0, #2
	strh r0, [r1]
	ldr r0, _08088034 @ =0x03001230
	strh r5, [r0]
	ldr r0, _08088038 @ =0x03001232
	strh r5, [r0]
	ldr r1, _0808803C @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	subs r1, #0x48
	ldr r2, _08088040 @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	ldr r2, _08088044 @ =0x00001E02
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _08088048 @ =0x00001F03
	adds r0, r2, #0
	strh r0, [r1]
	movs r0, #0xc8
	movs r1, #0xfa
	movs r2, #0
	movs r3, #0
	bl NewFileIntroSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	str r5, [sp]
	mov r0, sp
	str r0, [r4]
	ldr r0, _0808804C @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _08088050 @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08088054 @ =0x0863A19C
	mov r1, r8
	str r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xe0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08088058 @ =NewFileIntroSamusShipFlyingVblank
	bl CallbackSetVBlank
	ldr r0, _0808805C @ =gWrittenToBldy
	strh r5, [r0]
	ldr r1, _08088060 @ =0x03001220
	movs r0, #0xc
	strh r0, [r1]
	ldr r1, _08088064 @ =0x03001222
	movs r0, #8
	strh r0, [r1]
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08087FC8: .4byte unk_99940
_08087FCC: .4byte 0x040000D4
_08087FD0: .4byte gNonGameplayRam
_08087FD4: .4byte 0x85000150
_08087FD8: .4byte 0x08613148
_08087FDC: .4byte 0x06017FE0
_08087FE0: .4byte 0x84000008
_08087FE4: .4byte 0x086131A8
_08087FE8: .4byte 0x050003E0
_08087FEC: .4byte 0x08605684
_08087FF0: .4byte 0x0600F000
_08087FF4: .4byte 0x0600F800
_08087FF8: .4byte 0x0860093C
_08087FFC: .4byte 0x08605484
_08088000: .4byte 0x84000080
_08088004: .4byte 0x08598898
_08088008: .4byte 0x0600E000
_0808800C: .4byte 0x08612E48
_08088010: .4byte 0x05000100
_08088014: .4byte 0x84000040
_08088018: .4byte 0x04000010
_0808801C: .4byte 0x0000FFF8
_08088020: .4byte 0x04000012
_08088024: .4byte gBg1XPosition
_08088028: .4byte gBg1YPosition
_0808802C: .4byte 0x0300122C
_08088030: .4byte 0x0300122E
_08088034: .4byte 0x03001230
_08088038: .4byte 0x03001232
_0808803C: .4byte 0x04000050
_08088040: .4byte 0x00001C08
_08088044: .4byte 0x00001E02
_08088048: .4byte 0x00001F03
_0808804C: .4byte 0x0600D000
_08088050: .4byte 0x85000400
_08088054: .4byte 0x0863A19C
_08088058: .4byte NewFileIntroSamusShipFlyingVblank
_0808805C: .4byte gWrittenToBldy
_08088060: .4byte 0x03001220
_08088064: .4byte 0x03001222

	thumb_func_start NewFileIntroSamusFaintingProcess
NewFileIntroSamusFaintingProcess: @ 0x08088068
	push {r4, r5, r6, r7, lr}
	movs r7, #0
	ldr r2, _080880BC @ =gNonGameplayRam
	ldr r0, [r2]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _08088096
	ldr r0, _080880C0 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08088096
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _08088096
	movs r0, #1
	strb r0, [r1]
_08088096:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r3, r2, r1
	ldrh r0, [r3]
	adds r0, #1
	movs r5, #0
	movs r4, #0
	strh r0, [r3]
	adds r1, #4
	adds r6, r2, r1
	ldrb r1, [r6]
	cmp r1, #1
	beq _0808814C
	cmp r1, #1
	bgt _080880C4
	cmp r1, #0
	beq _080880CA
	b _0808818A
	.align 2, 0
_080880BC: .4byte gNonGameplayRam
_080880C0: .4byte gChangedInput
_080880C4:
	cmp r1, #2
	beq _08088178
	b _0808818A
_080880CA:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08088100
	ldr r1, _080880F0 @ =0x04000050
	ldr r2, _080880F4 @ =0x00001844
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _080880F8 @ =0x0300122C
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, _080880FC @ =0x0300122E
	movs r3, #0
	ldrsh r2, [r0, r3]
	movs r0, #0xa
	movs r3, #1
	bl NewFileIntroSetupOam
	b _0808818A
	.align 2, 0
_080880F0: .4byte 0x04000050
_080880F4: .4byte 0x00001844
_080880F8: .4byte 0x0300122C
_080880FC: .4byte 0x0300122E
_08088100:
	cmp r0, #0x3b
	bne _08088116
	movs r0, #0x80
	lsls r0, r0, #0x13
	ldrh r1, [r0]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r3, #0
	orrs r1, r2
	strh r1, [r0]
	b _0808818A
_08088116:
	cmp r0, #0x3c
	bne _0808818A
	strh r4, [r3]
	ldr r1, _08088140 @ =0x00000212
	adds r0, r2, r1
	strb r5, [r0]
	strh r4, [r2, #0xe]
	strh r4, [r2, #0xc]
	ldr r1, _08088144 @ =0x0879C5A4
	ldr r0, _08088148 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x2c]
	str r0, [r2]
	movs r0, #1
	strb r0, [r6]
	b _0808818A
	.align 2, 0
_08088140: .4byte 0x00000212
_08088144: .4byte 0x0879C5A4
_08088148: .4byte 0x03000011
_0808814C:
	strh r4, [r3]
	movs r3, #0x86
	lsls r3, r3, #2
	adds r0, r2, r3
	ldrb r1, [r0]
	cmp r1, #2
	beq _0808815E
	cmp r1, #4
	bne _08088162
_0808815E:
	strb r5, [r0]
	b _0808818A
_08088162:
	cmp r1, #3
	bne _0808818A
	strb r5, [r0]
	movs r0, #2
	strb r0, [r6]
	ldr r1, _08088174 @ =gWrittenToBldy
	movs r0, #0x10
	strh r0, [r1]
	b _0808818A
	.align 2, 0
_08088174: .4byte gWrittenToBldy
_08088178:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1e
	bne _0808818A
	ldr r1, _080881A0 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	strh r4, [r3]
	movs r7, #1
_0808818A:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	bl IntroProcessText
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080881A0: .4byte 0x04000050

	thumb_func_start NewFileIntroSamusFainting
NewFileIntroSamusFainting: @ 0x080881A4
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _080881BC @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _080881D0
	cmp r0, #1
	bgt _080881C0
	cmp r0, #0
	beq _080881CA
	b _08088232
	.align 2, 0
_080881BC: .4byte gNonGameplayRam
_080881C0:
	cmp r0, #2
	beq _080881E8
	cmp r0, #3
	beq _08088206
	b _08088232
_080881CA:
	bl NewFileIntroSamusFaintingInit
	b _080881DC
_080881D0:
	bl SpecialCutsceneFadeIn
	ldr r0, _080881E4 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _08088232
_080881DC:
	movs r0, #2
	strh r0, [r4, #8]
	b _08088232
	.align 2, 0
_080881E4: .4byte gWrittenToBldy
_080881E8:
	bl NewFileIntroSamusFaintingProcess
	cmp r0, #0
	beq _08088232
	movs r1, #0
	movs r0, #3
	strh r0, [r4, #8]
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r4, r2
	strh r5, [r0]
	adds r2, #4
	adds r0, r4, r2
	strb r1, [r0]
	b _08088232
_08088206:
	ldr r1, _08088214 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _08088218
	adds r0, #1
	strh r0, [r1]
	b _0808822A
	.align 2, 0
_08088214: .4byte gWrittenToBldy
_08088218:
	ldr r1, _0808823C @ =0x00000213
	adds r0, r4, r1
	strb r5, [r0]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r4, r2
	strb r5, [r0]
	strh r5, [r4, #8]
	movs r5, #1
_0808822A:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_08088232:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0808823C: .4byte 0x00000213

	thumb_func_start NewFileIntroSamusDriftingInit
NewFileIntroSamusDriftingInit: @ 0x08088240
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _080883F4 @ =unk_99940
	bl CallbackSetVBlank
	movs r0, #0
	str r0, [sp]
	ldr r1, _080883F8 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r0, _080883FC @ =gNonGameplayRam
	str r0, [r1, #4]
	ldr r0, _08088400 @ =0x85000150
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r5, #0
	ldr r4, _08088404 @ =0x0879C3FC
_08088262:
	lsls r0, r5, #2
	adds r0, r0, r4
	ldr r0, [r0]
	lsls r1, r5, #0xc
	ldr r2, _08088408 @ =0x06010000
	adds r1, r1, r2
	bl LZ77UncompVram
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #7
	bls _08088262
	ldr r4, _080883F8 @ =0x040000D4
	ldr r0, _0808840C @ =0x085980B0
	str r0, [r4]
	ldr r0, _08088410 @ =0x05000200
	str r0, [r4, #4]
	ldr r0, _08088414 @ =0x84000028
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08088418 @ =0x08598150
	str r0, [r4]
	ldr r0, _0808841C @ =0x05000300
	str r0, [r4, #4]
	ldr r0, _08088420 @ =0x84000010
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08088424 @ =0x08613148
	str r0, [r4]
	ldr r0, _08088428 @ =0x06017FE0
	str r0, [r4, #4]
	ldr r1, _0808842C @ =0x84000008
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08088430 @ =0x086131A8
	str r0, [r4]
	ldr r0, _08088434 @ =0x050003E0
	str r0, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08088438 @ =0x0860BCA4
	ldr r5, _0808843C @ =0x02010000
	adds r1, r5, #0
	bl LZ77UncompWram
	str r5, [r4]
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _08088440 @ =0x84002000
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08088444 @ =0x0860B670
	ldr r1, _08088448 @ =0x0600E800
	bl LZ77UncompVram
	ldr r0, _0808844C @ =0x0860B148
	ldr r1, _08088450 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _08088454 @ =0x08612E48
	str r0, [r4]
	ldr r0, _08088458 @ =0x05000100
	str r0, [r4, #4]
	ldr r0, _0808845C @ =0x84000040
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	movs r4, #0
	strh r4, [r0]
	ldr r0, _08088460 @ =0x08598898
	ldr r1, _08088464 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _08088468 @ =0x04000010
	ldr r2, _0808846C @ =0x0000FFF8
	adds r1, r2, #0
	strh r1, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, _08088470 @ =gBg1XPosition
	strh r4, [r0]
	ldr r0, _08088474 @ =gBg1YPosition
	strh r4, [r0]
	ldr r6, _08088478 @ =0x0300122C
	movs r0, #0x30
	strh r0, [r6]
	ldr r5, _0808847C @ =0x0300122E
	strh r1, [r5]
	ldr r0, _08088480 @ =0x03001230
	strh r4, [r0]
	ldr r0, _08088484 @ =0x03001232
	strh r4, [r0]
	ldr r1, _08088488 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	subs r1, #0x48
	ldr r2, _0808848C @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	ldr r2, _08088490 @ =0x00005D02
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _08088494 @ =0x00001F03
	adds r0, r2, #0
	strh r0, [r1]
	movs r0, #0xc8
	movs r1, #0xfa
	movs r2, #0
	movs r3, #0
	bl NewFileIntroSetupOam
	movs r0, #0
	ldrsh r1, [r6, r0]
	movs r0, #0
	ldrsh r2, [r5, r0]
	movs r0, #1
	movs r3, #0
	bl NewFileIntroSetupOam
	movs r0, #0x14
	movs r1, #0xa0
	movs r2, #0x5a
	movs r3, #0
	bl NewFileIntroSetupOam
	movs r0, #4
	movs r1, #0
	movs r2, #0
	movs r3, #1
	bl NewFileIntroSetupOam
	movs r5, #0
_0808838C:
	bl SpecialCutsceneGetRandomNumber
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl SpecialCutsceneGetRandomNumber
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #3
	adds r1, r4, #0
	movs r3, #1
	bl NewFileIntroSetupOam
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #9
	bls _0808838C
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	movs r4, #0
	str r4, [sp]
	ldr r1, _080883F8 @ =0x040000D4
	mov r2, sp
	str r2, [r1]
	ldr r0, _08088498 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _0808849C @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r1, _080883FC @ =gNonGameplayRam
	ldr r0, _080884A0 @ =0x0863A19C
	str r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xe0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _080884A4 @ =NewFileIntroSamusShipFlyingVblank
	bl CallbackSetVBlank
	ldr r0, _080884A8 @ =gWrittenToBldy
	strh r4, [r0]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080883F4: .4byte unk_99940
_080883F8: .4byte 0x040000D4
_080883FC: .4byte gNonGameplayRam
_08088400: .4byte 0x85000150
_08088404: .4byte 0x0879C3FC
_08088408: .4byte 0x06010000
_0808840C: .4byte 0x085980B0
_08088410: .4byte 0x05000200
_08088414: .4byte 0x84000028
_08088418: .4byte 0x08598150
_0808841C: .4byte 0x05000300
_08088420: .4byte 0x84000010
_08088424: .4byte 0x08613148
_08088428: .4byte 0x06017FE0
_0808842C: .4byte 0x84000008
_08088430: .4byte 0x086131A8
_08088434: .4byte 0x050003E0
_08088438: .4byte 0x0860BCA4
_0808843C: .4byte 0x02010000
_08088440: .4byte 0x84002000
_08088444: .4byte 0x0860B670
_08088448: .4byte 0x0600E800
_0808844C: .4byte 0x0860B148
_08088450: .4byte 0x0600F800
_08088454: .4byte 0x08612E48
_08088458: .4byte 0x05000100
_0808845C: .4byte 0x84000040
_08088460: .4byte 0x08598898
_08088464: .4byte 0x0600E000
_08088468: .4byte 0x04000010
_0808846C: .4byte 0x0000FFF8
_08088470: .4byte gBg1XPosition
_08088474: .4byte gBg1YPosition
_08088478: .4byte 0x0300122C
_0808847C: .4byte 0x0300122E
_08088480: .4byte 0x03001230
_08088484: .4byte 0x03001232
_08088488: .4byte 0x04000050
_0808848C: .4byte 0x00001C08
_08088490: .4byte 0x00005D02
_08088494: .4byte 0x00001F03
_08088498: .4byte 0x0600D000
_0808849C: .4byte 0x85000400
_080884A0: .4byte 0x0863A19C
_080884A4: .4byte NewFileIntroSamusShipFlyingVblank
_080884A8: .4byte gWrittenToBldy

	thumb_func_start NewFileIntroSamusLosingConsciousnessVblank
NewFileIntroSamusLosingConsciousnessVblank: @ 0x080884AC
	push {lr}
	ldr r3, _08088530 @ =0x040000D4
	ldr r0, _08088534 @ =gOamData
	str r0, [r3]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r3, #4]
	ldr r0, _08088538 @ =0x84000100
	str r0, [r3, #8]
	ldr r0, [r3, #8]
	ldr r2, _0808853C @ =0x04000052
	ldr r0, _08088540 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08088544 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08088548 @ =0x04000054
	ldr r0, _0808854C @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x40
	ldr r0, _08088550 @ =gBg1XPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08088554 @ =gBg1YPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08088558 @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808855C @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08088560 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08088564 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r0, _08088568 @ =gNonGameplayRam
	movs r2, #0x88
	lsls r2, r2, #1
	adds r1, r0, r2
	ldrb r0, [r1]
	cmp r0, #1
	bne _0808852A
	movs r0, #0
	strb r0, [r1]
	ldr r0, _0808856C @ =0x08598AAC
	str r0, [r3]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r3, #4]
	ldr r0, _08088570 @ =0x84000020
	str r0, [r3, #8]
	ldr r0, [r3, #8]
_0808852A:
	pop {r0}
	bx r0
	.align 2, 0
_08088530: .4byte 0x040000D4
_08088534: .4byte gOamData
_08088538: .4byte 0x84000100
_0808853C: .4byte 0x04000052
_08088540: .4byte 0x03001222
_08088544: .4byte 0x03001220
_08088548: .4byte 0x04000054
_0808854C: .4byte gWrittenToBldy
_08088550: .4byte gBg1XPosition
_08088554: .4byte gBg1YPosition
_08088558: .4byte 0x0300122C
_0808855C: .4byte 0x0300122E
_08088560: .4byte 0x03001230
_08088564: .4byte 0x03001232
_08088568: .4byte gNonGameplayRam
_0808856C: .4byte 0x08598AAC
_08088570: .4byte 0x84000020

	thumb_func_start NewFileIntroSamusLosingConsciousnessInit
NewFileIntroSamusLosingConsciousnessInit: @ 0x08088574
	push {r4, r5, lr}
	sub sp, #4
	ldr r0, _080886B8 @ =unk_99940
	bl CallbackSetVBlank
	movs r0, #0
	str r0, [sp]
	ldr r0, _080886BC @ =0x040000D4
	mov r1, sp
	str r1, [r0]
	ldr r1, _080886C0 @ =0x030016A0
	str r1, [r0, #4]
	ldr r1, _080886C4 @ =0x850000B4
	str r1, [r0, #8]
	ldr r1, [r0, #8]
	ldr r1, _080886C8 @ =0x08613148
	str r1, [r0]
	ldr r1, _080886CC @ =0x06017FE0
	str r1, [r0, #4]
	ldr r2, _080886D0 @ =0x84000008
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	ldr r1, _080886D4 @ =0x086131A8
	str r1, [r0]
	ldr r1, _080886D8 @ =0x050003E0
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r0, [r0, #8]
	movs r4, #0
	ldr r5, _080886DC @ =0x0879C430
_080885B0:
	lsls r0, r4, #2
	adds r0, r0, r5
	ldr r0, [r0]
	lsls r1, r4, #0xc
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r1, r1, r2
	bl LZ77UncompVram
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #5
	bls _080885B0
	ldr r4, _080886E0 @ =0x08598190
	ldr r1, _080886E4 @ =0x0600F000
	adds r0, r4, #0
	bl LZ77UncompVram
	ldr r1, _080886E8 @ =0x0600F800
	adds r0, r4, #0
	bl LZ77UncompVram
	ldr r5, _080886BC @ =0x040000D4
	ldr r0, _080886EC @ =0x08598818
	str r0, [r5]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	str r1, [r5, #4]
	ldr r0, _080886F0 @ =0x84000020
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	movs r4, #0
	strh r4, [r1]
	ldr r0, _080886F4 @ =0x08598898
	ldr r1, _080886F8 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _080886FC @ =0x08612E48
	str r0, [r5]
	ldr r0, _08088700 @ =0x05000100
	str r0, [r5, #4]
	ldr r0, _08088704 @ =0x84000040
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	ldr r0, _08088708 @ =0x04000010
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, _0808870C @ =gBg1XPosition
	strh r4, [r0]
	ldr r0, _08088710 @ =gBg1YPosition
	strh r4, [r0]
	ldr r1, _08088714 @ =0x0300122C
	movs r0, #0xa
	strh r0, [r1]
	ldr r0, _08088718 @ =0x0300122E
	strh r4, [r0]
	ldr r0, _0808871C @ =0x03001230
	strh r4, [r0]
	ldr r0, _08088720 @ =0x03001232
	strh r4, [r0]
	ldr r1, _08088724 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	subs r1, #0x48
	ldr r2, _08088728 @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	ldr r2, _0808872C @ =0x00001E02
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _08088730 @ =0x00001F03
	adds r0, r2, #0
	strh r0, [r1]
	movs r0, #0xc8
	movs r1, #0xfa
	movs r2, #0
	movs r3, #0
	bl NewFileIntroSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	movs r4, #0
	str r4, [sp]
	mov r0, sp
	str r0, [r5]
	ldr r0, _08088734 @ =0x0600D000
	str r0, [r5, #4]
	ldr r0, _08088738 @ =0x85000400
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	ldr r1, _0808873C @ =gNonGameplayRam
	ldr r0, _08088740 @ =0x0863A19C
	str r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xe0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08088744 @ =NewFileIntroSamusLosingConsciousnessVblank
	bl CallbackSetVBlank
	ldr r0, _08088748 @ =gWrittenToBldy
	strh r4, [r0]
	ldr r1, _0808874C @ =0x03001220
	movs r0, #0xc
	strh r0, [r1]
	ldr r1, _08088750 @ =0x03001222
	movs r0, #8
	strh r0, [r1]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080886B8: .4byte unk_99940
_080886BC: .4byte 0x040000D4
_080886C0: .4byte 0x030016A0
_080886C4: .4byte 0x850000B4
_080886C8: .4byte 0x08613148
_080886CC: .4byte 0x06017FE0
_080886D0: .4byte 0x84000008
_080886D4: .4byte 0x086131A8
_080886D8: .4byte 0x050003E0
_080886DC: .4byte 0x0879C430
_080886E0: .4byte 0x08598190
_080886E4: .4byte 0x0600F000
_080886E8: .4byte 0x0600F800
_080886EC: .4byte 0x08598818
_080886F0: .4byte 0x84000020
_080886F4: .4byte 0x08598898
_080886F8: .4byte 0x0600E000
_080886FC: .4byte 0x08612E48
_08088700: .4byte 0x05000100
_08088704: .4byte 0x84000040
_08088708: .4byte 0x04000010
_0808870C: .4byte gBg1XPosition
_08088710: .4byte gBg1YPosition
_08088714: .4byte 0x0300122C
_08088718: .4byte 0x0300122E
_0808871C: .4byte 0x03001230
_08088720: .4byte 0x03001232
_08088724: .4byte 0x04000050
_08088728: .4byte 0x00001C08
_0808872C: .4byte 0x00001E02
_08088730: .4byte 0x00001F03
_08088734: .4byte 0x0600D000
_08088738: .4byte 0x85000400
_0808873C: .4byte gNonGameplayRam
_08088740: .4byte 0x0863A19C
_08088744: .4byte NewFileIntroSamusLosingConsciousnessVblank
_08088748: .4byte gWrittenToBldy
_0808874C: .4byte 0x03001220
_08088750: .4byte 0x03001222

	thumb_func_start NewFileIntroSamusDriftingIntoAsteroidsInit
NewFileIntroSamusDriftingIntoAsteroidsInit: @ 0x08088754
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r3, _080888F4 @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _080888F8 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _080888FC @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08088900 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _08088904 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _08088908 @ =unk_99940
	bl CallbackSetVBlank
	movs r0, #0
	str r0, [sp]
	ldr r1, _0808890C @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r0, _08088910 @ =0x030016A0
	str r0, [r1, #4]
	ldr r0, _08088914 @ =0x850000B4
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r5, #0
	ldr r4, _08088918 @ =0x0879C3FC
_08088794:
	lsls r0, r5, #2
	adds r0, r0, r4
	ldr r0, [r0]
	lsls r1, r5, #0xc
	ldr r2, _0808891C @ =0x06010000
	adds r1, r1, r2
	bl LZ77UncompVram
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #7
	bls _08088794
	ldr r4, _0808890C @ =0x040000D4
	ldr r0, _08088920 @ =0x08612F48
	str r0, [r4]
	ldr r0, _08088924 @ =0x05000200
	str r0, [r4, #4]
	ldr r6, _08088928 @ =0x84000080
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808892C @ =0x08598150
	str r0, [r4]
	ldr r0, _08088930 @ =0x05000300
	str r0, [r4, #4]
	ldr r0, _08088934 @ =0x84000010
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08088938 @ =0x08613148
	str r0, [r4]
	ldr r0, _0808893C @ =0x06017FE0
	str r0, [r4, #4]
	ldr r5, _08088940 @ =0x84000008
	str r5, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08088944 @ =0x086131A8
	str r0, [r4]
	ldr r0, _08088948 @ =0x050003E0
	str r0, [r4, #4]
	str r5, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808894C @ =0x08605D08
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _08088950 @ =0x08609220
	ldr r1, _08088954 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _08088958 @ =0x08598898
	ldr r1, _0808895C @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _08088960 @ =0x08609020
	str r0, [r4]
	movs r2, #0xa0
	lsls r2, r2, #0x13
	str r2, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08088964 @ =0x08598A8C
	str r0, [r4]
	ldr r0, _08088968 @ =0x050001E0
	str r0, [r4, #4]
	str r5, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0
	strh r1, [r2]
	ldr r0, _0808896C @ =0x04000010
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, _08088970 @ =0x0300122C
	strh r1, [r0]
	ldr r0, _08088974 @ =0x0300122E
	strh r1, [r0]
	ldr r0, _08088978 @ =0x03001230
	strh r1, [r0]
	ldr r0, _0808897C @ =0x03001232
	strh r1, [r0]
	ldr r2, _08088980 @ =0x04000008
	ldr r3, _08088984 @ =0x00001C08
	adds r0, r3, #0
	strh r0, [r2]
	adds r2, #6
	ldr r3, _08088988 @ =0x00001F03
	adds r0, r3, #0
	strh r0, [r2]
	adds r2, #0x42
	movs r0, #0xff
	strh r0, [r2]
	ldr r2, _0808898C @ =0x03001220
	ldr r0, _08088990 @ =0x03001222
	strh r1, [r0]
	strh r1, [r2]
	ldr r1, _08088994 @ =0x04000052
	movs r0, #0
	strh r0, [r1]
	movs r0, #0x1e
	movs r1, #0x8c
	movs r2, #0x8c
	movs r3, #0
	bl NewFileIntroSetupOam
	movs r0, #0x1f
	movs r1, #0x8c
	movs r2, #0x50
	movs r3, #0
	bl NewFileIntroSetupOam
	movs r5, #0
_0808888C:
	bl SpecialCutsceneGetRandomNumber
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl SpecialCutsceneGetRandomNumber
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #0x24
	adds r1, r4, #0
	movs r3, #1
	bl NewFileIntroSetupOam
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #3
	bls _0808888C
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r1, _08088998 @ =gNonGameplayRam
	ldr r0, _0808899C @ =0x0863A19C
	str r0, [r1]
	movs r4, #0
	str r4, [sp]
	ldr r1, _0808890C @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r0, _080889A0 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _080889A4 @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	subs r1, #0xd4
	movs r2, #0xc8
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _080889A8 @ =NewFileIntroSamusShipFlyingVblank
	bl CallbackSetVBlank
	ldr r0, _080889AC @ =gWrittenToBldy
	strh r4, [r0]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080888F4: .4byte 0x04000208
_080888F8: .4byte 0x04000004
_080888FC: .4byte 0x0000FFEF
_08088900: .4byte 0x04000200
_08088904: .4byte 0x0000FFFD
_08088908: .4byte unk_99940
_0808890C: .4byte 0x040000D4
_08088910: .4byte 0x030016A0
_08088914: .4byte 0x850000B4
_08088918: .4byte 0x0879C3FC
_0808891C: .4byte 0x06010000
_08088920: .4byte 0x08612F48
_08088924: .4byte 0x05000200
_08088928: .4byte 0x84000080
_0808892C: .4byte 0x08598150
_08088930: .4byte 0x05000300
_08088934: .4byte 0x84000010
_08088938: .4byte 0x08613148
_0808893C: .4byte 0x06017FE0
_08088940: .4byte 0x84000008
_08088944: .4byte 0x086131A8
_08088948: .4byte 0x050003E0
_0808894C: .4byte 0x08605D08
_08088950: .4byte 0x08609220
_08088954: .4byte 0x0600F800
_08088958: .4byte 0x08598898
_0808895C: .4byte 0x0600E000
_08088960: .4byte 0x08609020
_08088964: .4byte 0x08598A8C
_08088968: .4byte 0x050001E0
_0808896C: .4byte 0x04000010
_08088970: .4byte 0x0300122C
_08088974: .4byte 0x0300122E
_08088978: .4byte 0x03001230
_0808897C: .4byte 0x03001232
_08088980: .4byte 0x04000008
_08088984: .4byte 0x00001C08
_08088988: .4byte 0x00001F03
_0808898C: .4byte 0x03001220
_08088990: .4byte 0x03001222
_08088994: .4byte 0x04000052
_08088998: .4byte gNonGameplayRam
_0808899C: .4byte 0x0863A19C
_080889A0: .4byte 0x0600D000
_080889A4: .4byte 0x85000400
_080889A8: .4byte NewFileIntroSamusShipFlyingVblank
_080889AC: .4byte gWrittenToBldy

	thumb_func_start NewFileIntroSamusDriftingProcess
NewFileIntroSamusDriftingProcess: @ 0x080889B0
	push {r4, r5, r6, lr}
	movs r6, #0
	ldr r2, _08088A04 @ =gNonGameplayRam
	ldr r0, [r2]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	adds r4, r2, #0
	cmp r1, r0
	bne _080889E0
	ldr r0, _08088A08 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080889E0
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080889E0
	movs r0, #1
	strb r0, [r1]
_080889E0:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r4, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #9
	bls _080889FA
	b _08088CB2
_080889FA:
	lsls r0, r0, #2
	ldr r1, _08088A0C @ =_08088A10
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08088A04: .4byte gNonGameplayRam
_08088A08: .4byte gChangedInput
_08088A0C: .4byte _08088A10
_08088A10: @ jump table
	.4byte _08088A38 @ case 0
	.4byte _08088A90 @ case 1
	.4byte _08088AB0 @ case 2
	.4byte _08088B34 @ case 3
	.4byte _08088B5C @ case 4
	.4byte _08088B7C @ case 5
	.4byte _08088B9C @ case 6
	.4byte _08088C00 @ case 7
	.4byte _08088C50 @ case 8
	.4byte _08088CB0 @ case 9
_08088A38:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	blt _08088A62
	ldr r0, _08088A88 @ =gNonGameplayRam
	ldr r3, _08088A8C @ =0x00000215
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0xb
	bhi _08088A62
	bl SpecialCutsceneGetRandomNumber
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #3
	movs r1, #0
	movs r3, #1
	bl NewFileIntroSetupOam
_08088A62:
	ldr r1, _08088A88 @ =gNonGameplayRam
	movs r0, #0x84
	lsls r0, r0, #2
	adds r2, r1, r0
	ldrh r0, [r2]
	cmp r0, #0x95
	bne _08088A72
	b _08088CB2
_08088A72:
	cmp r0, #0x96
	beq _08088A78
	b _08088CB2
_08088A78:
	movs r0, #0
	strh r0, [r2]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r1, r2
	movs r0, #1
	b _08088B4E
	.align 2, 0
_08088A88: .4byte gNonGameplayRam
_08088A8C: .4byte 0x00000215
_08088A90:
	bl NewFileIntroSamusLosingConsciousnessInit
	ldr r2, _08088AAC @ =gNonGameplayRam
	movs r3, #0x84
	lsls r3, r3, #2
	adds r1, r2, r3
	movs r0, #0
	strh r0, [r1]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r2, r0
	movs r0, #2
	strb r0, [r1]
	b _08088CB2
	.align 2, 0
_08088AAC: .4byte gNonGameplayRam
_08088AB0:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r3, r4, r1
	ldrh r0, [r3]
	cmp r0, #1
	bne _08088AF4
	ldr r1, _08088AE0 @ =0x04000050
	ldr r2, _08088AE4 @ =0x00001844
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08088AE8 @ =0x0300122C
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, _08088AEC @ =0x0300122E
	movs r3, #0
	ldrsh r2, [r0, r3]
	movs r0, #0xa
	movs r3, #1
	bl NewFileIntroSetupOam
	ldr r1, _08088AF0 @ =gWrittenToBldy
	movs r0, #0
	strh r0, [r1]
	b _08088CB2
	.align 2, 0
_08088AE0: .4byte 0x04000050
_08088AE4: .4byte 0x00001844
_08088AE8: .4byte 0x0300122C
_08088AEC: .4byte 0x0300122E
_08088AF0: .4byte gWrittenToBldy
_08088AF4:
	cmp r0, #0x76
	bne _08088AFA
	b _08088CB2
_08088AFA:
	cmp r0, #0x78
	beq _08088B00
	b _08088CB2
_08088B00:
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _08088B2C @ =0x0000FBFF
	ands r0, r1
	strh r0, [r2]
	ldr r1, _08088B30 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	movs r0, #0x88
	lsls r0, r0, #1
	adds r1, r4, r0
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	strh r2, [r3]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r0, #3
	strb r0, [r1]
	b _08088CB2
	.align 2, 0
_08088B2C: .4byte 0x0000FBFF
_08088B30: .4byte 0x04000050
_08088B34:
	movs r3, #0x84
	lsls r3, r3, #2
	adds r1, r4, r3
	ldrh r0, [r1]
	cmp r0, #0x3c
	beq _08088B42
	b _08088CB2
_08088B42:
	movs r0, #0
	strh r0, [r1]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #4
_08088B4E:
	strb r0, [r1]
	ldr r1, _08088B58 @ =gWrittenToBldy
	movs r0, #0x10
	strh r0, [r1]
	b _08088CB2
	.align 2, 0
_08088B58: .4byte gWrittenToBldy
_08088B5C:
	bl NewFileIntroSamusDriftingIntoAsteroidsInit
	ldr r2, _08088B78 @ =gNonGameplayRam
	movs r3, #0x84
	lsls r3, r3, #2
	adds r1, r2, r3
	movs r0, #0
	strh r0, [r1]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r2, r0
	movs r0, #5
	strb r0, [r1]
	b _08088CB2
	.align 2, 0
_08088B78: .4byte gNonGameplayRam
_08088B7C:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r0, #0
	strh r0, [r1]
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _08088B92
	b _08088CB2
_08088B92:
	ldr r3, _08088B98 @ =0x00000215
	adds r0, r4, r3
	b _08088C86
	.align 2, 0
_08088B98: .4byte 0x00000215
_08088B9C:
	ldr r1, _08088BC0 @ =0x04000050
	movs r0, #0xbf
	strh r0, [r1]
	ldr r3, _08088BC4 @ =gWrittenToBldy
	ldrh r2, [r3]
	cmp r2, #0xf
	bhi _08088BC8
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrh r0, [r1]
	cmp r0, #3
	bne _08088BE4
	movs r0, #0
	strh r0, [r1]
	adds r0, r2, #1
	strh r0, [r3]
	b _08088BE4
	.align 2, 0
_08088BC0: .4byte 0x04000050
_08088BC4: .4byte gWrittenToBldy
_08088BC8:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r4, r2
	ldrh r0, [r1]
	cmp r0, #0xa
	bne _08088BE4
	movs r0, #0
	strh r0, [r1]
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r4, r3
	movs r0, #7
	strb r0, [r1]
	movs r6, #1
_08088BE4:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	blt _08088CB2
	ldr r0, _08088BF8 @ =gNonGameplayRam
	ldr r1, _08088BFC @ =0x00000215
	adds r0, r0, r1
	b _08088C86
	.align 2, 0
_08088BF8: .4byte gNonGameplayRam
_08088BFC: .4byte 0x00000215
_08088C00:
	ldr r3, _08088C20 @ =gWrittenToBldy
	ldrh r2, [r3]
	adds r1, r2, #0
	cmp r1, #0
	beq _08088C24
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrh r0, [r1]
	cmp r0, #6
	bne _08088C36
	movs r0, #0
	strh r0, [r1]
	subs r0, r2, #1
	strh r0, [r3]
	b _08088C36
	.align 2, 0
_08088C20: .4byte gWrittenToBldy
_08088C24:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r4, r2
	strh r1, [r0]
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r4, r3
	movs r0, #8
	strb r0, [r1]
_08088C36:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	blt _08088CB2
	ldr r0, _08088C48 @ =gNonGameplayRam
	ldr r1, _08088C4C @ =0x00000215
	adds r0, r0, r1
	b _08088C86
	.align 2, 0
_08088C48: .4byte gNonGameplayRam
_08088C4C: .4byte 0x00000215
_08088C50:
	adds r5, r4, #0
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0
	strh r0, [r1]
	movs r3, #0x86
	lsls r3, r3, #2
	adds r0, r5, r3
	ldrb r0, [r0]
	cmp r0, #1
	bne _08088C78
	movs r0, #0xc9
	bl SpecialCutsceneDestroyOamOfType
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r5, r0
	movs r0, #9
	strb r0, [r1]
_08088C78:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	blt _08088CB2
	ldr r1, _08088CAC @ =0x00000215
	adds r0, r4, r1
_08088C86:
	ldrb r0, [r0]
	cmp r0, #0xb
	bhi _08088CB2
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	bl SpecialCutsceneGetRandomNumber
	adds r2, r0, #0
	lsls r2, r2, #0x18
	adds r1, r4, #0
	lsrs r2, r2, #0x18
	movs r0, #0x24
	movs r3, #1
	bl NewFileIntroSetupOam
	b _08088CB2
	.align 2, 0
_08088CAC: .4byte 0x00000215
_08088CB0:
	movs r6, #1
_08088CB2:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	bl IntroProcessText
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start NewFileIntroSamusDrifting
NewFileIntroSamusDrifting: @ 0x08088CC8
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _08088CE0 @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _08088CF4
	cmp r0, #1
	bgt _08088CE4
	cmp r0, #0
	beq _08088CEE
	b _08088D56
	.align 2, 0
_08088CE0: .4byte gNonGameplayRam
_08088CE4:
	cmp r0, #2
	beq _08088D0C
	cmp r0, #3
	beq _08088D2A
	b _08088D56
_08088CEE:
	bl NewFileIntroSamusDriftingInit
	b _08088D00
_08088CF4:
	bl SpecialCutsceneFadeIn
	ldr r0, _08088D08 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _08088D56
_08088D00:
	movs r0, #2
	strh r0, [r4, #8]
	b _08088D56
	.align 2, 0
_08088D08: .4byte gWrittenToBldy
_08088D0C:
	bl NewFileIntroSamusDriftingProcess
	cmp r0, #0
	beq _08088D56
	movs r1, #0
	movs r0, #3
	strh r0, [r4, #8]
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r4, r2
	strh r5, [r0]
	adds r2, #4
	adds r0, r4, r2
	strb r1, [r0]
	b _08088D56
_08088D2A:
	ldr r1, _08088D38 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _08088D3C
	adds r0, #1
	strh r0, [r1]
	b _08088D4E
	.align 2, 0
_08088D38: .4byte gWrittenToBldy
_08088D3C:
	ldr r1, _08088D60 @ =0x00000213
	adds r0, r4, r1
	strb r5, [r0]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r4, r2
	strb r5, [r0]
	strh r5, [r4, #8]
	movs r5, #1
_08088D4E:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_08088D56:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08088D60: .4byte 0x00000213

	thumb_func_start NewFileIntroProcessBslShip
NewFileIntroProcessBslShip: @ 0x08088D64
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldrh r1, [r5, #0xc]
	movs r6, #0
	strh r1, [r5, #4]
	ldrb r0, [r5, #0x14]
	cmp r0, #0
	bne _08088D78
	movs r0, #2
	b _08088E46
_08088D78:
	cmp r0, #1
	bne _08088DBC
	ldrh r0, [r5, #0xa]
	adds r0, #1
	strh r0, [r5, #0xa]
	movs r0, #0
	ldrsh r1, [r5, r0]
	movs r0, #0x3c
	subs r0, r0, r1
	ldrh r1, [r5, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #0xa
	ldrh r1, [r5]
	adds r2, r0, r1
	strh r2, [r5, #0xc]
	movs r3, #2
	ldrsh r1, [r5, r3]
	movs r0, #0xa
	subs r0, r0, r1
	ldrh r1, [r5, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #0xa
	ldrh r4, [r5, #2]
	adds r1, r0, r4
	strh r1, [r5, #0xe]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x27
	ble _08088E96
	strh r6, [r5, #0xa]
	strh r2, [r5]
	strh r1, [r5, #2]
	movs r0, #2
	b _08088E94
_08088DBC:
	cmp r0, #2
	bne _08088DE2
	ldrh r0, [r5, #0xa]
	adds r0, #1
	strh r0, [r5, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08088E96
	strh r6, [r5, #0xa]
	strh r6, [r5]
	movs r0, #4
	strh r0, [r5, #2]
	ldrh r0, [r5, #0xe]
	strh r0, [r5, #8]
	movs r0, #0x80
	strb r0, [r5, #0x13]
	movs r0, #3
	b _08088E94
_08088DE2:
	cmp r0, #3
	bne _08088E40
	movs r7, #0
	ldrsh r3, [r5, r7]
	ldr r2, _08088E3C @ =0x080A4FA4
	ldrb r1, [r5, #0x13]
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r0, [r0, r4]
	adds r4, r3, #0
	muls r4, r0, r4
	movs r7, #2
	ldrsh r3, [r5, r7]
	lsls r1, r1, #1
	adds r1, r1, r2
	movs r7, #0
	ldrsh r0, [r1, r7]
	muls r3, r0, r3
	movs r1, #0
	ldrsh r0, [r2, r1]
	muls r0, r4, r0
	adds r2, #0x80
	movs r4, #0
	ldrsh r1, [r2, r4]
	muls r1, r3, r1
	adds r0, r0, r1
	asrs r0, r0, #0x10
	ldrh r7, [r5, #8]
	adds r0, r0, r7
	strh r0, [r5, #0xe]
	ldrb r0, [r5, #0x13]
	adds r0, #1
	strb r0, [r5, #0x13]
	ldrh r0, [r5, #0xa]
	cmp r0, #0x3c
	beq _08088E96
	cmp r0, #0xc8
	bne _08088E96
	strh r6, [r5, #0xa]
	movs r0, #4
	b _08088E94
	.align 2, 0
_08088E3C: .4byte 0x080A4FA4
_08088E40:
	cmp r0, #4
	bne _08088E50
	movs r0, #5
_08088E46:
	strb r0, [r5, #0x14]
	strh r1, [r5]
	ldrh r0, [r5, #0xe]
	strh r0, [r5, #2]
	b _08088E96
_08088E50:
	cmp r0, #5
	bne _08088E96
	ldrh r0, [r5, #0xa]
	adds r0, #1
	strh r0, [r5, #0xa]
	movs r0, #0
	ldrsh r1, [r5, r0]
	movs r0, #0x82
	lsls r0, r0, #2
	subs r0, r0, r1
	ldrh r1, [r5, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #0xa
	ldrh r1, [r5]
	adds r2, r0, r1
	strh r2, [r5, #0xc]
	movs r3, #2
	ldrsh r1, [r5, r3]
	movs r0, #0x64
	subs r0, r0, r1
	ldrh r1, [r5, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #0xa
	ldrh r4, [r5, #2]
	adds r3, r0, r4
	strh r3, [r5, #0xe]
	lsls r1, r2, #0x10
	ldr r0, _08088EA8 @ =0x02070000
	cmp r1, r0
	ble _08088E96
	strh r6, [r5, #0xa]
	strh r2, [r5]
	strh r3, [r5, #2]
	movs r0, #6
_08088E94:
	strb r0, [r5, #0x14]
_08088E96:
	ldr r1, _08088EAC @ =0x0300122C
	ldrh r0, [r5, #0xc]
	strh r0, [r1]
	ldr r1, _08088EB0 @ =0x0300122E
	ldrh r0, [r5, #0xe]
	strh r0, [r1]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08088EA8: .4byte 0x02070000
_08088EAC: .4byte 0x0300122C
_08088EB0: .4byte 0x0300122E

	thumb_func_start NewFileIntroProcessFlyingSamusShip
NewFileIntroProcessFlyingSamusShip: @ 0x08088EB4
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r3, #0
	ldrb r0, [r6, #0x14]
	cmp r0, #0
	bne _08088ED2
	ldrh r0, [r6, #0xc]
	strh r0, [r6, #4]
	ldrh r0, [r6, #0xe]
	strh r0, [r6, #8]
	movs r0, #0x40
	strb r0, [r6, #0x13]
	movs r0, #2
	strb r0, [r6, #0x14]
	b _08088F7A
_08088ED2:
	cmp r0, #1
	bne _08088EF4
	ldrb r1, [r6, #0x13]
	adds r1, #1
	strb r1, [r6, #0x13]
	ldrh r0, [r6, #6]
	subs r0, #2
	strh r0, [r6, #6]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	cmp r1, #0x80
	bne _08088F7A
	movs r0, #2
	strb r0, [r6, #0x14]
	adds r0, #0xfe
	strh r0, [r6, #6]
	b _08088F7A
_08088EF4:
	cmp r0, #2
	bne _08088F0C
	strh r3, [r6]
	movs r0, #8
	strh r0, [r6, #2]
	ldrh r0, [r6, #0xc]
	strh r0, [r6, #4]
	ldrh r0, [r6, #0xe]
	strh r0, [r6, #8]
	movs r0, #3
	strb r0, [r6, #0x14]
	b _08088F7A
_08088F0C:
	cmp r0, #3
	bne _08088F18
	ldrb r0, [r6, #0x13]
	adds r0, #2
	strb r0, [r6, #0x13]
	b _08088F7A
_08088F18:
	cmp r0, #4
	bne _08088F38
	ldrb r0, [r6, #0x13]
	adds r0, #1
	strb r0, [r6, #0x13]
	ldrh r0, [r6, #0xa]
	adds r0, #1
	strh r0, [r6, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xb4
	bne _08088F7A
	strh r3, [r6, #0xa]
	movs r0, #5
	strb r0, [r6, #0x14]
	b _08088F7A
_08088F38:
	cmp r0, #5
	bne _08088F5E
	ldrh r2, [r6, #0xc]
	movs r1, #0x8c
	lsls r1, r1, #1
	adds r0, r1, #0
	subs r0, r0, r2
	strh r0, [r6]
	movs r1, #0x3c
	strh r1, [r6, #2]
	adds r2, r2, r0
	strh r2, [r6, #4]
	ldrh r0, [r6, #0xe]
	strh r0, [r6, #8]
	movs r0, #0x80
	strb r0, [r6, #0x13]
	movs r0, #6
	strb r0, [r6, #0x14]
	b _08088F7A
_08088F5E:
	cmp r0, #6
	bne _08088F7A
	ldrb r0, [r6, #0x13]
	adds r0, #1
	strb r0, [r6, #0x13]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08088F7A
	strb r3, [r6, #0x10]
	ldrb r1, [r6, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r6, #0x18]
_08088F7A:
	movs r2, #0
	ldrsh r3, [r6, r2]
	ldr r2, _08088FD8 @ =0x080A4FA4
	ldrb r1, [r6, #0x13]
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r0, [r0, r4]
	adds r5, r3, #0
	muls r5, r0, r5
	movs r0, #2
	ldrsh r3, [r6, r0]
	lsls r1, r1, #1
	adds r1, r1, r2
	movs r4, #0
	ldrsh r0, [r1, r4]
	adds r4, r3, #0
	muls r4, r0, r4
	adds r0, r2, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r3, [r0, r1]
	adds r1, r5, #0
	muls r1, r3, r1
	movs r0, #0
	ldrsh r2, [r2, r0]
	adds r0, r4, #0
	muls r0, r2, r0
	subs r1, r1, r0
	adds r0, r5, #0
	muls r0, r2, r0
	adds r2, r4, #0
	muls r2, r3, r2
	adds r0, r0, r2
	asrs r1, r1, #0x10
	ldrh r2, [r6, #4]
	adds r1, r1, r2
	strh r1, [r6, #0xc]
	asrs r0, r0, #0x10
	ldrh r4, [r6, #8]
	adds r0, r0, r4
	strh r0, [r6, #0xe]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08088FD8: .4byte 0x080A4FA4

	thumb_func_start NewFileIntroProcessHorizontalParticle
NewFileIntroProcessHorizontalParticle: @ 0x08088FDC
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _08089018
	bl SpecialCutsceneGetRandomNumber
	movs r1, #7
	ands r1, r0
	adds r1, #1
	strh r1, [r4, #8]
	bl SpecialCutsceneGetRandomNumber
	movs r1, #3
	ands r1, r0
	strh r1, [r4, #4]
	ldr r1, _08089014 @ =0x0879C2CC
	movs r2, #4
	ldrsh r0, [r4, r2]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r4, #0x1c]
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	movs r0, #1
	strb r0, [r4, #0x14]
	b _0808906A
	.align 2, 0
_08089014: .4byte 0x0879C2CC
_08089018:
	cmp r0, #1
	bne _0808906A
	ldrh r0, [r4, #0xa]
	adds r0, #1
	strh r0, [r4, #0xa]
	movs r0, #8
	ldrsh r1, [r4, r0]
	ldrh r0, [r4, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #4
	ldrh r1, [r4]
	adds r0, r0, r1
	strh r0, [r4, #0xc]
	ldrb r0, [r4, #0x13]
	adds r0, #1
	strb r0, [r4, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	bne _0808906A
	movs r0, #0
	strb r0, [r4, #0x13]
	ldrh r1, [r4, #4]
	movs r2, #4
	ldrsh r0, [r4, r2]
	cmp r0, #4
	bgt _08089052
	adds r0, r1, #1
	b _08089054
_08089052:
	movs r0, #0
_08089054:
	strh r0, [r4, #4]
	ldr r1, _0808908C @ =0x0879C2CC
	movs r2, #4
	ldrsh r0, [r4, r2]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r4, #0x1c]
	movs r0, #0
	strb r0, [r4, #0x12]
	strb r0, [r4, #0x11]
_0808906A:
	movs r1, #0xc
	ldrsh r0, [r4, r1]
	cmp r0, #0xef
	bgt _0808907A
	movs r2, #0xe
	ldrsh r0, [r4, r2]
	cmp r0, #0x9f
	ble _08089086
_0808907A:
	movs r0, #0
	strb r0, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	subs r0, #2
	ands r0, r1
	strb r0, [r4, #0x18]
_08089086:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808908C: .4byte 0x0879C2CC

	thumb_func_start unk_89090
unk_89090: @ 0x08089090
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0x12]
	adds r0, #1
	strb r0, [r1, #0x12]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x19
	bne _080890AE
	movs r0, #0
	strb r0, [r1, #0x12]
	ldr r1, _080890B4 @ =0x03001230
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
_080890AE:
	pop {r0}
	bx r0
	.align 2, 0
_080890B4: .4byte 0x03001230

	thumb_func_start NewFileIntroProcessSamusFainting
NewFileIntroProcessSamusFainting: @ 0x080890B8
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r4, _08089114 @ =sRandomNumberTable
	ldr r2, _08089118 @ =gFrameCounter16Bit
	ldrh r1, [r2]
	movs r3, #0x1f
	adds r0, r3, #0
	ands r0, r1
	adds r0, r0, r4
	ldrb r0, [r0]
	lsrs r6, r0, #1
	ldrh r0, [r2]
	adds r0, #7
	ands r0, r3
	adds r0, r0, r4
	ldrb r0, [r0]
	lsrs r2, r0, #1
	adds r3, r2, #0
	movs r0, #8
	ldrsh r1, [r5, r0]
	cmp r1, #0
	bne _0808911C
	ldrb r0, [r5, #0x13]
	adds r0, #1
	strb r0, [r5, #0x13]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08089144
	strb r1, [r5, #0x13]
	ldrh r1, [r5, #0xe]
	movs r3, #0xe
	ldrsh r0, [r5, r3]
	cmp r0, #0xf
	bgt _08089144
	adds r0, r1, r2
	strh r0, [r5, #0xe]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	ble _08089144
	movs r0, #0x10
	strh r0, [r5, #0xe]
	movs r0, #1
	strh r0, [r5, #8]
	b _08089144
	.align 2, 0
_08089114: .4byte sRandomNumberTable
_08089118: .4byte gFrameCounter16Bit
_0808911C:
	ldrb r0, [r5, #0x13]
	adds r0, #1
	movs r2, #0
	strb r0, [r5, #0x13]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08089144
	strb r2, [r5, #0x13]
	ldrh r1, [r5, #0xe]
	movs r4, #0xe
	ldrsh r0, [r5, r4]
	cmp r0, #0
	ble _08089144
	subs r0, r1, r3
	strh r0, [r5, #0xe]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _08089144
	strh r2, [r5, #0xe]
	strh r2, [r5, #8]
_08089144:
	movs r0, #4
	ldrsh r1, [r5, r0]
	cmp r1, #0
	bne _0808917A
	ldrh r0, [r5, #0xa]
	adds r0, #1
	strh r0, [r5, #0xa]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080891A2
	strh r1, [r5, #0xa]
	ldrh r1, [r5, #0xc]
	movs r2, #0xc
	ldrsh r0, [r5, r2]
	cmp r0, #0xf
	bgt _080891A2
	adds r0, r1, r6
	strh r0, [r5, #0xc]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	ble _080891A2
	movs r0, #0x10
	strh r0, [r5, #0xc]
	movs r0, #1
	strh r0, [r5, #4]
	b _080891A2
_0808917A:
	ldrh r0, [r5, #0xa]
	adds r0, #1
	movs r2, #0
	strh r0, [r5, #0xa]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080891A2
	strh r2, [r5, #0xa]
	ldrh r1, [r5, #0xc]
	movs r3, #0xc
	ldrsh r0, [r5, r3]
	cmp r0, #0
	ble _080891A2
	subs r0, r1, r6
	strh r0, [r5, #0xc]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080891A2
	strh r2, [r5, #0xc]
	strh r2, [r5, #4]
_080891A2:
	ldr r1, _080891B4 @ =0x0300122C
	ldrh r0, [r5, #0xc]
	strh r0, [r1]
	ldr r1, _080891B8 @ =0x0300122E
	ldrh r0, [r5, #0xe]
	strh r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080891B4: .4byte 0x0300122C
_080891B8: .4byte 0x0300122E

	thumb_func_start NewFileIntroProcessSamusDrifting
NewFileIntroProcessSamusDrifting: @ 0x080891BC
	push {lr}
	adds r2, r0, #0
	ldrh r0, [r2, #0xa]
	adds r0, #1
	strh r0, [r2, #0xa]
	ldrb r3, [r2, #0x14]
	cmp r3, #0
	bne _080891DC
	strh r3, [r2, #0xa]
	ldrh r0, [r2, #0xc]
	strh r0, [r2]
	ldrh r0, [r2, #0xe]
	strh r0, [r2, #2]
	movs r0, #1
	strb r0, [r2, #0x14]
	b _0808920A
_080891DC:
	cmp r3, #1
	bne _0808920A
	lsls r1, r0, #0x10
	lsrs r0, r1, #0x11
	ldrh r3, [r2]
	adds r0, r0, r3
	strh r0, [r2, #0xc]
	lsrs r1, r1, #0x12
	ldrh r0, [r2, #2]
	adds r1, r1, r0
	strh r1, [r2, #0xe]
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _0808920A
	movs r0, #0
	strb r0, [r2, #0x13]
	ldrh r0, [r2, #6]
	adds r0, #1
	strh r0, [r2, #6]
_0808920A:
	movs r3, #0xc
	ldrsh r1, [r2, r3]
	movs r0, #0x8c
	lsls r0, r0, #1
	cmp r1, r0
	bgt _0808921E
	movs r1, #0xe
	ldrsh r0, [r2, r1]
	cmp r0, #0xb4
	ble _0808922A
_0808921E:
	movs r0, #0
	strb r0, [r2, #0x10]
	ldrb r1, [r2, #0x18]
	subs r0, #2
	ands r0, r1
	strb r0, [r2, #0x18]
_0808922A:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NewFileIntroProcessSamusDriftingIntoAsteroids
NewFileIntroProcessSamusDriftingIntoAsteroids: @ 0x08089230
	push {r4, r5, lr}
	adds r3, r0, #0
	ldrh r0, [r3, #0xa]
	adds r1, r0, #1
	movs r5, #0
	movs r4, #0
	strh r1, [r3, #0xa]
	ldrb r0, [r3, #0x14]
	cmp r0, #0
	bne _0808925C
	strh r0, [r3, #0xa]
	ldrh r0, [r3, #0xc]
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	strh r0, [r3, #2]
	ldrb r0, [r3, #0x15]
	subs r0, #4
	strb r0, [r3, #0x15]
	ldrh r0, [r3, #6]
	subs r0, #8
	strh r0, [r3, #6]
	b _080892D2
_0808925C:
	cmp r0, #1
	bne _080892DC
	ldrb r1, [r3, #0x13]
	adds r1, #1
	strb r1, [r3, #0x13]
	ldr r2, _080892D8 @ =0x080A4FA4
	ldrb r0, [r3, #0x13]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x17
	ldrh r2, [r3, #2]
	adds r0, r0, r2
	strh r0, [r3, #0xe]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	cmp r1, #0x34
	bls _080892B4
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc
	bne _0808929E
	ldrb r0, [r3, #0x15]
	subs r0, #1
	strb r0, [r3, #0x15]
	ldrh r0, [r3, #0xc]
	subs r0, #1
	strh r0, [r3, #0xc]
	strh r4, [r3, #4]
_0808929E:
	ldrh r0, [r3, #8]
	adds r0, #1
	strh r0, [r3, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xa
	bne _080892B4
	strh r4, [r3, #8]
	ldrh r0, [r3, #6]
	subs r0, #1
	strh r0, [r3, #6]
_080892B4:
	movs r0, #0x13
	ldrsb r0, [r3, r0]
	cmp r0, #0
	blt _080892BE
	b _08089482
_080892BE:
	movs r1, #0
	movs r0, #0
	strh r0, [r3, #8]
	strh r0, [r3, #0xa]
	strh r0, [r3, #4]
	strb r1, [r3, #0x13]
	ldrh r0, [r3, #0xc]
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	strh r0, [r3, #2]
_080892D2:
	movs r0, #2
	strb r0, [r3, #0x14]
	b _08089482
	.align 2, 0
_080892D8: .4byte 0x080A4FA4
_080892DC:
	cmp r0, #2
	bne _08089358
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x12
	ldrh r0, [r3]
	subs r0, r0, r2
	strh r0, [r3, #0xc]
	lsrs r1, r1, #0x13
	ldrh r2, [r3, #2]
	subs r2, r2, r1
	ldr r1, _08089354 @ =0x080A4FA4
	ldrb r0, [r3, #0x13]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x17
	adds r2, r2, r0
	strh r2, [r3, #0xe]
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc
	bne _0808931E
	ldrb r0, [r3, #0x15]
	subs r0, #1
	strb r0, [r3, #0x15]
	strh r4, [r3, #4]
_0808931E:
	ldrh r0, [r3, #8]
	adds r0, #1
	strh r0, [r3, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	bne _08089334
	strh r4, [r3, #8]
	ldrh r0, [r3, #6]
	subs r0, #1
	strh r0, [r3, #6]
_08089334:
	ldrb r0, [r3, #0x13]
	cmp r0, #0
	beq _0808933C
	b _08089482
_0808933C:
	strh r4, [r3, #8]
	strh r4, [r3, #0xa]
	strh r4, [r3, #4]
	strb r5, [r3, #0x13]
	ldrh r0, [r3, #0xc]
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	strh r0, [r3, #2]
	movs r0, #3
	strb r0, [r3, #0x14]
	b _08089482
	.align 2, 0
_08089354: .4byte 0x080A4FA4
_08089358:
	cmp r0, #3
	bne _080893C0
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x12
	ldrh r0, [r3]
	subs r0, r0, r2
	strh r0, [r3, #0xc]
	lsrs r1, r1, #0x13
	ldrh r0, [r3, #2]
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc
	bne _0808938A
	ldrb r0, [r3, #0x15]
	subs r0, #1
	strb r0, [r3, #0x15]
	strh r4, [r3, #4]
_0808938A:
	ldrh r0, [r3, #8]
	adds r0, #1
	strh r0, [r3, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _080893A0
	strh r4, [r3, #8]
	ldrh r0, [r3, #6]
	subs r0, #1
	strh r0, [r3, #6]
_080893A0:
	ldrb r0, [r3, #0x13]
	cmp r0, #0
	bne _080893BA
	strh r4, [r3, #8]
	strh r4, [r3, #0xa]
	strh r4, [r3, #4]
	strb r5, [r3, #0x13]
	ldrh r0, [r3, #0xc]
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	strh r0, [r3, #2]
	movs r0, #4
	strb r0, [r3, #0x14]
_080893BA:
	movs r1, #6
	ldrsh r0, [r3, r1]
	b _0808940C
_080893C0:
	cmp r0, #4
	bne _08089426
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x11
	ldrh r0, [r3]
	subs r0, r0, r2
	strh r0, [r3, #0xc]
	lsrs r1, r1, #0x12
	ldrh r0, [r3, #2]
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc
	bne _080893F2
	ldrb r0, [r3, #0x15]
	subs r0, #1
	strb r0, [r3, #0x15]
	strh r4, [r3, #4]
_080893F2:
	ldrh r0, [r3, #8]
	adds r0, #1
	strh r0, [r3, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _08089408
	strh r4, [r3, #8]
	ldrh r0, [r3, #6]
	subs r0, #1
	strh r0, [r3, #6]
_08089408:
	movs r2, #6
	ldrsh r0, [r3, r2]
_0808940C:
	cmp r0, #2
	bgt _08089482
	strh r4, [r3, #8]
	strh r4, [r3, #0xa]
	strh r4, [r3, #4]
	strb r5, [r3, #0x13]
	ldrh r0, [r3, #0xc]
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	strh r0, [r3, #2]
	movs r0, #5
	strb r0, [r3, #0x14]
	b _08089482
_08089426:
	cmp r0, #5
	bne _0808945C
	strh r4, [r3, #0xa]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r3, #6]
	strb r5, [r3, #0x12]
	strb r5, [r3, #0x11]
	ldrb r1, [r3, #0x18]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r3, #0x18]
	ldr r0, _08089454 @ =0x08598000
	str r0, [r3, #0x1c]
	movs r1, #6
	strb r1, [r3, #0x14]
	ldr r0, _08089458 @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r0, r2
	strb r1, [r0]
	b _08089482
	.align 2, 0
_08089454: .4byte 0x08598000
_08089458: .4byte gNonGameplayRam
_0808945C:
	cmp r0, #6
	bne _08089482
	ldrb r0, [r3, #0x11]
	lsls r0, r0, #3
	ldr r1, [r3, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r3, #0x12]
	cmp r0, r2
	bne _08089482
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _08089482
	strb r5, [r3, #0x10]
	ldrb r1, [r3, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r3, #0x18]
_08089482:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start unk_89488
unk_89488: @ 0x08089488
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrb r5, [r4, #0x14]
	cmp r5, #0
	bne _080894E4
	ldrh r1, [r4, #0xc]
	adds r1, #0x7a
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #0x20
	movs r3, #0
	bl NewFileIntroSetupOam
	ldrh r1, [r4, #0xc]
	adds r1, #0x32
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4, #0xe]
	adds r2, #1
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r0, #0x21
	movs r3, #0
	bl NewFileIntroSetupOam
	ldrh r1, [r4, #0xc]
	adds r1, #0x24
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #0x22
	movs r3, #0
	bl NewFileIntroSetupOam
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #0x23
	movs r3, #0
	bl NewFileIntroSetupOam
	strb r5, [r4, #0x10]
_080894E4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NewFileIntroProcessSidewaysBslShip
NewFileIntroProcessSidewaysBslShip: @ 0x080894EC
	push {r4, lr}
	adds r2, r0, #0
	ldrb r3, [r2, #0x14]
	cmp r3, #0
	bne _08089536
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x14
	bne _080895A8
	ldrh r0, [r2]
	adds r0, #1
	movs r1, #0
	strh r0, [r2]
	strb r1, [r2, #0x13]
	ldrh r0, [r2, #0xa]
	cmp r0, #4
	bne _08089516
	strh r3, [r2, #0xa]
_08089516:
	ldrh r0, [r2, #0xa]
	adds r1, r0, #0
	adds r3, r0, #0
	cmp r1, #1
	bhi _08089526
	ldrh r0, [r2, #0xe]
	adds r0, #1
	b _0808952E
_08089526:
	cmp r1, #3
	bhi _08089530
	ldrh r0, [r2, #0xe]
	subs r0, #1
_0808952E:
	strh r0, [r2, #0xe]
_08089530:
	adds r0, r3, #1
	strh r0, [r2, #0xa]
	b _080895A8
_08089536:
	cmp r3, #1
	bne _0808954A
	ldrh r0, [r2, #0xc]
	movs r1, #0
	strh r0, [r2]
	ldrh r0, [r2, #0xe]
	strh r0, [r2, #2]
	strh r1, [r2, #0xa]
	movs r0, #2
	b _080895A6
_0808954A:
	cmp r3, #2
	bne _080895A8
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _08089566
	ldrh r0, [r2, #0xa]
	adds r0, #1
	movs r1, #0
	strh r0, [r2, #0xa]
	strb r1, [r2, #0x13]
_08089566:
	movs r0, #0
	ldrsh r1, [r2, r0]
	movs r0, #0xe1
	lsls r0, r0, #2
	subs r0, r0, r1
	ldrh r1, [r2, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #0xc
	ldrh r1, [r2]
	adds r3, r0, r1
	strh r3, [r2, #0xc]
	movs r4, #4
	ldrsh r0, [r2, r4]
	movs r4, #2
	ldrsh r1, [r2, r4]
	subs r0, r0, r1
	ldrh r1, [r2, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #0xb
	ldrh r1, [r2, #2]
	adds r4, r0, r1
	strh r4, [r2, #0xe]
	lsls r1, r3, #0x10
	movs r0, #0xa0
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _080895A8
	movs r0, #0
	strh r0, [r2, #0xa]
	strh r3, [r2]
	strh r4, [r2, #2]
	movs r0, #3
_080895A6:
	strb r0, [r2, #0x14]
_080895A8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NewFileIntroProcessDepthParticle
NewFileIntroProcessDepthParticle: @ 0x080895B0
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldrh r1, [r6, #0xa]
	strh r1, [r6, #4]
	ldrb r0, [r6, #0x14]
	cmp r0, #0
	bne _080895DA
	movs r1, #0xc
	ldrsh r0, [r6, r1]
	subs r0, #0x78
	movs r1, #0x64
	muls r0, r1, r0
	strh r0, [r6]
	movs r2, #0xe
	ldrsh r0, [r6, r2]
	subs r0, #0x50
	muls r0, r1, r0
	strh r0, [r6, #2]
	movs r0, #1
	strb r0, [r6, #0x14]
	b _08089666
_080895DA:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x63
	bgt _08089658
	cmp r0, #0x19
	bne _080895F0
	ldr r0, _080895EC @ =0x08597ED0
	b _08089602
	.align 2, 0
_080895EC: .4byte 0x08597ED0
_080895F0:
	cmp r0, #0x32
	bne _080895FC
	ldr r0, _080895F8 @ =0x08597EE0
	b _08089602
	.align 2, 0
_080895F8: .4byte 0x08597EE0
_080895FC:
	cmp r0, #0x46
	bne _08089604
	ldr r0, _08089654 @ =0x08597EF0
_08089602:
	str r0, [r6, #0x1c]
_08089604:
	movs r0, #4
	ldrsh r4, [r6, r0]
	rsbs r4, r4, #0
	adds r4, #0x64
	movs r1, #0
	ldrsh r0, [r6, r1]
	adds r1, r4, #0
	bl __divsi3
	adds r5, r0, #0
	adds r0, #0x78
	strh r0, [r6, #0xc]
	movs r2, #2
	ldrsh r0, [r6, r2]
	adds r1, r4, #0
	bl __divsi3
	adds r1, r0, #0
	adds r1, #0x50
	strh r1, [r6, #0xe]
	adds r5, #0x80
	lsls r5, r5, #0x10
	movs r0, #0x80
	lsls r0, r0, #0x11
	cmp r5, r0
	bhi _08089648
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0xa8
	bgt _08089648
	movs r0, #8
	rsbs r0, r0, #0
	cmp r1, r0
	bge _08089666
_08089648:
	movs r0, #0
	strb r0, [r6, #0x10]
	ldrb r1, [r6, #0x18]
	subs r0, #2
	b _08089662
	.align 2, 0
_08089654: .4byte 0x08597EF0
_08089658:
	movs r0, #0
	strb r0, [r6, #0x10]
	ldrb r1, [r6, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
_08089662:
	ands r0, r1
	strb r0, [r6, #0x18]
_08089666:
	ldrh r0, [r6, #0xa]
	adds r0, #1
	strh r0, [r6, #0xa]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NewFileIntroSetupOam
NewFileIntroSetupOam: @ 0x08089674
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sl, r2
	lsls r3, r3, #0x18
	cmp r3, #0
	bne _080896DC
	movs r2, #0
	ldr r0, _080896D8 @ =gNonGameplayRam
	movs r3, #0x8b
	lsls r3, r3, #2
	adds r1, r0, r3
	ldrb r1, [r1]
	mov ip, r0
	cmp r1, #0
	beq _080896CA
	mov r4, ip
_080896AA:
	lsls r0, r2, #0x18
	movs r1, #0x80
	lsls r1, r1, #0x11
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x13
	bgt _0808971C
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _080896AA
_080896CA:
	lsls r0, r2, #0x18
	asrs r1, r0, #0x18
	adds r7, r0, #0
	cmp r1, #0x13
	ble _08089724
	b _0808971C
	.align 2, 0
_080896D8: .4byte gNonGameplayRam
_080896DC:
	movs r2, #0x13
	ldr r0, _08089720 @ =gNonGameplayRam
	movs r3, #0x9b
	lsls r3, r3, #3
	adds r1, r0, r3
	ldrb r1, [r1]
	mov ip, r0
	cmp r1, #0
	beq _08089714
	mov r3, ip
	movs r4, #0x8b
	lsls r4, r4, #2
_080896F4:
	lsls r0, r2, #0x18
	movs r1, #0xff
	lsls r1, r1, #0x18
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0
	blt _0808971C
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _080896F4
_08089714:
	lsls r0, r2, #0x18
	adds r7, r0, #0
	cmp r7, #0
	bge _08089724
_0808971C:
	movs r0, #0x14
	b _08089A5A
	.align 2, 0
_08089720: .4byte gNonGameplayRam
_08089724:
	movs r0, #0
	str r0, [sp]
	ldr r2, _0808978C @ =0x040000D4
	mov r3, sp
	str r3, [r2]
	asrs r1, r7, #0x18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r5, r0, #2
	ldr r3, _08089790 @ =0x030016A0
	adds r0, r5, r3
	str r0, [r2, #4]
	ldr r0, _08089794 @ =0x85000009
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	ldr r1, _08089798 @ =0xFFFFFDE4
	adds r0, r3, r1
	adds r2, r5, r0
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r2, r1
	movs r1, #0
	mov r8, r1
	mov r1, sb
	strh r1, [r0]
	ldr r1, _0808979C @ =0x0000022A
	adds r0, r2, r1
	mov r1, sl
	strh r1, [r0]
	movs r1, #0x8b
	lsls r1, r1, #2
	adds r0, r2, r1
	strb r6, [r0]
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r4, r2, r0
	ldrb r1, [r4]
	movs r0, #1
	orrs r1, r0
	strb r1, [r4]
	cmp r6, #1
	bne _080897A4
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _080897A0 @ =NewFileIntroProcessBslShip
	b _08089A56
	.align 2, 0
_0808978C: .4byte 0x040000D4
_08089790: .4byte 0x030016A0
_08089794: .4byte 0x85000009
_08089798: .4byte 0xFFFFFDE4
_0808979C: .4byte 0x0000022A
_080897A0: .4byte NewFileIntroProcessBslShip
_080897A4:
	cmp r6, #2
	bne _080897D4
	ldr r0, _080897C8 @ =0x00000222
	adds r1, r2, r0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _080897CC @ =0x08597F50
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _080897D0 @ =NewFileIntroProcessFlyingSamusShip
	b _08089A56
	.align 2, 0
_080897C8: .4byte 0x00000222
_080897CC: .4byte 0x08597F50
_080897D0: .4byte NewFileIntroProcessFlyingSamusShip
_080897D4:
	cmp r6, #3
	bne _08089804
	ldr r1, _080897F8 @ =0x00000236
	adds r2, r2, r1
	ldrb r0, [r2]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _080897FC @ =0x08597EC0
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08089800 @ =NewFileIntroProcessHorizontalParticle
	b _08089A56
	.align 2, 0
_080897F8: .4byte 0x00000236
_080897FC: .4byte 0x08597EC0
_08089800: .4byte NewFileIntroProcessHorizontalParticle
_08089804:
	cmp r6, #4
	bne _08089820
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808981C @ =unk_89090
	b _08089A56
	.align 2, 0
_0808981C: .4byte unk_89090
_08089820:
	cmp r6, #0xa
	bne _0808983C
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08089838 @ =NewFileIntroProcessSamusFainting
	b _08089A56
	.align 2, 0
_08089838: .4byte NewFileIntroProcessSamusFainting
_0808983C:
	cmp r6, #0x14
	bne _08089874
	ldr r0, _08089868 @ =0x00000222
	adds r1, r2, r0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	ldrb r0, [r4]
	movs r1, #6
	orrs r0, r1
	strb r0, [r4]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0808986C @ =0x08597F50
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08089870 @ =NewFileIntroProcessSamusDrifting
	b _08089A56
	.align 2, 0
_08089868: .4byte 0x00000222
_0808986C: .4byte 0x08597F50
_08089870: .4byte NewFileIntroProcessSamusDrifting
_08089874:
	cmp r6, #0x1e
	bne _080898C8
	movs r1, #0x87
	lsls r1, r1, #2
	adds r0, r2, r1
	mov r1, sb
	strh r1, [r0]
	ldr r1, _080898B8 @ =0x0000021E
	adds r0, r2, r1
	mov r1, sl
	strh r1, [r0]
	ldr r0, _080898BC @ =0x00000222
	adds r1, r2, r0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	ldrb r1, [r4]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r4]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _080898C0 @ =0x08597F88
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _080898C4 @ =NewFileIntroProcessSamusDriftingIntoAsteroids
	b _08089A56
	.align 2, 0
_080898B8: .4byte 0x0000021E
_080898BC: .4byte 0x00000222
_080898C0: .4byte 0x08597F88
_080898C4: .4byte NewFileIntroProcessSamusDriftingIntoAsteroids
_080898C8:
	cmp r6, #0x1f
	bne _080898F0
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _080898E8 @ =0x08597F88
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _080898EC @ =unk_89488
	b _08089A56
	.align 2, 0
_080898E8: .4byte 0x08597F88
_080898EC: .4byte unk_89488
_080898F0:
	cmp r6, #0x20
	bne _08089920
	movs r0, #0x88
	lsls r0, r0, #2
	adds r1, r2, r0
	ldr r0, _08089914 @ =0x0000FFD8
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08089918 @ =0x08597FE0
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808991C @ =NewFileIntroProcessSidewaysBslShip
	b _08089A56
	.align 2, 0
_08089914: .4byte 0x0000FFD8
_08089918: .4byte 0x08597FE0
_0808991C: .4byte NewFileIntroProcessSidewaysBslShip
_08089920:
	cmp r6, #0x21
	bne _08089950
	movs r0, #0x88
	lsls r0, r0, #2
	adds r1, r2, r0
	ldr r0, _08089944 @ =0x0000FFE2
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08089948 @ =0x08597FD0
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808994C @ =NewFileIntroProcessSidewaysBslShip
	b _08089A56
	.align 2, 0
_08089944: .4byte 0x0000FFE2
_08089948: .4byte 0x08597FD0
_0808994C: .4byte NewFileIntroProcessSidewaysBslShip
_08089950:
	cmp r6, #0x22
	bne _08089980
	asrs r0, r7, #0x18
	lsls r1, r0, #3
	adds r1, r1, r0
	lsls r1, r1, #2
	mov r2, ip
	adds r0, r1, r2
	movs r3, #0x88
	lsls r3, r3, #2
	adds r0, r0, r3
	ldr r2, _08089978 @ =0x0000FFEC
	strh r2, [r0]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, ip
	adds r0, r1, r0
	ldr r2, _0808997C @ =0x08597FC0
	b _080899A4
	.align 2, 0
_08089978: .4byte 0x0000FFEC
_0808997C: .4byte 0x08597FC0
_08089980:
	cmp r6, #0x23
	bne _080899C0
	asrs r0, r7, #0x18
	lsls r1, r0, #3
	adds r1, r1, r0
	lsls r1, r1, #2
	mov r2, ip
	adds r0, r1, r2
	movs r3, #0x88
	lsls r3, r3, #2
	adds r0, r0, r3
	ldr r2, _080899B4 @ =0x0000FFF6
	strh r2, [r0]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, ip
	adds r0, r1, r0
	ldr r2, _080899B8 @ =0x08597FB0
_080899A4:
	str r2, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, ip
	adds r1, r1, r0
	ldr r0, _080899BC @ =NewFileIntroProcessSidewaysBslShip
	str r0, [r1]
	b _08089A58
	.align 2, 0
_080899B4: .4byte 0x0000FFF6
_080899B8: .4byte 0x08597FB0
_080899BC: .4byte NewFileIntroProcessSidewaysBslShip
_080899C0:
	cmp r6, #0x24
	bne _08089A08
	asrs r0, r7, #0x18
	lsls r2, r0, #3
	adds r2, r2, r0
	lsls r2, r2, #2
	mov r0, ip
	adds r3, r2, r0
	ldr r1, _080899FC @ =0x00000236
	adds r3, r3, r1
	ldrb r1, [r3]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, ip
	adds r0, r2, r0
	ldr r1, _08089A00 @ =0x08597EC0
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, ip
	adds r2, r2, r0
	ldr r0, _08089A04 @ =NewFileIntroProcessDepthParticle
	str r0, [r2]
	b _08089A58
	.align 2, 0
_080899FC: .4byte 0x00000236
_08089A00: .4byte 0x08597EC0
_08089A04: .4byte NewFileIntroProcessDepthParticle
_08089A08:
	cmp r6, #0xc8
	bne _08089A34
	asrs r1, r7, #0x18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	movs r1, #0x8e
	lsls r1, r1, #2
	add r1, ip
	adds r1, r0, r1
	ldr r2, _08089A2C @ =0x08613180
	str r2, [r1]
	movs r1, #0x8f
	lsls r1, r1, #2
	add r1, ip
	adds r0, r0, r1
	ldr r1, _08089A30 @ =NewFileIntroProcessTextCursor
	b _08089A56
	.align 2, 0
_08089A2C: .4byte 0x08613180
_08089A30: .4byte NewFileIntroProcessTextCursor
_08089A34:
	cmp r6, #0xc9
	bne _08089A58
	asrs r1, r7, #0x18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	movs r1, #0x8e
	lsls r1, r1, #2
	add r1, ip
	adds r1, r0, r1
	ldr r2, _08089A6C @ =0x08613180
	str r2, [r1]
	movs r1, #0x8f
	lsls r1, r1, #2
	add r1, ip
	adds r0, r0, r1
	ldr r1, _08089A70 @ =unk_89ab0
_08089A56:
	str r1, [r0]
_08089A58:
	lsrs r0, r7, #0x18
_08089A5A:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08089A6C: .4byte 0x08613180
_08089A70: .4byte unk_89ab0

	thumb_func_start unk_89a74
unk_89a74: @ 0x08089A74
	push {r4, lr}
	adds r4, r3, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #1
	bl NewFileIntroSetupOam
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08089AAC @ =gNonGameplayRam
	lsls r1, r0, #3
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	movs r0, #0x89
	lsls r0, r0, #2
	adds r1, r1, r0
	strh r4, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08089AAC: .4byte gNonGameplayRam

	thumb_func_start unk_89ab0
unk_89ab0: @ 0x08089AB0
	bx lr
	.align 2, 0

	thumb_func_start NewFileIntroSr388PreviewInit
NewFileIntroSr388PreviewInit: @ 0x08089AB4
	push {r4, r5, lr}
	sub sp, #4
	ldr r5, _08089C5C @ =unk_99940
	adds r0, r5, #0
	bl CallbackSetVBlank
	movs r0, #0
	str r0, [sp]
	ldr r4, _08089C60 @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r0, _08089C64 @ =gNonGameplayRam
	str r0, [r4, #4]
	ldr r0, _08089C68 @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08089C6C @ =0x0859A1B8
	ldr r1, _08089C70 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _08089C74 @ =0x0859D900
	str r0, [r4]
	ldr r0, _08089C78 @ =0x05000200
	str r0, [r4, #4]
	ldr r0, _08089C7C @ =0x84000080
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08089C80 @ =0x08613148
	str r0, [r4]
	ldr r0, _08089C84 @ =0x06017FE0
	str r0, [r4, #4]
	ldr r1, _08089C88 @ =0x84000008
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08089C8C @ =0x086131A8
	str r0, [r4]
	ldr r0, _08089C90 @ =0x050003E0
	str r0, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	adds r0, r5, #0
	bl CallbackSetVBlank
	movs r4, #0
	ldr r5, _08089C94 @ =0x0879C3C8
_08089B0E:
	lsls r0, r4, #2
	adds r0, r0, r5
	ldr r0, [r0]
	lsls r1, r4, #0xc
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r1, r1, r2
	bl LZ77UncompVram
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #7
	bls _08089B0E
	ldr r0, _08089C98 @ =0x08598D2C
	ldr r1, _08089C9C @ =0x0600E800
	bl LZ77UncompVram
	movs r4, #0
	ldr r5, _08089CA0 @ =0x0879C3E8
_08089B36:
	lsls r0, r4, #2
	adds r0, r0, r5
	ldr r0, [r0]
	lsls r1, r4, #0xc
	ldr r3, _08089CA4 @ =0x06008000
	adds r1, r1, r3
	bl LZ77UncompVram
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #4
	bls _08089B36
	ldr r0, _08089CA8 @ =0x085995C8
	ldr r1, _08089CAC @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _08089CB0 @ =0x085999EC
	ldr r1, _08089CB4 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _08089CB8 @ =0x08598898
	ldr r1, _08089CBC @ =0x0600E000
	bl LZ77UncompVram
	ldr r1, _08089C60 @ =0x040000D4
	ldr r0, _08089CC0 @ =0x08598B2C
	str r0, [r1]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08089C7C @ =0x84000080
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	subs r1, #0xcc
	ldr r2, _08089CC4 @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r3, _08089CC8 @ =0x00001D01
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _08089CCC @ =0x00001E0A
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r3, _08089CD0 @ =0x00001F0B
	adds r0, r3, #0
	strh r0, [r1]
	ldr r0, _08089CD4 @ =gBg1XPosition
	movs r2, #0
	strh r2, [r0]
	ldr r0, _08089CD8 @ =gBg1YPosition
	strh r2, [r0]
	ldr r4, _08089CDC @ =0x0300122C
	movs r0, #0x10
	strh r0, [r4]
	ldr r0, _08089CE0 @ =0x0300122E
	strh r2, [r0]
	ldr r0, _08089CE4 @ =0x03001230
	strh r2, [r0]
	ldr r0, _08089CE8 @ =0x03001232
	strh r2, [r0]
	adds r1, #2
	ldr r3, _08089CEC @ =0x0000FFF8
	adds r0, r3, #0
	strh r0, [r1]
	ldr r0, _08089CF0 @ =0x04000012
	strh r2, [r0]
	movs r0, #0x32
	movs r1, #0xfa
	movs r2, #0xc8
	bl NewFileIntroSr388SetupOam
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSr388SetupOam
	movs r0, #0
	ldrsh r1, [r4, r0]
	movs r0, #2
	movs r2, #0
	bl NewFileIntroSr388SetupOam
	movs r3, #0xc
	rsbs r3, r3, #0
	movs r0, #3
	movs r1, #0xfa
	movs r2, #0x64
	bl NewFileIntroSetupSr388PreviewAsteroid
	movs r3, #8
	rsbs r3, r3, #0
	movs r0, #4
	movs r1, #0x96
	movs r2, #0xa
	bl NewFileIntroSetupSr388PreviewAsteroid
	movs r3, #6
	rsbs r3, r3, #0
	movs r0, #5
	movs r1, #0x32
	movs r2, #0x3c
	bl NewFileIntroSetupSr388PreviewAsteroid
	movs r3, #0x14
	rsbs r3, r3, #0
	movs r0, #6
	movs r1, #0xbe
	movs r2, #0x82
	bl NewFileIntroSetupSr388PreviewAsteroid
	movs r1, #0x8c
	lsls r1, r1, #1
	movs r3, #0xa
	rsbs r3, r3, #0
	movs r0, #5
	movs r2, #0x1e
	bl NewFileIntroSetupSr388PreviewAsteroid
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r1, _08089C64 @ =gNonGameplayRam
	ldr r0, _08089CF4 @ =0x0863A19C
	str r0, [r1]
	movs r0, #4
	movs r1, #0xd
	bl PlayMusic
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xe0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08089CF8 @ =NewFileIntroSr388PreviewVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08089C5C: .4byte unk_99940
_08089C60: .4byte 0x040000D4
_08089C64: .4byte gNonGameplayRam
_08089C68: .4byte 0x85000150
_08089C6C: .4byte 0x0859A1B8
_08089C70: .4byte 0x06010000
_08089C74: .4byte 0x0859D900
_08089C78: .4byte 0x05000200
_08089C7C: .4byte 0x84000080
_08089C80: .4byte 0x08613148
_08089C84: .4byte 0x06017FE0
_08089C88: .4byte 0x84000008
_08089C8C: .4byte 0x086131A8
_08089C90: .4byte 0x050003E0
_08089C94: .4byte 0x0879C3C8
_08089C98: .4byte 0x08598D2C
_08089C9C: .4byte 0x0600E800
_08089CA0: .4byte 0x0879C3E8
_08089CA4: .4byte 0x06008000
_08089CA8: .4byte 0x085995C8
_08089CAC: .4byte 0x0600F800
_08089CB0: .4byte 0x085999EC
_08089CB4: .4byte 0x0600F000
_08089CB8: .4byte 0x08598898
_08089CBC: .4byte 0x0600E000
_08089CC0: .4byte 0x08598B2C
_08089CC4: .4byte 0x00001C08
_08089CC8: .4byte 0x00001D01
_08089CCC: .4byte 0x00001E0A
_08089CD0: .4byte 0x00001F0B
_08089CD4: .4byte gBg1XPosition
_08089CD8: .4byte gBg1YPosition
_08089CDC: .4byte 0x0300122C
_08089CE0: .4byte 0x0300122E
_08089CE4: .4byte 0x03001230
_08089CE8: .4byte 0x03001232
_08089CEC: .4byte 0x0000FFF8
_08089CF0: .4byte 0x04000012
_08089CF4: .4byte 0x0863A19C
_08089CF8: .4byte NewFileIntroSr388PreviewVblank

	thumb_func_start NewFileIntroSr388PreviewProcess
NewFileIntroSr388PreviewProcess: @ 0x08089CFC
	push {r4, r5, r6, lr}
	sub sp, #4
	movs r5, #0
	ldr r2, _08089D2C @ =gNonGameplayRam
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r3, #0x85
	lsls r3, r3, #2
	adds r0, r2, r3
	ldrb r0, [r0]
	adds r4, r2, #0
	cmp r0, #6
	bls _08089D20
	b _0808A034
_08089D20:
	lsls r0, r0, #2
	ldr r1, _08089D30 @ =_08089D34
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08089D2C: .4byte gNonGameplayRam
_08089D30: .4byte _08089D34
_08089D34: @ jump table
	.4byte _08089D50 @ case 0
	.4byte _08089E20 @ case 1
	.4byte _08089EA0 @ case 2
	.4byte _08089ED0 @ case 3
	.4byte _08089F10 @ case 4
	.4byte _08089FAC @ case 5
	.4byte _08089FD0 @ case 6
_08089D50:
	movs r6, #0x84
	lsls r6, r6, #2
	adds r1, r4, r6
	ldrh r0, [r1]
	cmp r0, #1
	bne _08089D90
	movs r0, #0
	str r0, [sp]
	ldr r1, _08089D84 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r0, _08089D88 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _08089D8C @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	b _08089FC6
	.align 2, 0
_08089D84: .4byte 0x040000D4
_08089D88: .4byte 0x0600D000
_08089D8C: .4byte 0x85000400
_08089D90:
	cmp r0, #0x32
	bne _08089DC4
	ldr r6, _08089DB8 @ =0x00000212
	adds r1, r4, r6
	movs r0, #0
	strb r0, [r1]
	strh r0, [r4, #0xe]
	strh r0, [r4, #0xc]
	ldr r1, _08089DBC @ =0x0879C5A4
	ldr r0, _08089DC0 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x20]
	str r0, [r4]
	b _08089FC6
	.align 2, 0
_08089DB8: .4byte 0x00000212
_08089DBC: .4byte 0x0879C5A4
_08089DC0: .4byte 0x03000011
_08089DC4:
	cmp r0, #0x3a
	bne _08089DE0
_08089DC8:
	ldr r1, _08089DD8 @ =0x03001220
	movs r0, #0
	strh r0, [r1]
	ldr r1, _08089DDC @ =0x03001222
	movs r0, #0x10
	strh r0, [r1]
	b _08089FC6
	.align 2, 0
_08089DD8: .4byte 0x03001220
_08089DDC: .4byte 0x03001222
_08089DE0:
	cmp r0, #0x3b
	bne _08089DF4
	ldr r1, _08089DF0 @ =0x04000050
	movs r2, #0xc4
	lsls r2, r2, #4
	adds r0, r2, #0
	strh r0, [r1]
	b _08089FC6
	.align 2, 0
_08089DF0: .4byte 0x04000050
_08089DF4:
	cmp r0, #0x3c
	beq _08089DFA
	b _08089FC6
_08089DFA:
	movs r0, #0
	strh r0, [r1]
	ldr r0, _08089E1C @ =0x0300122C
	ldrh r1, [r0]
	adds r1, #0x5c
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r0, #9
	movs r2, #0x40
	bl NewFileIntroSr388SetupOam
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r4, r3
	movs r0, #1
	b _08089FC4
	.align 2, 0
_08089E1C: .4byte 0x0300122C
_08089E20:
	movs r6, #0x84
	lsls r6, r6, #2
	adds r1, r4, r6
	ldrh r0, [r1]
	cmp r0, #2
	bne _08089E3C
	movs r0, #0
	strh r0, [r1]
	ldr r1, _08089E7C @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _08089E3C
	adds r0, #1
	strh r0, [r1]
_08089E3C:
	ldr r0, [r4]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _08089E64
	ldr r0, _08089E80 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08089E64
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _08089E64
	movs r0, #1
	strb r0, [r1]
_08089E64:
	movs r1, #0x86
	lsls r1, r1, #2
	adds r2, r4, r1
	ldrb r0, [r2]
	cmp r0, #2
	beq _08089E74
	cmp r0, #4
	bne _08089E84
_08089E74:
	movs r0, #0
	strb r0, [r2]
	b _08089FC6
	.align 2, 0
_08089E7C: .4byte 0x03001220
_08089E80: .4byte gChangedInput
_08089E84:
	cmp r0, #3
	beq _08089E8A
	b _08089FC6
_08089E8A:
	movs r1, #0
	strb r1, [r2]
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r4, r2
	strh r1, [r0]
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r4, r3
	movs r0, #2
	b _08089FC4
_08089EA0:
	movs r6, #0x84
	lsls r6, r6, #2
	adds r1, r4, r6
	ldrh r0, [r1]
	cmp r0, #2
	beq _08089EAE
	b _08089FC6
_08089EAE:
	movs r0, #0
	strh r0, [r1]
	ldr r1, _08089ECC @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0
	bne _08089F98
	movs r0, #9
	bl SpecialCutsceneDestroyOamOfType
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #3
	b _08089FC4
	.align 2, 0
_08089ECC: .4byte 0x03001220
_08089ED0:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r3, r4, r1
	ldrh r0, [r3]
	cmp r0, #1
	bne _08089EDE
	b _08089DC8
_08089EDE:
	cmp r0, #2
	bne _08089FC6
	ldr r1, _08089F08 @ =0x04000050
	ldr r2, _08089F0C @ =0x00003C42
	adds r0, r2, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r6, #0x80
	lsls r6, r6, #2
	adds r1, r6, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	strh r0, [r3]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #4
	b _08089FC4
	.align 2, 0
_08089F08: .4byte 0x04000050
_08089F0C: .4byte 0x00003C42
_08089F10:
	ldr r0, _08089F54 @ =0x03001220
	ldrh r0, [r0]
	cmp r0, #0x10
	bne _08089F68
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _08089F58 @ =0x0000F3FF
	ands r0, r1
	strh r0, [r2]
	ldr r1, _08089F5C @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	ldr r1, _08089F60 @ =gNonGameplayRam
	movs r3, #0x84
	lsls r3, r3, #2
	adds r2, r1, r3
	movs r3, #0
	movs r0, #0
	strh r0, [r2]
	ldr r6, _08089F64 @ =0x00000213
	adds r0, r1, r6
	strb r3, [r0]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r1, r0
	movs r0, #5
	strb r0, [r1]
	movs r0, #0xa
	movs r1, #0x80
	movs r2, #0xd2
	bl NewFileIntroSr388SetupOam
	b _08089F76
	.align 2, 0
_08089F54: .4byte 0x03001220
_08089F58: .4byte 0x0000F3FF
_08089F5C: .4byte 0x04000050
_08089F60: .4byte gNonGameplayRam
_08089F64: .4byte 0x00000213
_08089F68:
	cmp r0, #2
	bne _08089F76
	movs r0, #7
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSr388SetupOam
_08089F76:
	ldr r0, _08089FA0 @ =gNonGameplayRam
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r0, r2
	ldrh r0, [r1]
	cmp r0, #7
	bne _08089FC6
	movs r0, #0
	strh r0, [r1]
	ldr r1, _08089FA4 @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _08089FC6
	adds r0, #1
	strh r0, [r1]
	ldr r1, _08089FA8 @ =0x03001222
	ldrh r0, [r1]
_08089F98:
	subs r0, #1
	strh r0, [r1]
	b _08089FC6
	.align 2, 0
_08089FA0: .4byte gNonGameplayRam
_08089FA4: .4byte 0x03001220
_08089FA8: .4byte 0x03001222
_08089FAC:
	movs r3, #0x84
	lsls r3, r3, #2
	adds r1, r4, r3
	ldrh r0, [r1]
	cmp r0, #0x46
	bne _08089FC6
	movs r0, #0
	strh r0, [r1]
	movs r6, #0x85
	lsls r6, r6, #2
	adds r1, r4, r6
	movs r0, #6
_08089FC4:
	strb r0, [r1]
_08089FC6:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _0808A034
_08089FD0:
	ldr r0, _08089FF4 @ =0x00000213
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	movs r3, #0
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08089FF8 @ =gWrittenToBldy
	cmp r0, #4
	bne _0808A010
	strb r3, [r1]
	ldrh r0, [r2]
	cmp r0, #0xf
	bhi _08089FFC
	adds r0, #1
	strh r0, [r2]
	b _0808A010
	.align 2, 0
_08089FF4: .4byte 0x00000213
_08089FF8: .4byte gWrittenToBldy
_08089FFC:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #0
	strh r3, [r0]
	movs r3, #0x85
	lsls r3, r3, #2
	adds r0, r4, r3
	strb r1, [r0]
	movs r5, #1
_0808A010:
	ldrh r0, [r2]
	cmp r0, #0xf
	bls _0808A02C
	movs r6, #0x84
	lsls r6, r6, #2
	adds r1, r4, r6
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	strb r2, [r0]
	movs r5, #1
_0808A02C:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_0808A034:
	bl IntroProcessText
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start NewFileIntroSr388Preview
NewFileIntroSr388Preview: @ 0x0808A044
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _0808A05C @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _0808A074
	cmp r0, #1
	bgt _0808A060
	cmp r0, #0
	beq _0808A06A
	b _0808A0E8
	.align 2, 0
_0808A05C: .4byte gNonGameplayRam
_0808A060:
	cmp r0, #2
	beq _0808A0AC
	cmp r0, #3
	beq _0808A0C8
	b _0808A0E8
_0808A06A:
	bl NewFileIntroSr388PreviewInit
	movs r0, #1
	strh r0, [r4, #8]
	b _0808A0E8
_0808A074:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	ldr r3, _0808A0A0 @ =gWrittenToBldy
	ldrh r2, [r3]
	cmp r2, #0
	beq _0808A0A4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bls _0808A0E8
	strh r5, [r1]
	subs r0, r2, #1
	strh r0, [r3]
	b _0808A0E8
	.align 2, 0
_0808A0A0: .4byte gWrittenToBldy
_0808A0A4:
	strh r5, [r1]
	movs r0, #2
	strh r0, [r4, #8]
	b _0808A0E8
_0808A0AC:
	bl NewFileIntroSr388PreviewProcess
	cmp r0, #0
	beq _0808A0E8
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	strb r5, [r0]
	subs r1, #1
	adds r0, r4, r1
	strb r5, [r0]
	movs r0, #3
	strh r0, [r4, #8]
	b _0808A0E8
_0808A0C8:
	ldr r1, _0808A0D8 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0808A0DC
	adds r0, #1
	strh r0, [r1]
	b _0808A0E0
	.align 2, 0
_0808A0D8: .4byte gWrittenToBldy
_0808A0DC:
	strh r5, [r4, #8]
	movs r5, #1
_0808A0E0:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_0808A0E8:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start unk_8a0f0
unk_8a0f0: @ 0x0808A0F0
	push {r4, lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0x12]
	adds r0, #1
	movs r3, #0
	strb r0, [r1, #0x12]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x24
	bne _0808A106
	strb r3, [r1, #0x12]
_0808A106:
	ldr r2, _0808A128 @ =0x03001230
	ldrh r0, [r1, #0xc]
	strh r0, [r2]
	ldr r0, _0808A12C @ =gNonGameplayRam
	movs r4, #0x85
	lsls r4, r4, #2
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #5
	bne _0808A120
	movs r0, #0
	strh r3, [r2]
	strb r0, [r1, #0x10]
_0808A120:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808A128: .4byte 0x03001230
_0808A12C: .4byte gNonGameplayRam

	thumb_func_start unk_8a130
unk_8a130: @ 0x0808A130
	push {r4, lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0x12]
	adds r0, #1
	movs r3, #0
	strb r0, [r1, #0x12]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1d
	bne _0808A146
	strb r3, [r1, #0x12]
_0808A146:
	ldr r2, _0808A168 @ =0x0300122C
	ldrh r0, [r1, #0xc]
	strh r0, [r2]
	ldr r0, _0808A16C @ =gNonGameplayRam
	movs r4, #0x85
	lsls r4, r4, #2
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #5
	bne _0808A160
	movs r0, #0
	strh r3, [r2]
	strb r0, [r1, #0x10]
_0808A160:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808A168: .4byte 0x0300122C
_0808A16C: .4byte gNonGameplayRam

	thumb_func_start NewFileIntroProcessSr388PreviewAsteroid
NewFileIntroProcessSr388PreviewAsteroid: @ 0x0808A170
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _0808A188
	ldrh r0, [r2, #0xc]
	strh r0, [r2]
	ldrh r0, [r2, #0xe]
	strh r0, [r2, #2]
	movs r0, #1
	strb r0, [r2, #0x14]
	b _0808A1B8
_0808A188:
	cmp r0, #1
	bne _0808A1B8
	ldrh r0, [r2, #0xa]
	adds r0, #1
	strh r0, [r2, #0xa]
	movs r0, #8
	ldrsh r1, [r2, r0]
	ldrh r0, [r2, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #6
	ldrh r1, [r2]
	adds r0, r0, r1
	strh r0, [r2, #0xc]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x28
	rsbs r1, r1, #0
	cmp r0, r1
	bge _0808A1B8
	movs r0, #0x8c
	lsls r0, r0, #1
	strh r0, [r2]
	movs r0, #0
	strh r0, [r2, #0xa]
_0808A1B8:
	ldr r0, _0808A1D8 @ =gNonGameplayRam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #5
	bne _0808A1D2
	movs r0, #0
	strb r0, [r2, #0x10]
	ldrb r1, [r2, #0x18]
	subs r0, #2
	ands r0, r1
	strb r0, [r2, #0x18]
_0808A1D2:
	pop {r0}
	bx r0
	.align 2, 0
_0808A1D8: .4byte gNonGameplayRam

	thumb_func_start unk_8a1dc
unk_8a1dc: @ 0x0808A1DC
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0x12]
	adds r0, #1
	strb r0, [r1, #0x12]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0808A1FC
	movs r0, #0
	strb r0, [r1, #0x12]
	ldrh r0, [r1, #4]
	adds r0, #1
	strh r0, [r1, #4]
	ldr r1, _0808A200 @ =gBg1YPosition
	strh r0, [r1]
_0808A1FC:
	pop {r0}
	bx r0
	.align 2, 0
_0808A200: .4byte gBg1YPosition

	thumb_func_start unk_8a204
unk_8a204: @ 0x0808A204
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #0xa]
	adds r0, #1
	strh r0, [r4, #0xa]
	ldrb r0, [r4, #0x13]
	adds r0, #1
	strb r0, [r4, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x15
	bne _0808A220
	movs r0, #0
	strb r0, [r4, #0x13]
_0808A220:
	ldrh r0, [r4, #0xa]
	cmp r0, #0x6e
	bne _0808A23A
	ldrh r1, [r4, #0xc]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #9
	bl NewFileIntroSr388SetupOam
	b _0808A244
_0808A23A:
	movs r1, #0xfa
	lsls r1, r1, #2
	cmp r0, r1
	bls _0808A244
	strh r1, [r4, #0xa]
_0808A244:
	ldr r0, _0808A264 @ =gNonGameplayRam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #5
	bne _0808A25E
	movs r0, #0
	strb r0, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	subs r0, #2
	ands r0, r1
	strb r0, [r4, #0x18]
_0808A25E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808A264: .4byte gNonGameplayRam

	thumb_func_start NewFileIntroProcessSunReflection
NewFileIntroProcessSunReflection: @ 0x0808A268
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x13]
	adds r0, #1
	movs r1, #0
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1d
	bne _0808A27E
	strb r1, [r2, #0x13]
_0808A27E:
	ldr r0, _0808A29C @ =gNonGameplayRam
	movs r3, #0x85
	lsls r3, r3, #2
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #5
	bne _0808A298
	strb r1, [r2, #0x10]
	ldrb r1, [r2, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x18]
_0808A298:
	pop {r0}
	bx r0
	.align 2, 0
_0808A29C: .4byte gNonGameplayRam

	thumb_func_start NewFileIntroProcessSr388Rocks
NewFileIntroProcessSr388Rocks: @ 0x0808A2A0
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0x13]
	adds r0, #1
	strb r0, [r1, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0808A2BC
	movs r0, #0
	strb r0, [r1, #0x13]
	ldrh r0, [r1, #0xe]
	subs r0, #1
	strh r0, [r1, #0xe]
_0808A2BC:
	movs r2, #0xe
	ldrsh r0, [r1, r2]
	cmp r0, #0xa0
	bgt _0808A2C8
	ldr r0, _0808A2CC @ =0x0859A0F0
	str r0, [r1, #0x1c]
_0808A2C8:
	pop {r0}
	bx r0
	.align 2, 0
_0808A2CC: .4byte 0x0859A0F0

	thumb_func_start NewFileIntroSr388SetupOam
NewFileIntroSr388SetupOam: @ 0x0808A2D0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sb, r2
	movs r7, #0
	ldr r1, _0808A320 @ =gNonGameplayRam
	movs r2, #0x8b
	lsls r2, r2, #2
	adds r0, r1, r2
	ldrb r0, [r0]
	mov r8, r1
	cmp r0, #0
	beq _0808A318
	mov r4, r8
	adds r1, r2, #0
_0808A2FE:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0x13
	bhi _0808A31C
	lsls r0, r7, #3
	adds r0, r0, r7
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808A2FE
_0808A318:
	cmp r7, #0x13
	bls _0808A324
_0808A31C:
	movs r0, #0x14
	b _0808A556
	.align 2, 0
_0808A320: .4byte gNonGameplayRam
_0808A324:
	movs r0, #0
	str r0, [sp]
	ldr r1, _0808A388 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	lsls r2, r7, #3
	adds r0, r2, r7
	lsls r5, r0, #2
	ldr r4, _0808A38C @ =0x030016A0
	mov ip, r4
	adds r0, r5, r4
	str r0, [r1, #4]
	ldr r0, _0808A390 @ =0x85000009
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _0808A394 @ =0xFFFFFDE4
	add r0, ip
	adds r4, r5, r0
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r4, r1
	strh r6, [r0]
	adds r1, #2
	adds r0, r4, r1
	mov r1, sb
	strh r1, [r0]
	movs r1, #0x8b
	lsls r1, r1, #2
	adds r0, r4, r1
	strb r3, [r0]
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r6, r4, r0
	ldrb r1, [r6]
	movs r0, #1
	orrs r1, r0
	strb r1, [r6]
	cmp r3, #1
	bne _0808A39C
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r6]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808A398 @ =unk_8a0f0
	str r1, [r0]
	b _0808A554
	.align 2, 0
_0808A388: .4byte 0x040000D4
_0808A38C: .4byte 0x030016A0
_0808A390: .4byte 0x85000009
_0808A394: .4byte 0xFFFFFDE4
_0808A398: .4byte unk_8a0f0
_0808A39C:
	cmp r3, #2
	bne _0808A3B8
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r6]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808A3B4 @ =unk_8a130
	str r1, [r0]
	b _0808A554
	.align 2, 0
_0808A3B4: .4byte unk_8a130
_0808A3B8:
	cmp r3, #3
	bne _0808A3E0
	ldr r1, _0808A3D8 @ =0x00000236
	adds r2, r4, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0808A3DC @ =0x0859A0A0
	b _0808A44E
	.align 2, 0
_0808A3D8: .4byte 0x00000236
_0808A3DC: .4byte 0x0859A0A0
_0808A3E0:
	cmp r3, #4
	bne _0808A408
	ldr r0, _0808A400 @ =0x00000236
	adds r2, r4, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0808A404 @ =0x0859A0B0
	b _0808A44E
	.align 2, 0
_0808A400: .4byte 0x00000236
_0808A404: .4byte 0x0859A0B0
_0808A408:
	cmp r3, #5
	bne _0808A430
	ldr r1, _0808A428 @ =0x00000236
	adds r2, r4, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0808A42C @ =0x0859A0C0
	b _0808A44E
	.align 2, 0
_0808A428: .4byte 0x00000236
_0808A42C: .4byte 0x0859A0C0
_0808A430:
	cmp r3, #6
	bne _0808A468
	ldr r0, _0808A45C @ =0x00000236
	adds r2, r4, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0808A460 @ =0x0859A0D0
_0808A44E:
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808A464 @ =NewFileIntroProcessSr388PreviewAsteroid
	str r1, [r0]
	b _0808A554
	.align 2, 0
_0808A45C: .4byte 0x00000236
_0808A460: .4byte 0x0859A0D0
_0808A464: .4byte NewFileIntroProcessSr388PreviewAsteroid
_0808A468:
	cmp r3, #7
	bne _0808A484
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r6]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808A480 @ =unk_8a1dc
	str r1, [r0]
	b _0808A554
	.align 2, 0
_0808A480: .4byte unk_8a1dc
_0808A484:
	cmp r3, #8
	bne _0808A4B8
	ldr r1, _0808A4AC @ =0x00000236
	adds r2, r4, r1
	ldrb r0, [r2]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0808A4B0 @ =0x0859A100
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808A4B4 @ =unk_8a204
	str r1, [r0]
	b _0808A554
	.align 2, 0
_0808A4AC: .4byte 0x00000236
_0808A4B0: .4byte 0x0859A100
_0808A4B4: .4byte unk_8a204
_0808A4B8:
	cmp r3, #9
	bne _0808A4FC
	movs r0, #0x19
	rsbs r0, r0, #0
	ands r1, r0
	movs r3, #8
	orrs r1, r3
	strb r1, [r6]
	ldr r0, _0808A4F0 @ =0x00000236
	adds r2, r4, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r3
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0808A4F4 @ =0x0859A0E0
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808A4F8 @ =NewFileIntroProcessSunReflection
	str r1, [r0]
	b _0808A554
	.align 2, 0
_0808A4F0: .4byte 0x00000236
_0808A4F4: .4byte 0x0859A0E0
_0808A4F8: .4byte NewFileIntroProcessSunReflection
_0808A4FC:
	cmp r3, #0xa
	bne _0808A534
	ldr r1, _0808A528 @ =0x00000236
	adds r2, r4, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0808A52C @ =0x0859A168
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808A530 @ =NewFileIntroProcessSr388Rocks
	str r1, [r0]
	b _0808A554
	.align 2, 0
_0808A528: .4byte 0x00000236
_0808A52C: .4byte 0x0859A168
_0808A530: .4byte NewFileIntroProcessSr388Rocks
_0808A534:
	cmp r3, #0x32
	bne _0808A554
	adds r2, r2, r7
	lsls r2, r2, #2
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r2, r0
	ldr r1, _0808A564 @ =0x08613180
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, r8
	adds r2, r2, r0
	ldr r0, _0808A568 @ =NewFileIntroProcessTextCursor
	str r0, [r2]
_0808A554:
	adds r0, r7, #0
_0808A556:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808A564: .4byte 0x08613180
_0808A568: .4byte NewFileIntroProcessTextCursor

	thumb_func_start NewFileIntroSetupSr388PreviewAsteroid
NewFileIntroSetupSr388PreviewAsteroid: @ 0x0808A56C
	push {r4, lr}
	adds r4, r3, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl NewFileIntroSr388SetupOam
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0808A5A0 @ =gNonGameplayRam
	lsls r1, r0, #3
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	movs r0, #0x89
	lsls r0, r0, #2
	adds r1, r1, r0
	strh r4, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808A5A0: .4byte gNonGameplayRam

	thumb_func_start NewFileIntroSr388PreviewVblank
NewFileIntroSr388PreviewVblank: @ 0x0808A5A4
	ldr r1, _0808A600 @ =0x040000D4
	ldr r0, _0808A604 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _0808A608 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _0808A60C @ =0x04000052
	ldr r0, _0808A610 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0808A614 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0808A618 @ =0x04000054
	ldr r0, _0808A61C @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x40
	ldr r0, _0808A620 @ =gBg1XPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808A624 @ =gBg1YPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808A628 @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808A62C @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808A630 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808A634 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_0808A600: .4byte 0x040000D4
_0808A604: .4byte gOamData
_0808A608: .4byte 0x84000100
_0808A60C: .4byte 0x04000052
_0808A610: .4byte 0x03001222
_0808A614: .4byte 0x03001220
_0808A618: .4byte 0x04000054
_0808A61C: .4byte gWrittenToBldy
_0808A620: .4byte gBg1XPosition
_0808A624: .4byte gBg1YPosition
_0808A628: .4byte 0x0300122C
_0808A62C: .4byte 0x0300122E
_0808A630: .4byte 0x03001230
_0808A634: .4byte 0x03001232

	thumb_func_start NewFileIntroInSr388Init
NewFileIntroInSr388Init: @ 0x0808A638
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	ldr r0, _0808A7D8 @ =unk_99940
	bl CallbackSetVBlank
	movs r5, #0
	str r5, [sp]
	ldr r4, _0808A7DC @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r1, _0808A7E0 @ =gNonGameplayRam
	mov r8, r1
	str r1, [r4, #4]
	ldr r0, _0808A7E4 @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808A7E8 @ =0x0859DB08
	ldr r1, _0808A7EC @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _0808A7F0 @ =0x085A1D78
	str r0, [r4]
	ldr r0, _0808A7F4 @ =0x05000200
	str r0, [r4, #4]
	ldr r6, _0808A7F8 @ =0x84000080
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808A7FC @ =0x08613148
	str r0, [r4]
	ldr r0, _0808A800 @ =0x06017FE0
	str r0, [r4, #4]
	ldr r1, _0808A804 @ =0x84000008
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808A808 @ =0x086131A8
	str r0, [r4]
	ldr r0, _0808A80C @ =0x050003E0
	str r0, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808A810 @ =0x085A44CC
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _0808A814 @ =0x085A86C8
	ldr r1, _0808A818 @ =0x0600E800
	bl LZ77UncompVram
	ldr r0, _0808A81C @ =0x085A83B8
	ldr r1, _0808A820 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _0808A824 @ =0x08598898
	ldr r1, _0808A828 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _0808A82C @ =0x085A9044
	ldr r1, _0808A830 @ =0x0600C000
	bl LZ77UncompVram
	ldr r0, _0808A834 @ =0x085A8E44
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r3, _0808A838 @ =0x04000010
	strh r5, [r3]
	ldr r2, _0808A83C @ =0x04000012
	strh r5, [r2]
	ldr r0, _0808A840 @ =0x04000014
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r1, _0808A844 @ =0x04000008
	ldr r6, _0808A848 @ =0x00001C08
	adds r0, r6, #0
	strh r0, [r1]
	adds r1, #2
	ldr r7, _0808A84C @ =0x00005801
	adds r0, r7, #0
	strh r0, [r1]
	adds r1, #2
	ldr r6, _0808A850 @ =0x00005D01
	adds r0, r6, #0
	strh r0, [r1]
	adds r1, #2
	ldr r7, _0808A854 @ =0x00001F03
	adds r0, r7, #0
	strh r0, [r1]
	ldr r6, _0808A858 @ =0x0300122C
	movs r0, #0x88
	strh r0, [r6]
	ldr r0, _0808A85C @ =0x0300122E
	strh r5, [r0]
	ldr r0, _0808A860 @ =0x03001230
	strh r5, [r0]
	ldr r1, _0808A864 @ =gBg1XPosition
	movs r0, #0xc4
	lsls r0, r0, #1
	strh r0, [r1]
	ldr r1, _0808A868 @ =gBg1YPosition
	adds r0, r5, #0
	subs r0, #0x60
	strh r0, [r1]
	ldr r1, _0808A86C @ =0x03001234
	movs r7, #0x8c
	lsls r7, r7, #2
	adds r0, r7, #0
	strh r0, [r1]
	ldr r1, _0808A870 @ =0x03001236
	ldr r7, _0808A874 @ =0x0000FFD8
	adds r0, r7, #0
	strh r0, [r1]
	ldr r1, _0808A878 @ =0x0000FFF8
	adds r0, r1, #0
	strh r0, [r3]
	strh r5, [r2]
	movs r0, #0x32
	movs r1, #0xfa
	movs r2, #0xc8
	bl NewFileIntroInSr388SetupOam
	movs r0, #0xff
	movs r1, #0
	movs r2, #0
	bl NewFileIntroInSr388SetupOam
	movs r0, #0xff
	movs r1, #0
	movs r2, #0
	bl NewFileIntroInSr388SetupOam
	movs r0, #1
	movs r1, #0xea
	movs r2, #0xc8
	bl NewFileIntroInSr388SetupOam
	movs r1, #0x90
	lsls r1, r1, #1
	movs r0, #2
	movs r2, #0xc8
	bl NewFileIntroInSr388SetupOam
	movs r1, #0x9c
	lsls r1, r1, #1
	movs r0, #3
	movs r2, #0x64
	bl NewFileIntroInSr388SetupOam
	movs r0, #0xb
	movs r1, #0
	movs r2, #0
	bl NewFileIntroInSr388SetupOam
	ldrh r0, [r6]
	movs r2, #0x98
	lsls r2, r2, #1
	adds r1, r2, #0
	subs r1, r1, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r0, #0xc
	movs r2, #0xc8
	bl NewFileIntroInSr388SetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	str r5, [sp]
	mov r6, sp
	str r6, [r4]
	ldr r0, _0808A87C @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _0808A880 @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808A884 @ =0x0863A19C
	mov r7, r8
	str r0, [r7]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xf8
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _0808A888 @ =NewFileIntroInSr388Vblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808A7D8: .4byte unk_99940
_0808A7DC: .4byte 0x040000D4
_0808A7E0: .4byte gNonGameplayRam
_0808A7E4: .4byte 0x85000150
_0808A7E8: .4byte 0x0859DB08
_0808A7EC: .4byte 0x06010000
_0808A7F0: .4byte 0x085A1D78
_0808A7F4: .4byte 0x05000200
_0808A7F8: .4byte 0x84000080
_0808A7FC: .4byte 0x08613148
_0808A800: .4byte 0x06017FE0
_0808A804: .4byte 0x84000008
_0808A808: .4byte 0x086131A8
_0808A80C: .4byte 0x050003E0
_0808A810: .4byte 0x085A44CC
_0808A814: .4byte 0x085A86C8
_0808A818: .4byte 0x0600E800
_0808A81C: .4byte 0x085A83B8
_0808A820: .4byte 0x0600F800
_0808A824: .4byte 0x08598898
_0808A828: .4byte 0x0600E000
_0808A82C: .4byte 0x085A9044
_0808A830: .4byte 0x0600C000
_0808A834: .4byte 0x085A8E44
_0808A838: .4byte 0x04000010
_0808A83C: .4byte 0x04000012
_0808A840: .4byte 0x04000014
_0808A844: .4byte 0x04000008
_0808A848: .4byte 0x00001C08
_0808A84C: .4byte 0x00005801
_0808A850: .4byte 0x00005D01
_0808A854: .4byte 0x00001F03
_0808A858: .4byte 0x0300122C
_0808A85C: .4byte 0x0300122E
_0808A860: .4byte 0x03001230
_0808A864: .4byte gBg1XPosition
_0808A868: .4byte gBg1YPosition
_0808A86C: .4byte 0x03001234
_0808A870: .4byte 0x03001236
_0808A874: .4byte 0x0000FFD8
_0808A878: .4byte 0x0000FFF8
_0808A87C: .4byte 0x0600D000
_0808A880: .4byte 0x85000400
_0808A884: .4byte 0x0863A19C
_0808A888: .4byte NewFileIntroInSr388Vblank

	thumb_func_start NewFileIntroInSr388Process
NewFileIntroInSr388Process: @ 0x0808A88C
	push {r4, r5, lr}
	sub sp, #4
	movs r5, #0
	ldr r2, _0808A8E4 @ =gNonGameplayRam
	ldr r0, [r2]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	adds r4, r2, #0
	cmp r1, r0
	bne _0808A8BE
	ldr r0, _0808A8E8 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808A8BE
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _0808A8BE
	movs r0, #1
	strb r0, [r1]
_0808A8BE:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r4, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #9
	bls _0808A8D8
	b _0808ABB0
_0808A8D8:
	lsls r0, r0, #2
	ldr r1, _0808A8EC @ =_0808A8F0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808A8E4: .4byte gNonGameplayRam
_0808A8E8: .4byte gChangedInput
_0808A8EC: .4byte _0808A8F0
_0808A8F0: @ jump table
	.4byte _0808A918 @ case 0
	.4byte _0808A998 @ case 1
	.4byte _0808A998 @ case 2
	.4byte _0808A9C8 @ case 3
	.4byte _0808AA18 @ case 4
	.4byte _0808AA4C @ case 5
	.4byte _0808AAA4 @ case 6
	.4byte _0808AAD2 @ case 7
	.4byte _0808AB44 @ case 8
	.4byte _0808AB80 @ case 9
_0808A918:
	ldr r3, _0808A980 @ =0x00000213
	adds r1, r4, r3
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bne _0808A93A
	movs r0, #0
	strb r0, [r1]
	ldr r1, _0808A984 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _0808A93A
	subs r0, #1
	strh r0, [r1]
_0808A93A:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrh r2, [r1]
	cmp r2, #2
	bne _0808A962
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0808A988 @ =0x0300122E
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x60
	bne _0808A962
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	strb r2, [r0]
_0808A962:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _0808A98C @ =0x0300122C
	ldr r1, _0808A990 @ =gNonGameplayRam
	ldr r2, _0808A994 @ =0x00000216
	adds r1, r1, r2
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	ldrh r3, [r0]
	adds r1, r1, r3
	strh r1, [r0]
	b _0808ABB0
	.align 2, 0
_0808A980: .4byte 0x00000213
_0808A984: .4byte gWrittenToBldy
_0808A988: .4byte 0x0300122E
_0808A98C: .4byte 0x0300122C
_0808A990: .4byte gNonGameplayRam
_0808A994: .4byte 0x00000216
_0808A998:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #0
	strh r0, [r1]
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r1, _0808A9C0 @ =0x0300122C
	ldr r2, _0808A9C4 @ =0x00000216
	adds r0, r4, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrh r3, [r1]
	adds r0, r0, r3
	strh r0, [r1]
	b _0808ABB0
	.align 2, 0
_0808A9C0: .4byte 0x0300122C
_0808A9C4: .4byte 0x00000216
_0808A9C8:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r4, r1
	ldrh r0, [r0]
	cmp r0, #1
	bne _0808A9E8
	movs r0, #0
	str r0, [sp]
	ldr r1, _0808AA04 @ =0x040000D4
	mov r2, sp
	str r2, [r1]
	ldr r0, _0808AA08 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _0808AA0C @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_0808A9E8:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r1, _0808AA10 @ =0x0300122C
	ldr r3, _0808AA14 @ =0x00000216
	adds r0, r4, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r1]
	b _0808ABB0
	.align 2, 0
_0808AA04: .4byte 0x040000D4
_0808AA08: .4byte 0x0600D000
_0808AA0C: .4byte 0x85000400
_0808AA10: .4byte 0x0300122C
_0808AA14: .4byte 0x00000216
_0808AA18:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r2, _0808AA40 @ =0x0300122C
	ldr r1, _0808AA44 @ =gNonGameplayRam
	ldr r3, _0808AA48 @ =0x00000216
	adds r0, r1, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrh r3, [r2]
	adds r0, r0, r3
	strh r0, [r2]
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r1, r0
	movs r0, #0
	strh r0, [r1]
	b _0808ABB0
	.align 2, 0
_0808AA40: .4byte 0x0300122C
_0808AA44: .4byte gNonGameplayRam
_0808AA48: .4byte 0x00000216
_0808AA4C:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r4, r1
	ldrh r2, [r0]
	cmp r2, #1
	bne _0808AA62
	movs r3, #0x88
	lsls r3, r3, #1
	adds r0, r4, r3
	strb r2, [r0]
	b _0808AB76
_0808AA62:
	cmp r2, #0x1e
	beq _0808AA68
	b _0808AB76
_0808AA68:
	movs r2, #0
	movs r1, #0
	strh r1, [r0]
	ldr r3, _0808AA98 @ =0x00000212
	adds r0, r4, r3
	strb r2, [r0]
	strh r1, [r4, #0xe]
	strh r1, [r4, #0xc]
	ldr r1, _0808AA9C @ =0x0879C5A4
	ldr r0, _0808AAA0 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x24]
	str r0, [r4]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #6
	b _0808AB74
	.align 2, 0
_0808AA98: .4byte 0x00000212
_0808AA9C: .4byte 0x0879C5A4
_0808AAA0: .4byte 0x03000011
_0808AAA4:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	movs r3, #0x86
	lsls r3, r3, #2
	adds r1, r4, r3
	ldrb r0, [r1]
	cmp r0, #2
	beq _0808AAC0
	cmp r0, #4
	bne _0808AAC4
_0808AAC0:
	strb r2, [r1]
	b _0808AB76
_0808AAC4:
	cmp r0, #3
	bne _0808AB76
	strb r2, [r1]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	b _0808AB72
_0808AAD2:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r3, r4, r1
	ldrh r0, [r3]
	cmp r0, #0xa
	bne _0808AB00
	movs r0, #0
	str r0, [sp]
	ldr r1, _0808AAF4 @ =0x040000D4
	mov r2, sp
	str r2, [r1]
	ldr r0, _0808AAF8 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _0808AAFC @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _0808AB76
	.align 2, 0
_0808AAF4: .4byte 0x040000D4
_0808AAF8: .4byte 0x0600D000
_0808AAFC: .4byte 0x85000400
_0808AB00:
	cmp r0, #0xb
	bne _0808AB76
	movs r2, #0
	movs r1, #0
	strh r1, [r3]
	movs r3, #0x83
	lsls r3, r3, #2
	adds r0, r4, r3
	strh r1, [r0]
	adds r3, #6
	adds r0, r4, r3
	strb r2, [r0]
	strh r1, [r4, #0xe]
	strh r1, [r4, #0xc]
	ldr r1, _0808AB3C @ =0x0879C5A4
	ldr r0, _0808AB40 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x28]
	str r0, [r4]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #8
	b _0808AB74
	.align 2, 0
_0808AB3C: .4byte 0x0879C5A4
_0808AB40: .4byte 0x03000011
_0808AB44:
	adds r2, r4, #0
	movs r3, #0x84
	lsls r3, r3, #2
	adds r1, r2, r3
	movs r3, #0
	movs r0, #0
	strh r0, [r1]
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #2
	beq _0808AB62
	cmp r0, #4
	bne _0808AB66
_0808AB62:
	strb r3, [r1]
	b _0808AB76
_0808AB66:
	cmp r0, #3
	bne _0808AB76
	strb r3, [r1]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r4, r2
_0808AB72:
	movs r0, #9
_0808AB74:
	strb r0, [r1]
_0808AB76:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _0808ABB0
_0808AB80:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r2, _0808ABC0 @ =0x0300122C
	ldr r1, _0808ABC4 @ =gNonGameplayRam
	ldr r3, _0808ABC8 @ =0x00000216
	adds r0, r1, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrh r3, [r2]
	adds r0, r0, r3
	strh r0, [r2]
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0x32
	bls _0808ABB0
	ldr r1, _0808ABCC @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	movs r5, #1
_0808ABB0:
	bl IntroProcessText
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0808ABC0: .4byte 0x0300122C
_0808ABC4: .4byte gNonGameplayRam
_0808ABC8: .4byte 0x00000216
_0808ABCC: .4byte 0x04000050

	thumb_func_start NewFileIntroInSr388
NewFileIntroInSr388: @ 0x0808ABD0
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _0808ABE8 @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _0808ABFC
	cmp r0, #1
	bgt _0808ABEC
	cmp r0, #0
	beq _0808ABF6
	b _0808AC5E
	.align 2, 0
_0808ABE8: .4byte gNonGameplayRam
_0808ABEC:
	cmp r0, #2
	beq _0808AC14
	cmp r0, #3
	beq _0808AC34
	b _0808AC5E
_0808ABF6:
	bl NewFileIntroInSr388Init
	b _0808AC08
_0808ABFC:
	bl SpecialCutsceneFadeIn
	ldr r0, _0808AC10 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _0808AC5E
_0808AC08:
	movs r0, #2
	strh r0, [r4, #8]
	b _0808AC5E
	.align 2, 0
_0808AC10: .4byte gWrittenToBldy
_0808AC14:
	bl NewFileIntroInSr388Process
	cmp r0, #0
	beq _0808AC5E
	ldr r1, _0808AC2C @ =0x00000213
	adds r0, r4, r1
	strb r5, [r0]
	movs r0, #3
	strh r0, [r4, #8]
	ldr r0, _0808AC30 @ =gWrittenToBldy
	strh r5, [r0]
	b _0808AC5E
	.align 2, 0
_0808AC2C: .4byte 0x00000213
_0808AC30: .4byte gWrittenToBldy
_0808AC34:
	ldr r1, _0808AC44 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0808AC48
	adds r0, #1
	strh r0, [r1]
	b _0808AC56
	.align 2, 0
_0808AC44: .4byte gWrittenToBldy
_0808AC48:
	movs r1, #0
	strh r5, [r4, #8]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r4, r2
	strb r1, [r0]
	movs r5, #1
_0808AC56:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_0808AC5E:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start NewFileIntroProcessSamusInSr388
NewFileIntroProcessSamusInSr388: @ 0x0808AC68
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r4, r0, #0
	ldrb r0, [r4, #0x13]
	adds r3, r0, #1
	movs r6, #0
	strb r3, [r4, #0x13]
	ldr r1, _0808ACA0 @ =gNonGameplayRam
	movs r0, #0x85
	lsls r0, r0, #2
	adds r0, r0, r1
	mov ip, r0
	ldrb r5, [r0]
	adds r7, r1, #0
	cmp r5, #0
	bne _0808ACA8
	ldr r0, _0808ACA4 @ =0x0300122E
	ldrh r1, [r0]
	cmp r1, #0x2f
	bls _0808AC9C
	movs r0, #0xf0
	subs r0, r0, r1
	strh r0, [r4, #0xe]
	ldrh r0, [r4, #0xc]
	subs r0, #1
	strh r0, [r4, #0xc]
_0808AC9C:
	strb r6, [r4, #0x13]
	b _0808B236
	.align 2, 0
_0808ACA0: .4byte gNonGameplayRam
_0808ACA4: .4byte 0x0300122E
_0808ACA8:
	cmp r5, #1
	beq _0808ACAE
	b _0808ADCC
_0808ACAE:
	ldr r0, _0808ACD0 @ =0x0300122E
	ldrh r1, [r0]
	movs r0, #0xf0
	subs r0, r0, r1
	movs r2, #0
	strh r0, [r4, #0xe]
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _0808AD04
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x13
	bhi _0808ACD4
	ldrh r0, [r4, #0xc]
	subs r0, #1
	strh r0, [r4, #0xc]
	b _0808B236
	.align 2, 0
_0808ACD0: .4byte 0x0300122E
_0808ACD4:
	cmp r0, #0x45
	bhi _0808ACE4
	ldr r2, _0808ACE0 @ =0x00000216
	adds r1, r7, r2
	b _0808AFD8
	.align 2, 0
_0808ACE0: .4byte 0x00000216
_0808ACE4:
	cmp r0, #0x46
	beq _0808ACEA
	b _0808B236
_0808ACEA:
	ldr r3, _0808ACFC @ =0x00000216
	adds r0, r7, r3
	strb r2, [r0]
	strb r2, [r4, #0x13]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _0808AD00 @ =0x085A40DC
	b _0808AE4A
	.align 2, 0
_0808ACFC: .4byte 0x00000216
_0808AD00: .4byte 0x085A40DC
_0808AD04:
	cmp r0, #1
	bne _0808AD24
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	beq _0808AD12
	b _0808B236
_0808AD12:
	strb r2, [r4, #0x13]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _0808AD20 @ =0x085A429C
	str r0, [r4, #0x1c]
	b _0808B07E
	.align 2, 0
_0808AD20: .4byte 0x085A429C
_0808AD24:
	cmp r0, #2
	bne _0808AD60
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	beq _0808AD3A
	b _0808B236
_0808AD3A:
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	beq _0808AD42
	b _0808B236
_0808AD42:
	strb r2, [r4, #0x13]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _0808AD5C @ =0x085A4114
	str r0, [r4, #0x1c]
	movs r0, #3
	strb r0, [r4, #0x14]
	movs r1, #0x83
	lsls r1, r1, #2
	adds r0, r7, r1
	strh r6, [r0]
	b _0808B236
	.align 2, 0
_0808AD5C: .4byte 0x085A4114
_0808AD60:
	cmp r0, #3
	bne _0808AD7C
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	beq _0808AD6E
	b _0808B236
_0808AD6E:
	strb r2, [r4, #0x13]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _0808AD78 @ =0x085A42BC
	b _0808AE82
	.align 2, 0
_0808AD78: .4byte 0x085A42BC
_0808AD7C:
	cmp r0, #4
	bne _0808ADAC
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	beq _0808AD92
	b _0808B236
_0808AD92:
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	beq _0808AD9A
	b _0808B236
_0808AD9A:
	strb r2, [r4, #0x13]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _0808ADA8 @ =0x085A40DC
	str r0, [r4, #0x1c]
	b _0808B126
	.align 2, 0
_0808ADA8: .4byte 0x085A40DC
_0808ADAC:
	cmp r0, #5
	beq _0808ADB2
	b _0808B236
_0808ADB2:
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	beq _0808ADBC
	b _0808B236
_0808ADBC:
	strb r2, [r4, #0x13]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	strb r2, [r4, #0x14]
	movs r0, #2
	mov r1, ip
	strb r0, [r1]
	b _0808B236
_0808ADCC:
	cmp r5, #2
	bne _0808ADDA
	movs r0, #3
	strb r0, [r4, #0x14]
	mov r2, ip
	strb r0, [r2]
	b _0808B236
_0808ADDA:
	cmp r5, #3
	beq _0808ADE0
	b _0808B024
_0808ADE0:
	ldrb r0, [r4, #0x14]
	adds r2, r0, #0
	cmp r2, #0
	bne _0808AE0C
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	beq _0808ADF2
	b _0808B236
_0808ADF2:
	strb r6, [r4, #0x13]
	strb r6, [r4, #0x12]
	strb r6, [r4, #0x11]
	ldr r0, _0808AE08 @ =0x085A4474
	str r0, [r4, #0x1c]
	movs r0, #1
	strb r0, [r4, #0x14]
	ldrh r0, [r4, #0xc]
	adds r0, #1
	strh r0, [r4, #0xc]
	b _0808B236
	.align 2, 0
_0808AE08: .4byte 0x085A4474
_0808AE0C:
	cmp r2, #1
	bne _0808AE34
	ldrh r2, [r4, #0xc]
	movs r3, #0xc
	ldrsh r1, [r4, r3]
	ldr r0, _0808AE24 @ =0x00000103
	cmp r1, r0
	bgt _0808AE28
	adds r0, r2, #1
	strh r0, [r4, #0xc]
	b _0808B236
	.align 2, 0
_0808AE24: .4byte 0x00000103
_0808AE28:
	movs r0, #0
	movs r1, #0x82
	lsls r1, r1, #1
	strh r1, [r4, #0xc]
	strb r0, [r4, #0x13]
	b _0808B07E
_0808AE34:
	cmp r2, #2
	bne _0808AE54
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	beq _0808AE42
	b _0808B236
_0808AE42:
	strb r6, [r4, #0x13]
	strb r6, [r4, #0x12]
	strb r6, [r4, #0x11]
	ldr r0, _0808AE50 @ =0x085A441C
_0808AE4A:
	str r0, [r4, #0x1c]
	strb r5, [r4, #0x14]
	b _0808B236
	.align 2, 0
_0808AE50: .4byte 0x085A441C
_0808AE54:
	cmp r2, #3
	bne _0808AE98
	ldrh r2, [r4, #0xc]
	movs r3, #0xc
	ldrsh r0, [r4, r3]
	cmp r0, #0x8c
	ble _0808AE68
	subs r0, r2, #1
	strh r0, [r4, #0xc]
	b _0808B236
_0808AE68:
	ldr r0, _0808AE8C @ =0x0300122C
	ldrh r0, [r0]
	cmp r0, #0x6c
	bls _0808AE72
	b _0808AFD4
_0808AE72:
	ldr r2, _0808AE90 @ =0x00000216
	adds r1, r1, r2
	movs r0, #0
	strb r0, [r1]
	strb r0, [r4, #0x13]
	strb r0, [r4, #0x12]
	strb r0, [r4, #0x11]
	ldr r0, _0808AE94 @ =0x085A40DC
_0808AE82:
	str r0, [r4, #0x1c]
	movs r0, #4
	strb r0, [r4, #0x14]
	b _0808B236
	.align 2, 0
_0808AE8C: .4byte 0x0300122C
_0808AE90: .4byte 0x00000216
_0808AE94: .4byte 0x085A40DC
_0808AE98:
	cmp r2, #4
	bne _0808AEAE
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3c
	beq _0808AEA6
	b _0808B236
_0808AEA6:
	strb r6, [r4, #0x13]
	strb r6, [r4, #0x12]
	strb r6, [r4, #0x11]
	b _0808B126
_0808AEAE:
	cmp r2, #5
	bne _0808AF00
	ldr r0, _0808AED8 @ =0x085A441C
	str r0, [r4, #0x1c]
	ldr r0, _0808AEDC @ =0x0300122C
	ldrh r2, [r0]
	cmp r2, #0x28
	bls _0808AEE4
	ldr r3, _0808AEE0 @ =0x00000216
	adds r1, r7, r3
	movs r0, #0xff
	strb r0, [r1]
	cmp r2, #0x38
	beq _0808AECC
	b _0808B236
_0808AECC:
	movs r0, #9
	movs r1, #0
	movs r2, #0x80
	bl NewFileIntroInSr388SetupOam
	b _0808B236
	.align 2, 0
_0808AED8: .4byte 0x085A441C
_0808AEDC: .4byte 0x0300122C
_0808AEE0: .4byte 0x00000216
_0808AEE4:
	ldr r0, _0808AEF8 @ =0x00000216
	adds r1, r1, r0
	movs r0, #0
	strb r0, [r1]
	strb r0, [r4, #0x13]
	strb r0, [r4, #0x12]
	strb r0, [r4, #0x11]
	ldr r0, _0808AEFC @ =0x085A40DC
	b _0808B152
	.align 2, 0
_0808AEF8: .4byte 0x00000216
_0808AEFC: .4byte 0x085A40DC
_0808AF00:
	cmp r2, #6
	bne _0808AF20
	ldrb r0, [r4, #0x13]
	cmp r0, #0x1e
	beq _0808AF0C
	b _0808B236
_0808AF0C:
	movs r0, #0
	strb r0, [r4, #0x13]
	strb r0, [r4, #0x12]
	strb r0, [r4, #0x11]
	ldr r0, _0808AF1C @ =0x085A429C
	str r0, [r4, #0x1c]
	b _0808B18C
	.align 2, 0
_0808AF1C: .4byte 0x085A429C
_0808AF20:
	cmp r2, #7
	bne _0808AF4C
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #0x12]
	cmp r0, r2
	beq _0808AF36
	b _0808B236
_0808AF36:
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	beq _0808AF3E
	b _0808B236
_0808AF3E:
	strb r1, [r4, #0x13]
	strb r1, [r4, #0x12]
	strb r1, [r4, #0x11]
	ldr r0, _0808AF48 @ =0x085A4114
	b _0808B1BA
	.align 2, 0
_0808AF48: .4byte 0x085A4114
_0808AF4C:
	cmp r2, #8
	bne _0808AF6C
	ldrb r0, [r4, #0x13]
	cmp r0, #0x1e
	beq _0808AF58
	b _0808B236
_0808AF58:
	movs r0, #0
	strb r0, [r4, #0x13]
	strb r0, [r4, #0x12]
	strb r0, [r4, #0x11]
	ldr r0, _0808AF68 @ =0x085A42BC
	str r0, [r4, #0x1c]
	b _0808B1F4
	.align 2, 0
_0808AF68: .4byte 0x085A42BC
_0808AF6C:
	cmp r0, #9
	bne _0808AF98
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	beq _0808AF82
	b _0808B236
_0808AF82:
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	beq _0808AF8A
	b _0808B236
_0808AF8A:
	strb r1, [r4, #0x13]
	strb r1, [r4, #0x12]
	strb r1, [r4, #0x11]
	ldr r0, _0808AF94 @ =0x085A40DC
	b _0808B222
	.align 2, 0
_0808AF94: .4byte 0x085A40DC
_0808AF98:
	cmp r0, #0xa
	bne _0808AFBC
	ldrb r0, [r4, #0x13]
	cmp r0, #0x1e
	beq _0808AFA4
	b _0808B236
_0808AFA4:
	movs r0, #0
	strb r0, [r4, #0x13]
	strb r0, [r4, #0x12]
	strb r0, [r4, #0x11]
	ldr r0, _0808AFB8 @ =0x085A441C
	str r0, [r4, #0x1c]
	movs r0, #0xb
	strb r0, [r4, #0x14]
	b _0808B236
	.align 2, 0
_0808AFB8: .4byte 0x085A441C
_0808AFBC:
	cmp r0, #0xb
	beq _0808AFC2
	b _0808B236
_0808AFC2:
	ldr r0, _0808AFE0 @ =0x085A441C
	str r0, [r4, #0x1c]
	ldrb r0, [r4, #0x13]
	cmp r0, #1
	bne _0808B014
	ldr r0, _0808AFE4 @ =0x0300122C
	ldrh r2, [r0]
	cmp r2, #0
	beq _0808AFEC
_0808AFD4:
	ldr r0, _0808AFE8 @ =0x00000216
	adds r1, r7, r0
_0808AFD8:
	movs r0, #0xff
	strb r0, [r1]
	b _0808B236
	.align 2, 0
_0808AFE0: .4byte 0x085A441C
_0808AFE4: .4byte 0x0300122C
_0808AFE8: .4byte 0x00000216
_0808AFEC:
	ldr r1, _0808B00C @ =0x00000216
	adds r0, r7, r1
	strb r2, [r0]
	strb r2, [r4, #0x13]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _0808B010 @ =0x085A40DC
	str r0, [r4, #0x1c]
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r7, r3
	movs r0, #4
	strb r0, [r1]
	strb r2, [r4, #0x14]
	b _0808B236
	.align 2, 0
_0808B00C: .4byte 0x00000216
_0808B010: .4byte 0x085A40DC
_0808B014:
	movs r1, #0
	strb r1, [r4, #0x13]
	ldr r2, _0808B020 @ =0x00000216
	adds r0, r7, r2
	strb r1, [r0]
	b _0808B236
	.align 2, 0
_0808B020: .4byte 0x00000216
_0808B024:
	cmp r5, #4
	beq _0808B02A
	b _0808B230
_0808B02A:
	ldrb r0, [r4, #0x14]
	adds r1, r0, #0
	cmp r1, #0
	bne _0808B050
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3c
	beq _0808B03C
	b _0808B236
_0808B03C:
	strb r6, [r4, #0x13]
	strb r6, [r4, #0x12]
	strb r6, [r4, #0x11]
	ldr r0, _0808B04C @ =0x085A414C
	str r0, [r4, #0x1c]
	movs r0, #1
	strb r0, [r4, #0x14]
	b _0808B236
	.align 2, 0
_0808B04C: .4byte 0x085A414C
_0808B050:
	cmp r1, #1
	bne _0808B088
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3c
	beq _0808B05E
	b _0808B236
_0808B05E:
	strb r6, [r4, #0x13]
	strb r6, [r4, #0x12]
	strb r6, [r4, #0x11]
	ldr r0, _0808B084 @ =0x085A416C
	str r0, [r4, #0x1c]
	ldrh r1, [r4, #0xc]
	subs r1, #0x14
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4, #0xe]
	subs r2, #0x16
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r0, #6
	bl NewFileIntroInSr388SetupOam
_0808B07E:
	movs r0, #2
	strb r0, [r4, #0x14]
	b _0808B236
	.align 2, 0
_0808B084: .4byte 0x085A416C
_0808B088:
	cmp r1, #2
	bne _0808B0BC
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	beq _0808B09E
	b _0808B236
_0808B09E:
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	beq _0808B0A6
	b _0808B236
_0808B0A6:
	strb r6, [r4, #0x13]
	strb r6, [r4, #0x12]
	strb r6, [r4, #0x11]
	ldr r0, _0808B0B8 @ =0x085A414C
	str r0, [r4, #0x1c]
	movs r0, #3
	strb r0, [r4, #0x14]
	b _0808B236
	.align 2, 0
_0808B0B8: .4byte 0x085A414C
_0808B0BC:
	cmp r1, #3
	bne _0808B0E2
	mov r2, sp
	adds r2, #2
	movs r0, #6
	mov r1, sp
	bl NewFileIntroGetPositionOfOamByType
	mov r0, sp
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r0, #0x96
	lsls r0, r0, #1
	cmp r1, r0
	beq _0808B0DC
	b _0808B236
_0808B0DC:
	strb r6, [r4, #0x13]
	strb r5, [r4, #0x14]
	b _0808B236
_0808B0E2:
	cmp r1, #4
	bne _0808B130
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	bne _0808B0FC
	strb r6, [r4, #0x12]
	strb r6, [r4, #0x11]
	ldr r0, _0808B0F8 @ =0x085A422C
	str r0, [r4, #0x1c]
	b _0808B236
	.align 2, 0
_0808B0F8: .4byte 0x085A422C
_0808B0FC:
	ldrb r0, [r4, #0x13]
	cmp r0, #0xa
	beq _0808B104
	b _0808B236
_0808B104:
	movs r0, #0
	strb r0, [r4, #0x13]
	strb r0, [r4, #0x12]
	strb r0, [r4, #0x11]
	ldr r0, _0808B12C @ =0x085A424C
	str r0, [r4, #0x1c]
	ldrh r1, [r4, #0xc]
	subs r1, #0x14
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4, #0xe]
	subs r2, #0x28
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r0, #7
	bl NewFileIntroInSr388SetupOam
_0808B126:
	movs r0, #5
	strb r0, [r4, #0x14]
	b _0808B236
	.align 2, 0
_0808B12C: .4byte 0x085A424C
_0808B130:
	cmp r1, #5
	bne _0808B160
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	bne _0808B236
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0808B236
	strb r1, [r4, #0x13]
	strb r1, [r4, #0x12]
	strb r1, [r4, #0x11]
	ldr r0, _0808B15C @ =0x085A422C
_0808B152:
	str r0, [r4, #0x1c]
	movs r0, #6
	strb r0, [r4, #0x14]
	b _0808B236
	.align 2, 0
_0808B15C: .4byte 0x085A422C
_0808B160:
	cmp r1, #6
	bne _0808B198
	ldrb r0, [r4, #0x13]
	cmp r0, #0x82
	bne _0808B236
	movs r0, #0
	strb r0, [r4, #0x13]
	strb r0, [r4, #0x12]
	strb r0, [r4, #0x11]
	ldr r0, _0808B194 @ =0x085A424C
	str r0, [r4, #0x1c]
	ldrh r1, [r4, #0xc]
	subs r1, #0x14
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4, #0xe]
	subs r2, #0x28
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r0, #0xe
	bl NewFileIntroInSr388SetupOam
_0808B18C:
	movs r0, #7
	strb r0, [r4, #0x14]
	b _0808B236
	.align 2, 0
_0808B194: .4byte 0x085A424C
_0808B198:
	cmp r1, #7
	bne _0808B1C8
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #0x12]
	cmp r0, r2
	bne _0808B236
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0808B236
	strb r1, [r4, #0x13]
	strb r1, [r4, #0x12]
	strb r1, [r4, #0x11]
	ldr r0, _0808B1C4 @ =0x085A422C
_0808B1BA:
	str r0, [r4, #0x1c]
	movs r0, #8
	strb r0, [r4, #0x14]
	b _0808B236
	.align 2, 0
_0808B1C4: .4byte 0x085A422C
_0808B1C8:
	cmp r1, #8
	bne _0808B200
	ldrb r0, [r4, #0x13]
	cmp r0, #0x4e
	bne _0808B236
	movs r0, #0
	strb r0, [r4, #0x13]
	strb r0, [r4, #0x12]
	strb r0, [r4, #0x11]
	ldr r0, _0808B1FC @ =0x085A424C
	str r0, [r4, #0x1c]
	ldrh r1, [r4, #0xc]
	subs r1, #0x14
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4, #0xe]
	subs r2, #0x28
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r0, #0xe
	bl NewFileIntroInSr388SetupOam
_0808B1F4:
	movs r0, #9
	strb r0, [r4, #0x14]
	b _0808B236
	.align 2, 0
_0808B1FC: .4byte 0x085A424C
_0808B200:
	cmp r0, #9
	bne _0808B236
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	bne _0808B236
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0808B236
	strb r1, [r4, #0x13]
	strb r1, [r4, #0x12]
	strb r1, [r4, #0x11]
	ldr r0, _0808B22C @ =0x085A422C
_0808B222:
	str r0, [r4, #0x1c]
	movs r0, #0xa
	strb r0, [r4, #0x14]
	b _0808B236
	.align 2, 0
_0808B22C: .4byte 0x085A422C
_0808B230:
	cmp r5, #4
	bls _0808B236
	strb r6, [r4, #0x12]
_0808B236:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NewfileIntroProcessLeftBiologicalResearcher
NewfileIntroProcessLeftBiologicalResearcher: @ 0x0808B240
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	ldrb r0, [r5, #0x13]
	adds r0, #1
	movs r6, #0
	strb r0, [r5, #0x13]
	ldr r0, _0808B288 @ =gNonGameplayRam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	adds r1, r0, #0
	cmp r1, #0
	bne _0808B290
	ldr r0, _0808B28C @ =0x0300122E
	ldrh r0, [r0]
	cmp r0, #0x2f
	bls _0808B282
	mov r4, sp
	adds r4, #2
	movs r0, #1
	mov r1, sp
	adds r2, r4, #0
	bl NewFileIntroGetPositionOfOamByType
	mov r1, sp
	ldrh r0, [r5, #8]
	ldrh r1, [r1]
	adds r0, r0, r1
	strh r0, [r5, #0xc]
	ldrh r0, [r4]
	strh r0, [r5, #0xe]
_0808B282:
	strb r6, [r5, #0x13]
	b _0808B382
	.align 2, 0
_0808B288: .4byte gNonGameplayRam
_0808B28C: .4byte 0x0300122E
_0808B290:
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _0808B2B8
	mov r4, sp
	adds r4, #2
	movs r0, #1
	mov r1, sp
	adds r2, r4, #0
	bl NewFileIntroGetPositionOfOamByType
	mov r1, sp
	ldrh r0, [r5, #8]
	ldrh r1, [r1]
	adds r0, r0, r1
	strh r0, [r5, #0xc]
	ldrh r0, [r4]
	strh r0, [r5, #0xe]
	b _0808B382
_0808B2B8:
	cmp r1, #3
	beq _0808B2BE
	b _0808B41C
_0808B2BE:
	ldrb r0, [r5, #0x14]
	cmp r0, #0x10
	bne _0808B2EC
	mov r2, sp
	adds r2, #2
	movs r0, #1
	mov r1, sp
	bl NewFileIntroGetPositionOfOamByType
	mov r0, sp
	movs r2, #0xc
	ldrsh r1, [r5, r2]
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r1, r0
	blt _0808B2E0
	b _0808B42A
_0808B2E0:
	strb r6, [r5, #0x13]
	strb r6, [r5, #0x12]
	strb r6, [r5, #0x11]
	movs r0, #0x11
	strb r0, [r5, #0x14]
	b _0808B42A
_0808B2EC:
	cmp r0, #0x11
	bne _0808B324
	mov r2, sp
	adds r2, #2
	movs r0, #1
	mov r1, sp
	bl NewFileIntroGetPositionOfOamByType
	movs r0, #0xc
	ldrsh r1, [r5, r0]
	mov r0, sp
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, #0xa
	cmp r1, r0
	bgt _0808B30E
	b _0808B42A
_0808B30E:
	strb r6, [r5, #0x13]
	strb r6, [r5, #0x12]
	strb r6, [r5, #0x11]
	ldr r0, _0808B320 @ =0x085A2D50
	str r0, [r5, #0x1c]
	movs r0, #0x12
	strb r0, [r5, #0x14]
	b _0808B42A
	.align 2, 0
_0808B320: .4byte 0x085A2D50
_0808B324:
	cmp r0, #0x12
	bne _0808B354
	ldrb r0, [r5, #0x11]
	lsls r0, r0, #3
	ldr r1, [r5, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r5, #0x12]
	cmp r0, r3
	beq _0808B33A
	b _0808B42A
_0808B33A:
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _0808B42A
	strb r6, [r5, #0x13]
	strb r6, [r5, #0x12]
	strb r6, [r5, #0x11]
	ldr r0, _0808B350 @ =0x085A2D68
	str r0, [r5, #0x1c]
	movs r0, #0x13
	strb r0, [r5, #0x14]
	b _0808B42A
	.align 2, 0
_0808B350: .4byte 0x085A2D68
_0808B354:
	cmp r0, #0x13
	bne _0808B38C
	mov r2, sp
	adds r2, #2
	movs r0, #1
	mov r1, sp
	bl NewFileIntroGetPositionOfOamByType
	movs r0, #0xc
	ldrsh r2, [r5, r0]
	mov r0, sp
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r3, #8
	ldrsh r1, [r5, r3]
	adds r0, r0, r1
	cmp r2, r0
	ble _0808B42A
	strb r6, [r5, #0x13]
	strb r6, [r5, #0x12]
	strb r6, [r5, #0x11]
	ldr r0, _0808B388 @ =0x085A2CF0
	str r0, [r5, #0x1c]
_0808B382:
	movs r0, #0x14
	strb r0, [r5, #0x14]
	b _0808B42A
	.align 2, 0
_0808B388: .4byte 0x085A2CF0
_0808B38C:
	cmp r0, #0x14
	bne _0808B3C8
	mov r2, sp
	adds r2, #2
	movs r0, #1
	mov r1, sp
	bl NewFileIntroGetPositionOfOamByType
	movs r0, #0xc
	ldrsh r2, [r5, r0]
	mov r0, sp
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r3, #8
	ldrsh r1, [r5, r3]
	adds r0, r0, r1
	subs r0, #7
	cmp r2, r0
	bgt _0808B3F8
	strb r6, [r5, #0x13]
	strb r6, [r5, #0x12]
	strb r6, [r5, #0x11]
	ldr r0, _0808B3C4 @ =0x085A2D68
	str r0, [r5, #0x1c]
	movs r0, #0x15
	strb r0, [r5, #0x14]
	b _0808B42A
	.align 2, 0
_0808B3C4: .4byte 0x085A2D68
_0808B3C8:
	cmp r0, #0x15
	bne _0808B3EC
	ldr r0, _0808B3E4 @ =0x0300122C
	ldrh r0, [r0]
	cmp r0, #0x61
	bhi _0808B42A
	strb r6, [r5, #0x13]
	strb r6, [r5, #0x12]
	strb r6, [r5, #0x11]
	ldr r0, _0808B3E8 @ =0x085A2CF0
	str r0, [r5, #0x1c]
	movs r0, #0x16
	strb r0, [r5, #0x14]
	b _0808B42A
	.align 2, 0
_0808B3E4: .4byte 0x0300122C
_0808B3E8: .4byte 0x085A2CF0
_0808B3EC:
	cmp r0, #0x16
	bne _0808B42A
	ldr r0, _0808B400 @ =0x0300122C
	ldrh r0, [r0]
	cmp r0, #0x2d
	bls _0808B404
_0808B3F8:
	ldrh r0, [r5, #0xc]
	subs r0, #1
	strh r0, [r5, #0xc]
	b _0808B42A
	.align 2, 0
_0808B400: .4byte 0x0300122C
_0808B404:
	movs r0, #0
	strb r0, [r5, #0x13]
	strb r0, [r5, #0x12]
	strb r0, [r5, #0x11]
	ldr r0, _0808B418 @ =0x085A2D68
	str r0, [r5, #0x1c]
	movs r0, #0x17
	strb r0, [r5, #0x14]
	b _0808B42A
	.align 2, 0
_0808B418: .4byte 0x085A2D68
_0808B41C:
	cmp r1, #4
	bne _0808B424
	strb r6, [r5, #0x13]
	b _0808B42A
_0808B424:
	cmp r1, #4
	bls _0808B42A
	strb r6, [r5, #0x12]
_0808B42A:
	ldr r0, _0808B444 @ =gNonGameplayRam
	ldr r1, _0808B448 @ =0x00000216
	adds r0, r0, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldrh r0, [r5, #0xc]
	subs r0, r0, r1
	strh r0, [r5, #0xc]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808B444: .4byte gNonGameplayRam
_0808B448: .4byte 0x00000216

	thumb_func_start NewfileIntroProcessRightBiologicalResearcher
NewfileIntroProcessRightBiologicalResearcher: @ 0x0808B44C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	ldrb r0, [r5, #0x13]
	adds r0, #1
	movs r6, #0
	strb r0, [r5, #0x13]
	ldr r0, _0808B494 @ =gNonGameplayRam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	adds r1, r0, #0
	cmp r1, #0
	bne _0808B49C
	ldr r0, _0808B498 @ =0x0300122E
	ldrh r0, [r0]
	cmp r0, #0x2f
	bls _0808B48E
	mov r4, sp
	adds r4, #2
	movs r0, #1
	mov r1, sp
	adds r2, r4, #0
	bl NewFileIntroGetPositionOfOamByType
	mov r1, sp
	ldrh r0, [r5, #8]
	ldrh r1, [r1]
	adds r0, r0, r1
	strh r0, [r5, #0xc]
	ldrh r0, [r4]
	strh r0, [r5, #0xe]
_0808B48E:
	strb r6, [r5, #0x13]
	b _0808B594
	.align 2, 0
_0808B494: .4byte gNonGameplayRam
_0808B498: .4byte 0x0300122E
_0808B49C:
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _0808B4C4
	mov r4, sp
	adds r4, #2
	movs r0, #1
	mov r1, sp
	adds r2, r4, #0
	bl NewFileIntroGetPositionOfOamByType
	mov r1, sp
	ldrh r0, [r5, #8]
	ldrh r1, [r1]
	adds r0, r0, r1
	strh r0, [r5, #0xc]
	ldrh r0, [r4]
	strh r0, [r5, #0xe]
	b _0808B594
_0808B4C4:
	cmp r1, #3
	beq _0808B4CA
	b _0808B630
_0808B4CA:
	ldrb r0, [r5, #0x14]
	cmp r0, #0x10
	bne _0808B4F8
	mov r2, sp
	adds r2, #2
	movs r0, #1
	mov r1, sp
	bl NewFileIntroGetPositionOfOamByType
	mov r0, sp
	movs r2, #0xc
	ldrsh r1, [r5, r2]
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r1, r0
	blt _0808B4EC
	b _0808B63E
_0808B4EC:
	strb r6, [r5, #0x13]
	strb r6, [r5, #0x12]
	strb r6, [r5, #0x11]
	movs r0, #0x11
	strb r0, [r5, #0x14]
	b _0808B63E
_0808B4F8:
	cmp r0, #0x11
	bne _0808B530
	mov r2, sp
	adds r2, #2
	movs r0, #1
	mov r1, sp
	bl NewFileIntroGetPositionOfOamByType
	movs r0, #0xc
	ldrsh r1, [r5, r0]
	mov r0, sp
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, #0xa
	cmp r1, r0
	bgt _0808B51A
	b _0808B63E
_0808B51A:
	strb r6, [r5, #0x13]
	strb r6, [r5, #0x12]
	strb r6, [r5, #0x11]
	ldr r0, _0808B52C @ =0x085A2D50
	str r0, [r5, #0x1c]
	movs r0, #0x12
	strb r0, [r5, #0x14]
	b _0808B63E
	.align 2, 0
_0808B52C: .4byte 0x085A2D50
_0808B530:
	cmp r0, #0x12
	bne _0808B564
	ldrb r0, [r5, #0x11]
	lsls r0, r0, #3
	ldr r1, [r5, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r5, #0x12]
	cmp r0, r3
	beq _0808B546
	b _0808B63E
_0808B546:
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	beq _0808B54E
	b _0808B63E
_0808B54E:
	strb r6, [r5, #0x13]
	strb r6, [r5, #0x12]
	strb r6, [r5, #0x11]
	ldr r0, _0808B560 @ =0x085A2D68
	str r0, [r5, #0x1c]
	movs r0, #0x13
	strb r0, [r5, #0x14]
	b _0808B63E
	.align 2, 0
_0808B560: .4byte 0x085A2D68
_0808B564:
	cmp r0, #0x13
	bne _0808B5A0
	mov r2, sp
	adds r2, #2
	movs r0, #1
	mov r1, sp
	bl NewFileIntroGetPositionOfOamByType
	movs r0, #0xc
	ldrsh r2, [r5, r0]
	mov r0, sp
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r3, #8
	ldrsh r1, [r5, r3]
	adds r0, r0, r1
	adds r0, #0xa
	cmp r2, r0
	ble _0808B63E
	strb r6, [r5, #0x13]
	strb r6, [r5, #0x12]
	strb r6, [r5, #0x11]
	ldr r0, _0808B59C @ =0x085A2CF0
	str r0, [r5, #0x1c]
_0808B594:
	movs r0, #0x14
	strb r0, [r5, #0x14]
	b _0808B63E
	.align 2, 0
_0808B59C: .4byte 0x085A2CF0
_0808B5A0:
	cmp r0, #0x14
	bne _0808B5DC
	mov r2, sp
	adds r2, #2
	movs r0, #1
	mov r1, sp
	bl NewFileIntroGetPositionOfOamByType
	movs r0, #0xc
	ldrsh r2, [r5, r0]
	mov r0, sp
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r3, #8
	ldrsh r1, [r5, r3]
	adds r0, r0, r1
	subs r0, #0xa
	cmp r2, r0
	bgt _0808B60C
	strb r6, [r5, #0x13]
	strb r6, [r5, #0x12]
	strb r6, [r5, #0x11]
	ldr r0, _0808B5D8 @ =0x085A2D68
	str r0, [r5, #0x1c]
	movs r0, #0x15
	strb r0, [r5, #0x14]
	b _0808B63E
	.align 2, 0
_0808B5D8: .4byte 0x085A2D68
_0808B5DC:
	cmp r0, #0x15
	bne _0808B600
	ldr r0, _0808B5F8 @ =0x0300122C
	ldrh r0, [r0]
	cmp r0, #0x66
	bhi _0808B63E
	strb r6, [r5, #0x13]
	strb r6, [r5, #0x12]
	strb r6, [r5, #0x11]
	ldr r0, _0808B5FC @ =0x085A2CF0
	str r0, [r5, #0x1c]
	movs r0, #0x16
	strb r0, [r5, #0x14]
	b _0808B63E
	.align 2, 0
_0808B5F8: .4byte 0x0300122C
_0808B5FC: .4byte 0x085A2CF0
_0808B600:
	cmp r0, #0x16
	bne _0808B63E
	ldr r0, _0808B614 @ =0x0300122C
	ldrh r0, [r0]
	cmp r0, #0x34
	bls _0808B618
_0808B60C:
	ldrh r0, [r5, #0xc]
	subs r0, #1
	strh r0, [r5, #0xc]
	b _0808B63E
	.align 2, 0
_0808B614: .4byte 0x0300122C
_0808B618:
	movs r0, #0
	strb r0, [r5, #0x13]
	strb r0, [r5, #0x12]
	strb r0, [r5, #0x11]
	ldr r0, _0808B62C @ =0x085A2D68
	str r0, [r5, #0x1c]
	movs r0, #0x17
	strb r0, [r5, #0x14]
	b _0808B63E
	.align 2, 0
_0808B62C: .4byte 0x085A2D68
_0808B630:
	cmp r1, #4
	bne _0808B638
	strb r6, [r5, #0x13]
	b _0808B63E
_0808B638:
	cmp r1, #4
	bls _0808B63E
	strb r6, [r5, #0x12]
_0808B63E:
	ldr r0, _0808B658 @ =gNonGameplayRam
	ldr r1, _0808B65C @ =0x00000216
	adds r0, r0, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldrh r0, [r5, #0xc]
	subs r0, r0, r1
	strh r0, [r5, #0xc]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808B658: .4byte gNonGameplayRam
_0808B65C: .4byte 0x00000216

	thumb_func_start unk_8b660
unk_8b660: @ 0x0808B660
	push {r4, lr}
	adds r3, r0, #0
	ldrb r0, [r3, #0x13]
	adds r4, r0, #1
	strb r4, [r3, #0x13]
	ldrb r1, [r3, #0x14]
	cmp r1, #0
	bne _0808B694
	ldrh r0, [r3, #0xe]
	movs r2, #0
	strh r0, [r3, #2]
	strh r1, [r3, #4]
	ldr r0, _0808B690 @ =0x085A2B58
	str r0, [r3, #0x1c]
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	beq _0808B686
	b _0808B79C
_0808B686:
	strb r2, [r3, #0x13]
	strb r2, [r3, #0x12]
	strb r2, [r3, #0x11]
	movs r0, #1
	b _0808B79A
	.align 2, 0
_0808B690: .4byte 0x085A2B58
_0808B694:
	cmp r1, #1
	bne _0808B744
	ldr r0, _0808B6AC @ =0x085A2B68
	str r0, [r3, #0x1c]
	movs r1, #8
	ldrsh r0, [r3, r1]
	cmp r0, #0
	bne _0808B6B4
	ldrb r2, [r3, #0x13]
	ldr r1, _0808B6B0 @ =0x082E9242
	b _0808B6B8
	.align 2, 0
_0808B6AC: .4byte 0x085A2B68
_0808B6B0: .4byte 0x082E9242
_0808B6B4:
	ldrb r2, [r3, #0x13]
	ldr r1, _0808B6FC @ =0x082E9256
_0808B6B8:
	movs r4, #4
	ldrsh r0, [r3, r4]
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	muls r0, r2, r0
	lsls r0, r0, #0xe
	lsrs r1, r0, #0x10
	ldrh r0, [r3, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r1, r0
	movs r2, #0
	strh r0, [r3, #0xe]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x90
	ble _0808B6F0
	movs r0, #0x90
	strh r0, [r3, #0xe]
	strb r2, [r3, #0x13]
	strb r2, [r3, #0x12]
	strb r2, [r3, #0x11]
	ldr r0, _0808B700 @ =0x085A2B90
	str r0, [r3, #0x1c]
	movs r0, #2
	strb r0, [r3, #0x14]
_0808B6F0:
	cmp r1, #0
	bge _0808B704
	ldrh r0, [r3, #0xc]
	adds r0, #2
	b _0808B708
	.align 2, 0
_0808B6FC: .4byte 0x082E9256
_0808B700: .4byte 0x085A2B90
_0808B704:
	ldrh r0, [r3, #0xc]
	adds r0, #1
_0808B708:
	strh r0, [r3, #0xc]
	ldr r0, [r3, #0x10]
	ldr r1, _0808B73C @ =0x00FFFF00
	ands r0, r1
	ldr r1, _0808B740 @ =0x00040200
	cmp r0, r1
	bne _0808B71C
	ldrh r0, [r3, #0xc]
	adds r0, #8
	strh r0, [r3, #0xc]
_0808B71C:
	ldrb r0, [r3, #0x13]
	cmp r0, #4
	bne _0808B79C
	movs r0, #0
	strb r0, [r3, #0x13]
	ldrh r0, [r3, #0xe]
	strh r0, [r3, #2]
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xa
	bne _0808B79C
	movs r0, #2
	b _0808B79A
	.align 2, 0
_0808B73C: .4byte 0x00FFFF00
_0808B740: .4byte 0x00040200
_0808B744:
	cmp r1, #2
	bne _0808B79C
	ldrb r0, [r3, #0x11]
	lsls r0, r0, #3
	ldr r1, [r3, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r3, #0x12]
	cmp r0, r2
	bne _0808B760
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0808B760
	strb r1, [r3, #0x12]
_0808B760:
	ldr r0, _0808B78C @ =0x0859DB00
	ldrh r2, [r3, #0xa]
	adds r0, r2, r0
	ldrb r1, [r3, #0x13]
	ldrb r0, [r0]
	cmp r1, r0
	bne _0808B79C
	adds r0, r2, #1
	movs r1, #0
	strh r0, [r3, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #6
	bne _0808B77E
	strh r1, [r3, #0xa]
_0808B77E:
	movs r4, #8
	ldrsh r0, [r3, r4]
	cmp r0, #0
	bne _0808B790
	movs r0, #1
	strh r0, [r3, #8]
	b _0808B792
	.align 2, 0
_0808B78C: .4byte 0x0859DB00
_0808B790:
	strh r1, [r3, #8]
_0808B792:
	movs r0, #0
	strb r0, [r3, #0x13]
	strb r0, [r3, #0x12]
	strb r0, [r3, #0x11]
_0808B79A:
	strb r0, [r3, #0x14]
_0808B79C:
	ldr r0, _0808B7CC @ =gNonGameplayRam
	ldr r1, _0808B7D0 @ =0x00000216
	adds r0, r0, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldrh r0, [r3, #0xc]
	subs r0, r0, r1
	strh r0, [r3, #0xc]
	lsls r0, r0, #0x10
	movs r1, #0x82
	lsls r1, r1, #0x11
	cmp r0, r1
	ble _0808B7C4
	movs r0, #0
	strb r0, [r3, #0x10]
	ldrb r1, [r3, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r3, #0x18]
_0808B7C4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808B7CC: .4byte gNonGameplayRam
_0808B7D0: .4byte 0x00000216

	thumb_func_start NewFileIntroProcessHornoad
NewFileIntroProcessHornoad: @ 0x0808B7D4
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r5, r0, #0
	ldrb r0, [r5, #0x13]
	adds r3, r0, #1
	movs r4, #0
	strb r3, [r5, #0x13]
	ldrb r0, [r5, #0x14]
	cmp r0, #0
	bne _0808B80C
	ldrh r0, [r5, #0xe]
	movs r1, #0
	strh r0, [r5, #2]
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x96
	beq _0808B7F8
	b _0808BC7C
_0808B7F8:
	strb r1, [r5, #0x13]
	strb r1, [r5, #0x12]
	strb r1, [r5, #0x11]
	ldr r0, _0808B808 @ =0x085A2BF8
	str r0, [r5, #0x1c]
	movs r0, #1
	strb r0, [r5, #0x14]
	b _0808BC7C
	.align 2, 0
_0808B808: .4byte 0x085A2BF8
_0808B80C:
	cmp r0, #1
	bne _0808B844
	ldrh r0, [r5, #0xe]
	movs r2, #0
	strh r0, [r5, #2]
	ldrb r0, [r5, #0x11]
	lsls r0, r0, #3
	ldr r1, [r5, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r5, #0x12]
	cmp r0, r3
	beq _0808B828
	b _0808BC7C
_0808B828:
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	beq _0808B830
	b _0808BC7C
_0808B830:
	strb r2, [r5, #0x13]
	strb r2, [r5, #0x12]
	strb r2, [r5, #0x11]
	ldr r0, _0808B840 @ =0x085A2BF8
	str r0, [r5, #0x1c]
	movs r0, #2
	strb r0, [r5, #0x14]
	b _0808BC7C
	.align 2, 0
_0808B840: .4byte 0x085A2BF8
_0808B844:
	cmp r0, #2
	bne _0808B880
	mov r2, sp
	adds r2, #2
	movs r0, #6
	mov r1, sp
	bl NewFileIntroGetPositionOfOamByType
	ldrh r0, [r5, #0xe]
	movs r2, #0
	strh r0, [r5, #2]
	mov r0, sp
	movs r4, #0
	ldrsh r0, [r0, r4]
	movs r6, #0xc
	ldrsh r1, [r5, r6]
	subs r0, r0, r1
	cmp r0, #0x18
	ble _0808B86C
	b _0808BC7C
_0808B86C:
	strb r2, [r5, #0x13]
	strb r2, [r5, #0x12]
	strb r2, [r5, #0x11]
	ldr r0, _0808B87C @ =0x085A2C70
	str r0, [r5, #0x1c]
	movs r0, #3
	strb r0, [r5, #0x14]
	b _0808BC7C
	.align 2, 0
_0808B87C: .4byte 0x085A2C70
_0808B880:
	cmp r0, #3
	bne _0808B90C
	ldr r0, _0808B8CC @ =0x085A2C98
	str r0, [r5, #0x1c]
	ldrb r2, [r5, #0x13]
	ldr r1, _0808B8D0 @ =0x082E9242
	movs r4, #4
	ldrsh r0, [r5, r4]
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r6, #0
	ldrsh r0, [r0, r6]
	muls r0, r2, r0
	lsls r0, r0, #0xe
	asrs r0, r0, #0x10
	ldrh r2, [r5, #2]
	adds r1, r0, r2
	movs r2, #0
	strh r1, [r5, #0xe]
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bne _0808B8E0
	strb r2, [r5, #0x13]
	strh r1, [r5, #2]
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #5
	bne _0808B8D8
	strb r2, [r5, #0x12]
	strb r2, [r5, #0x11]
	ldr r0, _0808B8D4 @ =0x085A2CD8
	str r0, [r5, #0x1c]
	b _0808B8E0
	.align 2, 0
_0808B8CC: .4byte 0x085A2C98
_0808B8D0: .4byte 0x082E9242
_0808B8D4: .4byte 0x085A2CD8
_0808B8D8:
	cmp r0, #0xa
	ble _0808B8E0
	movs r0, #0xa
	strh r0, [r5, #4]
_0808B8E0:
	movs r3, #0xe
	ldrsh r0, [r5, r3]
	cmp r0, #0x80
	bgt _0808B8EA
	b _0808BC7C
_0808B8EA:
	movs r1, #0
	movs r2, #0
	movs r0, #0x80
	strh r0, [r5, #2]
	strh r0, [r5, #0xe]
	strb r1, [r5, #0x13]
	strb r1, [r5, #0x12]
	strb r1, [r5, #0x11]
	ldr r0, _0808B908 @ =0x085A2CC0
	str r0, [r5, #0x1c]
	strh r2, [r5, #4]
	movs r0, #4
	strb r0, [r5, #0x14]
	b _0808BC7C
	.align 2, 0
_0808B908: .4byte 0x085A2CC0
_0808B90C:
	cmp r0, #4
	bne _0808B940
	ldrb r0, [r5, #0x11]
	lsls r0, r0, #3
	ldr r1, [r5, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r6, [r5, #0x12]
	cmp r0, r6
	beq _0808B922
	b _0808BC7C
_0808B922:
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	beq _0808B92A
	b _0808BC7C
_0808B92A:
	strb r4, [r5, #0x13]
	strb r4, [r5, #0x12]
	strb r4, [r5, #0x11]
	ldr r0, _0808B93C @ =0x085A2BD0
	str r0, [r5, #0x1c]
	movs r0, #5
	strb r0, [r5, #0x14]
	b _0808BC7C
	.align 2, 0
_0808B93C: .4byte 0x085A2BD0
_0808B940:
	cmp r0, #5
	bne _0808B974
	mov r2, sp
	adds r2, #2
	movs r0, #6
	mov r1, sp
	bl NewFileIntroGetPositionOfOamByType
	mov r0, sp
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r0, #0x96
	lsls r0, r0, #1
	cmp r1, r0
	beq _0808B960
	b _0808BC7C
_0808B960:
	strb r4, [r5, #0x13]
	strb r4, [r5, #0x12]
	strb r4, [r5, #0x11]
	ldr r0, _0808B970 @ =0x085A2C70
	str r0, [r5, #0x1c]
	movs r0, #6
	strb r0, [r5, #0x14]
	b _0808BC7C
	.align 2, 0
_0808B970: .4byte 0x085A2C70
_0808B974:
	cmp r0, #6
	beq _0808B97A
	b _0808BA74
_0808B97A:
	ldr r0, _0808B9E0 @ =0x085A2C98
	str r0, [r5, #0x1c]
	ldrb r2, [r5, #0x13]
	ldr r1, _0808B9E4 @ =0x082E9242
	movs r3, #4
	ldrsh r0, [r5, r3]
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r4, #0
	ldrsh r0, [r0, r4]
	adds r1, r2, #0
	muls r1, r0, r1
	lsls r1, r1, #0xf
	ldrh r0, [r5, #2]
	asrs r1, r1, #0x10
	adds r0, r1, r0
	strh r0, [r5, #0xe]
	ldrh r0, [r5, #0xc]
	adds r0, #1
	strh r0, [r5, #0xc]
	ldr r0, [r5, #0x10]
	ldr r1, _0808B9E8 @ =0x00FFFF00
	ands r0, r1
	ldr r1, _0808B9EC @ =0x00040200
	cmp r0, r1
	bne _0808B9B4
	ldrh r0, [r5, #0xc]
	adds r0, #8
	strh r0, [r5, #0xc]
_0808B9B4:
	ldrb r0, [r5, #0x13]
	cmp r0, #4
	bne _0808B9FC
	movs r0, #0
	strb r0, [r5, #0x13]
	ldrh r0, [r5, #0xe]
	movs r1, #0
	strh r0, [r5, #2]
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #5
	bne _0808B9F4
	strb r1, [r5, #0x13]
	strb r1, [r5, #0x12]
	strb r1, [r5, #0x11]
	ldr r0, _0808B9F0 @ =0x085A2CD8
	str r0, [r5, #0x1c]
	b _0808B9FC
	.align 2, 0
_0808B9E0: .4byte 0x085A2C98
_0808B9E4: .4byte 0x082E9242
_0808B9E8: .4byte 0x00FFFF00
_0808B9EC: .4byte 0x00040200
_0808B9F0: .4byte 0x085A2CD8
_0808B9F4:
	cmp r0, #0xa
	ble _0808B9FC
	movs r0, #0xa
	strh r0, [r5, #4]
_0808B9FC:
	movs r6, #4
	ldrsh r0, [r5, r6]
	cmp r0, #1
	bgt _0808BA06
	b _0808BC7C
_0808BA06:
	mov r4, sp
	adds r4, #2
	movs r0, #7
	mov r1, sp
	adds r2, r4, #0
	bl NewFileIntroGetPositionOfOamByType
	mov r0, sp
	movs r2, #0xc
	ldrsh r1, [r5, r2]
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r1, r0
	bge _0808BA24
	b _0808BC7C
_0808BA24:
	movs r6, #0xe
	ldrsh r1, [r5, r6]
	movs r2, #0
	ldrsh r0, [r4, r2]
	cmp r1, r0
	bge _0808BA32
	b _0808BC7C
_0808BA32:
	movs r3, #0xc
	ldrsh r1, [r5, r3]
	movs r4, #0xe
	ldrsh r2, [r5, r4]
	movs r0, #0xa
	bl NewFileIntroInSr388SetupOam
	movs r0, #0
	strb r0, [r5, #0x13]
	strb r0, [r5, #0x12]
	strb r0, [r5, #0x11]
	ldr r0, _0808BA68 @ =0x085A2BA8
	str r0, [r5, #0x1c]
	movs r0, #1
	strh r0, [r5, #4]
	ldr r1, _0808BA6C @ =0x0400004C
	ldr r0, _0808BA70 @ =0x083BDED6
	ldrh r0, [r0, #2]
	lsls r0, r0, #4
	strh r0, [r1]
	ldrb r0, [r5, #0x18]
	movs r1, #0x20
	orrs r0, r1
	strb r0, [r5, #0x18]
	movs r0, #7
	strb r0, [r5, #0x14]
	b _0808BC7C
	.align 2, 0
_0808BA68: .4byte 0x085A2BA8
_0808BA6C: .4byte 0x0400004C
_0808BA70: .4byte 0x083BDED6
_0808BA74:
	cmp r0, #7
	bne _0808BADA
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _0808BA9A
	strb r4, [r5, #0x13]
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	ldr r2, _0808BAC8 @ =0x0400004C
	ldr r1, _0808BACC @ =0x083BDED6
	movs r6, #4
	ldrsh r0, [r5, r6]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #4
	strh r0, [r2]
_0808BA9A:
	ldrh r1, [r5, #0xa]
	cmp r1, #1
	bne _0808BAD4
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0xf
	beq _0808BAAA
	b _0808BC7C
_0808BAAA:
	strb r4, [r5, #0x13]
	strb r4, [r5, #0x12]
	strb r4, [r5, #0x11]
	ldr r0, _0808BAD0 @ =0x085A2E90
	str r0, [r5, #0x1c]
	ldrh r0, [r5, #0xc]
	subs r0, #4
	strh r0, [r5, #0xc]
	ldrh r0, [r5, #0xe]
	subs r0, #0xa
	strh r0, [r5, #0xe]
	strh r4, [r5, #0xa]
	movs r0, #8
	strb r0, [r5, #0x14]
	b _0808BC7C
	.align 2, 0
_0808BAC8: .4byte 0x0400004C
_0808BACC: .4byte 0x083BDED6
_0808BAD0: .4byte 0x085A2E90
_0808BAD4:
	movs r2, #4
	ldrsh r0, [r5, r2]
	b _0808BB50
_0808BADA:
	cmp r0, #8
	bne _0808BB60
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _0808BB00
	strb r4, [r5, #0x13]
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	ldr r2, _0808BB44 @ =0x0400004C
	ldr r1, _0808BB48 @ =0x083BDED6
	movs r3, #4
	ldrsh r0, [r5, r3]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #4
	strh r0, [r2]
_0808BB00:
	ldrh r1, [r5, #0xa]
	cmp r1, #1
	bne _0808BB4C
	movs r4, #4
	ldrsh r0, [r5, r4]
	cmp r0, #0x1d
	beq _0808BB10
	b _0808BC7C
_0808BB10:
	movs r0, #0
	strb r0, [r5, #0x13]
	ldrb r1, [r5, #0x18]
	subs r0, #0x21
	ands r0, r1
	strb r0, [r5, #0x18]
	mov r2, sp
	adds r2, #2
	movs r0, #1
	mov r1, sp
	bl NewFileIntroGetPositionOfOamByType
	ldrh r0, [r5, #0xe]
	strh r0, [r5, #2]
	mov r0, sp
	ldrh r0, [r0]
	strh r0, [r5]
	ldrh r1, [r5, #0xc]
	subs r0, r0, r1
	strh r0, [r5, #4]
	movs r0, #0x3f
	strh r0, [r5, #0xa]
	movs r0, #9
	strb r0, [r5, #0x14]
	b _0808BC7C
	.align 2, 0
_0808BB44: .4byte 0x0400004C
_0808BB48: .4byte 0x083BDED6
_0808BB4C:
	movs r6, #4
	ldrsh r0, [r5, r6]
_0808BB50:
	cmp r0, #0x1d
	beq _0808BB56
	b _0808BC7C
_0808BB56:
	adds r0, r1, #1
	strh r0, [r5, #0xa]
	movs r0, #1
	strh r0, [r5, #4]
	b _0808BC7C
_0808BB60:
	cmp r0, #9
	bne _0808BB7C
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xa
	bne _0808BB6E
	b _0808BC7C
_0808BB6E:
	cmp r0, #0x1e
	bhi _0808BB74
	b _0808BC7C
_0808BB74:
	strb r4, [r5, #0x13]
	movs r0, #0xa
	strb r0, [r5, #0x14]
	b _0808BC7C
_0808BB7C:
	ldrb r0, [r5, #0x14]
	cmp r0, #0xa
	bne _0808BC28
	ldrh r1, [r5, #0xa]
	adds r0, r1, #1
	movs r7, #0
	strh r0, [r5, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _0808BB98
	adds r0, r1, #0
	subs r0, #0xff
	strh r0, [r5, #0xa]
_0808BB98:
	ldrh r6, [r5, #0xa]
	lsls r0, r6, #0x11
	lsrs r2, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xff
	ble _0808BBAC
	ldr r1, _0808BC0C @ =0xFFFFFF00
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
_0808BBAC:
	movs r3, #4
	ldrsh r1, [r5, r3]
	ldr r3, _0808BC10 @ =0x080A4FA4
	lsls r0, r2, #0x10
	asrs r0, r0, #0xf
	adds r0, #0x80
	adds r0, r0, r3
	movs r2, #0
	ldrsh r4, [r0, r2]
	adds r2, r1, #0
	muls r2, r4, r2
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	lsls r0, r1, #1
	adds r0, r0, r3
	movs r6, #0
	ldrsh r0, [r0, r6]
	muls r0, r2, r0
	asrs r0, r0, #0x10
	ldrh r6, [r5]
	adds r0, r6, r0
	strh r0, [r5, #0xc]
	movs r2, #4
	ldrsh r0, [r5, r2]
	adds r2, r0, #0
	muls r2, r4, r2
	adds r1, #0x40
	lsls r1, r1, #1
	adds r1, r1, r3
	movs r3, #0
	ldrsh r0, [r1, r3]
	muls r0, r2, r0
	asrs r0, r0, #0x10
	ldrh r1, [r5, #2]
	adds r0, r1, r0
	strh r0, [r5, #0xe]
	ldrh r0, [r5, #0xa]
	cmp r0, #0x9f
	bls _0808BC14
	strh r7, [r5, #0xa]
	movs r0, #0
	strb r0, [r5, #0x13]
	strh r7, [r5, #4]
	strh r7, [r5, #2]
	strh r7, [r5]
	movs r0, #0xb
	strb r0, [r5, #0x14]
	b _0808BC7C
	.align 2, 0
_0808BC0C: .4byte 0xFFFFFF00
_0808BC10: .4byte 0x080A4FA4
_0808BC14:
	cmp r0, #0x9b
	bls _0808BC1E
	subs r0, r6, #1
	strh r0, [r5]
	b _0808BC22
_0808BC1E:
	cmp r0, #0x77
	bls _0808BC7C
_0808BC22:
	adds r0, r1, #1
	strh r0, [r5, #2]
	b _0808BC7C
_0808BC28:
	cmp r0, #0xb
	bne _0808BC4C
	ldrb r0, [r5, #0x18]
	movs r1, #6
	orrs r0, r1
	strb r0, [r5, #0x18]
	ldrh r0, [r5, #6]
	adds r0, #0x80
	strh r0, [r5, #6]
	lsls r0, r0, #0x10
	ldr r1, _0808BC48 @ =0x01FF0000
	cmp r0, r1
	ble _0808BC7C
	movs r0, #0xc
	strb r0, [r5, #0x14]
	b _0808BC7C
	.align 2, 0
_0808BC48: .4byte 0x01FF0000
_0808BC4C:
	cmp r0, #0xc
	bne _0808BC74
	ldrh r0, [r5, #6]
	subs r0, #0x10
	strh r0, [r5, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x8f
	bgt _0808BC7C
	ldr r0, _0808BC70 @ =gNonGameplayRam
	movs r4, #0x85
	lsls r4, r4, #2
	adds r0, r0, r4
	movs r1, #5
	strb r1, [r0]
	movs r0, #0xd
	strb r0, [r5, #0x14]
	b _0808BC7C
	.align 2, 0
_0808BC70: .4byte gNonGameplayRam
_0808BC74:
	cmp r0, #0xd
	bne _0808BC7C
	movs r0, #0
	strb r0, [r5, #0x12]
_0808BC7C:
	ldr r0, _0808BC94 @ =gNonGameplayRam
	ldr r6, _0808BC98 @ =0x00000216
	adds r0, r0, r6
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldrh r0, [r5, #0xc]
	subs r0, r0, r1
	strh r0, [r5, #0xc]
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808BC94: .4byte gNonGameplayRam
_0808BC98: .4byte 0x00000216

	thumb_func_start NewFileIntroProcessHorizontalMissile
NewFileIntroProcessHorizontalMissile: @ 0x0808BC9C
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x13]
	adds r3, r0, #1
	strb r3, [r4, #0x13]
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _0808BD24
	ldrb r2, [r4, #0x13]
	ldr r1, _0808BCE8 @ =0x0858B40C
	movs r5, #4
	ldrsh r0, [r4, r5]
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	muls r0, r2, r0
	asrs r0, r0, #2
	ldrh r1, [r4]
	subs r1, r1, r0
	strh r1, [r4, #0xc]
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bne _0808BCEC
	movs r0, #0
	strb r0, [r4, #0x13]
	ldrh r1, [r4, #4]
	movs r2, #4
	ldrsh r0, [r4, r2]
	cmp r0, #5
	bgt _0808BCE0
	adds r0, r1, #1
	strh r0, [r4, #4]
_0808BCE0:
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	b _0808BD04
	.align 2, 0
_0808BCE8: .4byte 0x0858B40C
_0808BCEC:
	cmp r0, #1
	bne _0808BD04
	adds r1, #0xc
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4, #0xe]
	adds r2, #2
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r0, #8
	bl NewFileIntroInSr388SetupOam
_0808BD04:
	movs r5, #0xc
	ldrsh r0, [r4, r5]
	cmp r0, #0x1f
	bgt _0808BD4A
	movs r0, #0
	strb r0, [r4, #0x13]
	strb r0, [r4, #0x12]
	strb r0, [r4, #0x11]
	ldr r0, _0808BD20 @ =0x085A2E08
	str r0, [r4, #0x1c]
	movs r0, #1
	strb r0, [r4, #0x14]
	b _0808BD4A
	.align 2, 0
_0808BD20: .4byte 0x085A2E08
_0808BD24:
	cmp r0, #1
	bne _0808BD4A
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #0x12]
	cmp r0, r2
	bne _0808BD4A
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0808BD4A
	strb r1, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
_0808BD4A:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start NewFileIntroProcessFirstDiagonalMissile
NewFileIntroProcessFirstDiagonalMissile: @ 0x0808BD50
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r4, r0, #0
	ldrb r0, [r4, #0x13]
	adds r5, r0, #1
	strb r5, [r4, #0x13]
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _0808BE10
	ldrb r1, [r4, #0x13]
	ldr r2, _0808BDBC @ =0x0858B40C
	movs r3, #4
	ldrsh r0, [r4, r3]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r6, #0
	ldrsh r0, [r0, r6]
	adds r0, #1
	muls r0, r1, r0
	asrs r0, r0, #2
	ldrh r1, [r4]
	subs r3, r1, r0
	strh r3, [r4, #0xc]
	ldrb r1, [r4, #0x13]
	movs r6, #4
	ldrsh r0, [r4, r6]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, #1
	muls r0, r1, r0
	asrs r0, r0, #2
	ldrh r1, [r4, #2]
	subs r2, r1, r0
	strh r2, [r4, #0xe]
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bne _0808BDC0
	movs r0, #0
	strb r0, [r4, #0x13]
	ldrh r1, [r4, #4]
	movs r3, #4
	ldrsh r0, [r4, r3]
	cmp r0, #5
	bgt _0808BDB2
	adds r0, r1, #1
	strh r0, [r4, #4]
_0808BDB2:
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	b _0808BDD8
	.align 2, 0
_0808BDBC: .4byte 0x0858B40C
_0808BDC0:
	cmp r0, #1
	bne _0808BDD8
	adds r1, r3, #0
	adds r1, #0xa
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r2, #0xc
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r0, #8
	bl NewFileIntroInSr388SetupOam
_0808BDD8:
	mov r5, sp
	adds r5, #2
	movs r0, #9
	mov r1, sp
	adds r2, r5, #0
	bl NewFileIntroGetPositionOfOamByType
	movs r6, #0xc
	ldrsh r1, [r4, r6]
	mov r0, sp
	movs r2, #0
	ldrsh r0, [r0, r2]
	subs r0, #2
	cmp r1, r0
	bgt _0808BE10
	movs r3, #0xe
	ldrsh r1, [r4, r3]
	movs r6, #0
	ldrsh r0, [r5, r6]
	subs r0, #2
	cmp r1, r0
	bgt _0808BE10
	movs r0, #0
	strb r0, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	subs r0, #2
	ands r0, r1
	strb r0, [r4, #0x18]
_0808BE10:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start unk_8be18
unk_8be18: @ 0x0808BE18
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x11]
	lsls r0, r0, #3
	ldr r1, [r2, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _0808BE3E
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0808BE3E
	strb r1, [r2, #0x10]
	ldrb r1, [r2, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x18]
_0808BE3E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_8be44
unk_8be44: @ 0x0808BE44
	push {r4, r5, lr}
	adds r3, r0, #0
	ldrb r0, [r3, #0x14]
	cmp r0, #0
	bne _0808BE6C
	ldr r0, _0808BE64 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r3, #0xe]
	ldr r1, _0808BE68 @ =0x0300122C
	ldrh r0, [r1]
	strh r0, [r3, #0xc]
	movs r0, #1
	strb r0, [r3, #0x14]
	adds r5, r1, #0
	b _0808BEA0
	.align 2, 0
_0808BE64: .4byte 0x0300122E
_0808BE68: .4byte 0x0300122C
_0808BE6C:
	ldr r5, _0808BEF4 @ =0x0300122C
	cmp r0, #1
	bne _0808BEA0
	movs r1, #0xe
	ldrsh r0, [r3, r1]
	adds r0, #1
	ldr r1, _0808BEF8 @ =0x0300122E
	ldrh r1, [r1]
	cmp r0, r1
	bge _0808BE8A
	strh r1, [r3, #0xe]
	ldr r1, _0808BEFC @ =0x03001232
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_0808BE8A:
	movs r2, #0xc
	ldrsh r0, [r3, r2]
	subs r0, #1
	ldrh r1, [r5]
	cmp r0, r1
	ble _0808BEA0
	strh r1, [r3, #0xc]
	ldr r1, _0808BF00 @ =0x03001230
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
_0808BEA0:
	movs r0, #4
	ldrsh r4, [r3, r0]
	cmp r4, #0
	bne _0808BEE6
	ldr r0, _0808BF04 @ =gBg1XPosition
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r2, #0
	ldrh r2, [r5]
	adds r1, r1, r2
	strh r1, [r0]
	ldr r2, _0808BF08 @ =gBg1YPosition
	ldr r0, _0808BEF8 @ =0x0300122E
	ldrh r0, [r0]
	subs r0, #0x60
	strh r0, [r2]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	cmp r1, #0x77
	bhi _0808BEE6
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0808BF0C @ =0x0000FDFF
	ands r0, r1
	strh r0, [r2]
	ldr r1, _0808BF10 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	ldr r1, _0808BF14 @ =0x03001220
	ldr r0, _0808BF18 @ =0x03001222
	strh r4, [r0]
	strh r4, [r1]
	movs r0, #1
	strh r0, [r3, #4]
_0808BEE6:
	ldrh r1, [r5]
	cmp r1, #0
	bne _0808BEEE
	strb r1, [r3, #0x10]
_0808BEEE:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0808BEF4: .4byte 0x0300122C
_0808BEF8: .4byte 0x0300122E
_0808BEFC: .4byte 0x03001232
_0808BF00: .4byte 0x03001230
_0808BF04: .4byte gBg1XPosition
_0808BF08: .4byte gBg1YPosition
_0808BF0C: .4byte 0x0000FDFF
_0808BF10: .4byte 0x04000050
_0808BF14: .4byte 0x03001220
_0808BF18: .4byte 0x03001222

	thumb_func_start unk_8bf1c
unk_8bf1c: @ 0x0808BF1C
	push {lr}
	adds r2, r0, #0
	ldr r0, _0808BF5C @ =0x0300122E
	ldrh r1, [r0]
	cmp r1, #0x17
	bls _0808BF2E
	movs r0, #0xd8
	subs r0, r0, r1
	strh r0, [r2, #0xe]
_0808BF2E:
	ldr r0, _0808BF60 @ =gNonGameplayRam
	ldr r1, _0808BF64 @ =0x00000216
	adds r0, r0, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldrh r0, [r2, #0xc]
	subs r0, r0, r1
	strh r0, [r2, #0xc]
	lsls r0, r0, #0x10
	movs r1, #0x97
	lsls r1, r1, #0x11
	cmp r0, r1
	ble _0808BF56
	movs r0, #0
	strb r0, [r2, #0x10]
	ldrb r1, [r2, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x18]
_0808BF56:
	pop {r0}
	bx r0
	.align 2, 0
_0808BF5C: .4byte 0x0300122E
_0808BF60: .4byte gNonGameplayRam
_0808BF64: .4byte 0x00000216

	thumb_func_start unk_8bf68
unk_8bf68: @ 0x0808BF68
	push {lr}
	adds r2, r0, #0
	ldr r0, _0808BFA4 @ =0x0300122E
	ldrh r1, [r0]
	cmp r1, #0x17
	bls _0808BF7A
	movs r0, #0xd8
	subs r0, r0, r1
	strh r0, [r2, #0xe]
_0808BF7A:
	ldr r0, _0808BFA8 @ =gNonGameplayRam
	ldr r1, _0808BFAC @ =0x00000216
	adds r0, r0, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldrh r0, [r2, #0xc]
	subs r0, r0, r1
	strh r0, [r2, #0xc]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xfa
	ble _0808BFA0
	movs r0, #0
	strb r0, [r2, #0x10]
	ldrb r1, [r2, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x18]
_0808BFA0:
	pop {r0}
	bx r0
	.align 2, 0
_0808BFA4: .4byte 0x0300122E
_0808BFA8: .4byte gNonGameplayRam
_0808BFAC: .4byte 0x00000216

	thumb_func_start NewFileIntroProcessSecondDiagonalMissile
NewFileIntroProcessSecondDiagonalMissile: @ 0x0808BFB0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x13]
	adds r5, r0, #1
	strb r5, [r4, #0x13]
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _0808C058
	ldrb r1, [r4, #0x13]
	ldr r2, _0808C01C @ =0x0858B40C
	movs r3, #4
	ldrsh r0, [r4, r3]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r6, #0
	ldrsh r0, [r0, r6]
	adds r0, #1
	muls r0, r1, r0
	asrs r0, r0, #2
	ldrh r1, [r4]
	subs r3, r1, r0
	strh r3, [r4, #0xc]
	ldrb r1, [r4, #0x13]
	movs r6, #4
	ldrsh r0, [r4, r6]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, #1
	muls r0, r1, r0
	asrs r0, r0, #2
	ldrh r1, [r4, #2]
	subs r2, r1, r0
	strh r2, [r4, #0xe]
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bne _0808C020
	movs r0, #0
	strb r0, [r4, #0x13]
	ldrh r1, [r4, #4]
	movs r3, #4
	ldrsh r0, [r4, r3]
	cmp r0, #5
	bgt _0808C010
	adds r0, r1, #1
	strh r0, [r4, #4]
_0808C010:
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	b _0808C038
	.align 2, 0
_0808C01C: .4byte 0x0858B40C
_0808C020:
	cmp r0, #1
	bne _0808C038
	adds r1, r3, #0
	adds r1, #0xa
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r2, #0xc
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r0, #8
	bl NewFileIntroInSr388SetupOam
_0808C038:
	movs r6, #0xe
	ldrsh r0, [r4, r6]
	cmp r0, #0x31
	bgt _0808C07E
	movs r0, #0
	strb r0, [r4, #0x13]
	strb r0, [r4, #0x12]
	strb r0, [r4, #0x11]
	ldr r0, _0808C054 @ =0x085A2E08
	str r0, [r4, #0x1c]
	movs r0, #1
	strb r0, [r4, #0x14]
	b _0808C07E
	.align 2, 0
_0808C054: .4byte 0x085A2E08
_0808C058:
	cmp r0, #1
	bne _0808C07E
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #0x12]
	cmp r0, r2
	bne _0808C07E
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0808C07E
	strb r1, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
_0808C07E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start unk_8c084
unk_8c084: @ 0x0808C084
	movs r1, #0
	strb r1, [r0, #0x10]
	bx lr
	.align 2, 0

	thumb_func_start NewFileIntroInSr388SetupOam
NewFileIntroInSr388SetupOam: @ 0x0808C08C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sl, r2
	movs r0, #0
	mov r8, r0
	ldr r1, _0808C0E4 @ =gNonGameplayRam
	movs r2, #0x8b
	lsls r2, r2, #2
	adds r0, r1, r2
	ldrb r0, [r0]
	adds r7, r1, #0
	cmp r0, #0
	beq _0808C0DA
_0808C0BC:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #0x13
	bhi _0808C0E0
	lsls r0, r0, #3
	add r0, r8
	lsls r0, r0, #2
	adds r0, r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808C0BC
_0808C0DA:
	mov r1, r8
	cmp r1, #0x13
	bls _0808C0E8
_0808C0E0:
	movs r0, #0x14
	b _0808C4EE
	.align 2, 0
_0808C0E4: .4byte gNonGameplayRam
_0808C0E8:
	movs r0, #0
	str r0, [sp]
	ldr r1, _0808C160 @ =0x040000D4
	mov r2, sp
	str r2, [r1]
	mov r0, r8
	lsls r3, r0, #3
	adds r0, r3, r0
	lsls r6, r0, #2
	ldr r2, _0808C164 @ =0x030016A0
	mov ip, r2
	adds r0, r6, r2
	str r0, [r1, #4]
	ldr r0, _0808C168 @ =0x85000009
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _0808C16C @ =0xFFFFFDE4
	add r0, ip
	adds r4, r6, r0
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r4, r1
	mov r2, sb
	strh r2, [r0]
	adds r1, #2
	adds r0, r4, r1
	mov r2, sl
	strh r2, [r0]
	adds r1, #2
	adds r0, r4, r1
	strb r5, [r0]
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r2, r4, r0
	ldrb r0, [r2]
	movs r1, #1
	orrs r0, r1
	strb r0, [r2]
	cmp r5, #1
	bne _0808C17C
	ldr r1, _0808C170 @ =0x00000236
	adds r2, r4, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808C174 @ =0x085A441C
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _0808C178 @ =NewFileIntroProcessSamusInSr388
	str r1, [r0]
	b _0808C4EC
	.align 2, 0
_0808C160: .4byte 0x040000D4
_0808C164: .4byte 0x030016A0
_0808C168: .4byte 0x85000009
_0808C16C: .4byte 0xFFFFFDE4
_0808C170: .4byte 0x00000236
_0808C174: .4byte 0x085A441C
_0808C178: .4byte NewFileIntroProcessSamusInSr388
_0808C17C:
	cmp r5, #2
	bne _0808C1BC
	movs r2, #0x89
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r0, #0x26
	strh r0, [r1]
	ldr r3, _0808C1B0 @ =0x00000236
	adds r2, r4, r3
	ldrb r1, [r2]
	subs r0, #0x33
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808C1B4 @ =0x085A2CF0
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _0808C1B8 @ =NewfileIntroProcessLeftBiologicalResearcher
	str r1, [r0]
	b _0808C4EC
	.align 2, 0
_0808C1B0: .4byte 0x00000236
_0808C1B4: .4byte 0x085A2CF0
_0808C1B8: .4byte NewfileIntroProcessLeftBiologicalResearcher
_0808C1BC:
	cmp r5, #3
	bne _0808C208
	movs r0, #0x89
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #0x48
	strh r0, [r1]
	ldr r2, _0808C1F8 @ =0x0000022D
	adds r1, r4, r2
	movs r0, #1
	strb r0, [r1]
	ldr r3, _0808C1FC @ =0x00000236
	adds r2, r4, r3
	ldrb r1, [r2]
	subs r0, #0xe
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808C200 @ =0x085A2CF0
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _0808C204 @ =NewfileIntroProcessRightBiologicalResearcher
	str r1, [r0]
	b _0808C4EC
	.align 2, 0
_0808C1F8: .4byte 0x0000022D
_0808C1FC: .4byte 0x00000236
_0808C200: .4byte 0x085A2CF0
_0808C204: .4byte NewfileIntroProcessRightBiologicalResearcher
_0808C208:
	cmp r5, #4
	beq _0808C222
	cmp r5, #5
	bne _0808C25C
	movs r2, #0x89
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r0, #1
	strh r0, [r1]
	ldr r3, _0808C24C @ =0x00000226
	adds r1, r4, r3
	movs r0, #2
	strh r0, [r1]
_0808C222:
	ldr r0, _0808C250 @ =0x00000236
	adds r2, r4, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808C254 @ =0x085A2B58
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _0808C258 @ =unk_8b660
	str r1, [r0]
	b _0808C4EC
	.align 2, 0
_0808C24C: .4byte 0x00000226
_0808C250: .4byte 0x00000236
_0808C254: .4byte 0x085A2B58
_0808C258: .4byte unk_8b660
_0808C25C:
	cmp r5, #6
	bne _0808C2A8
	movs r1, #0x87
	lsls r1, r1, #2
	adds r0, r4, r1
	mov r2, sb
	strh r2, [r0]
	ldr r3, _0808C29C @ =0x0000021E
	adds r0, r4, r3
	mov r1, sl
	strh r1, [r0]
	adds r3, #0x18
	adds r2, r4, r3
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808C2A0 @ =0x085A2DA8
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _0808C2A4 @ =NewFileIntroProcessHorizontalMissile
	str r1, [r0]
	b _0808C4EC
	.align 2, 0
_0808C29C: .4byte 0x0000021E
_0808C2A0: .4byte 0x085A2DA8
_0808C2A4: .4byte NewFileIntroProcessHorizontalMissile
_0808C2A8:
	cmp r5, #7
	bne _0808C2F4
	movs r1, #0x87
	lsls r1, r1, #2
	adds r0, r4, r1
	mov r2, sb
	strh r2, [r0]
	ldr r3, _0808C2E8 @ =0x0000021E
	adds r0, r4, r3
	mov r1, sl
	strh r1, [r0]
	adds r3, #0x18
	adds r2, r4, r3
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808C2EC @ =0x085A2DC0
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _0808C2F0 @ =NewFileIntroProcessFirstDiagonalMissile
	str r1, [r0]
	b _0808C4EC
	.align 2, 0
_0808C2E8: .4byte 0x0000021E
_0808C2EC: .4byte 0x085A2DC0
_0808C2F0: .4byte NewFileIntroProcessFirstDiagonalMissile
_0808C2F4:
	cmp r5, #8
	bne _0808C31C
	ldr r0, _0808C314 @ =0x00000236
	adds r2, r4, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808C318 @ =0x085A2DD8
	b _0808C382
	.align 2, 0
_0808C314: .4byte 0x00000236
_0808C318: .4byte 0x085A2DD8
_0808C31C:
	cmp r5, #9
	bne _0808C364
	ldr r2, _0808C354 @ =0x00000222
	adds r1, r4, r2
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	ldr r3, _0808C358 @ =0x00000236
	adds r2, r4, r3
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808C35C @ =0x085A2BD0
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _0808C360 @ =NewFileIntroProcessHornoad
	str r1, [r0]
	b _0808C4EC
	.align 2, 0
_0808C354: .4byte 0x00000222
_0808C358: .4byte 0x00000236
_0808C35C: .4byte 0x085A2BD0
_0808C360: .4byte NewFileIntroProcessHornoad
_0808C364:
	cmp r5, #0xa
	bne _0808C39C
	ldr r0, _0808C390 @ =0x00000236
	adds r2, r4, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808C394 @ =0x085A2E38
_0808C382:
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _0808C398 @ =unk_8be18
	str r1, [r0]
	b _0808C4EC
	.align 2, 0
_0808C390: .4byte 0x00000236
_0808C394: .4byte 0x085A2E38
_0808C398: .4byte unk_8be18
_0808C39C:
	cmp r5, #0xb
	bne _0808C3C8
	mov r1, r8
	adds r2, r3, r1
	lsls r2, r2, #2
	adds r1, r2, r7
	movs r3, #0x8d
	lsls r3, r3, #2
	adds r1, r1, r3
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r2, r2, r0
	ldr r0, _0808C3C4 @ =unk_8be44
	b _0808C4EA
	.align 2, 0
_0808C3C4: .4byte unk_8be44
_0808C3C8:
	cmp r5, #0xc
	bne _0808C404
	add r3, r8
	lsls r3, r3, #2
	adds r1, r3, r7
	ldr r2, _0808C3F8 @ =0x00000236
	adds r1, r1, r2
	ldrb r0, [r1]
	movs r2, #0xc
	orrs r0, r2
	strb r0, [r1]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r0, r3, r0
	ldr r1, _0808C3FC @ =0x085A2EC8
	str r1, [r0]
	movs r2, #0x8f
	lsls r2, r2, #2
	adds r0, r7, r2
	adds r3, r3, r0
	ldr r0, _0808C400 @ =unk_8bf1c
	str r0, [r3]
	b _0808C4EC
	.align 2, 0
_0808C3F8: .4byte 0x00000236
_0808C3FC: .4byte 0x085A2EC8
_0808C400: .4byte unk_8bf1c
_0808C404:
	cmp r5, #0xd
	bne _0808C440
	add r3, r8
	lsls r3, r3, #2
	adds r1, r3, r7
	ldr r0, _0808C434 @ =0x00000236
	adds r1, r1, r0
	ldrb r0, [r1]
	movs r2, #0xc
	orrs r0, r2
	strb r0, [r1]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r0, r3, r0
	ldr r1, _0808C438 @ =0x085A2ED8
	str r1, [r0]
	movs r2, #0x8f
	lsls r2, r2, #2
	adds r0, r7, r2
	adds r3, r3, r0
	ldr r0, _0808C43C @ =unk_8bf68
	str r0, [r3]
	b _0808C4EC
	.align 2, 0
_0808C434: .4byte 0x00000236
_0808C438: .4byte 0x085A2ED8
_0808C43C: .4byte unk_8bf68
_0808C440:
	cmp r5, #0xe
	bne _0808C498
	add r3, r8
	lsls r3, r3, #2
	adds r2, r3, r7
	movs r1, #0x87
	lsls r1, r1, #2
	adds r0, r2, r1
	mov r1, sb
	strh r1, [r0]
	ldr r1, _0808C488 @ =0x0000021E
	adds r0, r2, r1
	mov r1, sl
	strh r1, [r0]
	ldr r0, _0808C48C @ =0x00000236
	adds r2, r2, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r0, r3, r0
	ldr r1, _0808C490 @ =0x085A2DC0
	str r1, [r0]
	movs r2, #0x8f
	lsls r2, r2, #2
	adds r0, r7, r2
	adds r3, r3, r0
	ldr r0, _0808C494 @ =NewFileIntroProcessSecondDiagonalMissile
	str r0, [r3]
	b _0808C4EC
	.align 2, 0
_0808C488: .4byte 0x0000021E
_0808C48C: .4byte 0x00000236
_0808C490: .4byte 0x085A2DC0
_0808C494: .4byte NewFileIntroProcessSecondDiagonalMissile
_0808C498:
	cmp r5, #0x32
	bne _0808C4C4
	mov r0, r8
	adds r2, r3, r0
	lsls r2, r2, #2
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r0, r2, r0
	ldr r1, _0808C4BC @ =0x08613180
	str r1, [r0]
	movs r3, #0x8f
	lsls r3, r3, #2
	adds r0, r7, r3
	adds r2, r2, r0
	ldr r0, _0808C4C0 @ =NewFileIntroProcessTextCursor
	b _0808C4EA
	.align 2, 0
_0808C4BC: .4byte 0x08613180
_0808C4C0: .4byte NewFileIntroProcessTextCursor
_0808C4C4:
	cmp r5, #0xff
	bne _0808C4EC
	mov r0, r8
	adds r2, r3, r0
	lsls r2, r2, #2
	adds r1, r2, r7
	movs r3, #0x8d
	lsls r3, r3, #2
	adds r1, r1, r3
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r2, r2, r0
	ldr r0, _0808C500 @ =unk_8c084
_0808C4EA:
	str r0, [r2]
_0808C4EC:
	mov r0, r8
_0808C4EE:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808C500: .4byte unk_8c084

	thumb_func_start unk_8c504
unk_8c504: @ 0x0808C504
	push {r4, lr}
	adds r4, r3, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl NewFileIntroInSr388SetupOam
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0808C538 @ =gNonGameplayRam
	lsls r1, r0, #3
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	movs r0, #0x89
	lsls r0, r0, #2
	adds r1, r1, r0
	strh r4, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808C538: .4byte gNonGameplayRam

	thumb_func_start NewFileIntro_Empty
NewFileIntro_Empty: @ 0x0808C53C
	bx lr
	.align 2, 0

	thumb_func_start NewFileIntroGetPositionOfOamByType
NewFileIntroGetPositionOfOamByType: @ 0x0808C540
	push {r4, r5, r6, r7, lr}
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r1, #0
	ldr r7, _0808C574 @ =gNonGameplayRam
	movs r6, #0x8b
	lsls r6, r6, #2
_0808C550:
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r7
	adds r0, r3, r6
	ldrb r0, [r0]
	cmp r0, r5
	bne _0808C578
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r3, r1
	ldrh r0, [r0]
	strh r0, [r4]
	adds r1, #2
	adds r0, r3, r1
	ldrh r0, [r0]
	b _0808C58C
	.align 2, 0
_0808C574: .4byte gNonGameplayRam
_0808C578:
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x13
	bls _0808C550
	movs r1, #0x96
	lsls r1, r1, #1
	adds r0, r1, #0
	strh r0, [r4]
	movs r0, #0xc8
_0808C58C:
	strh r0, [r2]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start NewFileIntroInSr388Vblank
NewFileIntroInSr388Vblank: @ 0x0808C594
	push {lr}
	ldr r3, _0808C624 @ =0x040000D4
	ldr r0, _0808C628 @ =gOamData
	str r0, [r3]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r3, #4]
	ldr r0, _0808C62C @ =0x84000100
	str r0, [r3, #8]
	ldr r0, [r3, #8]
	ldr r2, _0808C630 @ =0x04000052
	ldr r0, _0808C634 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0808C638 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0808C63C @ =0x04000054
	ldr r0, _0808C640 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x40
	ldr r0, _0808C644 @ =gBg1XPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808C648 @ =gBg1YPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808C64C @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808C650 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808C654 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808C658 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r0, _0808C65C @ =gNonGameplayRam
	movs r2, #0x88
	lsls r2, r2, #1
	adds r1, r0, r2
	ldrb r0, [r1]
	cmp r0, #1
	bne _0808C61E
	movs r0, #0
	strb r0, [r1]
	ldr r0, _0808C660 @ =0x085A9440
	str r0, [r3]
	ldr r0, _0808C664 @ =0x05000200
	str r0, [r3, #4]
	ldr r1, _0808C668 @ =0x84000078
	str r1, [r3, #8]
	ldr r0, [r3, #8]
	ldr r0, _0808C66C @ =0x085A9260
	str r0, [r3]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r3, #4]
	str r1, [r3, #8]
	ldr r0, [r3, #8]
_0808C61E:
	pop {r0}
	bx r0
	.align 2, 0
_0808C624: .4byte 0x040000D4
_0808C628: .4byte gOamData
_0808C62C: .4byte 0x84000100
_0808C630: .4byte 0x04000052
_0808C634: .4byte 0x03001222
_0808C638: .4byte 0x03001220
_0808C63C: .4byte 0x04000054
_0808C640: .4byte gWrittenToBldy
_0808C644: .4byte gBg1XPosition
_0808C648: .4byte gBg1YPosition
_0808C64C: .4byte 0x0300122C
_0808C650: .4byte 0x0300122E
_0808C654: .4byte 0x03001230
_0808C658: .4byte 0x03001232
_0808C65C: .4byte gNonGameplayRam
_0808C660: .4byte 0x085A9440
_0808C664: .4byte 0x05000200
_0808C668: .4byte 0x84000078
_0808C66C: .4byte 0x085A9260

	thumb_func_start NewFileIntroSamusGettingCuredInit
NewFileIntroSamusGettingCuredInit: @ 0x0808C670
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	ldr r3, _0808C7D0 @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _0808C7D4 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _0808C7D8 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0808C7DC @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0808C7E0 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0808C7E4 @ =unk_99940
	bl CallbackSetVBlank
	ldr r6, _0808C7E8 @ =gNonGameplayRam
	ldr r1, [r6, #4]
	movs r5, #0
	str r5, [sp]
	ldr r4, _0808C7EC @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	str r6, [r4, #4]
	ldr r0, _0808C7F0 @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	str r1, [r6, #4]
	ldr r0, _0808C7F4 @ =0x085A965C
	ldr r1, _0808C7F8 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _0808C7FC @ =0x085B0F3C
	str r0, [r4]
	ldr r0, _0808C800 @ =0x05000200
	str r0, [r4, #4]
	ldr r2, _0808C804 @ =0x84000080
	mov r8, r2
	str r2, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808C808 @ =0x08613148
	str r0, [r4]
	ldr r0, _0808C80C @ =0x06017FE0
	str r0, [r4, #4]
	ldr r1, _0808C810 @ =0x84000008
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808C814 @ =0x086131A8
	str r0, [r4]
	ldr r0, _0808C818 @ =0x050003E0
	str r0, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808C81C @ =0x085B113C
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _0808C820 @ =0x085B3EE4
	ldr r1, _0808C824 @ =0x0600E800
	bl LZ77UncompVram
	ldr r0, _0808C828 @ =0x085B408C
	ldr r1, _0808C82C @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _0808C830 @ =0x085B4240
	ldr r1, _0808C834 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _0808C838 @ =0x08598898
	ldr r1, _0808C83C @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _0808C840 @ =0x085B3CE4
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	mov r0, r8
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r1, _0808C844 @ =0x04000010
	ldr r2, _0808C848 @ =0x0000FFF8
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _0808C84C @ =0x04000012
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	subs r1, #8
	ldr r2, _0808C850 @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	adds r2, #0xfa
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _0808C854 @ =0x00001E03
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _0808C858 @ =0x00001F03
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x42
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _0808C85C @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _0808C860 @ =0x04000054
	strh r1, [r0]
	movs r1, #0x82
	lsls r1, r1, #1
	movs r0, #0xc8
	movs r2, #0
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #1
	movs r1, #0xc0
	movs r2, #0x60
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #4
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSamusGettingCuredSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _0808C864 @ =0x0863A19C
	str r0, [r6]
	str r5, [sp]
	mov r0, sp
	str r0, [r4]
	ldr r0, _0808C868 @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _0808C86C @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xe8
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _0808C870 @ =NewFileIntroSamusGettingCuredVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808C7D0: .4byte 0x04000208
_0808C7D4: .4byte 0x04000004
_0808C7D8: .4byte 0x0000FFEF
_0808C7DC: .4byte 0x04000200
_0808C7E0: .4byte 0x0000FFFD
_0808C7E4: .4byte unk_99940
_0808C7E8: .4byte gNonGameplayRam
_0808C7EC: .4byte 0x040000D4
_0808C7F0: .4byte 0x85000150
_0808C7F4: .4byte 0x085A965C
_0808C7F8: .4byte 0x06010000
_0808C7FC: .4byte 0x085B0F3C
_0808C800: .4byte 0x05000200
_0808C804: .4byte 0x84000080
_0808C808: .4byte 0x08613148
_0808C80C: .4byte 0x06017FE0
_0808C810: .4byte 0x84000008
_0808C814: .4byte 0x086131A8
_0808C818: .4byte 0x050003E0
_0808C81C: .4byte 0x085B113C
_0808C820: .4byte 0x085B3EE4
_0808C824: .4byte 0x0600E800
_0808C828: .4byte 0x085B408C
_0808C82C: .4byte 0x0600F000
_0808C830: .4byte 0x085B4240
_0808C834: .4byte 0x0600F800
_0808C838: .4byte 0x08598898
_0808C83C: .4byte 0x0600E000
_0808C840: .4byte 0x085B3CE4
_0808C844: .4byte 0x04000010
_0808C848: .4byte 0x0000FFF8
_0808C84C: .4byte 0x04000012
_0808C850: .4byte 0x00001C08
_0808C854: .4byte 0x00001E03
_0808C858: .4byte 0x00001F03
_0808C85C: .4byte gWrittenToBldy
_0808C860: .4byte 0x04000054
_0808C864: .4byte 0x0863A19C
_0808C868: .4byte 0x0600D000
_0808C86C: .4byte 0x85000400
_0808C870: .4byte NewFileIntroSamusGettingCuredVblank

	thumb_func_start NewFileIntroSamusGettingCuredOperationProcess
NewFileIntroSamusGettingCuredOperationProcess: @ 0x0808C874
	push {r4, r5, r6, r7, lr}
	movs r7, #0
	ldr r2, _0808C8C8 @ =gNonGameplayRam
	ldr r0, [r2]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _0808C8A2
	ldr r0, _0808C8CC @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808C8A2
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _0808C8A2
	movs r0, #1
	strb r0, [r1]
_0808C8A2:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r3, r2, r1
	ldrh r0, [r3]
	adds r0, #1
	movs r5, #0
	movs r4, #0
	strh r0, [r3]
	adds r1, #4
	adds r6, r2, r1
	ldrb r1, [r6]
	cmp r1, #1
	beq _0808C954
	cmp r1, #1
	bgt _0808C8D0
	cmp r1, #0
	beq _0808C8DA
	b _0808C9BE
	.align 2, 0
_0808C8C8: .4byte gNonGameplayRam
_0808C8CC: .4byte gChangedInput
_0808C8D0:
	cmp r1, #2
	beq _0808C974
	cmp r1, #3
	beq _0808C998
	b _0808C9BE
_0808C8DA:
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0x3c
	bne _0808C8F8
	ldr r3, _0808C8F4 @ =0x00000212
	adds r0, r2, r3
	strb r5, [r0]
	strh r4, [r2, #0xe]
	strh r4, [r2, #0xc]
	ldr r0, [r2, #4]
	str r0, [r2]
	b _0808C936
	.align 2, 0
_0808C8F4: .4byte 0x00000212
_0808C8F8:
	cmp r1, #0xa0
	bne _0808C90E
	movs r0, #0x80
	lsls r0, r0, #0x13
	ldrh r1, [r0]
	movs r3, #0x80
	lsls r3, r3, #2
	adds r2, r3, #0
	orrs r1, r2
	strh r1, [r0]
	b _0808C936
_0808C90E:
	cmp r1, #0xb4
	bne _0808C928
	movs r0, #2
	movs r1, #0x6c
	movs r2, #0x40
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #3
	movs r1, #0x80
	movs r2, #0x44
	bl NewFileIntroSamusGettingCuredSetupOam
	b _0808C936
_0808C928:
	movs r0, #0xc8
	lsls r0, r0, #1
	cmp r1, r0
	bls _0808C936
	strh r4, [r3]
	movs r0, #1
	strb r0, [r6]
_0808C936:
	ldr r0, _0808C950 @ =gNonGameplayRam
	movs r2, #0x86
	lsls r2, r2, #2
	adds r1, r0, r2
	ldrb r0, [r1]
	cmp r0, #2
	beq _0808C948
	cmp r0, #4
	bne _0808C988
_0808C948:
	movs r0, #0
	strb r0, [r1]
	b _0808C988
	.align 2, 0
_0808C950: .4byte gNonGameplayRam
_0808C954:
	strh r4, [r3]
	movs r3, #0x86
	lsls r3, r3, #2
	adds r0, r2, r3
	ldrb r1, [r0]
	cmp r1, #2
	beq _0808C966
	cmp r1, #4
	bne _0808C96A
_0808C966:
	strb r5, [r0]
	b _0808C988
_0808C96A:
	cmp r1, #3
	bne _0808C988
	strb r5, [r0]
	movs r0, #2
	b _0808C986
_0808C974:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1e
	bne _0808C988
	strh r4, [r3]
	ldr r0, _0808C994 @ =0x04000050
	movs r1, #0xff
	strh r1, [r0]
	movs r0, #3
_0808C986:
	strb r0, [r6]
_0808C988:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _0808C9BE
	.align 2, 0
_0808C994: .4byte 0x04000050
_0808C998:
	ldr r1, _0808C9A8 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0808C9AC
	adds r0, #2
	strh r0, [r1]
	b _0808C9B6
	.align 2, 0
_0808C9A8: .4byte gWrittenToBldy
_0808C9AC:
	movs r0, #0x10
	strh r0, [r1]
	strh r4, [r3]
	strb r5, [r6]
	movs r7, #1
_0808C9B6:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_0808C9BE:
	bl IntroProcessText
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start NewFileIntroSamusGettingCuredNervousSystemHblank
NewFileIntroSamusGettingCuredNervousSystemHblank: @ 0x0808C9CC
	ldr r0, _0808C9E0 @ =0x04000006
	ldrh r0, [r0]
	ldr r1, _0808C9E4 @ =0x04000040
	lsls r0, r0, #0x11
	asrs r0, r0, #0x10
	ldr r2, _0808C9E8 @ =0x02002000
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_0808C9E0: .4byte 0x04000006
_0808C9E4: .4byte 0x04000040
_0808C9E8: .4byte 0x02002000

	thumb_func_start NewFileIntroSamusGettingCuredNervousSystemInit
NewFileIntroSamusGettingCuredNervousSystemInit: @ 0x0808C9EC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	ldr r0, _0808CC48 @ =unk_99940
	bl CallbackSetVBlank
	movs r5, #0
	str r5, [sp]
	ldr r4, _0808CC4C @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r7, _0808CC50 @ =0x030016A0
	str r7, [r4, #4]
	ldr r0, _0808CC54 @ =0x850000B4
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r1, _0808CC58 @ =0xFFFFFDE4
	adds r1, r1, r7
	mov sb, r1
	subs r0, r7, #4
	strb r5, [r0]
	ldr r0, _0808CC5C @ =0x085B4580
	ldr r1, _0808CC60 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _0808CC64 @ =0x085BA054
	str r0, [r4]
	ldr r0, _0808CC68 @ =0x05000200
	str r0, [r4, #4]
	ldr r6, _0808CC6C @ =0x84000080
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808CC70 @ =0x08613148
	str r0, [r4]
	ldr r0, _0808CC74 @ =0x06017FE0
	str r0, [r4, #4]
	ldr r1, _0808CC78 @ =0x84000008
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808CC7C @ =0x086131A8
	str r0, [r4]
	ldr r0, _0808CC80 @ =0x050003E0
	str r0, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808CC84 @ =0x085BA254
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _0808CC88 @ =0x085BF728
	ldr r1, _0808CC8C @ =0x0600E800
	bl LZ77UncompVram
	ldr r0, _0808CC90 @ =0x085BF62C
	ldr r1, _0808CC94 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _0808CC98 @ =0x085BF068
	ldr r1, _0808CC9C @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _0808CCA0 @ =0x08598898
	ldr r1, _0808CCA4 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _0808CCA8 @ =0x085BEE68
	str r0, [r4]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	str r1, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	movs r2, #0xf8
	lsls r2, r2, #2
	adds r0, r2, #0
	strh r0, [r1]
	ldr r1, _0808CCAC @ =0x04000010
	ldr r3, _0808CCB0 @ =0x0000FFF8
	adds r0, r3, #0
	strh r0, [r1]
	ldr r0, _0808CCB4 @ =0x04000012
	movs r1, #0
	mov r8, r1
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r1, _0808CCB8 @ =0x04000008
	ldr r2, _0808CCBC @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r3, _0808CCC0 @ =0x00001D01
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _0808CCC4 @ =0x00001E02
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r3, _0808CCC8 @ =0x00001F03
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #0x42
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _0808CCCC @ =gWrittenToBldy
	movs r6, #0x10
	strh r6, [r0]
	ldr r0, _0808CCD0 @ =0x04000054
	strh r6, [r0]
	ldr r1, _0808CCD4 @ =0x03001222
	ldr r0, _0808CCD8 @ =0x03001220
	strh r5, [r0]
	strh r5, [r1]
	movs r1, #0x82
	lsls r1, r1, #1
	movs r0, #0xc8
	movs r2, #0
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0xa
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0xa
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0xa
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0xa
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0xa
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0xa
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0xa
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0xe
	movs r1, #0xac
	movs r2, #0x9e
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0xf
	movs r1, #0x78
	movs r2, #0x50
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0x10
	movs r1, #0xc3
	movs r2, #0x61
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0x11
	movs r1, #0x80
	movs r2, #0x80
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0x12
	movs r1, #0x91
	movs r2, #0x1c
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0x13
	movs r1, #0x64
	movs r2, #0x48
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0x14
	movs r1, #0x2c
	movs r2, #0x1e
	bl NewFileIntroSamusGettingCuredSetupOam
	movs r0, #0x15
	movs r1, #0x3e
	movs r2, #0x79
	bl NewFileIntroSamusGettingCuredSetupOam
	ldr r1, _0808CCDC @ =0xFFFFFEF4
	adds r0, r7, r1
	mov r2, r8
	strb r2, [r0]
	ldr r3, _0808CCE0 @ =0xFFFFFEF5
	adds r0, r7, r3
	strb r2, [r0]
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _0808CCE4 @ =0x0863A19C
	mov r1, sb
	str r0, [r1]
	str r5, [sp]
	mov r2, sp
	str r2, [r4]
	ldr r0, _0808CCE8 @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _0808CCEC @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r1, _0808CCF0 @ =0x04000044
	movs r0, #0xa0
	strh r0, [r1]
	adds r1, r7, #0
	subs r1, #0x29
	movs r0, #0x46
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x78
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x4e
	strb r0, [r1]
	bl NewFileIntroSamusGettingCuredSetupWindow
	bl NewFileIntroSamusGettingCuredSetupWindow
	ldr r0, _0808CCF4 @ =NewFileIntroSamusGettingCuredNervousSystemHblank
	str r0, [r4]
	movs r3, #0xb4
	lsls r3, r3, #2
	adds r0, r7, r3
	str r0, [r4, #4]
	ldr r0, _0808CCF8 @ =0x84000014
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r0, #0xc8
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r2, _0808CCFC @ =0x000002D1
	adds r0, r7, r2
	str r0, [r1]
	bl CallbackSetHBlank
	ldr r2, _0808CD00 @ =0x04000200
	ldrh r0, [r2]
	movs r1, #2
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0808CD04 @ =0x04000004
	ldrh r0, [r1]
	orrs r0, r6
	strh r0, [r1]
	adds r1, #0x44
	movs r0, #0x3b
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x3f
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	movs r3, #0xf8
	lsls r3, r3, #5
	adds r0, r3, #0
	strh r0, [r2]
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #6
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r0, _0808CD08 @ =NewFileIntroSamusGettingCuredNervousSystemVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808CC48: .4byte unk_99940
_0808CC4C: .4byte 0x040000D4
_0808CC50: .4byte 0x030016A0
_0808CC54: .4byte 0x850000B4
_0808CC58: .4byte 0xFFFFFDE4
_0808CC5C: .4byte 0x085B4580
_0808CC60: .4byte 0x06010000
_0808CC64: .4byte 0x085BA054
_0808CC68: .4byte 0x05000200
_0808CC6C: .4byte 0x84000080
_0808CC70: .4byte 0x08613148
_0808CC74: .4byte 0x06017FE0
_0808CC78: .4byte 0x84000008
_0808CC7C: .4byte 0x086131A8
_0808CC80: .4byte 0x050003E0
_0808CC84: .4byte 0x085BA254
_0808CC88: .4byte 0x085BF728
_0808CC8C: .4byte 0x0600E800
_0808CC90: .4byte 0x085BF62C
_0808CC94: .4byte 0x0600F000
_0808CC98: .4byte 0x085BF068
_0808CC9C: .4byte 0x0600F800
_0808CCA0: .4byte 0x08598898
_0808CCA4: .4byte 0x0600E000
_0808CCA8: .4byte 0x085BEE68
_0808CCAC: .4byte 0x04000010
_0808CCB0: .4byte 0x0000FFF8
_0808CCB4: .4byte 0x04000012
_0808CCB8: .4byte 0x04000008
_0808CCBC: .4byte 0x00001C08
_0808CCC0: .4byte 0x00001D01
_0808CCC4: .4byte 0x00001E02
_0808CCC8: .4byte 0x00001F03
_0808CCCC: .4byte gWrittenToBldy
_0808CCD0: .4byte 0x04000054
_0808CCD4: .4byte 0x03001222
_0808CCD8: .4byte 0x03001220
_0808CCDC: .4byte 0xFFFFFEF4
_0808CCE0: .4byte 0xFFFFFEF5
_0808CCE4: .4byte 0x0863A19C
_0808CCE8: .4byte 0x0600D000
_0808CCEC: .4byte 0x85000400
_0808CCF0: .4byte 0x04000044
_0808CCF4: .4byte NewFileIntroSamusGettingCuredNervousSystemHblank
_0808CCF8: .4byte 0x84000014
_0808CCFC: .4byte 0x000002D1
_0808CD00: .4byte 0x04000200
_0808CD04: .4byte 0x04000004
_0808CD08: .4byte NewFileIntroSamusGettingCuredNervousSystemVblank

	thumb_func_start NewFileIntroSamusGettingCuredNervousSystemProcess
NewFileIntroSamusGettingCuredNervousSystemProcess: @ 0x0808CD0C
	push {r4, r5, r6, lr}
	movs r6, #0
	ldr r2, _0808CD60 @ =gNonGameplayRam
	ldr r0, [r2]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	adds r3, r2, #0
	cmp r1, r0
	bne _0808CD3C
	ldr r0, _0808CD64 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808CD3C
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r3, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _0808CD3C
	movs r0, #1
	strb r0, [r1]
_0808CD3C:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r3, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r3, r2
	ldrb r0, [r0]
	cmp r0, #7
	bls _0808CD56
	b _0808CF72
_0808CD56:
	lsls r0, r0, #2
	ldr r1, _0808CD68 @ =_0808CD6C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808CD60: .4byte gNonGameplayRam
_0808CD64: .4byte gChangedInput
_0808CD68: .4byte _0808CD6C
_0808CD6C: @ jump table
	.4byte _0808CD8C @ case 0
	.4byte _0808CDA4 @ case 1
	.4byte _0808CDDC @ case 2
	.4byte _0808CE10 @ case 3
	.4byte _0808CE58 @ case 4
	.4byte _0808CEB8 @ case 5
	.4byte _0808CEF0 @ case 6
	.4byte _0808CF38 @ case 7
_0808CD8C:
	bl NewFileIntroSamusGettingCuredNervousSystemInit
	ldr r0, _0808CDA0 @ =gNonGameplayRam
	movs r4, #0x85
	lsls r4, r4, #2
	adds r0, r0, r4
	movs r1, #1
	strb r1, [r0]
	b _0808CF72
	.align 2, 0
_0808CDA0: .4byte gNonGameplayRam
_0808CDA4:
	ldr r2, _0808CDB4 @ =gWrittenToBldy
	ldrh r0, [r2]
	adds r1, r0, #0
	cmp r1, #0
	beq _0808CDB8
	subs r0, #2
	strh r0, [r2]
	b _0808CF28
	.align 2, 0
_0808CDB4: .4byte gWrittenToBldy
_0808CDB8:
	strh r1, [r2]
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r3, r2
	strh r1, [r0]
	ldr r1, _0808CDD4 @ =0x04000050
	ldr r4, _0808CDD8 @ =0x00003844
	adds r0, r4, #0
	strh r0, [r1]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #2
	b _0808CF26
	.align 2, 0
_0808CDD4: .4byte 0x04000050
_0808CDD8: .4byte 0x00003844
_0808CDDC:
	ldr r1, _0808CDF4 @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0xb
	bhi _0808CDFC
	adds r0, #1
	strh r0, [r1]
	ldr r1, _0808CDF8 @ =0x03001222
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0808CF28
	.align 2, 0
_0808CDF4: .4byte 0x03001220
_0808CDF8: .4byte 0x03001222
_0808CDFC:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #0
	strh r0, [r1]
	movs r4, #0x85
	lsls r4, r4, #2
	adds r1, r3, r4
	movs r0, #3
	b _0808CF26
_0808CE10:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r4, r3, r0
	ldrh r0, [r4]
	cmp r0, #0x1e
	beq _0808CE1E
	b _0808CF28
_0808CE1E:
	movs r2, #0
	movs r1, #0
	strh r1, [r4]
	ldr r4, _0808CE4C @ =0x00000212
	adds r0, r3, r4
	strb r2, [r0]
	strh r1, [r3, #0xe]
	strh r1, [r3, #0xc]
	ldr r1, _0808CE50 @ =0x0879C5A4
	ldr r0, _0808CE54 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x40]
	str r0, [r3]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #4
	b _0808CF26
	.align 2, 0
_0808CE4C: .4byte 0x00000212
_0808CE50: .4byte 0x0879C5A4
_0808CE54: .4byte 0x03000011
_0808CE58:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r5, #0
	movs r0, #0
	strh r0, [r1]
	movs r0, #0x86
	lsls r0, r0, #2
	adds r4, r3, r0
	ldrb r0, [r4]
	cmp r0, #2
	bne _0808CE78
	strb r5, [r4]
	ldr r0, [r3]
	str r0, [r3, #4]
	b _0808CF28
_0808CE78:
	cmp r0, #3
	bne _0808CE88
	strb r5, [r4]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #5
	b _0808CF26
_0808CE88:
	cmp r0, #4
	bne _0808CF28
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0808CEB0 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	strb r5, [r4]
	movs r4, #0x85
	lsls r4, r4, #2
	adds r1, r3, r4
	movs r0, #5
	strb r0, [r1]
	ldr r0, [r3]
	str r0, [r3, #4]
	ldr r0, _0808CEB4 @ =0x0863A19C
	str r0, [r3]
	b _0808CF28
	.align 2, 0
_0808CEB0: .4byte 0x0000FEFF
_0808CEB4: .4byte 0x0863A19C
_0808CEB8:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r2, r3, r0
	ldrh r1, [r2]
	cmp r1, #1
	bne _0808CED0
	movs r0, #0x1c
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSamusGettingCuredSetupOam
	b _0808CF28
_0808CED0:
	movs r0, #0xe1
	lsls r0, r0, #1
	cmp r1, r0
	bls _0808CF28
	movs r0, #0
	strh r0, [r2]
	ldr r1, _0808CEEC @ =gWrittenToBldy
	movs r0, #4
	strh r0, [r1]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	b _0808CF24
	.align 2, 0
_0808CEEC: .4byte gWrittenToBldy
_0808CEF0:
	ldr r2, _0808CF08 @ =0x03001220
	ldrh r0, [r2]
	adds r1, r0, #0
	cmp r1, #0
	beq _0808CF10
	subs r0, #2
	strh r0, [r2]
	ldr r1, _0808CF0C @ =0x03001222
	ldrh r0, [r1]
	subs r0, #2
	strh r0, [r1]
	b _0808CF28
	.align 2, 0
_0808CF08: .4byte 0x03001220
_0808CF0C: .4byte 0x03001222
_0808CF10:
	movs r4, #0x84
	lsls r4, r4, #2
	adds r0, r3, r4
	strh r1, [r0]
	ldr r1, _0808CF34 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
_0808CF24:
	movs r0, #7
_0808CF26:
	strb r0, [r1]
_0808CF28:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _0808CF72
	.align 2, 0
_0808CF34: .4byte 0x04000050
_0808CF38:
	ldr r1, _0808CF4C @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	ldr r1, _0808CF50 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0808CF54
	adds r0, #2
	strh r0, [r1]
	b _0808CF6A
	.align 2, 0
_0808CF4C: .4byte 0x04000050
_0808CF50: .4byte gWrittenToBldy
_0808CF54:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	movs r4, #0x85
	lsls r4, r4, #2
	adds r0, r3, r4
	strb r2, [r0]
	movs r6, #1
_0808CF6A:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_0808CF72:
	bl IntroProcessText
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start NewFileIntroSamusGettingCured
NewFileIntroSamusGettingCured: @ 0x0808CF80
	push {r4, lr}
	movs r4, #0
	ldr r0, _0808CF98 @ =gNonGameplayRam
	ldrh r1, [r0, #8]
	adds r2, r0, #0
	cmp r1, #4
	bhi _0808D052
	lsls r0, r1, #2
	ldr r1, _0808CF9C @ =_0808CFA0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808CF98: .4byte gNonGameplayRam
_0808CF9C: .4byte _0808CFA0
_0808CFA0: @ jump table
	.4byte _0808CFB4 @ case 0
	.4byte _0808CFC4 @ case 1
	.4byte _0808CFE0 @ case 2
	.4byte _0808D008 @ case 3
	.4byte _0808D030 @ case 4
_0808CFB4:
	bl NewFileIntroSamusGettingCuredInit
	ldr r1, _0808CFC0 @ =gNonGameplayRam
	movs r0, #1
	strh r0, [r1, #8]
	b _0808D052
	.align 2, 0
_0808CFC0: .4byte gNonGameplayRam
_0808CFC4:
	bl SpecialCutsceneFadeIn
	ldr r0, _0808CFD8 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _0808D052
	ldr r1, _0808CFDC @ =gNonGameplayRam
	movs r0, #2
	strh r0, [r1, #8]
	b _0808D052
	.align 2, 0
_0808CFD8: .4byte gWrittenToBldy
_0808CFDC: .4byte gNonGameplayRam
_0808CFE0:
	bl NewFileIntroSamusGettingCuredOperationProcess
	cmp r0, #0
	beq _0808D052
	ldr r1, _0808D000 @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r1, r2
	movs r2, #0
	strb r2, [r0]
	ldr r3, _0808D004 @ =0x00000213
	adds r0, r1, r3
	strb r2, [r0]
	movs r0, #3
	strh r0, [r1, #8]
	b _0808D052
	.align 2, 0
_0808D000: .4byte gNonGameplayRam
_0808D004: .4byte 0x00000213
_0808D008:
	bl NewFileIntroSamusGettingCuredNervousSystemProcess
	cmp r0, #0
	beq _0808D052
	ldr r1, _0808D028 @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r1, r2
	movs r2, #0
	strb r2, [r0]
	ldr r3, _0808D02C @ =0x00000213
	adds r0, r1, r3
	strb r2, [r0]
	movs r0, #4
	strh r0, [r1, #8]
	b _0808D052
	.align 2, 0
_0808D028: .4byte gNonGameplayRam
_0808D02C: .4byte 0x00000213
_0808D030:
	ldr r1, _0808D040 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0808D044
	adds r0, #1
	strh r0, [r1]
	b _0808D04A
	.align 2, 0
_0808D040: .4byte gWrittenToBldy
_0808D044:
	movs r0, #0
	strh r0, [r2, #8]
	movs r4, #1
_0808D04A:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_0808D052:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start NewFileIntroProcessVaccineBackgroundText
NewFileIntroProcessVaccineBackgroundText: @ 0x0808D05C
	ldr r3, _0808D068 @ =0x0400001A
	ldrh r2, [r0, #0xe]
	subs r1, r2, #1
	strh r1, [r0, #0xe]
	strh r2, [r3]
	bx lr
	.align 2, 0
_0808D068: .4byte 0x0400001A

	thumb_func_start unk_8d06c
unk_8d06c: @ 0x0808D06C
	movs r1, #0
	strb r1, [r0, #0x10]
	ldrb r2, [r0, #0x18]
	subs r1, #2
	ands r1, r2
	strb r1, [r0, #0x18]
	bx lr
	.align 2, 0

	thumb_func_start NewFileIntroProcessXInNervousSystem
NewFileIntroProcessXInNervousSystem: @ 0x0808D07C
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _0808D092
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	movs r0, #1
	strb r0, [r4, #0x14]
_0808D092:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x4f
	bhi _0808D0D0
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808D0BA
	ldrh r2, [r4, #0xc]
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r3, #0
	ldrsh r0, [r4, r3]
	cmp r1, r0
	bge _0808D102
	adds r0, r2, #1
	strh r0, [r4, #0xc]
	b _0808D102
_0808D0BA:
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r2, #0
	ldrsh r0, [r4, r2]
	subs r0, #4
	cmp r1, r0
	ble _0808D102
	ldrh r0, [r4, #0xc]
	subs r0, #1
	strh r0, [r4, #0xc]
	b _0808D102
_0808D0D0:
	cmp r1, #0x9f
	bhi _0808D102
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808D0F0
	movs r3, #0xe
	ldrsh r1, [r4, r3]
	movs r2, #2
	ldrsh r0, [r4, r2]
	adds r0, #5
	cmp r1, r0
	bge _0808D102
	ldrh r0, [r4, #0xe]
	adds r0, #1
	b _0808D100
_0808D0F0:
	ldrh r2, [r4, #0xe]
	movs r3, #0xe
	ldrsh r1, [r4, r3]
	movs r3, #2
	ldrsh r0, [r4, r3]
	cmp r1, r0
	ble _0808D102
	subs r0, r2, #1
_0808D100:
	strh r0, [r4, #0xe]
_0808D102:
	ldr r0, _0808D130 @ =gNonGameplayRam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #5
	bne _0808D154
	ldrh r0, [r4, #0xa]
	adds r0, #1
	strh r0, [r4, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	bne _0808D134
	movs r2, #0xc
	ldrsh r1, [r4, r2]
	movs r3, #0xe
	ldrsh r2, [r4, r3]
	movs r0, #0x16
	bl NewFileIntroSamusGettingCuredSetupOam
	b _0808D154
	.align 2, 0
_0808D130: .4byte gNonGameplayRam
_0808D134:
	cmp r0, #0xdc
	bls _0808D154
	ldrh r0, [r4, #6]
	subs r0, #2
	strh r0, [r4, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bgt _0808D154
	movs r0, #0
	strb r0, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
_0808D154:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NewFileIntroProcessXLockOn
NewFileIntroProcessXLockOn: @ 0x0808D15C
	push {r4, lr}
	adds r2, r0, #0
	ldr r3, _0808D1C0 @ =gNonGameplayRam
	movs r0, #8
	ldrsh r1, [r2, r0]
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r1, r0, r3
	movs r4, #0x8b
	lsls r4, r4, #2
	adds r0, r1, r4
	ldrb r0, [r0]
	cmp r0, #0
	beq _0808D196
	subs r4, #4
	adds r0, r1, r4
	ldrh r0, [r0]
	strh r0, [r2, #0xc]
	movs r0, #8
	ldrsh r1, [r2, r0]
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	ldr r1, _0808D1C4 @ =0x0000022A
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r2, #0xe]
_0808D196:
	ldrb r0, [r2, #0x11]
	lsls r0, r0, #3
	ldr r1, [r2, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _0808D1B8
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0808D1B8
	strb r1, [r2, #0x10]
	ldrb r1, [r2, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x18]
_0808D1B8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808D1C0: .4byte gNonGameplayRam
_0808D1C4: .4byte 0x0000022A

	thumb_func_start unk_8d1c8
unk_8d1c8: @ 0x0808D1C8
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _0808D1DE
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	movs r0, #1
	strb r0, [r4, #0x14]
_0808D1DE:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x4f
	bhi _0808D21E
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808D208
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r2, #0
	ldrsh r0, [r4, r2]
	adds r0, #4
	cmp r1, r0
	bge _0808D252
	ldrh r0, [r4, #0xc]
	adds r0, #1
	strh r0, [r4, #0xc]
	b _0808D252
_0808D208:
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r2, #0
	ldrsh r0, [r4, r2]
	subs r0, #4
	cmp r1, r0
	ble _0808D252
	ldrh r0, [r4, #0xc]
	subs r0, #1
	strh r0, [r4, #0xc]
	b _0808D252
_0808D21E:
	cmp r1, #0x9f
	bhi _0808D252
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808D23E
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	movs r2, #2
	ldrsh r0, [r4, r2]
	adds r0, #4
	cmp r1, r0
	bge _0808D252
	ldrh r0, [r4, #0xe]
	adds r0, #1
	b _0808D250
_0808D23E:
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	movs r2, #2
	ldrsh r0, [r4, r2]
	subs r0, #4
	cmp r1, r0
	ble _0808D252
	ldrh r0, [r4, #0xe]
	subs r0, #1
_0808D250:
	strh r0, [r4, #0xe]
_0808D252:
	ldr r0, _0808D280 @ =gNonGameplayRam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #5
	bne _0808D2A4
	ldrh r0, [r4, #0xa]
	adds r0, #1
	strh r0, [r4, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	bne _0808D284
	movs r2, #0xc
	ldrsh r1, [r4, r2]
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #0x17
	bl NewFileIntroSamusGettingCuredSetupOam
	b _0808D2A4
	.align 2, 0
_0808D280: .4byte gNonGameplayRam
_0808D284:
	cmp r0, #0xdc
	bls _0808D2A4
	ldrh r0, [r4, #6]
	subs r0, #2
	strh r0, [r4, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bgt _0808D2A4
	movs r0, #0
	strb r0, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
_0808D2A4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_8d2ac
unk_8d2ac: @ 0x0808D2AC
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _0808D2C2
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	movs r0, #1
	strb r0, [r4, #0x14]
_0808D2C2:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x4f
	bhi _0808D302
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808D2EC
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r2, #0
	ldrsh r0, [r4, r2]
	adds r0, #6
	cmp r1, r0
	bge _0808D336
	ldrh r0, [r4, #0xc]
	adds r0, #1
	strh r0, [r4, #0xc]
	b _0808D336
_0808D2EC:
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r2, #0
	ldrsh r0, [r4, r2]
	subs r0, #1
	cmp r1, r0
	ble _0808D336
	ldrh r0, [r4, #0xc]
	subs r0, #1
	strh r0, [r4, #0xc]
	b _0808D336
_0808D302:
	cmp r1, #0x9f
	bhi _0808D336
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808D322
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	movs r2, #2
	ldrsh r0, [r4, r2]
	adds r0, #4
	cmp r1, r0
	bge _0808D336
	ldrh r0, [r4, #0xe]
	adds r0, #1
	b _0808D334
_0808D322:
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	movs r2, #2
	ldrsh r0, [r4, r2]
	subs r0, #3
	cmp r1, r0
	ble _0808D336
	ldrh r0, [r4, #0xe]
	subs r0, #1
_0808D334:
	strh r0, [r4, #0xe]
_0808D336:
	ldr r0, _0808D364 @ =gNonGameplayRam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #5
	bne _0808D394
	ldrh r0, [r4, #0xa]
	adds r0, #1
	strh r0, [r4, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x28
	bne _0808D368
	movs r2, #0xc
	ldrsh r1, [r4, r2]
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #0x18
	bl NewFileIntroSamusGettingCuredSetupOam
	b _0808D394
	.align 2, 0
_0808D364: .4byte gNonGameplayRam
_0808D368:
	cmp r0, #0xf0
	bls _0808D394
	ldrb r0, [r4, #0x18]
	movs r1, #7
	rsbs r1, r1, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	strb r1, [r4, #0x18]
	ldrh r0, [r4, #6]
	subs r0, #2
	strh r0, [r4, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bgt _0808D394
	movs r0, #0
	strb r0, [r4, #0x10]
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4, #0x18]
_0808D394:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_8d39c
unk_8d39c: @ 0x0808D39C
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _0808D3B2
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	movs r0, #1
	strb r0, [r4, #0x14]
_0808D3B2:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x4f
	bhi _0808D3F2
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808D3DC
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r2, #0
	ldrsh r0, [r4, r2]
	adds r0, #5
	cmp r1, r0
	bge _0808D426
	ldrh r0, [r4, #0xc]
	adds r0, #1
	strh r0, [r4, #0xc]
	b _0808D426
_0808D3DC:
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r2, #0
	ldrsh r0, [r4, r2]
	subs r0, #5
	cmp r1, r0
	ble _0808D426
	ldrh r0, [r4, #0xc]
	subs r0, #1
	strh r0, [r4, #0xc]
	b _0808D426
_0808D3F2:
	cmp r1, #0x9f
	bhi _0808D426
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808D412
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	movs r2, #2
	ldrsh r0, [r4, r2]
	adds r0, #5
	cmp r1, r0
	bge _0808D426
	ldrh r0, [r4, #0xe]
	adds r0, #1
	b _0808D424
_0808D412:
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	movs r2, #2
	ldrsh r0, [r4, r2]
	subs r0, #5
	cmp r1, r0
	ble _0808D426
	ldrh r0, [r4, #0xe]
	subs r0, #1
_0808D424:
	strh r0, [r4, #0xe]
_0808D426:
	ldr r0, _0808D454 @ =gNonGameplayRam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #5
	bne _0808D478
	ldrh r0, [r4, #0xa]
	adds r0, #1
	strh r0, [r4, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x28
	bne _0808D458
	movs r2, #0xc
	ldrsh r1, [r4, r2]
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #0x19
	bl NewFileIntroSamusGettingCuredSetupOam
	b _0808D478
	.align 2, 0
_0808D454: .4byte gNonGameplayRam
_0808D458:
	cmp r0, #0xf0
	bls _0808D478
	ldrh r0, [r4, #6]
	subs r0, #2
	strh r0, [r4, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bgt _0808D478
	movs r0, #0
	strb r0, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
_0808D478:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_8d480
unk_8d480: @ 0x0808D480
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _0808D496
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	movs r0, #1
	strb r0, [r4, #0x14]
_0808D496:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x4f
	bhi _0808D4D6
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808D4C0
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r2, #0
	ldrsh r0, [r4, r2]
	adds r0, #5
	cmp r1, r0
	bge _0808D508
	ldrh r0, [r4, #0xc]
	adds r0, #1
	strh r0, [r4, #0xc]
	b _0808D508
_0808D4C0:
	movs r3, #0xc
	ldrsh r1, [r4, r3]
	movs r2, #0
	ldrsh r0, [r4, r2]
	subs r0, #1
	cmp r1, r0
	ble _0808D508
	ldrh r0, [r4, #0xc]
	subs r0, #1
	strh r0, [r4, #0xc]
	b _0808D508
_0808D4D6:
	cmp r1, #0x9f
	bhi _0808D508
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808D4F6
	movs r3, #0xe
	ldrsh r1, [r4, r3]
	movs r2, #2
	ldrsh r0, [r4, r2]
	adds r0, #4
	cmp r1, r0
	bge _0808D508
	ldrh r0, [r4, #0xe]
	adds r0, #1
	b _0808D506
_0808D4F6:
	ldrh r2, [r4, #0xe]
	movs r3, #0xe
	ldrsh r1, [r4, r3]
	movs r3, #2
	ldrsh r0, [r4, r3]
	cmp r1, r0
	ble _0808D508
	subs r0, r2, #1
_0808D506:
	strh r0, [r4, #0xe]
_0808D508:
	ldr r0, _0808D534 @ =gNonGameplayRam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #5
	bne _0808D568
	ldrh r0, [r4, #0xa]
	adds r0, #1
	strh r0, [r4, #0xa]
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0x3c
	bne _0808D538
	movs r2, #0xc
	ldrsh r1, [r4, r2]
	movs r3, #0xe
	ldrsh r2, [r4, r3]
	movs r0, #0x1a
	bl NewFileIntroSamusGettingCuredSetupOam
	b _0808D568
	.align 2, 0
_0808D534: .4byte gNonGameplayRam
_0808D538:
	movs r0, #0x82
	lsls r0, r0, #1
	cmp r1, r0
	bls _0808D568
	ldrb r0, [r4, #0x18]
	movs r1, #7
	rsbs r1, r1, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	strb r1, [r4, #0x18]
	ldrh r0, [r4, #6]
	subs r0, #2
	strh r0, [r4, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bgt _0808D568
	movs r0, #0
	strb r0, [r4, #0x10]
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4, #0x18]
_0808D568:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_8d570
unk_8d570: @ 0x0808D570
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _0808D586
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	movs r0, #1
	strb r0, [r4, #0x14]
_0808D586:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x4f
	bhi _0808D5C4
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808D5B0
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r2, #0
	ldrsh r0, [r4, r2]
	adds r0, #5
	cmp r1, r0
	bge _0808D5F8
	ldrh r0, [r4, #0xc]
	adds r0, #1
	strh r0, [r4, #0xc]
	b _0808D5F8
_0808D5B0:
	ldrh r2, [r4, #0xc]
	movs r3, #0xc
	ldrsh r1, [r4, r3]
	movs r3, #0
	ldrsh r0, [r4, r3]
	cmp r1, r0
	ble _0808D5F8
	subs r0, r2, #1
	strh r0, [r4, #0xc]
	b _0808D5F8
_0808D5C4:
	cmp r1, #0x9f
	bhi _0808D5F8
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808D5E4
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	movs r2, #2
	ldrsh r0, [r4, r2]
	adds r0, #3
	cmp r1, r0
	bge _0808D5F8
	ldrh r0, [r4, #0xe]
	adds r0, #1
	b _0808D5F6
_0808D5E4:
	movs r3, #0xe
	ldrsh r1, [r4, r3]
	movs r2, #2
	ldrsh r0, [r4, r2]
	subs r0, #3
	cmp r1, r0
	ble _0808D5F8
	ldrh r0, [r4, #0xe]
	subs r0, #1
_0808D5F6:
	strh r0, [r4, #0xe]
_0808D5F8:
	ldr r0, _0808D624 @ =gNonGameplayRam
	movs r3, #0x85
	lsls r3, r3, #2
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #5
	bne _0808D658
	ldrh r0, [r4, #0xa]
	adds r0, #1
	strh r0, [r4, #0xa]
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0x3c
	bne _0808D628
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r3, #0xe
	ldrsh r2, [r4, r3]
	movs r0, #0x1b
	bl NewFileIntroSamusGettingCuredSetupOam
	b _0808D658
	.align 2, 0
_0808D624: .4byte gNonGameplayRam
_0808D628:
	movs r0, #0x82
	lsls r0, r0, #1
	cmp r1, r0
	bls _0808D658
	ldrb r0, [r4, #0x18]
	movs r1, #7
	rsbs r1, r1, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	strb r1, [r4, #0x18]
	ldrh r0, [r4, #6]
	subs r0, #2
	strh r0, [r4, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bgt _0808D658
	movs r0, #0
	strb r0, [r4, #0x10]
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4, #0x18]
_0808D658:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_8d660
unk_8d660: @ 0x0808D660
	push {r4, r5, lr}
	adds r2, r0, #0
	ldrh r0, [r2, #0xa]
	adds r3, r0, #1
	strh r3, [r2, #0xa]
	ldrb r4, [r2, #0x14]
	cmp r4, #0
	bne _0808D69C
	lsls r0, r3, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	bls _0808D6E2
	strh r4, [r2, #0xa]
	ldr r3, _0808D694 @ =gNonGameplayRam
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r3, r1
	movs r1, #1
	strb r1, [r0]
	ldr r0, _0808D698 @ =0x00000111
	adds r3, r3, r0
	movs r0, #0
	strb r0, [r3]
	strb r1, [r2, #0x14]
	b _0808D6E2
	.align 2, 0
_0808D694: .4byte gNonGameplayRam
_0808D698: .4byte 0x00000111
_0808D69C:
	cmp r4, #1
	bne _0808D6E2
	ldr r5, _0808D6E8 @ =0x085A9620
	movs r1, #8
	ldrsh r0, [r2, r1]
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrb r1, [r0]
	lsls r0, r3, #0x10
	lsrs r0, r0, #0x10
	cmp r1, r0
	bne _0808D6E2
	movs r0, #0
	strh r0, [r2, #0xa]
	ldrh r1, [r2, #8]
	movs r3, #8
	ldrsh r0, [r2, r3]
	cmp r0, #0x1c
	bgt _0808D6C6
	adds r0, r1, #1
	strh r0, [r2, #8]
_0808D6C6:
	movs r1, #8
	ldrsh r0, [r2, r1]
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrh r0, [r0]
	lsrs r0, r0, #8
	ldr r1, _0808D6EC @ =gNonGameplayRam
	ldr r3, _0808D6F0 @ =0x00000111
	adds r2, r1, r3
	strb r0, [r2]
	movs r2, #0x88
	lsls r2, r2, #1
	adds r0, r1, r2
	strb r4, [r0]
_0808D6E2:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0808D6E8: .4byte 0x085A9620
_0808D6EC: .4byte gNonGameplayRam
_0808D6F0: .4byte 0x00000111

	thumb_func_start NewFileIntroSamusGettingCuredSetupOam
NewFileIntroSamusGettingCuredSetupOam: @ 0x0808D6F4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	movs r0, #0
	mov sb, r0
	ldr r1, _0808D748 @ =gNonGameplayRam
	movs r2, #0x8b
	lsls r2, r2, #2
	adds r0, r1, r2
	ldrb r0, [r0]
	mov r8, r1
	cmp r0, #0
	beq _0808D73C
_0808D71E:
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	cmp r0, #0x13
	bhi _0808D742
	lsls r0, r0, #3
	add r0, sb
	lsls r0, r0, #2
	adds r0, r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808D71E
_0808D73C:
	mov r1, sb
	cmp r1, #0x13
	bls _0808D74C
_0808D742:
	movs r0, #0x14
	b _0808DDAC
	.align 2, 0
_0808D748: .4byte gNonGameplayRam
_0808D74C:
	movs r0, #0
	str r0, [sp]
	ldr r1, _0808D7B4 @ =0x040000D4
	mov r3, sp
	str r3, [r1]
	mov r0, sb
	lsls r2, r0, #3
	adds r0, r2, r0
	lsls r6, r0, #2
	ldr r3, _0808D7B8 @ =0x030016A0
	mov ip, r3
	adds r0, r6, r3
	str r0, [r1, #4]
	ldr r0, _0808D7BC @ =0x85000009
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _0808D7C0 @ =0xFFFFFDE4
	add r0, ip
	adds r3, r6, r0
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r3, r1
	strh r5, [r0]
	ldr r5, _0808D7C4 @ =0x0000022A
	adds r0, r3, r5
	strh r7, [r0]
	adds r1, #4
	adds r0, r3, r1
	strb r4, [r0]
	adds r5, #0xa
	adds r7, r3, r5
	ldrb r1, [r7]
	movs r0, #1
	orrs r1, r0
	strb r1, [r7]
	adds r5, r2, #0
	cmp r4, #1
	bne _0808D7D0
	ldr r0, _0808D7C8 @ =0x00000236
	adds r2, r3, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808D7CC @ =0x085B0824
	b _0808D910
	.align 2, 0
_0808D7B4: .4byte 0x040000D4
_0808D7B8: .4byte 0x030016A0
_0808D7BC: .4byte 0x85000009
_0808D7C0: .4byte 0xFFFFFDE4
_0808D7C4: .4byte 0x0000022A
_0808D7C8: .4byte 0x00000236
_0808D7CC: .4byte 0x085B0824
_0808D7D0:
	cmp r4, #2
	bne _0808D7F8
	ldr r1, _0808D7F0 @ =0x00000236
	adds r2, r3, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808D7F4 @ =0x085B0A04
	b _0808D910
	.align 2, 0
_0808D7F0: .4byte 0x00000236
_0808D7F4: .4byte 0x085B0A04
_0808D7F8:
	cmp r4, #3
	bne _0808D820
	ldr r5, _0808D818 @ =0x00000236
	adds r2, r3, r5
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808D81C @ =0x085B0AAC
	b _0808D910
	.align 2, 0
_0808D818: .4byte 0x00000236
_0808D81C: .4byte 0x085B0AAC
_0808D820:
	cmp r4, #4
	bne _0808D83C
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r7]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _0808D838 @ =NewFileIntroProcessVaccineBackgroundText
	str r1, [r0]
	b _0808DDAA
	.align 2, 0
_0808D838: .4byte NewFileIntroProcessVaccineBackgroundText
_0808D83C:
	cmp r4, #0xa
	bne _0808D858
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r7]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _0808D854 @ =unk_8d06c
	str r1, [r0]
	b _0808DDAA
	.align 2, 0
_0808D854: .4byte unk_8d06c
_0808D858:
	cmp r4, #0xb
	bne _0808D880
	ldr r0, _0808D878 @ =0x00000236
	adds r2, r3, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808D87C @ =0x085B9C3C
	b _0808D910
	.align 2, 0
_0808D878: .4byte 0x00000236
_0808D87C: .4byte 0x085B9C3C
_0808D880:
	cmp r4, #0xc
	bne _0808D8A8
	ldr r1, _0808D8A0 @ =0x00000236
	adds r2, r3, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808D8A4 @ =0x085B9C94
	b _0808D910
	.align 2, 0
_0808D8A0: .4byte 0x00000236
_0808D8A4: .4byte 0x085B9C94
_0808D8A8:
	cmp r4, #0xd
	bne _0808D8D0
	ldr r5, _0808D8C8 @ =0x00000236
	adds r2, r3, r5
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808D8CC @ =0x085B9CEC
	b _0808D910
	.align 2, 0
_0808D8C8: .4byte 0x00000236
_0808D8CC: .4byte 0x085B9CEC
_0808D8D0:
	cmp r4, #0xe
	bne _0808D8F8
	ldr r0, _0808D8F0 @ =0x00000236
	adds r2, r3, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808D8F4 @ =0x085B9CFC
	b _0808D910
	.align 2, 0
_0808D8F0: .4byte 0x00000236
_0808D8F4: .4byte 0x085B9CFC
_0808D8F8:
	cmp r4, #0xf
	bne _0808D92C
	ldr r1, _0808D920 @ =0x00000236
	adds r2, r3, r1
	ldrb r0, [r2]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _0808D924 @ =0x085B9D14
_0808D910:
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _0808D928 @ =NewFileIntroProcessDna
	str r1, [r0]
	b _0808DDAA
	.align 2, 0
_0808D920: .4byte 0x00000236
_0808D924: .4byte 0x085B9D14
_0808D928: .4byte NewFileIntroProcessDna
_0808D92C:
	cmp r4, #0x10
	bne _0808D988
	mov r0, sb
	adds r3, r5, r0
	lsls r3, r3, #2
	mov r1, r8
	adds r2, r3, r1
	ldr r5, _0808D978 @ =0x00000222
	adds r1, r2, r5
	movs r0, #0xa0
	lsls r0, r0, #1
	strh r0, [r1]
	adds r0, #0xf4
	adds r4, r2, r0
	ldrb r0, [r4]
	movs r1, #6
	orrs r0, r1
	strb r0, [r4]
	ldr r1, _0808D97C @ =0x00000236
	adds r2, r2, r1
	ldrb r0, [r2]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r3, r0
	ldr r1, _0808D980 @ =0x085B9D24
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, r8
	adds r3, r3, r0
	ldr r0, _0808D984 @ =NewFileIntroProcessXInNervousSystem
	str r0, [r3]
	b _0808DDAA
	.align 2, 0
_0808D978: .4byte 0x00000222
_0808D97C: .4byte 0x00000236
_0808D980: .4byte 0x085B9D24
_0808D984: .4byte NewFileIntroProcessXInNervousSystem
_0808D988:
	cmp r4, #0x11
	bne _0808D9E4
	mov r0, sb
	adds r3, r5, r0
	lsls r3, r3, #2
	mov r1, r8
	adds r2, r3, r1
	ldr r5, _0808D9D4 @ =0x00000222
	adds r1, r2, r5
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r1]
	adds r0, #0xb4
	adds r4, r2, r0
	ldrb r0, [r4]
	movs r1, #6
	orrs r0, r1
	strb r0, [r4]
	ldr r1, _0808D9D8 @ =0x00000236
	adds r2, r2, r1
	ldrb r0, [r2]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r3, r0
	ldr r1, _0808D9DC @ =0x085B9DAC
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, r8
	adds r3, r3, r0
	ldr r0, _0808D9E0 @ =unk_8d1c8
	str r0, [r3]
	b _0808DDAA
	.align 2, 0
_0808D9D4: .4byte 0x00000222
_0808D9D8: .4byte 0x00000236
_0808D9DC: .4byte 0x085B9DAC
_0808D9E0: .4byte unk_8d1c8
_0808D9E4:
	cmp r4, #0x12
	bne _0808DA34
	mov r0, sb
	adds r3, r5, r0
	lsls r3, r3, #2
	mov r1, r8
	adds r2, r3, r1
	ldr r5, _0808DA24 @ =0x00000222
	adds r1, r2, r5
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	ldr r0, _0808DA28 @ =0x00000236
	adds r2, r2, r0
	ldrb r0, [r2]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r3, r0
	ldr r1, _0808DA2C @ =0x085B9E34
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, r8
	adds r3, r3, r0
	ldr r0, _0808DA30 @ =unk_8d2ac
	str r0, [r3]
	b _0808DDAA
	.align 2, 0
_0808DA24: .4byte 0x00000222
_0808DA28: .4byte 0x00000236
_0808DA2C: .4byte 0x085B9E34
_0808DA30: .4byte unk_8d2ac
_0808DA34:
	cmp r4, #0x13
	bne _0808DA90
	mov r1, sb
	adds r3, r5, r1
	lsls r3, r3, #2
	mov r5, r8
	adds r2, r3, r5
	ldr r0, _0808DA80 @ =0x00000222
	adds r1, r2, r0
	subs r0, #0xe2
	strh r0, [r1]
	movs r1, #0x8d
	lsls r1, r1, #2
	adds r4, r2, r1
	ldrb r0, [r4]
	movs r1, #6
	orrs r0, r1
	strb r0, [r4]
	ldr r5, _0808DA84 @ =0x00000236
	adds r2, r2, r5
	ldrb r0, [r2]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r3, r0
	ldr r1, _0808DA88 @ =0x085B9EBC
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, r8
	adds r3, r3, r0
	ldr r0, _0808DA8C @ =unk_8d39c
	str r0, [r3]
	b _0808DDAA
	.align 2, 0
_0808DA80: .4byte 0x00000222
_0808DA84: .4byte 0x00000236
_0808DA88: .4byte 0x085B9EBC
_0808DA8C: .4byte unk_8d39c
_0808DA90:
	cmp r4, #0x14
	bne _0808DAE0
	mov r0, sb
	adds r3, r5, r0
	lsls r3, r3, #2
	mov r1, r8
	adds r2, r3, r1
	ldr r5, _0808DAD0 @ =0x00000222
	adds r1, r2, r5
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	ldr r0, _0808DAD4 @ =0x00000236
	adds r2, r2, r0
	ldrb r0, [r2]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r3, r0
	ldr r1, _0808DAD8 @ =0x085B9F44
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, r8
	adds r3, r3, r0
	ldr r0, _0808DADC @ =unk_8d480
	str r0, [r3]
	b _0808DDAA
	.align 2, 0
_0808DAD0: .4byte 0x00000222
_0808DAD4: .4byte 0x00000236
_0808DAD8: .4byte 0x085B9F44
_0808DADC: .4byte unk_8d480
_0808DAE0:
	cmp r4, #0x15
	bne _0808DB30
	mov r1, sb
	adds r3, r5, r1
	lsls r3, r3, #2
	mov r5, r8
	adds r2, r3, r5
	ldr r0, _0808DB20 @ =0x00000222
	adds r1, r2, r0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	ldr r1, _0808DB24 @ =0x00000236
	adds r2, r2, r1
	ldrb r0, [r2]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r3, r0
	ldr r1, _0808DB28 @ =0x085B9FCC
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, r8
	adds r3, r3, r0
	ldr r0, _0808DB2C @ =unk_8d570
	str r0, [r3]
	b _0808DDAA
	.align 2, 0
_0808DB20: .4byte 0x00000222
_0808DB24: .4byte 0x00000236
_0808DB28: .4byte 0x085B9FCC
_0808DB2C: .4byte unk_8d570
_0808DB30:
	cmp r4, #0x16
	bne _0808DB8C
	movs r0, #0x10
	bl NewFileIntroFindOamByType
	ldr r4, _0808DB7C @ =gNonGameplayRam
	mov r3, sb
	adds r2, r5, r3
	lsls r2, r2, #2
	adds r3, r2, r4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r5, #0x89
	lsls r5, r5, #2
	adds r1, r3, r5
	strh r0, [r1]
	ldr r0, _0808DB80 @ =0x00000236
	adds r3, r3, r0
	ldrb r1, [r3]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r3]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r0, r2, r0
	ldr r1, _0808DB84 @ =0x085B7C2C
	str r1, [r0]
	movs r3, #0x8f
	lsls r3, r3, #2
	adds r4, r4, r3
	adds r2, r2, r4
	ldr r0, _0808DB88 @ =NewFileIntroProcessXLockOn
	b _0808DDA8
	.align 2, 0
_0808DB7C: .4byte gNonGameplayRam
_0808DB80: .4byte 0x00000236
_0808DB84: .4byte 0x085B7C2C
_0808DB88: .4byte NewFileIntroProcessXLockOn
_0808DB8C:
	cmp r4, #0x17
	bne _0808DBE8
	movs r0, #0x11
	bl NewFileIntroFindOamByType
	ldr r4, _0808DBD8 @ =gNonGameplayRam
	mov r1, sb
	adds r2, r5, r1
	lsls r2, r2, #2
	adds r3, r2, r4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r5, #0x89
	lsls r5, r5, #2
	adds r1, r3, r5
	strh r0, [r1]
	ldr r0, _0808DBDC @ =0x00000236
	adds r3, r3, r0
	ldrb r1, [r3]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r3]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r0, r2, r0
	ldr r1, _0808DBE0 @ =0x085B8184
	str r1, [r0]
	movs r3, #0x8f
	lsls r3, r3, #2
	adds r4, r4, r3
	adds r2, r2, r4
	ldr r0, _0808DBE4 @ =NewFileIntroProcessXLockOn
	b _0808DDA8
	.align 2, 0
_0808DBD8: .4byte gNonGameplayRam
_0808DBDC: .4byte 0x00000236
_0808DBE0: .4byte 0x085B8184
_0808DBE4: .4byte NewFileIntroProcessXLockOn
_0808DBE8:
	cmp r4, #0x18
	bne _0808DC44
	movs r0, #0x12
	bl NewFileIntroFindOamByType
	ldr r4, _0808DC34 @ =gNonGameplayRam
	mov r1, sb
	adds r2, r5, r1
	lsls r2, r2, #2
	adds r3, r2, r4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r5, #0x89
	lsls r5, r5, #2
	adds r1, r3, r5
	strh r0, [r1]
	ldr r0, _0808DC38 @ =0x00000236
	adds r3, r3, r0
	ldrb r1, [r3]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r3]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r0, r2, r0
	ldr r1, _0808DC3C @ =0x085B86DC
	str r1, [r0]
	movs r3, #0x8f
	lsls r3, r3, #2
	adds r4, r4, r3
	adds r2, r2, r4
	ldr r0, _0808DC40 @ =NewFileIntroProcessXLockOn
	b _0808DDA8
	.align 2, 0
_0808DC34: .4byte gNonGameplayRam
_0808DC38: .4byte 0x00000236
_0808DC3C: .4byte 0x085B86DC
_0808DC40: .4byte NewFileIntroProcessXLockOn
_0808DC44:
	cmp r4, #0x19
	bne _0808DCA0
	movs r0, #0x13
	bl NewFileIntroFindOamByType
	ldr r4, _0808DC90 @ =gNonGameplayRam
	mov r1, sb
	adds r2, r5, r1
	lsls r2, r2, #2
	adds r3, r2, r4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r5, #0x89
	lsls r5, r5, #2
	adds r1, r3, r5
	strh r0, [r1]
	ldr r0, _0808DC94 @ =0x00000236
	adds r3, r3, r0
	ldrb r1, [r3]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r3]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r0, r2, r0
	ldr r1, _0808DC98 @ =0x085B8C34
	str r1, [r0]
	movs r3, #0x8f
	lsls r3, r3, #2
	adds r4, r4, r3
	adds r2, r2, r4
	ldr r0, _0808DC9C @ =NewFileIntroProcessXLockOn
	b _0808DDA8
	.align 2, 0
_0808DC90: .4byte gNonGameplayRam
_0808DC94: .4byte 0x00000236
_0808DC98: .4byte 0x085B8C34
_0808DC9C: .4byte NewFileIntroProcessXLockOn
_0808DCA0:
	cmp r4, #0x1a
	bne _0808DCFC
	movs r0, #0x14
	bl NewFileIntroFindOamByType
	ldr r4, _0808DCEC @ =gNonGameplayRam
	mov r1, sb
	adds r2, r5, r1
	lsls r2, r2, #2
	adds r3, r2, r4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r5, #0x89
	lsls r5, r5, #2
	adds r1, r3, r5
	strh r0, [r1]
	ldr r0, _0808DCF0 @ =0x00000236
	adds r3, r3, r0
	ldrb r1, [r3]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r3]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r0, r2, r0
	ldr r1, _0808DCF4 @ =0x085B918C
	str r1, [r0]
	movs r3, #0x8f
	lsls r3, r3, #2
	adds r4, r4, r3
	adds r2, r2, r4
	ldr r0, _0808DCF8 @ =NewFileIntroProcessXLockOn
	b _0808DDA8
	.align 2, 0
_0808DCEC: .4byte gNonGameplayRam
_0808DCF0: .4byte 0x00000236
_0808DCF4: .4byte 0x085B918C
_0808DCF8: .4byte NewFileIntroProcessXLockOn
_0808DCFC:
	cmp r4, #0x1b
	bne _0808DD58
	movs r0, #0x15
	bl NewFileIntroFindOamByType
	ldr r4, _0808DD48 @ =gNonGameplayRam
	mov r1, sb
	adds r2, r5, r1
	lsls r2, r2, #2
	adds r3, r2, r4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r5, #0x89
	lsls r5, r5, #2
	adds r1, r3, r5
	strh r0, [r1]
	ldr r0, _0808DD4C @ =0x00000236
	adds r3, r3, r0
	ldrb r1, [r3]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r3]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r0, r2, r0
	ldr r1, _0808DD50 @ =0x085B96E4
	str r1, [r0]
	movs r3, #0x8f
	lsls r3, r3, #2
	adds r4, r4, r3
	adds r2, r2, r4
	ldr r0, _0808DD54 @ =NewFileIntroProcessXLockOn
	b _0808DDA8
	.align 2, 0
_0808DD48: .4byte gNonGameplayRam
_0808DD4C: .4byte 0x00000236
_0808DD50: .4byte 0x085B96E4
_0808DD54: .4byte NewFileIntroProcessXLockOn
_0808DD58:
	cmp r4, #0x1c
	bne _0808DD88
	mov r0, sb
	adds r2, r5, r0
	lsls r2, r2, #2
	mov r3, r8
	adds r1, r2, r3
	movs r5, #0x8d
	lsls r5, r5, #2
	adds r1, r1, r5
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, r8
	adds r2, r2, r0
	ldr r0, _0808DD84 @ =unk_8d660
	b _0808DDA8
	.align 2, 0
_0808DD84: .4byte unk_8d660
_0808DD88:
	cmp r4, #0xc8
	bne _0808DDAA
	mov r0, sb
	adds r2, r5, r0
	lsls r2, r2, #2
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r2, r0
	ldr r1, _0808DDBC @ =0x08613180
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, r8
	adds r2, r2, r0
	ldr r0, _0808DDC0 @ =NewFileIntroProcessTextCursor
_0808DDA8:
	str r0, [r2]
_0808DDAA:
	mov r0, sb
_0808DDAC:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808DDBC: .4byte 0x08613180
_0808DDC0: .4byte NewFileIntroProcessTextCursor

	thumb_func_start unk_8ddc4
unk_8ddc4: @ 0x0808DDC4
	push {r4, lr}
	adds r4, r3, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl NewFileIntroSamusGettingCuredSetupOam
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0808DDF8 @ =gNonGameplayRam
	lsls r1, r0, #3
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	movs r0, #0x89
	lsls r0, r0, #2
	adds r1, r1, r0
	strh r4, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808DDF8: .4byte gNonGameplayRam

	thumb_func_start NewFileIntroFindOamByType
NewFileIntroFindOamByType: @ 0x0808DDFC
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	movs r1, #0
	ldr r4, _0808DE20 @ =gNonGameplayRam
	movs r3, #0x8b
	lsls r3, r3, #2
_0808DE0A:
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, r2
	bne _0808DE24
	adds r0, r1, #0
	b _0808DE30
	.align 2, 0
_0808DE20: .4byte gNonGameplayRam
_0808DE24:
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x13
	bls _0808DE0A
	movs r0, #0x14
_0808DE30:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start NewFileIntroSamusGettingCuredVblank
NewFileIntroSamusGettingCuredVblank: @ 0x0808DE38
	ldr r1, _0808DE64 @ =0x040000D4
	ldr r0, _0808DE68 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _0808DE6C @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _0808DE70 @ =0x04000052
	ldr r0, _0808DE74 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0808DE78 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0808DE7C @ =0x04000054
	ldr r0, _0808DE80 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_0808DE64: .4byte 0x040000D4
_0808DE68: .4byte gOamData
_0808DE6C: .4byte 0x84000100
_0808DE70: .4byte 0x04000052
_0808DE74: .4byte 0x03001222
_0808DE78: .4byte 0x03001220
_0808DE7C: .4byte 0x04000054
_0808DE80: .4byte gWrittenToBldy

	thumb_func_start NewFileIntroSamusGettingCuredNervousSystemVblank
NewFileIntroSamusGettingCuredNervousSystemVblank: @ 0x0808DE84
	push {r4, lr}
	ldr r3, _0808DEF8 @ =0x040000D4
	ldr r0, _0808DEFC @ =gOamData
	str r0, [r3]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r3, #4]
	ldr r0, _0808DF00 @ =0x84000100
	str r0, [r3, #8]
	ldr r0, [r3, #8]
	ldr r2, _0808DF04 @ =0x04000052
	ldr r0, _0808DF08 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0808DF0C @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0808DF10 @ =0x04000054
	ldr r0, _0808DF14 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _0808DF18 @ =gNonGameplayRam
	movs r0, #0x88
	lsls r0, r0, #1
	adds r2, r1, r0
	ldrb r0, [r2]
	cmp r0, #1
	bne _0808DEF0
	movs r0, #0
	strb r0, [r2]
	ldr r2, _0808DF1C @ =0x0879C2E4
	ldr r4, _0808DF20 @ =0x00000111
	adds r4, r4, r1
	ldrb r0, [r4]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r3]
	ldr r0, _0808DF24 @ =0x05000200
	str r0, [r3, #4]
	ldr r1, _0808DF28 @ =0x84000020
	str r1, [r3, #8]
	ldr r0, [r3, #8]
	ldrb r0, [r4]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r3]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r3, #4]
	str r1, [r3, #8]
	ldr r0, [r3, #8]
_0808DEF0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808DEF8: .4byte 0x040000D4
_0808DEFC: .4byte gOamData
_0808DF00: .4byte 0x84000100
_0808DF04: .4byte 0x04000052
_0808DF08: .4byte 0x03001222
_0808DF0C: .4byte 0x03001220
_0808DF10: .4byte 0x04000054
_0808DF14: .4byte gWrittenToBldy
_0808DF18: .4byte gNonGameplayRam
_0808DF1C: .4byte 0x0879C2E4
_0808DF20: .4byte 0x00000111
_0808DF24: .4byte 0x05000200
_0808DF28: .4byte 0x84000020

	thumb_func_start NewFileIntroProcessDna
NewFileIntroProcessDna: @ 0x0808DF2C
	bx lr
	.align 2, 0

	thumb_func_start NewFileIntroSamusFoundInit
NewFileIntroSamusFoundInit: @ 0x0808DF30
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r3, _0808E080 @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _0808E084 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _0808E088 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0808E08C @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0808E090 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0808E094 @ =unk_99940
	bl CallbackSetVBlank
	movs r5, #0
	str r5, [sp]
	ldr r4, _0808E098 @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r6, _0808E09C @ =gNonGameplayRam
	str r6, [r4, #4]
	ldr r0, _0808E0A0 @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808E0A4 @ =0x08613148
	str r0, [r4]
	ldr r0, _0808E0A8 @ =0x06017FE0
	str r0, [r4, #4]
	ldr r1, _0808E0AC @ =0x84000008
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808E0B0 @ =0x086131A8
	str r0, [r4]
	ldr r0, _0808E0B4 @ =0x050003E0
	str r0, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808E0B8 @ =0x085C4050
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _0808E0BC @ =0x085BFE38
	ldr r1, _0808E0C0 @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _0808E0C4 @ =0x085C9520
	ldr r1, _0808E0C8 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _0808E0CC @ =0x085C8F1C
	ldr r1, _0808E0D0 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _0808E0D4 @ =0x08598898
	ldr r1, _0808E0D8 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _0808E0DC @ =0x085C8D1C
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _0808E0E0 @ =0x84000080
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808E0E4 @ =0x085C9B4C
	movs r1, #0x80
	lsls r1, r1, #0x12
	bl LZ77UncompWram
	ldr r0, _0808E0E8 @ =0x085D1154
	ldr r1, _0808E0EC @ =0x02008000
	bl LZ77UncompWram
	ldr r0, _0808E0F0 @ =0x085D08B8
	ldr r1, _0808E0F4 @ =0x0200D000
	bl LZ77UncompWram
	ldr r0, _0808E0F8 @ =0x085D4868
	ldr r1, _0808E0FC @ =0x0200D800
	bl LZ77UncompWram
	ldr r1, _0808E100 @ =0x04000010
	ldr r2, _0808E104 @ =0x0000FFF8
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _0808E108 @ =0x04000012
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r0, _0808E10C @ =0x0300122C
	strh r5, [r0]
	ldr r0, _0808E110 @ =0x0300122E
	strh r5, [r0]
	ldr r0, _0808E114 @ =0x03001230
	strh r5, [r0]
	ldr r0, _0808E118 @ =0x03001232
	strh r5, [r0]
	subs r1, #8
	ldr r2, _0808E11C @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	ldr r2, _0808E120 @ =0x00001E02
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _0808E124 @ =0x00001F0B
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x42
	movs r0, #0xbf
	strh r0, [r1]
	ldr r0, _0808E128 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _0808E12C @ =0x04000054
	strh r1, [r0]
	movs r1, #0x82
	lsls r1, r1, #1
	movs r0, #0xc8
	movs r2, #0
	bl NewFileIntroSamusFoundSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _0808E130 @ =0x0863A19C
	str r0, [r6]
	str r5, [sp]
	mov r0, sp
	str r0, [r4]
	ldr r0, _0808E134 @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _0808E138 @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xa8
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _0808E13C @ =NewFileIntroSamusFoundVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808E080: .4byte 0x04000208
_0808E084: .4byte 0x04000004
_0808E088: .4byte 0x0000FFEF
_0808E08C: .4byte 0x04000200
_0808E090: .4byte 0x0000FFFD
_0808E094: .4byte unk_99940
_0808E098: .4byte 0x040000D4
_0808E09C: .4byte gNonGameplayRam
_0808E0A0: .4byte 0x85000150
_0808E0A4: .4byte 0x08613148
_0808E0A8: .4byte 0x06017FE0
_0808E0AC: .4byte 0x84000008
_0808E0B0: .4byte 0x086131A8
_0808E0B4: .4byte 0x050003E0
_0808E0B8: .4byte 0x085C4050
_0808E0BC: .4byte 0x085BFE38
_0808E0C0: .4byte 0x06008000
_0808E0C4: .4byte 0x085C9520
_0808E0C8: .4byte 0x0600F000
_0808E0CC: .4byte 0x085C8F1C
_0808E0D0: .4byte 0x0600F800
_0808E0D4: .4byte 0x08598898
_0808E0D8: .4byte 0x0600E000
_0808E0DC: .4byte 0x085C8D1C
_0808E0E0: .4byte 0x84000080
_0808E0E4: .4byte 0x085C9B4C
_0808E0E8: .4byte 0x085D1154
_0808E0EC: .4byte 0x02008000
_0808E0F0: .4byte 0x085D08B8
_0808E0F4: .4byte 0x0200D000
_0808E0F8: .4byte 0x085D4868
_0808E0FC: .4byte 0x0200D800
_0808E100: .4byte 0x04000010
_0808E104: .4byte 0x0000FFF8
_0808E108: .4byte 0x04000012
_0808E10C: .4byte 0x0300122C
_0808E110: .4byte 0x0300122E
_0808E114: .4byte 0x03001230
_0808E118: .4byte 0x03001232
_0808E11C: .4byte 0x00001C08
_0808E120: .4byte 0x00001E02
_0808E124: .4byte 0x00001F0B
_0808E128: .4byte gWrittenToBldy
_0808E12C: .4byte 0x04000054
_0808E130: .4byte 0x0863A19C
_0808E134: .4byte 0x0600D000
_0808E138: .4byte 0x85000400
_0808E13C: .4byte NewFileIntroSamusFoundVblank

	thumb_func_start NewFileIntroSamusFoundProcess
NewFileIntroSamusFoundProcess: @ 0x0808E140
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	movs r7, #0
	ldr r2, _0808E198 @ =gNonGameplayRam
	ldr r0, [r2]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	adds r5, r2, #0
	cmp r1, r0
	bne _0808E172
	ldr r0, _0808E19C @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808E172
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _0808E172
	movs r0, #1
	strb r0, [r1]
_0808E172:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r5, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #0xe
	bls _0808E18C
	b _0808E6BA
_0808E18C:
	lsls r0, r0, #2
	ldr r1, _0808E1A0 @ =_0808E1A4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808E198: .4byte gNonGameplayRam
_0808E19C: .4byte gChangedInput
_0808E1A0: .4byte _0808E1A4
_0808E1A4: @ jump table
	.4byte _0808E1E0 @ case 0
	.4byte _0808E228 @ case 1
	.4byte _0808E278 @ case 2
	.4byte _0808E2C4 @ case 3
	.4byte _0808E348 @ case 4
	.4byte _0808E3A8 @ case 5
	.4byte _0808E3DC @ case 6
	.4byte _0808E424 @ case 7
	.4byte _0808E456 @ case 8
	.4byte _0808E4BC @ case 9
	.4byte _0808E4FC @ case 10
	.4byte _0808E57C @ case 11
	.4byte _0808E5B8 @ case 12
	.4byte _0808E61C @ case 13
	.4byte _0808E680 @ case 14
_0808E1E0:
	movs r4, #0x84
	lsls r4, r4, #2
	adds r3, r5, r4
	ldrh r0, [r3]
	cmp r0, #0x28
	beq _0808E1EE
	b _0808E670
_0808E1EE:
	movs r2, #0
	movs r1, #0
	strh r1, [r3]
	ldr r3, _0808E21C @ =0x00000212
	adds r0, r5, r3
	strb r2, [r0]
	strh r1, [r5, #0xe]
	strh r1, [r5, #0xc]
	ldr r1, _0808E220 @ =0x0879C5A4
	ldr r0, _0808E224 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x30]
	str r0, [r5]
	adds r4, #4
	adds r1, r5, r4
	movs r0, #1
	b _0808E66E
	.align 2, 0
_0808E21C: .4byte 0x00000212
_0808E220: .4byte 0x0879C5A4
_0808E224: .4byte 0x03000011
_0808E228:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r5, r1
	movs r3, #0
	movs r2, #0
	strh r2, [r0]
	ldr r1, _0808E250 @ =0x03001220
	movs r0, #0x10
	strh r0, [r1]
	ldr r0, _0808E254 @ =0x03001222
	strh r2, [r0]
	movs r2, #0x86
	lsls r2, r2, #2
	adds r1, r5, r2
	ldrb r0, [r1]
	cmp r0, #2
	bne _0808E258
	strb r3, [r1]
	b _0808E670
	.align 2, 0
_0808E250: .4byte 0x03001220
_0808E254: .4byte 0x03001222
_0808E258:
	cmp r0, #3
	bne _0808E266
	strb r3, [r1]
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r5, r3
	b _0808E274
_0808E266:
	cmp r0, #4
	beq _0808E26C
	b _0808E670
_0808E26C:
	strb r3, [r1]
	movs r4, #0x85
	lsls r4, r4, #2
	adds r1, r5, r4
_0808E274:
	movs r0, #2
	b _0808E66E
_0808E278:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r3, r5, r0
	ldrh r0, [r3]
	cmp r0, #0x1d
	bne _0808E2A0
	ldr r1, _0808E298 @ =0x04000050
	ldr r2, _0808E29C @ =0x00001844
	adds r0, r2, #0
	strh r0, [r1]
	movs r0, #1
	movs r1, #0x10
_0808E290:
	movs r2, #0
	bl NewFileIntroSamusFoundSetupOam
	b _0808E670
	.align 2, 0
_0808E298: .4byte 0x04000050
_0808E29C: .4byte 0x00001844
_0808E2A0:
	cmp r0, #0x1e
	beq _0808E2A6
	b _0808E670
_0808E2A6:
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r4, #0x80
	lsls r4, r4, #4
	adds r1, r4, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	strh r0, [r3]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r5, r0
	movs r0, #3
	b _0808E66E
_0808E2C4:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r5, r2
	ldrh r0, [r1]
	cmp r0, #0x59
	bne _0808E2FC
	movs r0, #1
	bl SpecialCutsceneDestroyOamOfType
	ldr r1, _0808E2F0 @ =0x03001220
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0808E2F4 @ =0x03001222
	movs r0, #0x10
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0808E2F8 @ =0x0000FBFF
	ands r0, r1
	strh r0, [r2]
	b _0808E670
	.align 2, 0
_0808E2F0: .4byte 0x03001220
_0808E2F4: .4byte 0x03001222
_0808E2F8: .4byte 0x0000FBFF
_0808E2FC:
	cmp r0, #0x5a
	bne _0808E324
	ldr r1, _0808E314 @ =0x040000D4
	ldr r0, _0808E318 @ =0x0200D000
	str r0, [r1]
	ldr r0, _0808E31C @ =0x0600F000
_0808E308:
	str r0, [r1, #4]
	ldr r0, _0808E320 @ =0x84000200
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _0808E670
	.align 2, 0
_0808E314: .4byte 0x040000D4
_0808E318: .4byte 0x0200D000
_0808E31C: .4byte 0x0600F000
_0808E320: .4byte 0x84000200
_0808E324:
	cmp r0, #0x5b
	bne _0808E32E
	movs r0, #2
	movs r1, #0
	b _0808E290
_0808E32E:
	cmp r0, #0x63
	bne _0808E334
	b _0808E670
_0808E334:
	cmp r0, #0x64
	beq _0808E33A
	b _0808E670
_0808E33A:
	movs r0, #0
	strh r0, [r1]
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r5, r3
	movs r0, #4
	b _0808E66E
_0808E348:
	movs r4, #0x84
	lsls r4, r4, #2
	adds r0, r5, r4
	movs r6, #0
	movs r1, #0
	strh r1, [r0]
	ldr r0, _0808E374 @ =0x03001220
	strh r1, [r0]
	ldr r1, _0808E378 @ =0x03001222
	movs r0, #0x10
	strh r0, [r1]
	movs r0, #0x86
	lsls r0, r0, #2
	adds r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #2
	beq _0808E36E
	cmp r0, #4
	bne _0808E37C
_0808E36E:
	strb r6, [r4]
	b _0808E670
	.align 2, 0
_0808E374: .4byte 0x03001220
_0808E378: .4byte 0x03001222
_0808E37C:
	cmp r0, #3
	beq _0808E382
	b _0808E670
_0808E382:
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSamusFoundSetupOam
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	strb r6, [r4]
	movs r4, #0x85
	lsls r4, r4, #2
	adds r1, r5, r4
	movs r0, #5
	b _0808E66E
_0808E3A8:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrh r0, [r1]
	cmp r0, #0x5a
	beq _0808E3B6
	b _0808E670
_0808E3B6:
	movs r4, #0
	strh r4, [r1]
	movs r0, #3
	bl SpecialCutsceneDestroyOamOfType
	ldr r1, _0808E3D4 @ =0x03001220
	movs r0, #0x10
	strh r0, [r1]
	ldr r0, _0808E3D8 @ =0x03001222
	strh r4, [r0]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #6
	b _0808E66E
	.align 2, 0
_0808E3D4: .4byte 0x03001220
_0808E3D8: .4byte 0x03001222
_0808E3DC:
	movs r4, #0x84
	lsls r4, r4, #2
	adds r3, r5, r4
	ldrh r0, [r3]
	cmp r0, #0x14
	beq _0808E3EA
	b _0808E670
_0808E3EA:
	movs r2, #0
	movs r1, #0
	strh r1, [r3]
	ldr r3, _0808E418 @ =0x00000212
	adds r0, r5, r3
	strb r2, [r0]
	strh r1, [r5, #0xe]
	strh r1, [r5, #0xc]
	ldr r1, _0808E41C @ =0x0879C5A4
	ldr r0, _0808E420 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x34]
	str r0, [r5]
	adds r4, #4
	adds r1, r5, r4
	movs r0, #7
	b _0808E66E
	.align 2, 0
_0808E418: .4byte 0x00000212
_0808E41C: .4byte 0x0879C5A4
_0808E420: .4byte 0x03000011
_0808E424:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r5, r0
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	movs r3, #0x86
	lsls r3, r3, #2
	adds r1, r5, r3
	ldrb r0, [r1]
	cmp r0, #2
	beq _0808E440
	cmp r0, #4
	bne _0808E444
_0808E440:
	strb r2, [r1]
	b _0808E670
_0808E444:
	cmp r0, #3
	beq _0808E44A
	b _0808E670
_0808E44A:
	strb r2, [r1]
	movs r4, #0x85
	lsls r4, r4, #2
	adds r1, r5, r4
	movs r0, #8
	b _0808E66E
_0808E456:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrh r0, [r1]
	cmp r0, #0xa
	beq _0808E464
	b _0808E670
_0808E464:
	movs r3, #0
	movs r2, #0
	strh r2, [r1]
	str r2, [sp]
	ldr r1, _0808E4A4 @ =0x040000D4
	mov r4, sp
	str r4, [r1]
	ldr r0, _0808E4A8 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _0808E4AC @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r1, _0808E4B0 @ =0x00000212
	adds r0, r5, r1
	strb r3, [r0]
	strh r2, [r5, #0xe]
	strh r2, [r5, #0xc]
	ldr r1, _0808E4B4 @ =0x0879C5A4
	ldr r0, _0808E4B8 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x38]
	str r0, [r5]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #9
	b _0808E66E
	.align 2, 0
_0808E4A4: .4byte 0x040000D4
_0808E4A8: .4byte 0x0600D000
_0808E4AC: .4byte 0x85000400
_0808E4B0: .4byte 0x00000212
_0808E4B4: .4byte 0x0879C5A4
_0808E4B8: .4byte 0x03000011
_0808E4BC:
	movs r3, #0x84
	lsls r3, r3, #2
	adds r0, r5, r3
	movs r2, #0
	movs r3, #0
	strh r3, [r0]
	movs r4, #0x86
	lsls r4, r4, #2
	adds r1, r5, r4
	ldrb r0, [r1]
	cmp r0, #2
	beq _0808E440
	cmp r0, #4
	beq _0808E440
	cmp r0, #3
	beq _0808E4DE
	b _0808E670
_0808E4DE:
	strb r2, [r1]
	ldr r1, _0808E4F4 @ =0x03001220
	movs r0, #0x10
	strh r0, [r1]
	ldr r0, _0808E4F8 @ =0x03001222
	strh r3, [r0]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r5, r0
	movs r0, #0xa
	b _0808E66E
	.align 2, 0
_0808E4F4: .4byte 0x03001220
_0808E4F8: .4byte 0x03001222
_0808E4FC:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r3, r5, r1
	ldrh r0, [r3]
	cmp r0, #1
	bne _0808E530
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0808E520 @ =0x0000F7FF
	ands r0, r1
	strh r0, [r2]
	ldr r1, _0808E524 @ =0x040000D4
	ldr r0, _0808E528 @ =0x0200D800
	str r0, [r1]
	ldr r0, _0808E52C @ =0x0600F800
	b _0808E308
	.align 2, 0
_0808E520: .4byte 0x0000F7FF
_0808E524: .4byte 0x040000D4
_0808E528: .4byte 0x0200D800
_0808E52C: .4byte 0x0600F800
_0808E530:
	cmp r0, #2
	bne _0808E53A
	movs r0, #4
	movs r1, #0
	b _0808E290
_0808E53A:
	cmp r0, #0xf
	beq _0808E540
	b _0808E670
_0808E540:
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r4, #0x80
	lsls r4, r4, #4
	adds r1, r4, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	strh r0, [r3]
	movs r0, #5
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSamusFoundSetupOam
	ldr r0, _0808E578 @ =0x0300122E
	movs r1, #0
	ldrsh r2, [r0, r1]
	movs r0, #6
	movs r1, #0
	bl NewFileIntroSamusFoundSetupOam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0xb
	b _0808E66E
	.align 2, 0
_0808E578: .4byte 0x0300122E
_0808E57C:
	movs r3, #0x84
	lsls r3, r3, #2
	adds r2, r5, r3
	ldrh r0, [r2]
	cmp r0, #0x5a
	bne _0808E670
	ldr r1, _0808E5B0 @ =0x03001220
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0808E5B4 @ =0x03001222
	movs r0, #0x10
	strh r0, [r1]
	movs r0, #0
	strh r0, [r2]
	movs r0, #5
	bl SpecialCutsceneDestroyOamOfType
	movs r0, #6
	bl SpecialCutsceneDestroyOamOfType
	movs r4, #0x85
	lsls r4, r4, #2
	adds r1, r5, r4
	movs r0, #0xc
	b _0808E66E
	.align 2, 0
_0808E5B0: .4byte 0x03001220
_0808E5B4: .4byte 0x03001222
_0808E5B8:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrh r0, [r1]
	cmp r0, #0xa
	bne _0808E670
	movs r3, #0
	movs r2, #0
	strh r2, [r1]
	str r2, [sp]
	ldr r1, _0808E604 @ =0x040000D4
	mov r4, sp
	str r4, [r1]
	ldr r0, _0808E608 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _0808E60C @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r1, _0808E610 @ =0x00000212
	adds r0, r5, r1
	strb r3, [r0]
	strh r2, [r5, #0xe]
	strh r2, [r5, #0xc]
	ldr r1, _0808E614 @ =0x0879C5A4
	ldr r0, _0808E618 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x3c]
	str r0, [r5]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0xd
	b _0808E66E
	.align 2, 0
_0808E604: .4byte 0x040000D4
_0808E608: .4byte 0x0600D000
_0808E60C: .4byte 0x85000400
_0808E610: .4byte 0x00000212
_0808E614: .4byte 0x0879C5A4
_0808E618: .4byte 0x03000011
_0808E61C:
	movs r3, #0x84
	lsls r3, r3, #2
	adds r1, r5, r3
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	movs r4, #0x86
	lsls r4, r4, #2
	adds r1, r5, r4
	ldrb r0, [r1]
	cmp r0, #2
	bne _0808E63C
	strb r2, [r1]
	ldr r0, [r5]
	str r0, [r5, #4]
	b _0808E670
_0808E63C:
	cmp r0, #3
	bne _0808E658
	strb r2, [r1]
	ldr r0, [r5]
	str r0, [r5, #4]
	ldr r0, _0808E654 @ =0x0863A19C
	str r0, [r5]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r5, r0
	b _0808E66C
	.align 2, 0
_0808E654: .4byte 0x0863A19C
_0808E658:
	cmp r0, #4
	bne _0808E670
	strb r2, [r1]
	ldr r0, [r5]
	str r0, [r5, #4]
	ldr r0, _0808E67C @ =0x0863A19C
	str r0, [r5]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r5, r2
_0808E66C:
	movs r0, #0xe
_0808E66E:
	strb r0, [r1]
_0808E670:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _0808E6BA
	.align 2, 0
_0808E67C: .4byte 0x0863A19C
_0808E680:
	movs r4, #0x84
	lsls r4, r4, #2
	adds r3, r5, r4
	ldrh r0, [r3]
	cmp r0, #0x1e
	bne _0808E6B2
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0808E6C8 @ =0x0000FBFF
	ands r0, r1
	strh r0, [r2]
	ldr r1, _0808E6CC @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _0808E6D0 @ =gWrittenToBldy
	movs r1, #0
	strh r1, [r0]
	movs r0, #0
	strh r0, [r3]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r5, r2
	strb r1, [r0]
	movs r7, #1
_0808E6B2:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_0808E6BA:
	bl IntroProcessText
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808E6C8: .4byte 0x0000FBFF
_0808E6CC: .4byte 0x04000050
_0808E6D0: .4byte gWrittenToBldy

	thumb_func_start NewFileIntroSamusFound
NewFileIntroSamusFound: @ 0x0808E6D4
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _0808E6EC @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _0808E704
	cmp r0, #1
	bgt _0808E6F0
	cmp r0, #0
	beq _0808E6FA
	b _0808E774
	.align 2, 0
_0808E6EC: .4byte gNonGameplayRam
_0808E6F0:
	cmp r0, #2
	beq _0808E73A
	cmp r0, #3
	beq _0808E756
	b _0808E774
_0808E6FA:
	bl NewFileIntroSamusFoundInit
	movs r0, #1
	strh r0, [r4, #8]
	b _0808E774
_0808E704:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #6
	bne _0808E730
	strh r5, [r1]
	ldr r1, _0808E728 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _0808E72C
	subs r0, #1
	strh r0, [r1]
	b _0808E730
	.align 2, 0
_0808E728: .4byte gWrittenToBldy
_0808E72C:
	movs r0, #2
	strh r0, [r4, #8]
_0808E730:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _0808E774
_0808E73A:
	bl NewFileIntroSamusFoundProcess
	cmp r0, #0
	beq _0808E774
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	strb r5, [r0]
	subs r1, #1
	adds r0, r4, r1
	strb r5, [r0]
	movs r0, #3
	strh r0, [r4, #8]
	b _0808E774
_0808E756:
	ldr r1, _0808E764 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0808E768
	adds r0, #1
	strh r0, [r1]
	b _0808E76C
	.align 2, 0
_0808E764: .4byte gWrittenToBldy
_0808E768:
	strh r5, [r4, #8]
	movs r5, #1
_0808E76C:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_0808E774:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start NewFileIntroProcessSamusFoundFadeIn
NewFileIntroProcessSamusFoundFadeIn: @ 0x0808E77C
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bne _0808E7A0
	movs r0, #0
	strb r0, [r2, #0x13]
	ldrh r1, [r2, #0xc]
	movs r3, #0xc
	ldrsh r0, [r2, r3]
	cmp r0, #0
	ble _0808E7A0
	subs r0, r1, #1
	strh r0, [r2, #0xc]
_0808E7A0:
	ldr r1, _0808E7D8 @ =0x03001230
	ldrh r0, [r2, #0xc]
	strh r0, [r1]
	ldr r1, _0808E7DC @ =0x03001232
	movs r0, #0
	strh r0, [r1]
	ldrh r0, [r2, #0xa]
	adds r0, #1
	strh r0, [r2, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bne _0808E7D2
	movs r0, #0
	strh r0, [r2, #0xa]
	ldr r1, _0808E7E0 @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0
	beq _0808E7D2
	subs r0, #1
	strh r0, [r1]
	ldr r1, _0808E7E4 @ =0x03001222
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_0808E7D2:
	pop {r0}
	bx r0
	.align 2, 0
_0808E7D8: .4byte 0x03001230
_0808E7DC: .4byte 0x03001232
_0808E7E0: .4byte 0x03001220
_0808E7E4: .4byte 0x03001222

	thumb_func_start NewFileIntroProcessSamusLayingLoading
NewFileIntroProcessSamusLayingLoading: @ 0x0808E7E8
	push {r4, lr}
	adds r3, r0, #0
	ldrh r0, [r3, #0xa]
	lsls r0, r0, #0xc
	ldr r2, _0808E828 @ =0x040000D4
	movs r4, #0x80
	lsls r4, r4, #0x12
	adds r1, r0, r4
	str r1, [r2]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	adds r0, r0, r1
	str r0, [r2, #4]
	ldr r0, _0808E82C @ =0x84000400
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	ldrh r0, [r3, #0xa]
	adds r0, #1
	strh r0, [r3, #0xa]
	ldrh r2, [r3, #0xa]
	movs r4, #8
	ldrsh r0, [r3, r4]
	movs r4, #4
	ldrsh r1, [r3, r4]
	adds r0, r0, r1
	cmp r2, r0
	bne _0808E822
	movs r0, #0
	strb r0, [r3, #0x10]
_0808E822:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808E828: .4byte 0x040000D4
_0808E82C: .4byte 0x84000400

	thumb_func_start NewFileIntroProcessSamusFoundFadeInSamusLaying
NewFileIntroProcessSamusFoundFadeInSamusLaying: @ 0x0808E830
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0808E854
	movs r0, #0
	strb r0, [r2, #0x13]
	ldrh r1, [r2, #0xe]
	movs r3, #0xe
	ldrsh r0, [r2, r3]
	cmp r0, #0x5f
	bgt _0808E854
	adds r0, r1, #1
	strh r0, [r2, #0xe]
_0808E854:
	ldr r1, _0808E88C @ =0x0300122C
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0808E890 @ =0x0300122E
	ldrh r0, [r2, #0xe]
	strh r0, [r1]
	ldrh r0, [r2, #0xa]
	adds r0, #1
	strh r0, [r2, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bne _0808E886
	movs r0, #0
	strh r0, [r2, #0xa]
	ldr r1, _0808E894 @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0808E886
	adds r0, #1
	strh r0, [r1]
	ldr r1, _0808E898 @ =0x03001222
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
_0808E886:
	pop {r0}
	bx r0
	.align 2, 0
_0808E88C: .4byte 0x0300122C
_0808E890: .4byte 0x0300122E
_0808E894: .4byte 0x03001220
_0808E898: .4byte 0x03001222

	thumb_func_start NewFileIntroProcessSamusFoundFadeInVaccineCloseUp
NewFileIntroProcessSamusFoundFadeInVaccineCloseUp: @ 0x0808E89C
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bne _0808E8C0
	movs r0, #0
	strb r0, [r2, #0x13]
	ldrh r1, [r2, #0xc]
	movs r3, #0xc
	ldrsh r0, [r2, r3]
	cmp r0, #0xf
	bgt _0808E8C0
	adds r0, r1, #1
	strh r0, [r2, #0xc]
_0808E8C0:
	ldr r1, _0808E8F8 @ =0x03001230
	ldrh r0, [r2, #0xc]
	strh r0, [r1]
	ldr r1, _0808E8FC @ =0x03001232
	movs r0, #0
	strh r0, [r1]
	ldrh r0, [r2, #0xa]
	adds r0, #1
	strh r0, [r2, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bne _0808E8F2
	movs r0, #0
	strh r0, [r2, #0xa]
	ldr r1, _0808E900 @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0
	beq _0808E8F2
	subs r0, #1
	strh r0, [r1]
	ldr r1, _0808E904 @ =0x03001222
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_0808E8F2:
	pop {r0}
	bx r0
	.align 2, 0
_0808E8F8: .4byte 0x03001230
_0808E8FC: .4byte 0x03001232
_0808E900: .4byte 0x03001220
_0808E904: .4byte 0x03001222

	thumb_func_start unk_8e908
unk_8e908: @ 0x0808E908
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0808E92C
	movs r0, #0
	strb r0, [r2, #0x13]
	ldrh r1, [r2, #0xe]
	movs r3, #0xe
	ldrsh r0, [r2, r3]
	cmp r0, #0x5f
	bgt _0808E92C
	adds r0, r1, #1
	strh r0, [r2, #0xe]
_0808E92C:
	ldr r1, _0808E93C @ =0x0300122C
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0808E940 @ =0x0300122E
	ldrh r0, [r2, #0xe]
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0808E93C: .4byte 0x0300122C
_0808E940: .4byte 0x0300122E

	thumb_func_start NewFileIntroSamusFoundSetupOam
NewFileIntroSamusFoundSetupOam: @ 0x0808E944
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r7, #0
	ldr r1, _0808E990 @ =gNonGameplayRam
	movs r3, #0x8b
	lsls r3, r3, #2
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _0808E988
	adds r5, r1, #0
	adds r1, r3, #0
_0808E96E:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0x13
	bhi _0808E98C
	lsls r0, r7, #3
	adds r0, r0, r7
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808E96E
_0808E988:
	cmp r7, #0x13
	bls _0808E994
_0808E98C:
	movs r0, #0x14
	b _0808EAEA
	.align 2, 0
_0808E990: .4byte gNonGameplayRam
_0808E994:
	movs r0, #0
	mov ip, r0
	str r0, [sp]
	ldr r1, _0808E9F4 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	lsls r0, r7, #3
	adds r0, r0, r7
	lsls r5, r0, #2
	ldr r6, _0808E9F8 @ =0x030016A0
	adds r0, r5, r6
	str r0, [r1, #4]
	ldr r0, _0808E9FC @ =0x85000009
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r1, _0808EA00 @ =0xFFFFFDE4
	adds r0, r6, r1
	adds r3, r5, r0
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r3, r1
	mov r1, r8
	strh r1, [r0]
	ldr r1, _0808EA04 @ =0x0000022A
	adds r0, r3, r1
	strh r2, [r0]
	adds r1, #2
	adds r0, r3, r1
	strb r4, [r0]
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r2, r3, r0
	ldrb r1, [r2]
	movs r0, #1
	orrs r1, r0
	strb r1, [r2]
	cmp r4, #1
	bne _0808EA0C
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r2]
	adds r0, r6, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808EA08 @ =NewFileIntroProcessSamusFoundFadeIn
	b _0808EAE6
	.align 2, 0
_0808E9F4: .4byte 0x040000D4
_0808E9F8: .4byte 0x030016A0
_0808E9FC: .4byte 0x85000009
_0808EA00: .4byte 0xFFFFFDE4
_0808EA04: .4byte 0x0000022A
_0808EA08: .4byte NewFileIntroProcessSamusFoundFadeIn
_0808EA0C:
	cmp r4, #2
	bne _0808EA44
	ldr r1, _0808EA3C @ =0x00000226
	adds r0, r3, r1
	mov r4, ip
	strh r4, [r0]
	subs r1, #2
	adds r0, r3, r1
	strh r4, [r0]
	movs r4, #0x88
	lsls r4, r4, #2
	adds r1, r3, r4
	movs r0, #8
	strh r0, [r1]
	ldrb r1, [r2]
	subs r0, #0xa
	ands r0, r1
	strb r0, [r2]
	adds r0, r6, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808EA40 @ =NewFileIntroProcessSamusLayingLoading
	b _0808EAE6
	.align 2, 0
_0808EA3C: .4byte 0x00000226
_0808EA40: .4byte NewFileIntroProcessSamusLayingLoading
_0808EA44:
	cmp r4, #3
	bne _0808EA60
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r2]
	adds r0, r6, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808EA5C @ =NewFileIntroProcessSamusFoundFadeInSamusLaying
	b _0808EAE6
	.align 2, 0
_0808EA5C: .4byte NewFileIntroProcessSamusFoundFadeInSamusLaying
_0808EA60:
	cmp r4, #4
	bne _0808EA98
	ldr r1, _0808EA90 @ =0x00000226
	adds r0, r3, r1
	movs r1, #8
	strh r1, [r0]
	movs r4, #0x89
	lsls r4, r4, #2
	adds r0, r3, r4
	strh r1, [r0]
	movs r0, #0x88
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #5
	strh r0, [r1]
	ldrb r1, [r2]
	subs r0, #7
	ands r0, r1
	strb r0, [r2]
	adds r0, r6, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808EA94 @ =NewFileIntroProcessSamusLayingLoading
	b _0808EAE6
	.align 2, 0
_0808EA90: .4byte 0x00000226
_0808EA94: .4byte NewFileIntroProcessSamusLayingLoading
_0808EA98:
	cmp r4, #5
	bne _0808EAB4
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r2]
	adds r0, r6, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808EAB0 @ =NewFileIntroProcessSamusFoundFadeInVaccineCloseUp
	b _0808EAE6
	.align 2, 0
_0808EAB0: .4byte NewFileIntroProcessSamusFoundFadeInVaccineCloseUp
_0808EAB4:
	cmp r4, #6
	bne _0808EAD0
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r2]
	adds r0, r6, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808EACC @ =unk_8e908
	b _0808EAE6
	.align 2, 0
_0808EACC: .4byte unk_8e908
_0808EAD0:
	cmp r4, #0xc8
	bne _0808EAE8
	adds r0, r6, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0808EAF8 @ =0x08613180
	str r1, [r0]
	adds r0, r6, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808EAFC @ =NewFileIntroProcessTextCursor
_0808EAE6:
	str r1, [r0]
_0808EAE8:
	adds r0, r7, #0
_0808EAEA:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808EAF8: .4byte 0x08613180
_0808EAFC: .4byte NewFileIntroProcessTextCursor

	thumb_func_start NewFileIntroSamusFoundVblank
NewFileIntroSamusFoundVblank: @ 0x0808EB00
	ldr r1, _0808EB4C @ =0x040000D4
	ldr r0, _0808EB50 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _0808EB54 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _0808EB58 @ =0x04000052
	ldr r0, _0808EB5C @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0808EB60 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0808EB64 @ =0x04000054
	ldr r0, _0808EB68 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x3c
	ldr r0, _0808EB6C @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808EB70 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808EB74 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808EB78 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_0808EB4C: .4byte 0x040000D4
_0808EB50: .4byte gOamData
_0808EB54: .4byte 0x84000100
_0808EB58: .4byte 0x04000052
_0808EB5C: .4byte 0x03001222
_0808EB60: .4byte 0x03001220
_0808EB64: .4byte 0x04000054
_0808EB68: .4byte gWrittenToBldy
_0808EB6C: .4byte 0x0300122C
_0808EB70: .4byte 0x0300122E
_0808EB74: .4byte 0x03001230
_0808EB78: .4byte 0x03001232

	thumb_func_start unk_8eb7c
unk_8eb7c: @ 0x0808EB7C
	bx lr
	.align 2, 0

	thumb_func_start NewFileIntroSamusCuredInit
NewFileIntroSamusCuredInit: @ 0x0808EB80
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	ldr r3, _0808ED0C @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _0808ED10 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _0808ED14 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0808ED18 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0808ED1C @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0808ED20 @ =unk_99940
	bl CallbackSetVBlank
	ldr r0, _0808ED24 @ =gNonGameplayRam
	mov r8, r0
	ldr r1, [r0, #4]
	movs r5, #0
	str r5, [sp]
	ldr r4, _0808ED28 @ =0x040000D4
	mov r2, sp
	str r2, [r4]
	str r0, [r4, #4]
	ldr r0, _0808ED2C @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	mov r0, r8
	str r1, [r0, #4]
	ldr r0, _0808ED30 @ =0x085E116C
	ldr r1, _0808ED34 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _0808ED38 @ =0x085F5254
	str r0, [r4]
	ldr r0, _0808ED3C @ =0x05000200
	str r0, [r4, #4]
	ldr r1, _0808ED40 @ =0x84000080
	mov sb, r1
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808ED44 @ =0x08613148
	str r0, [r4]
	ldr r0, _0808ED48 @ =0x06017FE0
	str r0, [r4, #4]
	ldr r6, _0808ED4C @ =0x84000008
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808ED50 @ =0x086131A8
	str r0, [r4]
	ldr r0, _0808ED54 @ =0x050003E0
	str r0, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808ED58 @ =0x085D4E6C
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _0808ED5C @ =0x085DB5CC
	ldr r1, _0808ED60 @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _0808ED64 @ =0x085DEF10
	ldr r1, _0808ED68 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _0808ED6C @ =0x085DF7AC
	ldr r1, _0808ED70 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _0808ED74 @ =0x08598898
	ldr r1, _0808ED78 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _0808ED7C @ =0x085DED10
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	mov r2, sb
	str r2, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808ED80 @ =0x085C8EFC
	str r0, [r4]
	ldr r0, _0808ED84 @ =0x050001E0
	str r0, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0808ED88 @ =0x085F6018
	movs r1, #0x80
	lsls r1, r1, #0x12
	bl LZ77UncompWram
	ldr r0, _0808ED8C @ =0x085EDF70
	ldr r1, _0808ED90 @ =0x02001000
	bl LZ77UncompWram
	ldr r1, _0808ED94 @ =0x04000010
	ldr r2, _0808ED98 @ =0x0000FFF8
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _0808ED9C @ =0x04000012
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	subs r1, #8
	ldr r2, _0808EDA0 @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	ldr r2, _0808EDA4 @ =0x00001E0A
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	adds r2, #0xf9
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x42
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _0808EDA8 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _0808EDAC @ =0x04000054
	strh r1, [r0]
	ldr r0, _0808EDB0 @ =0x0300122C
	strh r5, [r0]
	ldr r0, _0808EDB4 @ =0x0300122E
	strh r5, [r0]
	ldr r0, _0808EDB8 @ =0x03001230
	strh r5, [r0]
	ldr r1, _0808EDBC @ =0x03001232
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r2, #0
	strh r0, [r1]
	movs r1, #0x82
	lsls r1, r1, #1
	movs r0, #0xc8
	movs r2, #0
	bl NewFileIntroSamusCuredSetupOam
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl NewFileIntroSamusCuredSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _0808EDC0 @ =0x0863A19C
	mov r1, r8
	str r0, [r1]
	str r5, [sp]
	mov r2, sp
	str r2, [r4]
	ldr r0, _0808EDC4 @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _0808EDC8 @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xe8
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _0808EDCC @ =NewFileIntroSamusCuredVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808ED0C: .4byte 0x04000208
_0808ED10: .4byte 0x04000004
_0808ED14: .4byte 0x0000FFEF
_0808ED18: .4byte 0x04000200
_0808ED1C: .4byte 0x0000FFFD
_0808ED20: .4byte unk_99940
_0808ED24: .4byte gNonGameplayRam
_0808ED28: .4byte 0x040000D4
_0808ED2C: .4byte 0x85000150
_0808ED30: .4byte 0x085E116C
_0808ED34: .4byte 0x06010000
_0808ED38: .4byte 0x085F5254
_0808ED3C: .4byte 0x05000200
_0808ED40: .4byte 0x84000080
_0808ED44: .4byte 0x08613148
_0808ED48: .4byte 0x06017FE0
_0808ED4C: .4byte 0x84000008
_0808ED50: .4byte 0x086131A8
_0808ED54: .4byte 0x050003E0
_0808ED58: .4byte 0x085D4E6C
_0808ED5C: .4byte 0x085DB5CC
_0808ED60: .4byte 0x06008000
_0808ED64: .4byte 0x085DEF10
_0808ED68: .4byte 0x0600F800
_0808ED6C: .4byte 0x085DF7AC
_0808ED70: .4byte 0x0600F000
_0808ED74: .4byte 0x08598898
_0808ED78: .4byte 0x0600E000
_0808ED7C: .4byte 0x085DED10
_0808ED80: .4byte 0x085C8EFC
_0808ED84: .4byte 0x050001E0
_0808ED88: .4byte 0x085F6018
_0808ED8C: .4byte 0x085EDF70
_0808ED90: .4byte 0x02001000
_0808ED94: .4byte 0x04000010
_0808ED98: .4byte 0x0000FFF8
_0808ED9C: .4byte 0x04000012
_0808EDA0: .4byte 0x00001C08
_0808EDA4: .4byte 0x00001E0A
_0808EDA8: .4byte gWrittenToBldy
_0808EDAC: .4byte 0x04000054
_0808EDB0: .4byte 0x0300122C
_0808EDB4: .4byte 0x0300122E
_0808EDB8: .4byte 0x03001230
_0808EDBC: .4byte 0x03001232
_0808EDC0: .4byte 0x0863A19C
_0808EDC4: .4byte 0x0600D000
_0808EDC8: .4byte 0x85000400
_0808EDCC: .4byte NewFileIntroSamusCuredVblank

	thumb_func_start NewFileIntroSamusCuredProcess
NewFileIntroSamusCuredProcess: @ 0x0808EDD0
	push {r4, r5, r6, lr}
	sub sp, #4
	movs r5, #0
	ldr r2, _0808EE28 @ =gNonGameplayRam
	ldr r0, [r2]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	adds r3, r2, #0
	cmp r1, r0
	bne _0808EE02
	ldr r0, _0808EE2C @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808EE02
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r3, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _0808EE02
	movs r0, #1
	strb r0, [r1]
_0808EE02:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r3, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r3, r2
	ldrb r0, [r0]
	cmp r0, #0xc
	bls _0808EE1C
	b _0808F1EA
_0808EE1C:
	lsls r0, r0, #2
	ldr r1, _0808EE30 @ =_0808EE34
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808EE28: .4byte gNonGameplayRam
_0808EE2C: .4byte gChangedInput
_0808EE30: .4byte _0808EE34
_0808EE34: @ jump table
	.4byte _0808EE68 @ case 0
	.4byte _0808EE8E @ case 1
	.4byte _0808EEBC @ case 2
	.4byte _0808EEEC @ case 3
	.4byte _0808EF1E @ case 4
	.4byte _0808EF58 @ case 5
	.4byte _0808F050 @ case 6
	.4byte _0808F07C @ case 7
	.4byte _0808F0CA @ case 8
	.4byte _0808F10C @ case 9
	.4byte _0808F15C @ case 10
	.4byte _0808F18C @ case 11
	.4byte _0808F1CC @ case 12
_0808EE68:
	ldr r2, _0808EE78 @ =gWrittenToBldy
	ldrh r0, [r2]
	adds r1, r0, #0
	cmp r1, #0
	beq _0808EE7C
	subs r0, #1
	strh r0, [r2]
	b _0808F1BC
	.align 2, 0
_0808EE78: .4byte gWrittenToBldy
_0808EE7C:
	movs r4, #0x84
	lsls r4, r4, #2
	adds r0, r3, r4
	strh r1, [r0]
	movs r6, #0x85
	lsls r6, r6, #2
	adds r1, r3, r6
	movs r0, #1
	b _0808F1BA
_0808EE8E:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r2, r3, r0
	ldrh r1, [r2]
	subs r0, #0xf8
	cmp r1, r0
	beq _0808EE9E
	b _0808F1BC
_0808EE9E:
	movs r0, #0
	strh r0, [r2]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0808EEB8 @ =0x0000FBFF
	ands r0, r1
	strh r0, [r2]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #2
	b _0808F1BA
	.align 2, 0
_0808EEB8: .4byte 0x0000FBFF
_0808EEBC:
	movs r6, #0x84
	lsls r6, r6, #2
	adds r4, r3, r6
	ldrh r0, [r4]
	cmp r0, #0xa
	beq _0808EECA
	b _0808F1BC
_0808EECA:
	movs r2, #0
	movs r1, #0
	strh r1, [r4]
	ldr r4, _0808EEE8 @ =0x00000212
	adds r0, r3, r4
	strb r2, [r0]
	strh r1, [r3, #0xe]
	strh r1, [r3, #0xc]
	ldr r0, [r3, #4]
	str r0, [r3]
	adds r6, #4
	adds r1, r3, r6
	movs r0, #3
	b _0808F1BA
	.align 2, 0
_0808EEE8: .4byte 0x00000212
_0808EEEC:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	movs r4, #0x86
	lsls r4, r4, #2
	adds r1, r3, r4
	ldrb r0, [r1]
	cmp r0, #2
	beq _0808EF08
	cmp r0, #4
	bne _0808EF0C
_0808EF08:
	strb r2, [r1]
	b _0808F1BC
_0808EF0C:
	cmp r0, #3
	beq _0808EF12
	b _0808F1BC
_0808EF12:
	strb r2, [r1]
	movs r6, #0x85
	lsls r6, r6, #2
	adds r1, r3, r6
	movs r0, #4
	b _0808F1BA
_0808EF1E:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r3, r0
	ldrh r0, [r1]
	cmp r0, #0x14
	beq _0808EF2C
	b _0808F1BC
_0808EF2C:
	movs r0, #0
	strh r0, [r1]
	str r0, [sp]
	ldr r1, _0808EF4C @ =0x040000D4
	mov r2, sp
	str r2, [r1]
	ldr r0, _0808EF50 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _0808EF54 @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r4, #0x85
	lsls r4, r4, #2
	adds r1, r3, r4
	movs r0, #5
	b _0808F1BA
	.align 2, 0
_0808EF4C: .4byte 0x040000D4
_0808EF50: .4byte 0x0600D000
_0808EF54: .4byte 0x85000400
_0808EF58:
	ldr r6, _0808EF8C @ =0x00000213
	adds r4, r3, r6
	ldrb r0, [r4]
	adds r0, #1
	movs r2, #0
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #5
	bhi _0808EF9C
	ldr r2, _0808EF90 @ =0x040000D4
	ldrb r0, [r4]
	lsls r0, r0, #0xc
	movs r1, #0x80
	lsls r1, r1, #0x12
	adds r0, r0, r1
	str r0, [r2]
	ldrb r0, [r4]
	lsls r0, r0, #0xc
	ldr r1, _0808EF94 @ =0x06007000
	adds r0, r0, r1
	str r0, [r2, #4]
	ldr r0, _0808EF98 @ =0x84000400
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	b _0808EFF8
	.align 2, 0
_0808EF8C: .4byte 0x00000213
_0808EF90: .4byte 0x040000D4
_0808EF94: .4byte 0x06007000
_0808EF98: .4byte 0x84000400
_0808EF9C:
	cmp r0, #6
	bne _0808EFF4
	ldr r1, _0808EFD4 @ =0x040000D4
	ldr r0, _0808EFD8 @ =0x0879C354
	ldr r0, [r0]
	str r0, [r1]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _0808EFDC @ =0x84000020
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r0, #0x80
	lsls r0, r0, #0x12
	str r0, [r1]
	ldr r0, _0808EFE0 @ =0x0600F000
	str r0, [r1, #4]
	ldr r0, _0808EFE4 @ =0x84000200
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _0808EFE8 @ =0x03001220
	strh r2, [r0]
	ldr r1, _0808EFEC @ =0x03001222
	movs r0, #0x10
	strh r0, [r1]
	ldr r0, _0808EFF0 @ =0x0300122E
	strh r2, [r0]
	b _0808EFF8
	.align 2, 0
_0808EFD4: .4byte 0x040000D4
_0808EFD8: .4byte 0x0879C354
_0808EFDC: .4byte 0x84000020
_0808EFE0: .4byte 0x0600F000
_0808EFE4: .4byte 0x84000200
_0808EFE8: .4byte 0x03001220
_0808EFEC: .4byte 0x03001222
_0808EFF0: .4byte 0x0300122E
_0808EFF4:
	movs r0, #0xa
	strb r0, [r4]
_0808EFF8:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r3, r2
	ldrh r2, [r1]
	cmp r2, #1
	beq _0808F006
	b _0808F1BC
_0808F006:
	movs r0, #0
	strh r0, [r1]
	ldr r4, _0808F024 @ =0x00000111
	adds r1, r3, r4
	ldrb r0, [r1]
	cmp r0, #0xe
	bhi _0808F028
	adds r0, #1
	strb r0, [r1]
	movs r6, #0x88
	lsls r6, r6, #1
	adds r0, r3, r6
	strb r2, [r0]
	b _0808F1BC
	.align 2, 0
_0808F024: .4byte 0x00000111
_0808F028:
	ldr r1, _0808F044 @ =0x04000050
	ldr r2, _0808F048 @ =0x00001844
	adds r0, r2, #0
	strh r0, [r1]
	ldr r4, _0808F04C @ =0x00000213
	adds r1, r3, r4
	movs r0, #0
	strb r0, [r1]
	movs r6, #0x85
	lsls r6, r6, #2
	adds r1, r3, r6
	movs r0, #6
	b _0808F1BA
	.align 2, 0
_0808F044: .4byte 0x04000050
_0808F048: .4byte 0x00001844
_0808F04C: .4byte 0x00000213
_0808F050:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r4, r3, r0
	ldrh r0, [r4]
	cmp r0, #0x46
	beq _0808F05E
	b _0808F1BC
_0808F05E:
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r6, #0x80
	lsls r6, r6, #3
	adds r1, r6, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	strh r0, [r4]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #7
	b _0808F1BA
_0808F07C:
	ldr r2, _0808F0AC @ =0x00000213
	adds r1, r3, r2
	ldrb r0, [r1]
	adds r0, #1
	movs r4, #0
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #8
	beq _0808F092
	b _0808F1BC
_0808F092:
	strb r4, [r1]
	ldr r1, _0808F0B0 @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0808F0B8
	adds r0, #1
	strh r0, [r1]
	ldr r1, _0808F0B4 @ =0x03001222
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	b _0808F1BC
	.align 2, 0
_0808F0AC: .4byte 0x00000213
_0808F0B0: .4byte 0x03001220
_0808F0B4: .4byte 0x03001222
_0808F0B8:
	movs r6, #0x84
	lsls r6, r6, #2
	adds r0, r3, r6
	strh r4, [r0]
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r3, r1
	strb r2, [r0]
	b _0808F1BC
_0808F0CA:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r3, r2
	ldrh r0, [r1]
	cmp r0, #8
	bne _0808F1BC
	movs r2, #0
	strh r2, [r1]
	ldr r4, _0808F0F4 @ =0x0000012D
	adds r1, r3, r4
	ldrb r0, [r1]
	cmp r0, #0xe
	bhi _0808F0F8
	adds r0, #1
	strb r0, [r1]
	movs r6, #0x96
	lsls r6, r6, #1
	adds r1, r3, r6
	movs r0, #1
	b _0808F1BA
	.align 2, 0
_0808F0F4: .4byte 0x0000012D
_0808F0F8:
	ldr r0, _0808F108 @ =gWrittenToBldy
	strh r2, [r0]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #9
	b _0808F1BA
	.align 2, 0
_0808F108: .4byte gWrittenToBldy
_0808F10C:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r4, r3, r1
	ldrh r0, [r4]
	cmp r0, #0x1e
	bne _0808F1BC
	ldr r1, _0808F14C @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	movs r2, #0
	movs r1, #0
	strh r1, [r4]
	ldr r4, _0808F150 @ =0x00000212
	adds r0, r3, r4
	strb r2, [r0]
	strh r1, [r3, #0xe]
	strh r1, [r3, #0xc]
	ldr r1, _0808F154 @ =0x0879C5A4
	ldr r0, _0808F158 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x44]
	str r0, [r3]
	movs r6, #0x85
	lsls r6, r6, #2
	adds r1, r3, r6
	movs r0, #0xa
	b _0808F1BA
	.align 2, 0
_0808F14C: .4byte 0x04000050
_0808F150: .4byte 0x00000212
_0808F154: .4byte 0x0879C5A4
_0808F158: .4byte 0x03000011
_0808F15C:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	movs r4, #0x86
	lsls r4, r4, #2
	adds r1, r3, r4
	ldrb r0, [r1]
	cmp r0, #2
	bne _0808F176
	b _0808EF08
_0808F176:
	cmp r0, #4
	bne _0808F17C
	b _0808EF08
_0808F17C:
	cmp r0, #3
	bne _0808F1BC
	strb r2, [r1]
	movs r6, #0x85
	lsls r6, r6, #2
	adds r1, r3, r6
	movs r0, #0xb
	b _0808F1BA
_0808F18C:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r3, r0
	ldrh r0, [r1]
	cmp r0, #0xa
	bne _0808F1A4
	movs r0, #0x1e
	movs r1, #0x78
	movs r2, #0x40
	bl NewFileIntroSamusCuredSetupOam
	b _0808F1BC
_0808F1A4:
	cmp r0, #0x28
	bne _0808F1BC
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0808F1C8 @ =gWrittenToBldy
	movs r0, #0x10
	strh r0, [r1]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #0xc
_0808F1BA:
	strb r0, [r1]
_0808F1BC:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _0808F1EA
	.align 2, 0
_0808F1C8: .4byte gWrittenToBldy
_0808F1CC:
	ldr r1, _0808F1DC @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0808F1E0
	adds r0, #1
	strh r0, [r1]
	b _0808F1E2
	.align 2, 0
_0808F1DC: .4byte gWrittenToBldy
_0808F1E0:
	movs r5, #1
_0808F1E2:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_0808F1EA:
	bl IntroProcessText
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start NewFileIntroSamusCured
NewFileIntroSamusCured: @ 0x0808F1F8
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _0808F210 @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _0808F224
	cmp r0, #1
	bgt _0808F214
	cmp r0, #0
	beq _0808F21E
	b _0808F278
	.align 2, 0
_0808F210: .4byte gNonGameplayRam
_0808F214:
	cmp r0, #2
	beq _0808F23C
	cmp r0, #3
	beq _0808F258
	b _0808F278
_0808F21E:
	bl NewFileIntroSamusCuredInit
	b _0808F230
_0808F224:
	bl SpecialCutsceneFadeIn
	ldr r0, _0808F238 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _0808F278
_0808F230:
	movs r0, #2
	strh r0, [r4, #8]
	b _0808F278
	.align 2, 0
_0808F238: .4byte gWrittenToBldy
_0808F23C:
	bl NewFileIntroSamusCuredProcess
	cmp r0, #0
	beq _0808F278
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	strb r5, [r0]
	subs r1, #1
	adds r0, r4, r1
	strb r5, [r0]
	movs r0, #3
	strh r0, [r4, #8]
	b _0808F278
_0808F258:
	ldr r1, _0808F268 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0808F26C
	adds r0, #1
	strh r0, [r1]
	b _0808F270
	.align 2, 0
_0808F268: .4byte gWrittenToBldy
_0808F26C:
	strh r5, [r4, #8]
	movs r5, #1
_0808F270:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_0808F278:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start NewFileIntroProcessSamusCuredScrolling
NewFileIntroProcessSamusCuredScrolling: @ 0x0808F280
	push {r4, lr}
	sub sp, #4
	adds r2, r0, #0
	ldrb r0, [r2, #0x13]
	adds r1, r0, #1
	movs r3, #0
	strb r1, [r2, #0x13]
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _0808F2CC
	ldr r0, _0808F2BC @ =0x0300122C
	ldrh r0, [r0]
	movs r1, #0
	strh r0, [r2, #0xc]
	ldr r0, _0808F2C0 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r2, #0xe]
	ldr r0, _0808F2C4 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r2]
	ldr r0, _0808F2C8 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r2, #2]
	movs r0, #0xa0
	lsls r0, r0, #7
	strh r0, [r2, #0xa]
	strb r1, [r2, #0x13]
	movs r0, #1
	strb r0, [r2, #0x14]
	b _0808F37A
	.align 2, 0
_0808F2BC: .4byte 0x0300122C
_0808F2C0: .4byte 0x0300122E
_0808F2C4: .4byte 0x03001230
_0808F2C8: .4byte 0x03001232
_0808F2CC:
	cmp r0, #1
	bne _0808F2E0
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xa
	bne _0808F37A
	strb r3, [r2, #0x13]
	movs r0, #2
	strb r0, [r2, #0x14]
	b _0808F37A
_0808F2E0:
	ldr r0, _0808F35C @ =gNonGameplayRam
	movs r4, #0x85
	lsls r4, r4, #2
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #1
	bne _0808F378
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0808F32A
	strb r3, [r2, #0x13]
	ldrh r3, [r2, #0xe]
	movs r0, #0xe
	ldrsh r1, [r2, r0]
	movs r0, #0xa0
	rsbs r0, r0, #0
	cmp r1, r0
	ble _0808F310
	subs r0, r3, #1
	strh r0, [r2, #0xe]
	ldrh r0, [r2, #8]
	adds r0, #1
	strh r0, [r2, #8]
_0808F310:
	ldrh r1, [r2, #2]
	movs r3, #2
	ldrsh r0, [r2, r3]
	cmp r0, #0
	ble _0808F31E
	subs r0, r1, #1
	strh r0, [r2, #2]
_0808F31E:
	ldr r1, _0808F360 @ =0x0300122E
	ldrh r0, [r2, #0xe]
	strh r0, [r1]
	ldr r1, _0808F364 @ =0x03001232
	ldrh r0, [r2, #2]
	strh r0, [r1]
_0808F32A:
	movs r4, #8
	ldrsh r0, [r2, r4]
	cmp r0, #9
	bne _0808F37A
	movs r1, #0
	strh r1, [r2, #8]
	ldrh r0, [r2, #0xa]
	cmp r0, #0
	beq _0808F37A
	ldr r3, _0808F368 @ =0xFFFFFC00
	adds r0, r0, r3
	strh r0, [r2, #0xa]
	str r1, [sp]
	ldr r1, _0808F36C @ =0x040000D4
	mov r4, sp
	str r4, [r1]
	ldrh r0, [r2, #0xa]
	ldr r2, _0808F370 @ =0x06008000
	adds r0, r0, r2
	str r0, [r1, #4]
	ldr r0, _0808F374 @ =0x85000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _0808F37A
	.align 2, 0
_0808F35C: .4byte gNonGameplayRam
_0808F360: .4byte 0x0300122E
_0808F364: .4byte 0x03001232
_0808F368: .4byte 0xFFFFFC00
_0808F36C: .4byte 0x040000D4
_0808F370: .4byte 0x06008000
_0808F374: .4byte 0x85000100
_0808F378:
	strb r3, [r2, #0x13]
_0808F37A:
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NewFileIntroSamusCuredSetupOam
NewFileIntroSamusCuredSetupOam: @ 0x0808F384
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov ip, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r6, #0
	ldr r1, _0808F3D4 @ =gNonGameplayRam
	movs r3, #0x8b
	lsls r3, r3, #2
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _0808F3CA
	adds r4, r1, #0
	adds r1, r3, #0
_0808F3B0:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0x13
	bhi _0808F3CE
	lsls r0, r6, #3
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808F3B0
_0808F3CA:
	cmp r6, #0x13
	bls _0808F3D8
_0808F3CE:
	movs r0, #0x14
	b _0808F4B0
	.align 2, 0
_0808F3D4: .4byte gNonGameplayRam
_0808F3D8:
	movs r0, #0
	str r0, [sp]
	ldr r1, _0808F438 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	lsls r0, r6, #3
	adds r0, r0, r6
	lsls r5, r0, #2
	ldr r7, _0808F43C @ =0x030016A0
	adds r0, r5, r7
	str r0, [r1, #4]
	ldr r0, _0808F440 @ =0x85000009
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r1, _0808F444 @ =0xFFFFFDE4
	adds r0, r7, r1
	adds r4, r5, r0
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r4, r1
	mov r1, r8
	strh r1, [r0]
	ldr r1, _0808F448 @ =0x0000022A
	adds r0, r4, r1
	strh r2, [r0]
	adds r1, #2
	adds r0, r4, r1
	mov r1, ip
	strb r1, [r0]
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r2, r4, r0
	ldrb r1, [r2]
	movs r0, #1
	orrs r1, r0
	strb r1, [r2]
	mov r0, ip
	cmp r0, #1
	bne _0808F450
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r2]
	adds r0, r7, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808F44C @ =NewFileIntroProcessSamusCuredScrolling
	b _0808F4AC
	.align 2, 0
_0808F438: .4byte 0x040000D4
_0808F43C: .4byte 0x030016A0
_0808F440: .4byte 0x85000009
_0808F444: .4byte 0xFFFFFDE4
_0808F448: .4byte 0x0000022A
_0808F44C: .4byte NewFileIntroProcessSamusCuredScrolling
_0808F450:
	mov r1, ip
	cmp r1, #0x1e
	bne _0808F494
	ldr r0, _0808F484 @ =0x0000012D
	bl SoundPlay
	ldr r0, _0808F488 @ =0x00000236
	adds r2, r4, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	adds r0, r7, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0808F48C @ =0x085F49E8
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808F490 @ =unk_8f5c0
	b _0808F4AC
	.align 2, 0
_0808F484: .4byte 0x0000012D
_0808F488: .4byte 0x00000236
_0808F48C: .4byte 0x085F49E8
_0808F490: .4byte unk_8f5c0
_0808F494:
	mov r1, ip
	cmp r1, #0xc8
	bne _0808F4AE
	adds r0, r7, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0808F4BC @ =0x08613180
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0808F4C0 @ =NewFileIntroProcessTextCursor
_0808F4AC:
	str r1, [r0]
_0808F4AE:
	adds r0, r6, #0
_0808F4B0:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808F4BC: .4byte 0x08613180
_0808F4C0: .4byte NewFileIntroProcessTextCursor

	thumb_func_start NewFileIntroSamusCuredVblank
NewFileIntroSamusCuredVblank: @ 0x0808F4C4
	push {r4, lr}
	ldr r3, _0808F570 @ =0x040000D4
	ldr r0, _0808F574 @ =gOamData
	str r0, [r3]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r3, #4]
	ldr r0, _0808F578 @ =0x84000100
	str r0, [r3, #8]
	ldr r0, [r3, #8]
	ldr r2, _0808F57C @ =0x04000052
	ldr r0, _0808F580 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0808F584 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0808F588 @ =0x04000054
	ldr r0, _0808F58C @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x3c
	ldr r0, _0808F590 @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808F594 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808F598 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0808F59C @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r2, _0808F5A0 @ =gNonGameplayRam
	movs r0, #0x88
	lsls r0, r0, #1
	adds r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #1
	bne _0808F53C
	movs r0, #0
	strb r0, [r1]
	ldr r1, _0808F5A4 @ =0x0879C314
	ldr r4, _0808F5A8 @ =0x00000111
	adds r0, r2, r4
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r3]
	ldr r0, _0808F5AC @ =0x050000A0
	str r0, [r3, #4]
	ldr r0, _0808F5B0 @ =0x84000050
	str r0, [r3, #8]
	ldr r0, [r3, #8]
_0808F53C:
	movs r0, #0x96
	lsls r0, r0, #1
	adds r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #1
	bne _0808F568
	movs r0, #0
	strb r0, [r1]
	ldr r1, _0808F5B4 @ =0x0879C354
	ldr r4, _0808F5B8 @ =0x0000012D
	adds r0, r2, r4
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r3]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r3, #4]
	ldr r0, _0808F5BC @ =0x84000020
	str r0, [r3, #8]
	ldr r0, [r3, #8]
_0808F568:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808F570: .4byte 0x040000D4
_0808F574: .4byte gOamData
_0808F578: .4byte 0x84000100
_0808F57C: .4byte 0x04000052
_0808F580: .4byte 0x03001222
_0808F584: .4byte 0x03001220
_0808F588: .4byte 0x04000054
_0808F58C: .4byte gWrittenToBldy
_0808F590: .4byte 0x0300122C
_0808F594: .4byte 0x0300122E
_0808F598: .4byte 0x03001230
_0808F59C: .4byte 0x03001232
_0808F5A0: .4byte gNonGameplayRam
_0808F5A4: .4byte 0x0879C314
_0808F5A8: .4byte 0x00000111
_0808F5AC: .4byte 0x050000A0
_0808F5B0: .4byte 0x84000050
_0808F5B4: .4byte 0x0879C354
_0808F5B8: .4byte 0x0000012D
_0808F5BC: .4byte 0x84000020

	thumb_func_start unk_8f5c0
unk_8f5c0: @ 0x0808F5C0
	bx lr
	.align 2, 0

	thumb_func_start NewFileIntroArrivingAtBslInit
NewFileIntroArrivingAtBslInit: @ 0x0808F5C4
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	ldr r3, _0808F730 @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _0808F734 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _0808F738 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0808F73C @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0808F740 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0808F744 @ =unk_99940
	bl CallbackSetVBlank
	movs r4, #0
	str r4, [sp]
	ldr r5, _0808F748 @ =0x040000D4
	mov r0, sp
	str r0, [r5]
	ldr r1, _0808F74C @ =gNonGameplayRam
	mov r8, r1
	str r1, [r5, #4]
	ldr r0, _0808F750 @ =0x85000150
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	ldr r0, _0808F754 @ =0x085E116C
	ldr r1, _0808F758 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _0808F75C @ =0x085F5254
	str r0, [r5]
	ldr r0, _0808F760 @ =0x05000200
	str r0, [r5, #4]
	ldr r6, _0808F764 @ =0x84000080
	str r6, [r5, #8]
	ldr r0, [r5, #8]
	ldr r0, _0808F768 @ =0x085E8A10
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _0808F76C @ =0x085EDF70
	ldr r1, _0808F770 @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _0808F774 @ =0x085F5A58
	ldr r1, _0808F778 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _0808F77C @ =0x085F6018
	ldr r1, _0808F780 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _0808F784 @ =0x08598898
	ldr r1, _0808F788 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _0808F78C @ =0x085F5054
	str r0, [r5]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r5, #4]
	str r6, [r5, #8]
	ldr r1, [r5, #8]
	strh r4, [r0]
	ldr r0, _0808F790 @ =0x08662804
	movs r1, #0x80
	lsls r1, r1, #0x12
	bl LZ77UncompWram
	ldr r0, _0808F794 @ =0x085EAC18
	ldr r1, _0808F798 @ =0x02001000
	bl LZ77UncompWram
	ldr r0, _0808F79C @ =0x085E49E4
	ldr r1, _0808F7A0 @ =0x02009000
	bl LZ77UncompWram
	ldr r0, _0808F7A4 @ =0x04000010
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r1, _0808F7A8 @ =0x03001224
	ldr r2, _0808F7AC @ =0x0000FFF8
	adds r0, r2, #0
	strh r0, [r1]
	ldr r1, _0808F7B0 @ =0x03001226
	movs r0, #8
	strh r0, [r1]
	ldr r0, _0808F7B4 @ =0x0300122C
	strh r4, [r0]
	ldr r0, _0808F7B8 @ =0x0300122E
	strh r4, [r0]
	ldr r0, _0808F7BC @ =0x03001230
	strh r4, [r0]
	ldr r0, _0808F7C0 @ =0x03001232
	strh r4, [r0]
	ldr r1, _0808F7C4 @ =0x04000008
	ldr r2, _0808F7C8 @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	ldr r2, _0808F7CC @ =0x00001E02
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _0808F7D0 @ =0x00001F0B
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x42
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _0808F7D4 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _0808F7D8 @ =0x04000054
	strh r1, [r0]
	ldr r0, _0808F7DC @ =0x03001220
	strh r4, [r0]
	ldr r0, _0808F7E0 @ =0x03001222
	strh r1, [r0]
	movs r0, #0x18
	movs r1, #0x70
	movs r2, #0x50
	bl NewFileIntroArrivingAtBslSetupOam
	movs r0, #0x19
	movs r1, #0x70
	movs r2, #0x50
	bl NewFileIntroArrivingAtBslSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _0808F7E4 @ =0x0863A19C
	mov r1, r8
	str r0, [r1]
	str r4, [sp]
	mov r2, sp
	str r2, [r5]
	ldr r0, _0808F7E8 @ =0x0600D000
	str r0, [r5, #4]
	ldr r0, _0808F7EC @ =0x85000400
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xa8
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _0808F7F0 @ =NewFileIntroArrivingAtBslVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808F730: .4byte 0x04000208
_0808F734: .4byte 0x04000004
_0808F738: .4byte 0x0000FFEF
_0808F73C: .4byte 0x04000200
_0808F740: .4byte 0x0000FFFD
_0808F744: .4byte unk_99940
_0808F748: .4byte 0x040000D4
_0808F74C: .4byte gNonGameplayRam
_0808F750: .4byte 0x85000150
_0808F754: .4byte 0x085E116C
_0808F758: .4byte 0x06010000
_0808F75C: .4byte 0x085F5254
_0808F760: .4byte 0x05000200
_0808F764: .4byte 0x84000080
_0808F768: .4byte 0x085E8A10
_0808F76C: .4byte 0x085EDF70
_0808F770: .4byte 0x06008000
_0808F774: .4byte 0x085F5A58
_0808F778: .4byte 0x0600F000
_0808F77C: .4byte 0x085F6018
_0808F780: .4byte 0x0600F800
_0808F784: .4byte 0x08598898
_0808F788: .4byte 0x0600E000
_0808F78C: .4byte 0x085F5054
_0808F790: .4byte 0x08662804
_0808F794: .4byte 0x085EAC18
_0808F798: .4byte 0x02001000
_0808F79C: .4byte 0x085E49E4
_0808F7A0: .4byte 0x02009000
_0808F7A4: .4byte 0x04000010
_0808F7A8: .4byte 0x03001224
_0808F7AC: .4byte 0x0000FFF8
_0808F7B0: .4byte 0x03001226
_0808F7B4: .4byte 0x0300122C
_0808F7B8: .4byte 0x0300122E
_0808F7BC: .4byte 0x03001230
_0808F7C0: .4byte 0x03001232
_0808F7C4: .4byte 0x04000008
_0808F7C8: .4byte 0x00001C08
_0808F7CC: .4byte 0x00001E02
_0808F7D0: .4byte 0x00001F0B
_0808F7D4: .4byte gWrittenToBldy
_0808F7D8: .4byte 0x04000054
_0808F7DC: .4byte 0x03001220
_0808F7E0: .4byte 0x03001222
_0808F7E4: .4byte 0x0863A19C
_0808F7E8: .4byte 0x0600D000
_0808F7EC: .4byte 0x85000400
_0808F7F0: .4byte NewFileIntroArrivingAtBslVblank

	thumb_func_start NewFileIntroArrivingAtBslProcess
NewFileIntroArrivingAtBslProcess: @ 0x0808F7F4
	push {r4, r5, r6, lr}
	sub sp, #4
	movs r6, #0
	ldr r2, _0808F84C @ =gNonGameplayRam
	ldr r0, [r2]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	adds r4, r2, #0
	cmp r1, r0
	bne _0808F826
	ldr r0, _0808F850 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808F826
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _0808F826
	movs r0, #1
	strb r0, [r1]
_0808F826:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r4, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #0xe
	bls _0808F840
	b _0808FF30
_0808F840:
	lsls r0, r0, #2
	ldr r1, _0808F854 @ =_0808F858
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808F84C: .4byte gNonGameplayRam
_0808F850: .4byte gChangedInput
_0808F854: .4byte _0808F858
_0808F858: @ jump table
	.4byte _0808F894 @ case 0
	.4byte _0808F8B2 @ case 1
	.4byte _0808F910 @ case 2
	.4byte _0808F964 @ case 3
	.4byte _0808F9C8 @ case 4
	.4byte _0808F9D0 @ case 5
	.4byte _0808FA68 @ case 6
	.4byte _0808FA90 @ case 7
	.4byte _0808FB8C @ case 8
	.4byte _0808FC0C @ case 9
	.4byte _0808FC5C @ case 10
	.4byte _0808FCBC @ case 11
	.4byte _0808FEA0 @ case 12
	.4byte _0808FEF8 @ case 13
	.4byte _0808FF0C @ case 14
_0808F894:
	movs r3, #0x84
	lsls r3, r3, #2
	adds r1, r4, r3
	ldrh r0, [r1]
	cmp r0, #1
	beq _0808F8A2
	b _0808FF02
_0808F8A2:
	movs r0, #0
	strh r0, [r1]
	movs r5, #0x85
	lsls r5, r5, #2
	adds r1, r4, r5
	movs r0, #2
	strb r0, [r1]
	b _0808FF02
_0808F8B2:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrh r0, [r1]
	cmp r0, #3
	beq _0808F8C0
	b _0808FF02
_0808F8C0:
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0808F8E0 @ =0x03001222
	ldrh r0, [r1]
	cmp r0, #8
	bls _0808F8D0
	subs r0, #1
	strh r0, [r1]
_0808F8D0:
	ldr r0, _0808F8E4 @ =0x03001220
	ldrh r1, [r0]
	adds r2, r0, #0
	cmp r1, #0xf
	bhi _0808F8E8
	adds r0, r1, #2
	strh r0, [r2]
	b _0808F8F2
	.align 2, 0
_0808F8E0: .4byte 0x03001222
_0808F8E4: .4byte 0x03001220
_0808F8E8:
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r4, r3
	movs r0, #2
	strb r0, [r1]
_0808F8F2:
	ldrh r0, [r2]
	cmp r0, #8
	beq _0808F8FA
	b _0808FF02
_0808F8FA:
	movs r0, #0x18
	movs r1, #0x70
	movs r2, #0x50
	bl NewFileIntroArrivingAtBslSetupOam
	movs r0, #0x19
	movs r1, #0x70
	movs r2, #0x50
	bl NewFileIntroArrivingAtBslSetupOam
	b _0808FF02
_0808F910:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r5, r4, r0
	ldrh r0, [r5]
	cmp r0, #0xa
	bne _0808F928
	movs r0, #0x1a
	movs r1, #0xc6
	movs r2, #0x24
	bl NewFileIntroArrivingAtBslSetupOam
	b _0808F9B2
_0808F928:
	cmp r0, #0x28
	bne _0808F9B2
	movs r0, #0xff
	movs r1, #0
	movs r2, #0
	bl NewFileIntroArrivingAtBslSetupOam
	movs r0, #0x17
	movs r1, #0x14
	movs r2, #0xc0
	bl NewFileIntroArrivingAtBslSetupOam
	movs r0, #0x14
	movs r1, #0x80
	movs r2, #0xc0
	bl NewFileIntroArrivingAtBslSetupOam
	movs r0, #0x15
	movs r1, #0x80
	movs r2, #0xc0
	bl NewFileIntroArrivingAtBslSetupOam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r2, #0
	movs r1, #3
	strb r1, [r0]
	strh r2, [r5]
	b _0808F9B2
_0808F964:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r5, #0
	movs r0, #0
	strh r0, [r1]
	movs r0, #0x86
	lsls r0, r0, #2
	adds r3, r4, r0
	ldrb r0, [r3]
	cmp r0, #2
	beq _0808F980
	cmp r0, #4
	bne _0808F990
_0808F980:
	strb r5, [r3]
	ldr r0, _0808F98C @ =0x00000203
	bl SoundPlay
	b _0808F9B2
	.align 2, 0
_0808F98C: .4byte 0x00000203
_0808F990:
	cmp r0, #3
	bne _0808F9B2
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0808F9C0 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	strb r5, [r3]
	ldr r0, _0808F9C4 @ =0x00000203
	bl SoundPlay
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r0, #4
	strb r0, [r1]
_0808F9B2:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	bl NewFileIntroProcessAdamText
	b _0808FF30
	.align 2, 0
_0808F9C0: .4byte 0x0000FEFF
_0808F9C4: .4byte 0x00000203
_0808F9C8:
	movs r3, #0x84
	lsls r3, r3, #2
	adds r1, r4, r3
	b _0808FEFE
_0808F9D0:
	movs r5, #0x84
	lsls r5, r5, #2
	adds r3, r4, r5
	ldrh r0, [r3]
	cmp r0, #1
	bne _0808FA04
	ldr r2, _0808F9F8 @ =0x080A8CDC
	ldr r0, _0808F9FC @ =0x080A8D3C
	ldr r1, _0808FA00 @ =0x00001224
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	movs r1, #0
	bl ApplyMusicSoundFading
	b _0808FF02
	.align 2, 0
_0808F9F8: .4byte 0x080A8CDC
_0808F9FC: .4byte 0x080A8D3C
_0808FA00: .4byte 0x00001224
_0808FA04:
	cmp r0, #0x1e
	bhi _0808FA0A
	b _0808FF02
_0808FA0A:
	ldr r1, _0808FA18 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0808FA1C
	adds r0, #1
	b _0808FF00
	.align 2, 0
_0808FA18: .4byte gWrittenToBldy
_0808FA1C:
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0808FA5C @ =0x0000FBFF
	ands r0, r1
	strh r0, [r2]
	ldrh r0, [r2]
	movs r5, #0x80
	lsls r5, r5, #4
	adds r1, r5, #0
	orrs r0, r1
	strh r0, [r2]
	movs r2, #0
	str r2, [sp]
	ldr r1, _0808FA60 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	movs r5, #0x87
	lsls r5, r5, #2
	adds r0, r4, r5
	str r0, [r1, #4]
	ldr r0, _0808FA64 @ =0x850000B4
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	strh r2, [r3]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #6
	strb r0, [r1]
	b _0808FF02
	.align 2, 0
_0808FA5C: .4byte 0x0000FBFF
_0808FA60: .4byte 0x040000D4
_0808FA64: .4byte 0x850000B4
_0808FA68:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0808FA80 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _0808FA84
	subs r0, #1
	strh r0, [r1]
	b _0808FF30
	.align 2, 0
_0808FA80: .4byte gWrittenToBldy
_0808FA84:
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r4, r3
	movs r0, #7
	strb r0, [r1]
	b _0808FF30
_0808FA90:
	movs r5, #0x84
	lsls r5, r5, #2
	adds r2, r4, r5
	ldrh r0, [r2]
	cmp r0, #1
	bne _0808FAC4
	ldr r1, _0808FABC @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	movs r0, #0
	str r0, [sp]
	adds r1, #0x84
	mov r0, sp
	str r0, [r1]
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _0808FAC0 @ =0x85001200
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _0808FF02
	.align 2, 0
_0808FABC: .4byte 0x04000050
_0808FAC0: .4byte 0x85001200
_0808FAC4:
	cmp r0, #2
	bne _0808FB14
	ldr r1, _0808FAF4 @ =0x040000D4
	movs r0, #0x80
	lsls r0, r0, #0x12
	str r0, [r1]
	ldr r0, _0808FAF8 @ =0x06004800
	str r0, [r1, #4]
	ldr r0, _0808FAFC @ =0x84000200
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _0808FB00 @ =0x08663820
	str r0, [r1]
	ldr r0, _0808FB04 @ =0x05000180
	str r0, [r1, #4]
	ldr r0, _0808FB08 @ =0x84000020
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r1, _0808FB0C @ =0x03001224
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0808FB10 @ =0x03001226
	movs r0, #4
	b _0808FF00
	.align 2, 0
_0808FAF4: .4byte 0x040000D4
_0808FAF8: .4byte 0x06004800
_0808FAFC: .4byte 0x84000200
_0808FB00: .4byte 0x08663820
_0808FB04: .4byte 0x05000180
_0808FB08: .4byte 0x84000020
_0808FB0C: .4byte 0x03001224
_0808FB10: .4byte 0x03001226
_0808FB14:
	cmp r0, #3
	bne _0808FB38
	ldr r1, _0808FB34 @ =0x04000008
	movs r2, #0x90
	lsls r2, r2, #4
	adds r0, r2, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	b _0808FF02
	.align 2, 0
_0808FB34: .4byte 0x04000008
_0808FB38:
	cmp r0, #0x3c
	beq _0808FB3E
	b _0808FF02
_0808FB3E:
	movs r1, #0
	movs r0, #0
	strh r0, [r2]
	strh r0, [r4, #0x12]
	strh r0, [r4, #0x10]
	strh r0, [r4, #0xe]
	strh r0, [r4, #0xc]
	ldr r5, _0808FB80 @ =0x00000212
	adds r0, r4, r5
	strb r1, [r0]
	ldr r1, _0808FB84 @ =0x0879C5A4
	ldr r0, _0808FB88 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0]
	str r0, [r4]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #8
	strb r0, [r1]
	movs r1, #0x82
	lsls r1, r1, #1
	movs r0, #0x64
	movs r2, #0
	bl NewFileIntroArrivingAtBslSetupOam
	b _0808FF02
	.align 2, 0
_0808FB80: .4byte 0x00000212
_0808FB84: .4byte 0x0879C5A4
_0808FB88: .4byte 0x03000011
_0808FB8C:
	ldr r2, _0808FBB0 @ =gNonGameplayRam
	movs r3, #0x84
	lsls r3, r3, #2
	adds r1, r2, r3
	movs r3, #0
	movs r0, #0
	strh r0, [r1]
	movs r5, #0x86
	lsls r5, r5, #2
	adds r1, r2, r5
	ldrb r0, [r1]
	cmp r0, #2
	beq _0808FBAA
	cmp r0, #4
	bne _0808FBB4
_0808FBAA:
	strb r3, [r1]
	b _0808FBC4
	.align 2, 0
_0808FBB0: .4byte gNonGameplayRam
_0808FBB4:
	cmp r0, #3
	bne _0808FBC4
	strb r3, [r1]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r2, r0
	movs r0, #9
	strb r0, [r1]
_0808FBC4:
	bl NewFileIntroCheckMonologueEnded
	cmp r0, #0
	beq _0808FBE2
	ldr r3, _0808FBF4 @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r2, #0
	movs r0, #9
	strb r0, [r1]
	movs r5, #0x86
	lsls r5, r5, #2
	adds r0, r3, r5
	strb r2, [r0]
_0808FBE2:
	ldr r0, _0808FBF4 @ =gNonGameplayRam
	ldr r2, _0808FBF8 @ =0x00000213
	adds r1, r0, r2
	ldrb r0, [r1]
	cmp r0, #0
	bne _0808FBFC
	movs r0, #0x64
	strb r0, [r1]
	b _0808FF02
	.align 2, 0
_0808FBF4: .4byte gNonGameplayRam
_0808FBF8: .4byte 0x00000213
_0808FBFC:
	cmp r0, #1
	beq _0808FC02
	b _0808FF02
_0808FC02:
	movs r0, #0x64
	strb r0, [r1]
	bl SpecialCutsceneProcessMonologue
	b _0808FF02
_0808FC0C:
	movs r3, #0x84
	lsls r3, r3, #2
	adds r1, r4, r3
	ldrh r2, [r1]
	cmp r2, #1
	bne _0808FC38
	ldr r1, _0808FC30 @ =0x03001222
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0808FC34 @ =0x03001220
	movs r0, #0x10
	strh r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #1
	bl FadeMusic
	b _0808FF02
	.align 2, 0
_0808FC30: .4byte 0x03001222
_0808FC34: .4byte 0x03001220
_0808FC38:
	cmp r2, #0xa
	beq _0808FC3E
	b _0808FF02
_0808FC3E:
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0808FC54 @ =0x04000050
	ldr r5, _0808FC58 @ =0x00000841
	adds r0, r5, #0
	strh r0, [r1]
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	strb r2, [r0]
	b _0808FF02
	.align 2, 0
_0808FC54: .4byte 0x04000050
_0808FC58: .4byte 0x00000841
_0808FC5C:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r4, r2
	ldrh r0, [r1]
	cmp r0, #4
	beq _0808FC6A
	b _0808FF02
_0808FC6A:
	movs r0, #0
	strh r0, [r1]
	ldr r2, _0808FCB0 @ =0x03001222
	ldrh r0, [r2]
	cmp r0, #0xf
	bhi _0808FC7A
	adds r0, #1
	strh r0, [r2]
_0808FC7A:
	ldr r1, _0808FCB4 @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0
	beq _0808FC86
	subs r0, #1
	strh r0, [r1]
_0808FC86:
	ldrh r0, [r2]
	cmp r0, #0x10
	beq _0808FC8E
	b _0808FF02
_0808FC8E:
	ldrh r0, [r1]
	cmp r0, #0
	beq _0808FC96
	b _0808FF02
_0808FC96:
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0808FCB8 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r4, r3
	movs r0, #0xb
	strb r0, [r1]
	b _0808FF02
	.align 2, 0
_0808FCB0: .4byte 0x03001222
_0808FCB4: .4byte 0x03001220
_0808FCB8: .4byte 0x0000FEFF
_0808FCBC:
	movs r5, #0x84
	lsls r5, r5, #2
	adds r3, r4, r5
	ldrh r0, [r3]
	cmp r0, #1
	bne _0808FCFC
	movs r2, #0
	str r2, [sp]
	ldr r1, _0808FCEC @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	movs r3, #0x87
	lsls r3, r3, #2
	adds r0, r4, r3
	str r0, [r1, #4]
	ldr r0, _0808FCF0 @ =0x850000B4
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r1, _0808FCF4 @ =0x03001220
	movs r0, #0x10
	strh r0, [r1]
	ldr r0, _0808FCF8 @ =0x03001222
	strh r2, [r0]
	b _0808FF02
	.align 2, 0
_0808FCEC: .4byte 0x040000D4
_0808FCF0: .4byte 0x850000B4
_0808FCF4: .4byte 0x03001220
_0808FCF8: .4byte 0x03001222
_0808FCFC:
	cmp r0, #5
	bhi _0808FD20
	ldr r1, _0808FD14 @ =0x040000D4
	ldrh r0, [r3]
	lsls r0, r0, #0xd
	ldr r5, _0808FD18 @ =0x01FFD000
	adds r0, r0, r5
	str r0, [r1]
	ldrh r0, [r3]
	lsls r0, r0, #0xd
	ldr r2, _0808FD1C @ =0x0600C000
	b _0808FD36
	.align 2, 0
_0808FD14: .4byte 0x040000D4
_0808FD18: .4byte 0x01FFD000
_0808FD1C: .4byte 0x0600C000
_0808FD20:
	cmp r0, #9
	bhi _0808FD54
	ldr r1, _0808FD44 @ =0x040000D4
	ldrh r0, [r3]
	lsls r0, r0, #0xd
	ldr r5, _0808FD48 @ =0x01FFD000
	adds r0, r0, r5
	str r0, [r1]
	ldrh r0, [r3]
	lsls r0, r0, #0xd
	ldr r2, _0808FD4C @ =0x05FF4000
_0808FD36:
	adds r0, r0, r2
	str r0, [r1, #4]
	ldr r0, _0808FD50 @ =0x84000800
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _0808FF02
	.align 2, 0
_0808FD44: .4byte 0x040000D4
_0808FD48: .4byte 0x01FFD000
_0808FD4C: .4byte 0x05FF4000
_0808FD50: .4byte 0x84000800
_0808FD54:
	cmp r0, #0xa
	bne _0808FD6C
	ldr r0, _0808FD64 @ =0x085F65D8
	ldr r1, _0808FD68 @ =0x0600E800
	bl LZ77UncompVram
	b _0808FF02
	.align 2, 0
_0808FD64: .4byte 0x085F65D8
_0808FD68: .4byte 0x0600E800
_0808FD6C:
	cmp r0, #0xb
	bne _0808FDA4
	ldr r0, _0808FD94 @ =0x085F5454
	ldr r1, _0808FD98 @ =0x0600F000
	bl LZ77UncompVram
	ldr r1, _0808FD9C @ =0x0400000A
	ldr r3, _0808FDA0 @ =0x00001F08
	adds r0, r3, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r5, #0x80
	lsls r5, r5, #2
	adds r1, r5, #0
	orrs r0, r1
	strh r0, [r2]
	b _0808FF02
	.align 2, 0
_0808FD94: .4byte 0x085F5454
_0808FD98: .4byte 0x0600F000
_0808FD9C: .4byte 0x0400000A
_0808FDA0: .4byte 0x00001F08
_0808FDA4:
	cmp r0, #0xc
	bne _0808FE20
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0808FDF0 @ =0x0000F7FF
	ands r0, r1
	strh r0, [r2]
	ldr r1, _0808FDF4 @ =0x0400000C
	ldr r2, _0808FDF8 @ =0x00001D02
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r3, _0808FDFC @ =0x00001E03
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #0x42
	ldr r5, _0808FE00 @ =0x00001C42
	adds r0, r5, #0
	strh r0, [r1]
	adds r1, #0x84
	ldr r0, _0808FE04 @ =0x085F4ED4
	str r0, [r1]
	ldr r0, _0808FE08 @ =0x05000080
	str r0, [r1, #4]
	ldr r0, _0808FE0C @ =0x84000060
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _0808FE10 @ =0x0300122C
	movs r1, #0
	strh r1, [r0]
	ldr r0, _0808FE14 @ =0x0300122E
	strh r1, [r0]
	ldr r0, _0808FE18 @ =0x03001230
	strh r1, [r0]
	ldr r0, _0808FE1C @ =0x03001232
	strh r1, [r0]
	b _0808FF02
	.align 2, 0
_0808FDF0: .4byte 0x0000F7FF
_0808FDF4: .4byte 0x0400000C
_0808FDF8: .4byte 0x00001D02
_0808FDFC: .4byte 0x00001E03
_0808FE00: .4byte 0x00001C42
_0808FE04: .4byte 0x085F4ED4
_0808FE08: .4byte 0x05000080
_0808FE0C: .4byte 0x84000060
_0808FE10: .4byte 0x0300122C
_0808FE14: .4byte 0x0300122E
_0808FE18: .4byte 0x03001230
_0808FE1C: .4byte 0x03001232
_0808FE20:
	cmp r0, #0x1e
	bne _0808FF02
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r5, #0x80
	lsls r5, r5, #4
	adds r1, r5, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	strh r0, [r3]
	movs r0, #0xff
	movs r1, #0
	movs r2, #0
	bl NewFileIntroArrivingAtBslSetupOam
	movs r0, #3
	movs r1, #0xd0
	movs r2, #0x64
	bl NewFileIntroArrivingAtBslSetupOam
	movs r0, #4
	movs r1, #0xd0
	movs r2, #0x64
	bl NewFileIntroArrivingAtBslSetupOam
	movs r0, #5
	movs r1, #0xd0
	movs r2, #0x64
	bl NewFileIntroArrivingAtBslSetupOam
	movs r0, #1
	movs r1, #0xc4
	movs r2, #0x64
	bl NewFileIntroArrivingAtBslSetupOam
	movs r0, #2
	movs r1, #6
	movs r2, #0x4e
	bl NewFileIntroArrivingAtBslSetupOam
	movs r0, #7
	movs r1, #0
	movs r2, #0
	bl NewFileIntroArrivingAtBslSetupOam
	movs r0, #8
	movs r1, #0
	movs r2, #0
	bl NewFileIntroArrivingAtBslSetupOam
	ldr r0, _0808FE9C @ =0x00000245
	bl unk_3b1c
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #0xc
	strb r0, [r1]
	b _0808FF02
	.align 2, 0
_0808FE9C: .4byte 0x00000245
_0808FEA0:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r4, r2
	ldrh r0, [r1]
	cmp r0, #4
	bne _0808FF02
	movs r0, #0
	strh r0, [r1]
	ldr r2, _0808FEEC @ =0x03001222
	ldrh r0, [r2]
	cmp r0, #0xf
	bhi _0808FEBC
	adds r0, #1
	strh r0, [r2]
_0808FEBC:
	ldr r1, _0808FEF0 @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0
	beq _0808FEC8
	subs r0, #1
	strh r0, [r1]
_0808FEC8:
	ldrh r0, [r2]
	cmp r0, #0x10
	bne _0808FF02
	ldrh r0, [r1]
	cmp r0, #0
	bne _0808FF02
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0808FEF4 @ =0x0000FDFF
	ands r0, r1
	strh r0, [r2]
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r4, r3
	movs r0, #0xd
	strb r0, [r1]
	b _0808FF02
	.align 2, 0
_0808FEEC: .4byte 0x03001222
_0808FEF0: .4byte 0x03001220
_0808FEF4: .4byte 0x0000FDFF
_0808FEF8:
	movs r5, #0x84
	lsls r5, r5, #2
	adds r1, r4, r5
_0808FEFE:
	movs r0, #0
_0808FF00:
	strh r0, [r1]
_0808FF02:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _0808FF30
_0808FF0C:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r2, r4, r0
	ldrh r0, [r2]
	cmp r0, #0x50
	bne _0808FF28
	movs r1, #0
	strh r1, [r2]
	ldr r0, _0808FF3C @ =gWrittenToBldy
	strh r1, [r0]
	ldr r1, _0808FF40 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	movs r6, #1
_0808FF28:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_0808FF30:
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0808FF3C: .4byte gWrittenToBldy
_0808FF40: .4byte 0x04000050

	thumb_func_start NewFileIntroArrivingAtBsl
NewFileIntroArrivingAtBsl: @ 0x0808FF44
	push {r4, r5, r6, lr}
	movs r6, #0
	ldr r5, _0808FF5C @ =gNonGameplayRam
	ldrh r0, [r5, #8]
	cmp r0, #1
	beq _0808FF74
	cmp r0, #1
	bgt _0808FF60
	cmp r0, #0
	beq _0808FF6A
	b _0808FFCC
	.align 2, 0
_0808FF5C: .4byte gNonGameplayRam
_0808FF60:
	cmp r0, #2
	beq _0808FF90
	cmp r0, #3
	beq _0808FFAC
	b _0808FFCC
_0808FF6A:
	bl NewFileIntroArrivingAtBslInit
	movs r0, #1
	strh r0, [r5, #8]
	b _0808FFCC
_0808FF74:
	ldr r4, _0808FF8C @ =gWrittenToBldy
	strh r6, [r4]
	movs r0, #0x91
	lsls r0, r0, #2
	bl SoundPlay
	ldrh r0, [r4]
	cmp r0, #0
	bne _0808FFCC
	movs r0, #2
	strh r0, [r5, #8]
	b _0808FFCC
	.align 2, 0
_0808FF8C: .4byte gWrittenToBldy
_0808FF90:
	bl NewFileIntroArrivingAtBslProcess
	cmp r0, #0
	beq _0808FFCC
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r5, r1
	strb r6, [r0]
	subs r1, #1
	adds r0, r5, r1
	strb r6, [r0]
	movs r0, #3
	strh r0, [r5, #8]
	b _0808FFCC
_0808FFAC:
	ldr r1, _0808FFBC @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0808FFC0
	adds r0, #1
	strh r0, [r1]
	b _0808FFC4
	.align 2, 0
_0808FFBC: .4byte gWrittenToBldy
_0808FFC0:
	strh r6, [r5, #8]
	movs r6, #1
_0808FFC4:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_0808FFCC:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start NewFileIntroProcessSamusShipArrivingAtBsl
NewFileIntroProcessSamusShipArrivingAtBsl: @ 0x0808FFD4
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r4, r0, #0
	ldrh r0, [r4, #0xa]
	adds r1, r0, #1
	movs r5, #0
	movs r6, #0
	strh r1, [r4, #0xa]
	ldrb r2, [r4, #0x14]
	cmp r2, #0
	bne _08090006
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	beq _0808FFFC
	b _0809021E
_0808FFFC:
	strh r2, [r4, #0xa]
	strb r5, [r4, #0x12]
	movs r0, #1
	strb r0, [r4, #0x14]
	b _0809021E
_08090006:
	cmp r2, #1
	bne _08090056
	ldrb r0, [r4, #0x13]
	adds r0, #1
	strb r0, [r4, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _08090020
	strb r5, [r4, #0x13]
	ldrh r0, [r4, #6]
	subs r0, #1
	strh r0, [r4, #6]
_08090020:
	ldrh r0, [r4, #0xa]
	lsrs r0, r0, #3
	ldrh r1, [r4]
	subs r2, r1, r0
	strh r2, [r4, #0xc]
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	beq _0809003C
	b _0809021E
_0809003C:
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	beq _08090044
	b _0809021E
_08090044:
	strb r5, [r4, #0x12]
	strh r2, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	strb r5, [r4, #0x13]
	strh r6, [r4, #0xa]
	movs r0, #2
	strb r0, [r4, #0x14]
	b _0809021E
_08090056:
	cmp r2, #2
	bne _0809008E
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _08090072
	movs r7, #0xc
	ldrsh r1, [r4, r7]
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #6
	bl NewFileIntroArrivingAtBslSetupOam
	b _0809007C
_08090072:
	cmp r0, #4
	bne _08090082
	strh r6, [r4, #0xa]
	movs r0, #3
	strb r0, [r4, #0x14]
_0809007C:
	ldrb r0, [r4, #0x15]
	subs r0, #1
	strb r0, [r4, #0x15]
_08090082:
	ldrh r0, [r4, #6]
	subs r0, #1
	movs r1, #0
	strh r0, [r4, #6]
	strb r1, [r4, #0x12]
	b _0809021E
_0809008E:
	cmp r2, #3
	bne _080900D2
	ldrh r0, [r4, #6]
	subs r0, #2
	strh r0, [r4, #6]
	mov r2, sp
	adds r2, #2
	movs r0, #2
	mov r1, sp
	bl NewFileIntroGetPositionAndSlotOfOamByType
	ldrb r0, [r4, #0x15]
	cmp r0, #0xf0
	bls _080900AE
	subs r0, #1
	strb r0, [r4, #0x15]
_080900AE:
	ldrh r2, [r4, #0xa]
	lsls r0, r2, #0x10
	lsrs r3, r0, #0x10
	lsrs r0, r0, #0x11
	ldrh r1, [r4, #2]
	subs r1, r1, r0
	strh r1, [r4, #0xe]
	lsls r2, r2, #1
	ldrh r0, [r4]
	subs r0, r0, r2
	strh r0, [r4, #0xc]
	cmp r3, #0xa
	bne _08090174
	strh r6, [r4, #0xa]
	strh r0, [r4]
	strh r1, [r4, #2]
	movs r0, #4
	b _08090172
_080900D2:
	cmp r2, #4
	bne _08090120
	ldrh r0, [r4, #6]
	subs r0, #4
	strh r0, [r4, #6]
	mov r2, sp
	adds r2, #2
	movs r0, #2
	mov r1, sp
	bl NewFileIntroGetPositionAndSlotOfOamByType
	ldrb r0, [r4, #0x15]
	cmp r0, #0xf0
	bls _080900F2
	subs r0, #1
	strb r0, [r4, #0x15]
_080900F2:
	ldrh r1, [r4, #2]
	ldrh r0, [r4, #0xa]
	subs r3, r1, r0
	strh r3, [r4, #0xe]
	lsls r0, r0, #2
	ldrh r1, [r4]
	subs r2, r1, r0
	strh r2, [r4, #0xc]
	mov r0, sp
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r7, #0xc
	ldrsh r1, [r4, r7]
	subs r0, r0, r1
	movs r1, #0x14
	rsbs r1, r1, #0
	cmp r0, r1
	ble _08090174
	strh r6, [r4, #0xa]
	strh r2, [r4]
	strh r3, [r4, #2]
	movs r0, #5
	b _08090172
_08090120:
	cmp r2, #5
	bne _08090178
	ldrh r0, [r4, #6]
	subs r0, #2
	strh r0, [r4, #6]
	mov r2, sp
	adds r2, #2
	movs r0, #2
	mov r1, sp
	bl NewFileIntroGetPositionAndSlotOfOamByType
	ldrb r1, [r4, #0x15]
	adds r0, r1, #0
	subs r0, #0xa
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xbe
	bls _08090148
	adds r0, r1, #1
	strb r0, [r4, #0x15]
_08090148:
	ldrh r1, [r4, #0xa]
	lsrs r2, r1, #1
	ldrh r0, [r4, #2]
	subs r3, r0, r2
	strh r3, [r4, #0xe]
	lsls r1, r1, #1
	ldrh r0, [r4]
	subs r2, r0, r1
	strh r2, [r4, #0xc]
	mov r0, sp
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r7, #0xc
	ldrsh r1, [r4, r7]
	subs r0, r0, r1
	cmp r0, #0xa
	ble _08090174
	strh r6, [r4, #0xa]
	strh r2, [r4]
	strh r3, [r4, #2]
	movs r0, #6
_08090172:
	strb r0, [r4, #0x14]
_08090174:
	strb r5, [r4, #0x12]
	b _0809021E
_08090178:
	cmp r2, #6
	bne _080901BA
	ldrh r0, [r4, #6]
	subs r0, #1
	strh r0, [r4, #6]
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x12
	ldrh r0, [r4, #2]
	subs r3, r0, r2
	strh r3, [r4, #0xe]
	lsrs r1, r1, #0x11
	ldrh r0, [r4]
	subs r1, r0, r1
	strh r1, [r4, #0xc]
	ldrb r2, [r4, #0x15]
	adds r0, r2, #0
	subs r0, #0xa
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xbe
	bls _080901A8
	adds r0, r2, #1
	strb r0, [r4, #0x15]
	b _080901B4
_080901A8:
	strh r6, [r4, #0xa]
	strb r5, [r4, #0x13]
	strh r1, [r4]
	strh r3, [r4, #2]
	movs r0, #7
	strb r0, [r4, #0x14]
_080901B4:
	movs r0, #0
	strb r0, [r4, #0x12]
	b _0809021E
_080901BA:
	cmp r2, #7
	bne _0809021E
	ldrb r1, [r4, #0x15]
	adds r0, r1, #0
	subs r0, #0x10
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb8
	bls _080901E0
	ldrb r0, [r4, #0x13]
	adds r0, #1
	strb r0, [r4, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _080901E0
	strb r5, [r4, #0x13]
	adds r0, r1, #1
	strb r0, [r4, #0x15]
_080901E0:
	ldrh r0, [r4, #0xa]
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x12
	ldrh r1, [r4, #2]
	subs r1, r1, r2
	movs r2, #0
	strh r1, [r4, #0xe]
	lsrs r0, r0, #0x11
	ldrh r1, [r4]
	adds r0, r0, r1
	strh r0, [r4, #0xc]
	ldrh r0, [r4, #6]
	subs r0, #2
	strh r0, [r4, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bgt _0809021C
	strb r2, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
	ldr r0, _08090240 @ =gNonGameplayRam
	movs r3, #0x85
	lsls r3, r3, #2
	adds r0, r0, r3
	movs r1, #0xe
	strb r1, [r0]
_0809021C:
	strb r2, [r4, #0x12]
_0809021E:
	movs r7, #6
	ldrsh r1, [r4, r7]
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r1, r0
	bgt _08090238
	ldrb r0, [r4, #0x18]
	movs r1, #7
	rsbs r1, r1, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	strb r1, [r4, #0x18]
_08090238:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08090240: .4byte gNonGameplayRam

	thumb_func_start NewFileIntroProcessBslPreview
NewFileIntroProcessBslPreview: @ 0x08090244
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0x13]
	adds r0, #1
	strb r0, [r1, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #6
	bne _08090260
	movs r0, #0
	strb r0, [r1, #0x13]
	ldrh r0, [r1, #0xc]
	adds r0, #1
	strh r0, [r1, #0xc]
_08090260:
	pop {r0}
	bx r0

	thumb_func_start NewFileIntroProcessSamusShipArrivingAtBslThrusters
NewFileIntroProcessSamusShipArrivingAtBslThrusters: @ 0x08090264
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r4, r0, #0
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #0x12]
	cmp r0, r2
	bne _08090284
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _08090284
	strb r1, [r4, #0x11]
	strb r1, [r4, #0x12]
_08090284:
	ldrb r0, [r4, #0x13]
	adds r0, #1
	movs r6, #0
	strb r0, [r4, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	beq _08090296
	b _08090406
_08090296:
	strb r6, [r4, #0x13]
	ldrb r0, [r4, #0x10]
	cmp r0, #4
	beq _080902B6
	cmp r0, #4
	bgt _080902A8
	cmp r0, #3
	beq _080902AE
	b _08090406
_080902A8:
	cmp r0, #5
	beq _0809030C
	b _08090406
_080902AE:
	mov r5, sp
	adds r5, #2
	movs r0, #4
	b _080902BC
_080902B6:
	mov r5, sp
	adds r5, #2
	movs r0, #5
_080902BC:
	mov r1, sp
	adds r2, r5, #0
	bl NewFileIntroGetPositionAndSlotOfOamByType
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0x14
	beq _08090322
	ldr r1, _08090304 @ =gNonGameplayRam
	lsls r0, r2, #3
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r2, _08090308 @ =0x00000222
	adds r1, r0, r2
	ldrh r1, [r1]
	strh r1, [r4, #6]
	movs r1, #0x8d
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #6
	ands r1, r0
	ldrb r2, [r4, #0x18]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4, #0x18]
	mov r0, sp
	ldrh r0, [r0]
	strh r0, [r4, #0xc]
	ldrh r0, [r5]
	strh r0, [r4, #0xe]
	b _08090406
	.align 2, 0
_08090304: .4byte gNonGameplayRam
_08090308: .4byte 0x00000222
_0809030C:
	mov r5, sp
	adds r5, #2
	movs r0, #1
	mov r1, sp
	adds r2, r5, #0
	bl NewFileIntroGetPositionAndSlotOfOamByType
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0x14
	bne _08090330
_08090322:
	strb r6, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
	b _08090406
_08090330:
	ldr r1, _08090380 @ =gNonGameplayRam
	lsls r0, r2, #3
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r3, r0, r1
	ldr r2, _08090384 @ =0x00000222
	adds r0, r3, r2
	ldrh r0, [r0]
	strh r0, [r4, #6]
	movs r1, #0x8d
	lsls r1, r1, #2
	adds r0, r3, r1
	ldrb r0, [r0]
	movs r1, #6
	ands r1, r0
	ldrb r2, [r4, #0x18]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4, #0x18]
	movs r2, #0x8c
	lsls r2, r2, #2
	adds r0, r3, r2
	ldrb r0, [r0]
	cmp r0, #1
	bhi _080903FC
	ldrh r0, [r5]
	strh r0, [r4, #0xe]
	ldr r1, _08090388 @ =0x0000022D
	adds r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #8
	bhi _08090400
	lsls r0, r0, #2
	ldr r1, _0809038C @ =_08090390
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08090380: .4byte gNonGameplayRam
_08090384: .4byte 0x00000222
_08090388: .4byte 0x0000022D
_0809038C: .4byte _08090390
_08090390: @ jump table
	.4byte _080903B4 @ case 0
	.4byte _080903BC @ case 1
	.4byte _080903C4 @ case 2
	.4byte _080903CC @ case 3
	.4byte _080903D4 @ case 4
	.4byte _080903DC @ case 5
	.4byte _080903E4 @ case 6
	.4byte _080903EC @ case 7
	.4byte _080903F4 @ case 8
_080903B4:
	mov r0, sp
	ldrh r0, [r0]
	adds r0, #0xc
	b _08090404
_080903BC:
	mov r0, sp
	ldrh r0, [r0]
	adds r0, #0xa
	b _08090404
_080903C4:
	mov r0, sp
	ldrh r0, [r0]
	adds r0, #8
	b _08090404
_080903CC:
	mov r0, sp
	ldrh r0, [r0]
	adds r0, #6
	b _08090404
_080903D4:
	mov r0, sp
	ldrh r0, [r0]
	adds r0, #5
	b _08090404
_080903DC:
	mov r0, sp
	ldrh r0, [r0]
	adds r0, #4
	b _08090404
_080903E4:
	mov r0, sp
	ldrh r0, [r0]
	adds r0, #3
	b _08090404
_080903EC:
	mov r0, sp
	ldrh r0, [r0]
	adds r0, #2
	b _08090404
_080903F4:
	mov r0, sp
	ldrh r0, [r0]
	adds r0, #1
	b _08090404
_080903FC:
	ldrh r0, [r5]
	strh r0, [r4, #0xe]
_08090400:
	mov r0, sp
	ldrh r0, [r0]
_08090404:
	strh r0, [r4, #0xc]
_08090406:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NewFileIntroProcessSamusShipArrivingAtBslThrusterExplosion
NewFileIntroProcessSamusShipArrivingAtBslThrusterExplosion: @ 0x08090410
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x11]
	lsls r0, r0, #3
	ldr r1, [r2, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _08090436
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _08090436
	strb r1, [r2, #0x10]
	ldrb r1, [r2, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x18]
_08090436:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_9043c
unk_9043c: @ 0x0809043C
	movs r1, #0
	strb r1, [r0, #0x10]
	bx lr
	.align 2, 0

	thumb_func_start NewFileIntroProcessSamusArrivingAtBslScrolling
NewFileIntroProcessSamusArrivingAtBslScrolling: @ 0x08090444
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0x13]
	adds r0, #1
	strb r0, [r1, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x28
	bne _08090470
	movs r0, #0
	strb r0, [r1, #0x13]
	ldrh r2, [r1, #0xc]
	movs r3, #0xc
	ldrsh r0, [r1, r3]
	cmp r0, #0xf
	bgt _08090470
	adds r0, r2, #1
	strh r0, [r1, #0xc]
	ldr r1, _08090474 @ =0x03001230
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_08090470:
	pop {r0}
	bx r0
	.align 2, 0
_08090474: .4byte 0x03001230

	thumb_func_start unk_90478
unk_90478: @ 0x08090478
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0x13]
	adds r0, #1
	strb r0, [r1, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	bne _080904A4
	movs r0, #0
	strb r0, [r1, #0x13]
	ldrh r2, [r1, #0xc]
	movs r3, #0xc
	ldrsh r0, [r1, r3]
	cmp r0, #0xf
	bgt _080904A4
	adds r0, r2, #1
	strh r0, [r1, #0xc]
	ldr r1, _080904A8 @ =0x0300122C
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
_080904A4:
	pop {r0}
	bx r0
	.align 2, 0
_080904A8: .4byte 0x0300122C

	thumb_func_start NewFileIntroProcessAdamPanel
NewFileIntroProcessAdamPanel: @ 0x080904AC
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrb r1, [r4, #0x14]
	cmp r1, #0
	bne _080904E8
	strb r1, [r4, #0x12]
	strb r1, [r4, #0x11]
	ldrh r1, [r4, #0xe]
	movs r2, #0xe
	ldrsh r0, [r4, r2]
	cmp r0, #0x80
	ble _080904CC
	adds r0, r1, #0
	subs r0, #8
	strh r0, [r4, #0xe]
	b _0809063E
_080904CC:
	movs r0, #0x80
	strh r0, [r4, #0xe]
	ldrb r0, [r4, #0x10]
	cmp r0, #0x14
	bne _080904DC
	ldr r0, _080904E4 @ =0x0000020A
	bl SoundPlay
_080904DC:
	movs r0, #1
	strb r0, [r4, #0x14]
	b _0809063E
	.align 2, 0
_080904E4: .4byte 0x0000020A
_080904E8:
	cmp r1, #1
	bne _08090570
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r5, [r4, #0x12]
	cmp r0, r5
	bne _08090524
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _08090508
	strb r1, [r4, #0x12]
	movs r0, #2
	strb r0, [r4, #0x14]
_08090508:
	ldrb r0, [r4, #0x10]
	cmp r0, #0x14
	beq _08090510
	b _0809063E
_08090510:
	ldrb r0, [r4, #0x11]
	cmp r0, #0xa
	bne _08090524
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r5, #0xe
	ldrsh r2, [r4, r5]
	movs r0, #0x16
	bl NewFileIntroArrivingAtBslSetupOam
_08090524:
	ldrb r0, [r4, #0x10]
	cmp r0, #0x14
	beq _0809052C
	b _0809063E
_0809052C:
	ldrb r0, [r4, #0x11]
	cmp r0, #0xb
	beq _08090534
	b _0809063E
_08090534:
	ldrb r0, [r4, #0x12]
	cmp r0, #0xf
	beq _0809053C
	b _0809063E
_0809053C:
	ldr r2, _08090560 @ =gNonGameplayRam
	ldr r0, _08090564 @ =0x00000212
	adds r1, r2, r0
	movs r0, #0
	strb r0, [r1]
	strh r0, [r2, #0xe]
	strh r0, [r2, #0xc]
	ldr r1, _08090568 @ =0x0879C5A4
	ldr r0, _0809056C @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x48]
	str r0, [r2]
	b _0809063E
	.align 2, 0
_08090560: .4byte gNonGameplayRam
_08090564: .4byte 0x00000212
_08090568: .4byte 0x0879C5A4
_0809056C: .4byte 0x03000011
_08090570:
	cmp r1, #2
	bne _0809058E
	movs r1, #0
	strb r1, [r4, #0x12]
	ldrb r0, [r4, #0x13]
	adds r0, #1
	strb r0, [r4, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809063E
	strb r1, [r4, #0x13]
	movs r0, #3
	strb r0, [r4, #0x14]
	b _0809063E
_0809058E:
	cmp r1, #3
	bne _080905D8
	movs r1, #0
	strb r1, [r4, #0x12]
	ldr r0, _080905B8 @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #4
	bne _0809063E
	strb r1, [r4, #0x11]
	ldrb r0, [r4, #0x10]
	cmp r0, #0x14
	bne _080905C4
	ldr r0, _080905BC @ =0x085F4310
	str r0, [r4, #0x1c]
	ldr r0, _080905C0 @ =0x0000020B
	bl SoundPlay
	b _080905CC
	.align 2, 0
_080905B8: .4byte gNonGameplayRam
_080905BC: .4byte 0x085F4310
_080905C0: .4byte 0x0000020B
_080905C4:
	cmp r0, #0x15
	bne _080905CC
	ldr r0, _080905D4 @ =0x085F43E0
	str r0, [r4, #0x1c]
_080905CC:
	movs r0, #4
	strb r0, [r4, #0x14]
	b _0809063E
	.align 2, 0
_080905D4: .4byte 0x085F43E0
_080905D8:
	cmp r1, #4
	bne _08090608
	ldr r0, [r4, #0x10]
	ldr r1, _08090600 @ =0x00FFFF00
	ands r0, r1
	ldr r1, _08090604 @ =0x00030B00
	cmp r0, r1
	bne _0809063E
	ldrb r0, [r4, #0x10]
	cmp r0, #0x14
	bne _080905F4
	movs r0, #0x16
	bl SpecialCutsceneDestroyOamOfType
_080905F4:
	movs r0, #0
	strb r0, [r4, #0x12]
	movs r0, #5
	strb r0, [r4, #0x14]
	b _0809063E
	.align 2, 0
_08090600: .4byte 0x00FFFF00
_08090604: .4byte 0x00030B00
_08090608:
	cmp r1, #5
	bne _0809063E
	movs r3, #0
	strb r3, [r4, #0x12]
	ldrh r2, [r4, #0xe]
	movs r5, #0xe
	ldrsh r0, [r4, r5]
	cmp r0, #0xbf
	bgt _08090622
	adds r0, r2, #0
	adds r0, #8
	strh r0, [r4, #0xe]
	b _0809063E
_08090622:
	ldrb r0, [r4, #0x10]
	cmp r0, #0x14
	bne _08090632
	ldr r0, _08090644 @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r0, r2
	strb r1, [r0]
_08090632:
	strb r3, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
_0809063E:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08090644: .4byte gNonGameplayRam

	thumb_func_start unk_90648
unk_90648: @ 0x08090648
	push {r4, lr}
	adds r2, r0, #0
	ldrb r3, [r2, #0x11]
	lsls r1, r3, #3
	ldr r0, [r2, #0x1c]
	adds r4, r0, r1
	ldrb r1, [r2, #0x14]
	cmp r1, #0
	bne _08090688
	cmp r3, #3
	bne _0809066A
	strb r1, [r2, #0x12]
	strb r1, [r2, #0x11]
	ldr r0, _08090680 @ =0x085F48B8
	str r0, [r2, #0x1c]
	movs r0, #1
	strb r0, [r2, #0x14]
_0809066A:
	ldr r0, _08090684 @ =gNonGameplayRam
	movs r3, #0x85
	lsls r3, r3, #2
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #4
	bne _080906C8
	strb r1, [r2, #0x12]
	strb r1, [r2, #0x11]
	b _080906A0
	.align 2, 0
_08090680: .4byte 0x085F48B8
_08090684: .4byte gNonGameplayRam
_08090688:
	cmp r1, #1
	bne _080906B4
	ldr r0, _080906AC @ =gNonGameplayRam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #4
	bne _080906C8
	movs r0, #0
	strb r0, [r2, #0x12]
	strb r0, [r2, #0x11]
_080906A0:
	ldr r0, _080906B0 @ =0x085F4470
	str r0, [r2, #0x1c]
	movs r0, #2
	strb r0, [r2, #0x14]
	b _080906C8
	.align 2, 0
_080906AC: .4byte gNonGameplayRam
_080906B0: .4byte 0x085F4470
_080906B4:
	cmp r1, #2
	bne _080906C8
	ldrb r0, [r4, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _080906C8
	ldrb r0, [r4, #0xc]
	cmp r0, #0
	bne _080906C8
	strb r0, [r2, #0x12]
_080906C8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NewFileIntroProcessAdamTextCursor
NewFileIntroProcessAdamTextCursor: @ 0x080906D0
	push {r4, lr}
	adds r2, r0, #0
	ldr r3, _080906EC @ =gNonGameplayRam
	ldr r0, [r3]
	ldrh r1, [r0]
	movs r0, #0xff
	lsls r0, r0, #8
	cmp r1, r0
	bne _080906F0
	movs r0, #0x91
	lsls r0, r0, #1
	strh r0, [r2, #0xc]
	b _08090752
	.align 2, 0
_080906EC: .4byte gNonGameplayRam
_080906F0:
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r1, r0
	beq _08090734
	movs r0, #0xfd
	lsls r0, r0, #8
	cmp r1, r0
	bne _08090718
	movs r0, #0
	movs r1, #0x91
	lsls r1, r1, #1
	strh r1, [r2, #0xc]
	strb r0, [r2, #0x12]
	strb r0, [r2, #0x11]
	ldr r0, _08090714 @ =0x085F1DA0
	str r0, [r2, #0x1c]
	b _08090752
	.align 2, 0
_08090714: .4byte 0x085F1DA0
_08090718:
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _08090734
	movs r0, #0x78
	strh r0, [r2, #0xc]
	movs r0, #0x9a
	strh r0, [r2, #0xe]
	ldr r0, _08090730 @ =0x085F1C50
	str r0, [r2, #0x1c]
	b _08090752
	.align 2, 0
_08090730: .4byte 0x085F1C50
_08090734:
	ldrh r0, [r3, #0xc]
	ldr r4, _08090758 @ =0x00000212
	adds r1, r3, r4
	lsls r0, r0, #3
	ldrb r1, [r1]
	adds r0, r0, r1
	adds r0, #0xe
	movs r1, #0
	strh r0, [r2, #0xc]
	ldrh r0, [r3, #0xe]
	lsls r0, r0, #3
	adds r0, #0x84
	strh r0, [r2, #0xe]
	strb r1, [r2, #0x12]
	strb r1, [r2, #0x11]
_08090752:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08090758: .4byte 0x00000212

	thumb_func_start NewFileIntroProcessBslPopUp
NewFileIntroProcessBslPopUp: @ 0x0809075C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r6, r1, r0
	ldrb r5, [r4, #0x14]
	cmp r5, #0
	bne _080907A0
	ldr r0, [r4, #0x10]
	ldr r1, _08090798 @ =0x00FFFF00
	ands r0, r1
	ldr r1, _0809079C @ =0x00010100
	cmp r0, r1
	bne _08090782
	movs r0, #0x8e
	lsls r0, r0, #1
	bl SoundPlay
_08090782:
	ldrb r0, [r6, #4]
	ldrb r1, [r4, #0x12]
	cmp r0, r1
	bne _080907F2
	ldrb r0, [r6, #0xc]
	cmp r0, #0
	bne _080907F2
	strb r5, [r4, #0x12]
	movs r0, #1
	strb r0, [r4, #0x14]
	b _080907F2
	.align 2, 0
_08090798: .4byte 0x00FFFF00
_0809079C: .4byte 0x00010100
_080907A0:
	cmp r5, #1
	bne _080907D4
	movs r1, #0
	strb r1, [r4, #0x12]
	ldr r0, _080907C8 @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #4
	bne _080907F2
	strb r1, [r4, #0x11]
	ldr r0, _080907CC @ =0x085F4258
	str r0, [r4, #0x1c]
	ldr r0, _080907D0 @ =0x0000011D
	bl SoundPlay
	movs r0, #2
	strb r0, [r4, #0x14]
	b _080907F2
	.align 2, 0
_080907C8: .4byte gNonGameplayRam
_080907CC: .4byte 0x085F4258
_080907D0: .4byte 0x0000011D
_080907D4:
	cmp r5, #2
	bne _080907F2
	ldrb r0, [r6, #4]
	ldrb r1, [r4, #0x12]
	cmp r0, r1
	bne _080907F2
	ldrb r1, [r6, #0xc]
	cmp r1, #0
	bne _080907F2
	strb r1, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
_080907F2:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start NewFileIntroProcessMonologueCursor
NewFileIntroProcessMonologueCursor: @ 0x080907F8
	push {lr}
	adds r2, r0, #0
	ldr r3, _08090818 @ =gNonGameplayRam
	ldr r0, [r3]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _0809081C
	movs r0, #0x76
	strh r0, [r2, #0xc]
	ldrh r0, [r3, #0xe]
	lsls r0, r0, #3
	adds r0, #0x18
	strh r0, [r2, #0xe]
	b _08090822
	.align 2, 0
_08090818: .4byte gNonGameplayRam
_0809081C:
	movs r0, #0x82
	lsls r0, r0, #1
	strh r0, [r2, #0xc]
_08090822:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NewFileIntroArrivingAtBslSetupOam
NewFileIntroArrivingAtBslSetupOam: @ 0x08090828
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sb, r2
	movs r0, #0
	mov r8, r0
	ldr r1, _0809087C @ =gNonGameplayRam
	movs r2, #0x8b
	lsls r2, r2, #2
	adds r0, r1, r2
	ldrb r0, [r0]
	adds r7, r1, #0
	cmp r0, #0
	beq _08090872
_08090854:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #0x13
	bhi _08090878
	lsls r0, r0, #3
	add r0, r8
	lsls r0, r0, #2
	adds r0, r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _08090854
_08090872:
	mov r1, r8
	cmp r1, #0x13
	bls _08090880
_08090878:
	movs r0, #0x14
	b _08090C4C
	.align 2, 0
_0809087C: .4byte gNonGameplayRam
_08090880:
	movs r0, #0
	str r0, [sp]
	ldr r1, _08090908 @ =0x040000D4
	mov r3, sp
	str r3, [r1]
	mov r0, r8
	lsls r2, r0, #3
	adds r0, r2, r0
	lsls r6, r0, #2
	ldr r3, _0809090C @ =0x030016A0
	mov ip, r3
	adds r0, r6, r3
	str r0, [r1, #4]
	ldr r0, _08090910 @ =0x85000009
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08090914 @ =0xFFFFFDE4
	add r0, ip
	adds r3, r6, r0
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r3, r1
	strh r5, [r0]
	adds r1, #2
	adds r0, r3, r1
	mov r1, sb
	strh r1, [r0]
	movs r1, #0x8b
	lsls r1, r1, #2
	adds r0, r3, r1
	strb r4, [r0]
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r5, r3, r0
	ldrb r1, [r5]
	movs r0, #1
	orrs r1, r0
	strb r1, [r5]
	cmp r4, #1
	bne _08090928
	ldr r0, _08090918 @ =0x00000222
	adds r1, r3, r0
	subs r0, #0xa2
	strh r0, [r1]
	ldrb r0, [r5]
	movs r1, #6
	orrs r0, r1
	strb r0, [r5]
	ldr r1, _0809091C @ =0x00000236
	adds r2, r3, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _08090920 @ =0x085F4D3C
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _08090924 @ =NewFileIntroProcessSamusShipArrivingAtBsl
	str r1, [r0]
	b _08090C4A
	.align 2, 0
_08090908: .4byte 0x040000D4
_0809090C: .4byte 0x030016A0
_08090910: .4byte 0x85000009
_08090914: .4byte 0xFFFFFDE4
_08090918: .4byte 0x00000222
_0809091C: .4byte 0x00000236
_08090920: .4byte 0x085F4D3C
_08090924: .4byte NewFileIntroProcessSamusShipArrivingAtBsl
_08090928:
	cmp r4, #2
	bne _08090960
	ldr r0, _08090954 @ =0x00000236
	adds r2, r3, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _08090958 @ =0x085F4D94
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _0809095C @ =NewFileIntroProcessBslPreview
	str r1, [r0]
	b _08090C4A
	.align 2, 0
_08090954: .4byte 0x00000236
_08090958: .4byte 0x085F4D94
_0809095C: .4byte NewFileIntroProcessBslPreview
_08090960:
	cmp r4, #3
	beq _0809096C
	cmp r4, #4
	beq _0809096C
	cmp r4, #5
	bne _080909B4
_0809096C:
	ldr r0, _080909A4 @ =0x00000222
	adds r1, r3, r0
	subs r0, #0xa2
	strh r0, [r1]
	ldr r1, _080909A8 @ =0x00000236
	adds r2, r3, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	ldrb r0, [r5]
	movs r1, #6
	orrs r0, r1
	strb r0, [r5]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _080909AC @ =0x085F4E34
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _080909B0 @ =NewFileIntroProcessSamusShipArrivingAtBslThrusters
	str r1, [r0]
	b _08090C4A
	.align 2, 0
_080909A4: .4byte 0x00000222
_080909A8: .4byte 0x00000236
_080909AC: .4byte 0x085F4E34
_080909B0: .4byte NewFileIntroProcessSamusShipArrivingAtBslThrusters
_080909B4:
	cmp r4, #6
	bne _080909EC
	ldr r0, _080909E0 @ =0x00000236
	adds r2, r3, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _080909E4 @ =0x085F4DA4
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _080909E8 @ =NewFileIntroProcessSamusShipArrivingAtBslThrusterExplosion
	str r1, [r0]
	b _08090C4A
	.align 2, 0
_080909E0: .4byte 0x00000236
_080909E4: .4byte 0x085F4DA4
_080909E8: .4byte NewFileIntroProcessSamusShipArrivingAtBslThrusterExplosion
_080909EC:
	cmp r4, #7
	bne _08090A08
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r5]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _08090A04 @ =NewFileIntroProcessSamusArrivingAtBslScrolling
	str r1, [r0]
	b _08090C4A
	.align 2, 0
_08090A04: .4byte NewFileIntroProcessSamusArrivingAtBslScrolling
_08090A08:
	cmp r4, #8
	bne _08090A24
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r5]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _08090A20 @ =unk_90478
	str r1, [r0]
	b _08090C4A
	.align 2, 0
_08090A20: .4byte unk_90478
_08090A24:
	cmp r4, #0x14
	bne _08090A4C
	ldr r1, _08090A44 @ =0x00000236
	adds r2, r3, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _08090A48 @ =0x085F42A8
	b _08090A6A
	.align 2, 0
_08090A44: .4byte 0x00000236
_08090A48: .4byte 0x085F42A8
_08090A4C:
	cmp r4, #0x15
	bne _08090A84
	ldr r0, _08090A78 @ =0x00000236
	adds r2, r3, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r6, r0
	ldr r1, _08090A7C @ =0x085F4378
_08090A6A:
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r6, r0
	ldr r1, _08090A80 @ =NewFileIntroProcessAdamPanel
	str r1, [r0]
	b _08090C4A
	.align 2, 0
_08090A78: .4byte 0x00000236
_08090A7C: .4byte 0x085F4378
_08090A80: .4byte NewFileIntroProcessAdamPanel
_08090A84:
	cmp r4, #0x16
	bne _08090AC8
	mov r1, r8
	adds r3, r2, r1
	lsls r3, r3, #2
	adds r2, r3, r7
	ldr r0, _08090ABC @ =0x00000236
	adds r2, r2, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r0, r3, r0
	ldr r1, _08090AC0 @ =0x085F4448
	str r1, [r0]
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r3, r3, r0
	ldr r0, _08090AC4 @ =unk_90648
	str r0, [r3]
	b _08090C4A
	.align 2, 0
_08090ABC: .4byte 0x00000236
_08090AC0: .4byte 0x085F4448
_08090AC4: .4byte unk_90648
_08090AC8:
	cmp r4, #0x17
	bne _08090AF0
	add r2, r8
	lsls r2, r2, #2
	movs r3, #0x8e
	lsls r3, r3, #2
	adds r0, r7, r3
	adds r0, r2, r0
	ldr r1, _08090AE8 @ =0x085F1DA0
	str r1, [r0]
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r2, r2, r0
	ldr r0, _08090AEC @ =NewFileIntroProcessAdamTextCursor
	b _08090C48
	.align 2, 0
_08090AE8: .4byte 0x085F1DA0
_08090AEC: .4byte NewFileIntroProcessAdamTextCursor
_08090AF0:
	cmp r4, #0x18
	bne _08090B24
	mov r0, r8
	adds r3, r2, r0
	lsls r3, r3, #2
	adds r2, r3, r7
	ldr r1, _08090B1C @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r0, r3, r0
	ldr r1, _08090B20 @ =0x085F48E8
	b _08090BC4
	.align 2, 0
_08090B1C: .4byte 0x00000236
_08090B20: .4byte 0x085F48E8
_08090B24:
	cmp r4, #0x19
	bne _08090B58
	mov r0, r8
	adds r3, r2, r0
	lsls r3, r3, #2
	adds r2, r3, r7
	ldr r1, _08090B50 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r0, r3, r0
	ldr r1, _08090B54 @ =0x085F49B8
	b _08090BC4
	.align 2, 0
_08090B50: .4byte 0x00000236
_08090B54: .4byte 0x085F49B8
_08090B58:
	cmp r4, #0x1a
	bne _08090B9C
	mov r0, r8
	adds r3, r2, r0
	lsls r3, r3, #2
	adds r2, r3, r7
	ldr r1, _08090B90 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r0, r3, r0
	ldr r1, _08090B94 @ =0x085F4200
	str r1, [r0]
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r3, r3, r0
	ldr r0, _08090B98 @ =NewFileIntroProcessBslPopUp
	str r0, [r3]
	b _08090C4A
	.align 2, 0
_08090B90: .4byte 0x00000236
_08090B94: .4byte 0x085F4200
_08090B98: .4byte NewFileIntroProcessBslPopUp
_08090B9C:
	cmp r4, #0x1e
	bne _08090BE0
	mov r0, r8
	adds r3, r2, r0
	lsls r3, r3, #2
	adds r2, r3, r7
	ldr r1, _08090BD4 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r0, r3, r0
	ldr r1, _08090BD8 @ =0x085F49E8
_08090BC4:
	str r1, [r0]
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r3, r3, r0
	ldr r0, _08090BDC @ =unk_90d5c
	str r0, [r3]
	b _08090C4A
	.align 2, 0
_08090BD4: .4byte 0x00000236
_08090BD8: .4byte 0x085F49E8
_08090BDC: .4byte unk_90d5c
_08090BE0:
	cmp r4, #0x64
	bne _08090C24
	mov r0, r8
	adds r3, r2, r0
	lsls r3, r3, #2
	adds r2, r3, r7
	ldr r1, _08090C18 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r0, r3, r0
	ldr r1, _08090C1C @ =0x085F1C50
	str r1, [r0]
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r3, r3, r0
	ldr r0, _08090C20 @ =NewFileIntroProcessMonologueCursor
	str r0, [r3]
	b _08090C4A
	.align 2, 0
_08090C18: .4byte 0x00000236
_08090C1C: .4byte 0x085F1C50
_08090C20: .4byte NewFileIntroProcessMonologueCursor
_08090C24:
	cmp r4, #0xff
	bne _08090C4A
	add r2, r8
	lsls r2, r2, #2
	adds r1, r2, r7
	movs r3, #0x8d
	lsls r3, r3, #2
	adds r1, r1, r3
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r2, r2, r0
	ldr r0, _08090C5C @ =unk_9043c
_08090C48:
	str r0, [r2]
_08090C4A:
	mov r0, r8
_08090C4C:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08090C5C: .4byte unk_9043c

	thumb_func_start NewFileIntroArrivingAtBslVblank
NewFileIntroArrivingAtBslVblank: @ 0x08090C60
	push {lr}
	ldr r1, _08090CC4 @ =0x040000D4
	ldr r0, _08090CC8 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08090CCC @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _08090CD0 @ =0x04000052
	ldr r0, _08090CD4 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08090CD8 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08090CDC @ =0x04000054
	ldr r0, _08090CE0 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x44
	ldr r0, _08090CE4 @ =0x03001224
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08090CE8 @ =0x03001226
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #6
	ldr r0, _08090CEC @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08090CF0 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08090CF4 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08090CF8 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	bl unk_98158
	pop {r0}
	bx r0
	.align 2, 0
_08090CC4: .4byte 0x040000D4
_08090CC8: .4byte gOamData
_08090CCC: .4byte 0x84000100
_08090CD0: .4byte 0x04000052
_08090CD4: .4byte 0x03001222
_08090CD8: .4byte 0x03001220
_08090CDC: .4byte 0x04000054
_08090CE0: .4byte gWrittenToBldy
_08090CE4: .4byte 0x03001224
_08090CE8: .4byte 0x03001226
_08090CEC: .4byte 0x0300122C
_08090CF0: .4byte 0x0300122E
_08090CF4: .4byte 0x03001230
_08090CF8: .4byte 0x03001232

	thumb_func_start NewFileIntroGetPositionAndSlotOfOamByType
NewFileIntroGetPositionAndSlotOfOamByType: @ 0x08090CFC
	push {r4, r5, r6, r7, lr}
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r1, #0
	ldr r7, _08090D34 @ =gNonGameplayRam
	movs r6, #0x8b
	lsls r6, r6, #2
_08090D0C:
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r7
	adds r0, r3, r6
	ldrb r0, [r0]
	cmp r0, r5
	bne _08090D3C
	movs r5, #0x8a
	lsls r5, r5, #2
	adds r0, r3, r5
	ldrh r0, [r0]
	strh r0, [r4]
	ldr r4, _08090D38 @ =0x0000022A
	adds r0, r3, r4
	ldrh r0, [r0]
	strh r0, [r2]
	adds r0, r1, #0
	b _08090D54
	.align 2, 0
_08090D34: .4byte gNonGameplayRam
_08090D38: .4byte 0x0000022A
_08090D3C:
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x13
	bls _08090D0C
	movs r5, #0x96
	lsls r5, r5, #1
	adds r0, r5, #0
	strh r0, [r4]
	movs r0, #0xc8
	strh r0, [r2]
	movs r0, #0x14
_08090D54:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start unk_90d5c
unk_90d5c: @ 0x08090D5C
	bx lr
	.align 2, 0

	thumb_func_start NewFileIntroLandingOnBslInit
NewFileIntroLandingOnBslInit: @ 0x08090D60
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	ldr r3, _08090EC0 @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _08090EC4 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _08090EC8 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08090ECC @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _08090ED0 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _08090ED4 @ =unk_99940
	bl CallbackSetVBlank
	movs r5, #0
	str r5, [sp]
	ldr r4, _08090ED8 @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r1, _08090EDC @ =gNonGameplayRam
	mov r8, r1
	str r1, [r4, #4]
	ldr r0, _08090EE0 @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08090EE4 @ =0x085FAB54
	ldr r1, _08090EE8 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _08090EEC @ =0x085FFD08
	str r0, [r4]
	ldr r0, _08090EF0 @ =0x05000200
	str r0, [r4, #4]
	ldr r6, _08090EF4 @ =0x84000080
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08090EF8 @ =0x085F7190
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _08090EFC @ =0x0860030C
	ldr r1, _08090F00 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _08090F04 @ =0x085FFF08
	ldr r1, _08090F08 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _08090F0C @ =0x08598898
	ldr r1, _08090F10 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _08090F14 @ =0x085FF708
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08090F18 @ =0x0300122C
	strh r5, [r0]
	ldr r6, _08090F1C @ =0x0300122E
	movs r1, #0x28
	strh r1, [r6]
	ldr r0, _08090F20 @ =0x03001230
	strh r5, [r0]
	ldr r0, _08090F24 @ =0x03001232
	strh r5, [r0]
	ldr r0, _08090F28 @ =0x04000010
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r1, _08090F2C @ =0x04000008
	ldr r2, _08090F30 @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	ldr r2, _08090F34 @ =0x00001E01
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _08090F38 @ =0x00001F03
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x42
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _08090F3C @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _08090F40 @ =0x04000054
	strh r1, [r0]
	movs r0, #1
	movs r1, #0x78
	movs r2, #0
	movs r3, #0
	bl NewFileIntroLandingOnBslSetupOam
	ldrh r0, [r6]
	movs r2, #0x64
	subs r2, r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r0, #0xb
	movs r1, #0x80
	movs r3, #1
	bl NewFileIntroLandingOnBslSetupOam
	ldrh r0, [r6]
	movs r2, #0x48
	subs r2, r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r0, #2
	movs r1, #0x80
	movs r3, #0
	bl NewFileIntroLandingOnBslSetupOam
	movs r0, #3
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl NewFileIntroLandingOnBslSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _08090F44 @ =0x0863A19C
	mov r1, r8
	str r0, [r1]
	str r5, [sp]
	mov r2, sp
	str r2, [r4]
	ldr r0, _08090F48 @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _08090F4C @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xe0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08090F50 @ =NewFileIntroLandingOnBslVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08090EC0: .4byte 0x04000208
_08090EC4: .4byte 0x04000004
_08090EC8: .4byte 0x0000FFEF
_08090ECC: .4byte 0x04000200
_08090ED0: .4byte 0x0000FFFD
_08090ED4: .4byte unk_99940
_08090ED8: .4byte 0x040000D4
_08090EDC: .4byte gNonGameplayRam
_08090EE0: .4byte 0x85000150
_08090EE4: .4byte 0x085FAB54
_08090EE8: .4byte 0x06010000
_08090EEC: .4byte 0x085FFD08
_08090EF0: .4byte 0x05000200
_08090EF4: .4byte 0x84000080
_08090EF8: .4byte 0x085F7190
_08090EFC: .4byte 0x0860030C
_08090F00: .4byte 0x0600F000
_08090F04: .4byte 0x085FFF08
_08090F08: .4byte 0x0600F800
_08090F0C: .4byte 0x08598898
_08090F10: .4byte 0x0600E000
_08090F14: .4byte 0x085FF708
_08090F18: .4byte 0x0300122C
_08090F1C: .4byte 0x0300122E
_08090F20: .4byte 0x03001230
_08090F24: .4byte 0x03001232
_08090F28: .4byte 0x04000010
_08090F2C: .4byte 0x04000008
_08090F30: .4byte 0x00001C08
_08090F34: .4byte 0x00001E01
_08090F38: .4byte 0x00001F03
_08090F3C: .4byte gWrittenToBldy
_08090F40: .4byte 0x04000054
_08090F44: .4byte 0x0863A19C
_08090F48: .4byte 0x0600D000
_08090F4C: .4byte 0x85000400
_08090F50: .4byte NewFileIntroLandingOnBslVblank

	thumb_func_start NewFileIntroLandingOnBslProcess
NewFileIntroLandingOnBslProcess: @ 0x08090F54
	push {r4, r5, lr}
	movs r5, #0
	ldr r2, _08090F80 @ =gNonGameplayRam
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrb r0, [r0]
	adds r4, r2, #0
	cmp r0, #5
	bls _08090F76
	b _08091072
_08090F76:
	lsls r0, r0, #2
	ldr r1, _08090F84 @ =_08090F88
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08090F80: .4byte gNonGameplayRam
_08090F84: .4byte _08090F88
_08090F88: @ jump table
	.4byte _08090FA0 @ case 0
	.4byte _08090FD0 @ case 1
	.4byte _08090FF0 @ case 2
	.4byte _08091016 @ case 3
	.4byte _08091022 @ case 4
	.4byte _08091046 @ case 5
_08090FA0:
	ldr r2, _08090FB0 @ =gWrittenToBldy
	ldrh r0, [r2]
	adds r1, r0, #0
	cmp r1, #0
	beq _08090FB4
	subs r0, #1
	strh r0, [r2]
	b _0809103C
	.align 2, 0
_08090FB0: .4byte gWrittenToBldy
_08090FB4:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r4, r2
	strh r1, [r0]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x1e
	movs r1, #0xd
	bl PlayMusic
	b _0809103C
_08090FD0:
	ldr r0, _08090FEC @ =0x0300122E
	ldrh r1, [r0]
	cmp r1, #0
	bne _0809103C
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r4, r2
	strh r1, [r0]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #2
	b _0809103A
	.align 2, 0
_08090FEC: .4byte 0x0300122E
_08090FF0:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r4, r2
	ldrh r0, [r1]
	cmp r0, #0x46
	bne _0809103C
	movs r0, #0
	strh r0, [r1]
	movs r0, #0xc
	movs r1, #0x80
	movs r2, #0x32
	movs r3, #0
	bl NewFileIntroLandingOnBslSetupOam
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #3
	b _0809103A
_08091016:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r0, #0
	strh r0, [r1]
	b _0809103C
_08091022:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrh r0, [r1]
	cmp r0, #0x5a
	bne _0809103C
	movs r0, #0
	strh r0, [r1]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r0, #5
_0809103A:
	strb r0, [r1]
_0809103C:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _08091072
_08091046:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrh r0, [r1]
	cmp r0, #2
	bne _0809106A
	movs r0, #0
	strh r0, [r1]
	ldr r1, _08091064 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _08091068
	adds r0, #1
	strh r0, [r1]
	b _0809106A
	.align 2, 0
_08091064: .4byte gWrittenToBldy
_08091068:
	movs r5, #1
_0809106A:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_08091072:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start NewFileIntroLandingOnBsl
NewFileIntroLandingOnBsl: @ 0x0809107C
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _08091094 @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _080910A8
	cmp r0, #1
	bgt _08091098
	cmp r0, #0
	beq _080910A2
	b _080910FC
	.align 2, 0
_08091094: .4byte gNonGameplayRam
_08091098:
	cmp r0, #2
	beq _080910C0
	cmp r0, #3
	beq _080910DC
	b _080910FC
_080910A2:
	bl NewFileIntroLandingOnBslInit
	b _080910B4
_080910A8:
	bl SpecialCutsceneFadeIn
	ldr r0, _080910BC @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _080910FC
_080910B4:
	movs r0, #2
	strh r0, [r4, #8]
	b _080910FC
	.align 2, 0
_080910BC: .4byte gWrittenToBldy
_080910C0:
	bl NewFileIntroLandingOnBslProcess
	cmp r0, #0
	beq _080910FC
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	strb r5, [r0]
	subs r1, #1
	adds r0, r4, r1
	strb r5, [r0]
	movs r0, #3
	strh r0, [r4, #8]
	b _080910FC
_080910DC:
	ldr r1, _080910EC @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _080910F0
	adds r0, #1
	strh r0, [r1]
	b _080910F4
	.align 2, 0
_080910EC: .4byte gWrittenToBldy
_080910F0:
	strh r5, [r4, #8]
	movs r5, #1
_080910F4:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_080910FC:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start NewFileIntroProcessLandingOnBslScroll
NewFileIntroProcessLandingOnBslScroll: @ 0x08091104
	push {r4, r5, lr}
	adds r2, r0, #0
	ldr r0, _08091130 @ =gNonGameplayRam
	ldr r1, _08091134 @ =0x00000217
	adds r4, r0, r1
	movs r3, #0
	strb r3, [r4]
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	ldrb r1, [r2, #0x14]
	cmp r1, #0
	bne _0809113C
	ldr r0, _08091138 @ =0x0300122E
	ldrh r0, [r0]
	movs r1, #0
	strh r0, [r2, #0xe]
	strb r1, [r2, #0x13]
	movs r0, #1
	strb r0, [r2, #0x14]
	b _08091170
	.align 2, 0
_08091130: .4byte gNonGameplayRam
_08091134: .4byte 0x00000217
_08091138: .4byte 0x0300122E
_0809113C:
	cmp r1, #1
	bne _0809116E
	strb r3, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bne _08091170
	strb r3, [r2, #0x13]
	ldrh r1, [r2, #0xe]
	movs r5, #0xe
	ldrsh r0, [r2, r5]
	cmp r0, #0
	ble _08091168
	movs r0, #0xff
	strb r0, [r4]
	subs r1, #1
	strh r1, [r2, #0xe]
	ldr r0, _08091164 @ =0x0300122E
	strh r1, [r0]
	b _08091170
	.align 2, 0
_08091164: .4byte 0x0300122E
_08091168:
	strb r3, [r4]
	strb r3, [r2, #0x10]
	b _08091170
_0809116E:
	strb r3, [r2, #0x13]
_08091170:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NewFileIntroProcessBslDoor
NewFileIntroProcessBslDoor: @ 0x08091178
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrb r5, [r4, #0x14]
	cmp r5, #0
	bne _080911AC
	movs r0, #6
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl NewFileIntroLandingOnBslSetupOam
	strb r5, [r4, #0x12]
	strb r5, [r4, #0x11]
	ldr r0, _080911A4 @ =0x085FE370
	str r0, [r4, #0x1c]
	ldr r0, _080911A8 @ =0x00000246
	bl unk_3b1c
	movs r0, #1
	strb r0, [r4, #0x14]
	b _080911FE
	.align 2, 0
_080911A4: .4byte 0x085FE370
_080911A8: .4byte 0x00000246
_080911AC:
	cmp r5, #1
	bne _080911CE
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #0x12]
	cmp r0, r2
	bne _080911FE
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _080911FE
	strb r1, [r4, #0x12]
	movs r0, #2
	strb r0, [r4, #0x14]
	b _080911FE
_080911CE:
	cmp r5, #2
	bne _080911FE
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #4
	movs r3, #1
	bl NewFileIntroLandingOnBslSetupOam
	movs r2, #0xc
	ldrsh r1, [r4, r2]
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #5
	movs r3, #1
	bl NewFileIntroLandingOnBslSetupOam
	movs r0, #0
	strb r0, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	subs r0, #2
	ands r0, r1
	strb r0, [r4, #0x18]
_080911FE:
	ldr r0, _08091214 @ =gNonGameplayRam
	ldr r1, _08091218 @ =0x00000217
	adds r0, r0, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldrh r0, [r4, #0xe]
	subs r0, r0, r1
	strh r0, [r4, #0xe]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08091214: .4byte gNonGameplayRam
_08091218: .4byte 0x00000217

	thumb_func_start NewFileIntroProcessBslDoorLight
NewFileIntroProcessBslDoorLight: @ 0x0809121C
	push {r4, lr}
	adds r3, r0, #0
	ldrh r0, [r3, #0xa]
	adds r0, #1
	strh r0, [r3, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #8
	bne _08091258
	movs r0, #0
	strh r0, [r3, #0xa]
	ldr r2, _0809124C @ =gNonGameplayRam
	movs r0, #0x88
	lsls r0, r0, #1
	adds r1, r2, r0
	movs r0, #1
	strb r0, [r1]
	ldr r0, _08091250 @ =0x00000111
	adds r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #4
	bhi _08091254
	adds r0, #1
	b _08091256
	.align 2, 0
_0809124C: .4byte gNonGameplayRam
_08091250: .4byte 0x00000111
_08091254:
	movs r0, #0
_08091256:
	strb r0, [r1]
_08091258:
	ldrb r0, [r3, #0x13]
	adds r0, #1
	movs r4, #0
	strb r0, [r3, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	bne _08091292
	strb r4, [r3, #0x13]
	ldr r2, _08091288 @ =gNonGameplayRam
	movs r0, #0x96
	lsls r0, r0, #1
	adds r1, r2, r0
	movs r0, #1
	strb r0, [r1]
	ldr r0, _0809128C @ =0x0000012D
	adds r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #6
	bhi _08091290
	adds r0, #1
	strb r0, [r1]
	b _08091292
	.align 2, 0
_08091288: .4byte gNonGameplayRam
_0809128C: .4byte 0x0000012D
_08091290:
	strb r4, [r1]
_08091292:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start NewFileIntroProcessBslDoorTop
NewFileIntroProcessBslDoorTop: @ 0x08091298
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	ldrh r0, [r5, #0xa]
	adds r0, #1
	movs r6, #0
	strh r0, [r5, #0xa]
	ldrb r1, [r5, #0x14]
	cmp r1, #0
	bne _080912B4
	strh r1, [r5, #0xa]
	movs r0, #1
	strb r0, [r5, #0x14]
	b _08091360
_080912B4:
	cmp r1, #1
	bne _080912DE
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #8
	bne _08091360
	strh r6, [r5, #0xa]
	ldrh r1, [r5, #2]
	movs r2, #2
	ldrsh r0, [r5, r2]
	cmp r0, #0x35
	bgt _080912D8
	adds r0, r1, #1
	strh r0, [r5, #2]
	ldrh r0, [r5, #0xe]
	subs r0, #1
	strh r0, [r5, #0xe]
	b _08091360
_080912D8:
	movs r0, #2
	strb r0, [r5, #0x14]
	b _08091360
_080912DE:
	cmp r1, #2
	bne _08091300
	mov r4, sp
	adds r4, #2
	movs r0, #7
	mov r1, sp
	adds r2, r4, #0
	bl NewFileIntroGetPositionAndSlotOfOamByType_2
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0x5a
	ble _08091360
	strh r6, [r5, #0xa]
	movs r0, #3
	strb r0, [r5, #0x14]
	b _08091360
_08091300:
	cmp r1, #3
	bne _0809134E
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #8
	bne _08091360
	strh r6, [r5, #0xa]
	ldrh r1, [r5, #2]
	movs r2, #2
	ldrsh r0, [r5, r2]
	cmp r0, #0
	ble _08091338
	subs r0, r1, #1
	strh r0, [r5, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x25
	bne _08091330
	movs r0, #0xa
	movs r1, #0
	movs r2, #0
	movs r3, #1
	bl NewFileIntroLandingOnBslSetupOam
_08091330:
	ldrh r0, [r5, #0xe]
	adds r0, #1
	strh r0, [r5, #0xe]
	b _08091360
_08091338:
	movs r0, #4
	strb r0, [r5, #0x14]
	movs r0, #0xc
	ldrsh r1, [r5, r0]
	movs r0, #0xe
	ldrsh r2, [r5, r0]
	movs r0, #9
	movs r3, #1
	bl NewFileIntroLandingOnBslSetupOam
	b _08091360
_0809134E:
	cmp r1, #4
	bne _08091360
	movs r0, #0
	strb r0, [r5, #0x10]
	ldrb r1, [r5, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r5, #0x18]
_08091360:
	ldr r0, _08091378 @ =gNonGameplayRam
	ldr r1, _0809137C @ =0x00000217
	adds r0, r0, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldrh r0, [r5, #0xe]
	subs r0, r0, r1
	strh r0, [r5, #0xe]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08091378: .4byte gNonGameplayRam
_0809137C: .4byte 0x00000217

	thumb_func_start NewFileIntroProcessBslDoorBottom
NewFileIntroProcessBslDoorBottom: @ 0x08091380
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	ldrh r0, [r5, #0xa]
	adds r0, #1
	movs r6, #0
	strh r0, [r5, #0xa]
	ldrb r1, [r5, #0x14]
	cmp r1, #0
	bne _0809139C
	strh r1, [r5, #0xa]
	movs r0, #1
	strb r0, [r5, #0x14]
	b _08091424
_0809139C:
	cmp r1, #1
	bne _080913C6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #8
	bne _08091424
	strh r6, [r5, #0xa]
	ldrh r1, [r5, #2]
	movs r2, #2
	ldrsh r0, [r5, r2]
	cmp r0, #0x35
	bgt _080913C0
	adds r0, r1, #1
	strh r0, [r5, #2]
	ldrh r0, [r5, #0xe]
	adds r0, #1
	strh r0, [r5, #0xe]
	b _08091424
_080913C0:
	movs r0, #2
	strb r0, [r5, #0x14]
	b _08091424
_080913C6:
	cmp r1, #2
	bne _080913E8
	mov r4, sp
	adds r4, #2
	movs r0, #7
	mov r1, sp
	adds r2, r4, #0
	bl NewFileIntroGetPositionAndSlotOfOamByType_2
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0x5a
	ble _08091424
	strh r6, [r5, #0xa]
	movs r0, #3
	strb r0, [r5, #0x14]
	b _08091424
_080913E8:
	cmp r1, #3
	bne _08091412
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #8
	bne _08091424
	strh r6, [r5, #0xa]
	ldrh r1, [r5, #2]
	movs r2, #2
	ldrsh r0, [r5, r2]
	cmp r0, #0
	ble _0809140C
	subs r0, r1, #1
	strh r0, [r5, #2]
	ldrh r0, [r5, #0xe]
	subs r0, #1
	strh r0, [r5, #0xe]
	b _08091424
_0809140C:
	movs r0, #4
	strb r0, [r5, #0x14]
	b _08091424
_08091412:
	cmp r1, #4
	bne _08091424
	movs r0, #0
	strb r0, [r5, #0x10]
	ldrb r1, [r5, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r5, #0x18]
_08091424:
	ldr r0, _0809143C @ =gNonGameplayRam
	ldr r1, _08091440 @ =0x00000217
	adds r0, r0, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldrh r0, [r5, #0xe]
	subs r0, r0, r1
	strh r0, [r5, #0xe]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809143C: .4byte gNonGameplayRam
_08091440: .4byte 0x00000217

	thumb_func_start unk_91444
unk_91444: @ 0x08091444
	push {r4, lr}
	adds r3, r0, #0
	ldrb r2, [r3, #0x14]
	cmp r2, #0
	bne _08091464
	ldr r1, _08091494 @ =gNonGameplayRam
	movs r4, #0xa4
	lsls r4, r4, #1
	adds r0, r1, r4
	strb r2, [r0]
	ldr r0, _08091498 @ =0x00000149
	adds r1, r1, r0
	movs r0, #5
	strb r0, [r1]
	movs r0, #1
	strb r0, [r3, #0x14]
_08091464:
	ldrh r0, [r3, #0xa]
	adds r0, #1
	strh r0, [r3, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x4b
	bne _080914A0
	movs r0, #0
	strh r0, [r3, #0xa]
	ldr r2, _08091494 @ =gNonGameplayRam
	movs r4, #0xa4
	lsls r4, r4, #1
	adds r1, r2, r4
	movs r0, #1
	strb r0, [r1]
	ldr r0, _08091498 @ =0x00000149
	adds r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #8
	bhi _0809149C
	adds r0, #1
	strb r0, [r1]
	b _080914A0
	.align 2, 0
_08091494: .4byte gNonGameplayRam
_08091498: .4byte 0x00000149
_0809149C:
	movs r0, #0
	strb r0, [r3, #0x10]
_080914A0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_914a8
unk_914a8: @ 0x080914A8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r5, r0, #0
	ldrh r0, [r5, #0xa]
	adds r1, r0, #1
	movs r7, #0
	movs r0, #0
	mov r8, r0
	strh r1, [r5, #0xa]
	ldrb r6, [r5, #0x14]
	cmp r6, #0
	bne _080914E8
	mov r2, sp
	adds r2, #2
	movs r0, #4
	mov r1, sp
	bl NewFileIntroGetPositionAndSlotOfOamByType_2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x14
	bne _080914DA
	b _080917C8
_080914DA:
	strh r6, [r5, #0xa]
	ldrh r0, [r5, #0xc]
	strh r0, [r5]
	ldrh r0, [r5, #0xe]
	strh r0, [r5, #2]
	movs r0, #1
	b _080917C6
_080914E8:
	cmp r6, #1
	bne _08091538
	mov r4, sp
	adds r4, #2
	movs r0, #4
	mov r1, sp
	adds r2, r4, #0
	bl NewFileIntroGetPositionAndSlotOfOamByType_2
	ldrh r0, [r5, #0xa]
	lsrs r0, r0, #2
	ldrh r1, [r5, #2]
	adds r2, r0, r1
	strh r2, [r5, #0xe]
	movs r3, #0xe
	ldrsh r0, [r5, r3]
	movs r3, #0
	ldrsh r1, [r4, r3]
	subs r0, r0, r1
	cmp r0, #8
	bgt _08091514
	b _080917C8
_08091514:
	ldr r1, _08091534 @ =gNonGameplayRam
	movs r3, #0xf8
	lsls r3, r3, #1
	adds r0, r1, r3
	strb r6, [r0]
	adds r3, #1
	adds r0, r1, r3
	strb r6, [r0]
	ldrh r0, [r5, #0xc]
	strh r0, [r5]
	strh r2, [r5, #2]
	mov r0, r8
	strh r0, [r5, #0xa]
	movs r0, #2
	b _080917C6
	.align 2, 0
_08091534: .4byte gNonGameplayRam
_08091538:
	cmp r6, #2
	beq _0809153E
	b _08091678
_0809153E:
	ldrb r0, [r5, #0x13]
	adds r2, r0, #1
	strb r2, [r5, #0x13]
	ldr r6, _08091588 @ =gNonGameplayRam
	ldr r3, _0809158C @ =0x000001F1
	adds r3, r3, r6
	mov ip, r3
	ldrb r4, [r3]
	adds r0, r4, #0
	cmp r0, #6
	bhi _08091590
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x12
	ldrh r1, [r5, #2]
	adds r3, r0, r1
	strh r3, [r5, #0xe]
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xc
	beq _08091568
	b _08091664
_08091568:
	strb r7, [r5, #0x13]
	movs r2, #0xf8
	lsls r2, r2, #1
	adds r1, r6, r2
	movs r0, #1
	strb r0, [r1]
	adds r0, r4, #1
	mov r1, ip
	strb r0, [r1]
	ldrh r0, [r5, #0xc]
	strh r0, [r5]
	strh r3, [r5, #2]
	mov r2, r8
	strh r2, [r5, #0xa]
	b _08091664
	.align 2, 0
_08091588: .4byte gNonGameplayRam
_0809158C: .4byte 0x000001F1
_08091590:
	cmp r0, #7
	bne _080915C0
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _080915A6
	mov r3, r8
	strh r3, [r5, #0xa]
	ldrh r0, [r5, #0xe]
	adds r0, #1
	strh r0, [r5, #0xe]
_080915A6:
	ldrb r0, [r5, #0x13]
	cmp r0, #0xc
	bne _08091664
	strb r7, [r5, #0x13]
	ldr r0, _080915BC @ =0x085FF628
	str r0, [r5, #0x1c]
	movs r0, #0xf8
	lsls r0, r0, #1
	adds r1, r6, r0
	b _08091612
	.align 2, 0
_080915BC: .4byte 0x085FF628
_080915C0:
	cmp r0, #8
	bne _080915EE
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _080915D6
	mov r2, r8
	strh r2, [r5, #0xa]
	ldrh r0, [r5, #0xe]
	adds r0, #1
	strh r0, [r5, #0xe]
_080915D6:
	ldrb r0, [r5, #0x13]
	cmp r0, #0xa
	bne _08091664
	strb r7, [r5, #0x13]
	ldrb r1, [r5, #0x1a]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r5, #0x1a]
	b _0809160C
_080915EE:
	cmp r0, #0xd
	bhi _08091620
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _08091604
	mov r2, r8
	strh r2, [r5, #0xa]
	ldrh r0, [r5, #0xe]
	adds r0, #1
	strh r0, [r5, #0xe]
_08091604:
	ldrb r0, [r5, #0x13]
	cmp r0, #8
	bne _08091664
	strb r7, [r5, #0x13]
_0809160C:
	movs r3, #0xf8
	lsls r3, r3, #1
	adds r1, r6, r3
_08091612:
	movs r0, #1
	strb r0, [r1]
	mov r1, ip
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _08091664
_08091620:
	cmp r0, #0xe
	bne _08091664
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _08091636
	mov r2, r8
	strh r2, [r5, #0xa]
	ldrh r0, [r5, #0xe]
	adds r0, #1
	strh r0, [r5, #0xe]
_08091636:
	ldrb r0, [r5, #0x13]
	cmp r0, #8
	bne _08091664
	strb r7, [r5, #0x13]
	ldr r0, _08091674 @ =0x085FF638
	str r0, [r5, #0x1c]
	movs r3, #0xf8
	lsls r3, r3, #1
	adds r1, r6, r3
	movs r0, #1
	strb r0, [r1]
	mov r1, ip
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrh r0, [r5, #0xc]
	strh r0, [r5]
	ldrh r0, [r5, #0xe]
	strh r0, [r5, #2]
	mov r2, r8
	strh r2, [r5, #0xa]
	movs r0, #3
	strb r0, [r5, #0x14]
_08091664:
	movs r3, #0xe
	ldrsh r0, [r5, r3]
	cmp r0, #0x50
	bgt _0809166E
	b _080917C8
_0809166E:
	movs r0, #0x50
	strh r0, [r5, #0xe]
	b _080917C8
	.align 2, 0
_08091674: .4byte 0x085FF638
_08091678:
	cmp r6, #3
	bne _0809169E
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	beq _08091686
	b _080917C8
_08091686:
	mov r0, r8
	strh r0, [r5, #0xa]
	movs r0, #4
	strb r0, [r5, #0x14]
	movs r2, #0xc
	ldrsh r1, [r5, r2]
	movs r0, #8
	movs r2, #0x96
	movs r3, #0
	bl NewFileIntroLandingOnBslSetupOam
	b _080917C8
_0809169E:
	cmp r6, #4
	bne _080916DC
	ldrh r1, [r5, #8]
	adds r0, r1, #1
	strh r0, [r5, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xff
	ble _080916B6
	adds r0, r1, #0
	subs r0, #0xff
	strh r0, [r5, #8]
_080916B6:
	mov r3, r8
	strh r3, [r5, #0xa]
	ldrh r0, [r5, #0xc]
	strh r0, [r5]
	ldrh r0, [r5, #0xe]
	strh r0, [r5, #2]
	strb r7, [r5, #0x12]
	strb r7, [r5, #0x11]
	ldrb r1, [r5, #0x18]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r5, #0x18]
	ldr r0, _080916D8 @ =0x085FF540
	str r0, [r5, #0x1c]
	movs r0, #5
	b _080917C6
	.align 2, 0
_080916D8: .4byte 0x085FF540
_080916DC:
	cmp r6, #5
	bne _0809171C
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x14
	ldrh r1, [r5, #2]
	adds r2, r0, r1
	strh r2, [r5, #0xe]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x5a
	ble _080917C8
	ldr r0, [r5, #0x10]
	ldr r1, _08091714 @ =0x00FFFF00
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #9
	cmp r0, r1
	bne _080917C8
	ldr r0, _08091718 @ =0x085FF4D8
	str r0, [r5, #0x1c]
	mov r3, r8
	strh r3, [r5, #0xa]
	ldrh r0, [r5, #0xc]
	strh r0, [r5]
	strh r2, [r5, #2]
	movs r0, #6
	b _080917C6
	.align 2, 0
_08091714: .4byte 0x00FFFF00
_08091718: .4byte 0x085FF4D8
_0809171C:
	cmp r6, #6
	bne _0809175C
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x14
	ldrh r1, [r5, #2]
	adds r2, r0, r1
	strh r2, [r5, #0xe]
	ldrb r0, [r5, #0x11]
	lsls r0, r0, #3
	ldr r1, [r5, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r5, #0x12]
	cmp r0, r3
	bne _080917C8
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _080917C8
	mov r0, r8
	strh r0, [r5, #0xa]
	ldrh r0, [r5, #0xc]
	strh r0, [r5]
	strh r2, [r5, #2]
	strb r7, [r5, #0x12]
	strb r7, [r5, #0x11]
	ldr r0, _08091758 @ =0x085FF5A8
	str r0, [r5, #0x1c]
	movs r0, #7
	b _080917C6
	.align 2, 0
_08091758: .4byte 0x085FF5A8
_0809175C:
	cmp r6, #7
	bne _0809178C
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x14
	ldrh r2, [r5, #2]
	adds r1, r0, r2
	strh r1, [r5, #0xe]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x67
	ble _080917C8
	mov r3, r8
	strh r3, [r5, #0xa]
	ldrh r0, [r5, #0xc]
	strh r0, [r5]
	strh r1, [r5, #2]
	strb r7, [r5, #0x12]
	strb r7, [r5, #0x11]
	ldr r0, _08091788 @ =0x085FF580
	str r0, [r5, #0x1c]
	movs r0, #8
	b _080917C6
	.align 2, 0
_08091788: .4byte 0x085FF580
_0809178C:
	cmp r6, #8
	bne _080917C8
	ldrb r0, [r5, #0x11]
	lsls r0, r0, #3
	ldr r1, [r5, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r5, #0x12]
	cmp r0, r2
	bne _080917C8
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _080917C8
	strh r1, [r5, #0xa]
	ldrh r0, [r5, #0xc]
	strh r0, [r5]
	ldrh r0, [r5, #0xe]
	strh r0, [r5, #2]
	strb r7, [r5, #0x12]
	strb r7, [r5, #0x11]
	ldr r0, _080917D4 @ =0x085FF5A8
	str r0, [r5, #0x1c]
	ldr r0, _080917D8 @ =gNonGameplayRam
	movs r3, #0x85
	lsls r3, r3, #2
	adds r0, r0, r3
	movs r1, #4
	strb r1, [r0]
	movs r0, #9
_080917C6:
	strb r0, [r5, #0x14]
_080917C8:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080917D4: .4byte 0x085FF5A8
_080917D8: .4byte gNonGameplayRam

	thumb_func_start NewFileIntroProcessShipLandingSmoke
NewFileIntroProcessShipLandingSmoke: @ 0x080917DC
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	ldrb r6, [r5, #0x14]
	cmp r6, #0
	bne _08091834
	mov r4, sp
	adds r4, #2
	movs r0, #0xc
	mov r1, sp
	adds r2, r4, #0
	bl NewFileIntroGetPositionAndSlotOfOamByType_2
	mov r0, sp
	ldrh r0, [r0]
	movs r2, #0
	strh r0, [r5, #0xc]
	movs r0, #0x96
	strh r0, [r5, #0xe]
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0x64
	ble _080918A0
	ldrb r0, [r5, #0x11]
	lsls r0, r0, #3
	ldr r1, [r5, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r5, #0x12]
	cmp r0, r3
	bne _080918A0
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _080918A0
	strh r6, [r5, #0xa]
	strb r2, [r5, #0x12]
	strb r2, [r5, #0x11]
	ldr r0, _08091830 @ =0x085FF5E8
	str r0, [r5, #0x1c]
	movs r0, #1
	strb r0, [r5, #0x14]
	b _080918A0
	.align 2, 0
_08091830: .4byte 0x085FF5E8
_08091834:
	cmp r6, #1
	bne _0809187A
	mov r4, sp
	adds r4, #2
	movs r0, #0xc
	mov r1, sp
	adds r2, r4, #0
	bl NewFileIntroGetPositionAndSlotOfOamByType_2
	mov r0, sp
	ldrh r0, [r0]
	movs r2, #0
	strh r0, [r5, #0xc]
	movs r0, #0x96
	strh r0, [r5, #0xe]
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0x67
	ble _080918A0
	ldrb r0, [r5, #0x11]
	lsls r0, r0, #3
	ldr r1, [r5, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r5, #0x12]
	cmp r0, r3
	bne _080918A0
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _080918A0
	strb r2, [r5, #0x12]
	strb r2, [r5, #0x11]
	movs r0, #2
	strb r0, [r5, #0x14]
	b _080918A0
_0809187A:
	cmp r6, #2
	bne _080918A0
	ldrb r0, [r5, #0x11]
	lsls r0, r0, #3
	ldr r1, [r5, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r5, #0x12]
	cmp r0, r2
	bne _080918A0
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _080918A0
	strb r1, [r5, #0x10]
	ldrb r1, [r5, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r5, #0x18]
_080918A0:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start unk_918a8
unk_918a8: @ 0x080918A8
	push {r4, lr}
	adds r2, r0, #0
	ldrb r3, [r2, #0x14]
	cmp r3, #0
	bne _080918DC
	ldrb r0, [r2, #0x11]
	lsls r0, r0, #3
	ldr r1, [r2, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r4, [r2, #0x12]
	cmp r0, r4
	bne _080918E4
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _080918E4
	strb r3, [r2, #0x12]
	strb r3, [r2, #0x11]
	ldr r0, _080918D8 @ =0x085FE430
	str r0, [r2, #0x1c]
	movs r0, #1
	strb r0, [r2, #0x14]
	b _080918E4
	.align 2, 0
_080918D8: .4byte 0x085FE430
_080918DC:
	cmp r3, #1
	bne _080918E4
	movs r0, #0
	strb r0, [r2, #0x12]
_080918E4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NewFileIntroProcessExtendingShipArms
NewFileIntroProcessExtendingShipArms: @ 0x080918EC
	push {r4, lr}
	adds r3, r0, #0
	ldrb r2, [r3, #0x14]
	cmp r2, #0
	bne _0809190C
	ldr r1, _0809193C @ =gNonGameplayRam
	movs r4, #0xa4
	lsls r4, r4, #1
	adds r0, r1, r4
	strb r2, [r0]
	ldr r0, _08091940 @ =0x00000149
	adds r1, r1, r0
	movs r0, #9
	strb r0, [r1]
	movs r0, #1
	strb r0, [r3, #0x14]
_0809190C:
	ldrh r0, [r3, #0xa]
	adds r0, #1
	strh r0, [r3, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x4b
	bne _08091948
	movs r0, #0
	strh r0, [r3, #0xa]
	ldr r2, _0809193C @ =gNonGameplayRam
	movs r4, #0xa4
	lsls r4, r4, #1
	adds r1, r2, r4
	movs r0, #1
	strb r0, [r1]
	ldr r0, _08091940 @ =0x00000149
	adds r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #6
	bls _08091944
	subs r0, #1
	strb r0, [r1]
	b _08091948
	.align 2, 0
_0809193C: .4byte gNonGameplayRam
_08091940: .4byte 0x00000149
_08091944:
	movs r0, #0
	strb r0, [r3, #0x10]
_08091948:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start NewFileIntroProcessLandingLights
NewFileIntroProcessLandingLights: @ 0x08091950
	ldr r1, _08091964 @ =gNonGameplayRam
	ldr r2, _08091968 @ =0x00000217
	adds r1, r1, r2
	movs r2, #0
	ldrsb r2, [r1, r2]
	ldrh r1, [r0, #0xe]
	subs r1, r1, r2
	strh r1, [r0, #0xe]
	bx lr
	.align 2, 0
_08091964: .4byte gNonGameplayRam
_08091968: .4byte 0x00000217

	thumb_func_start NewFileIntroProcessShipLanding
NewFileIntroProcessShipLanding: @ 0x0809196C
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #0xa]
	adds r0, #1
	movs r2, #0
	movs r3, #0
	strh r0, [r4, #0xa]
	ldrb r1, [r4, #0x14]
	cmp r1, #0
	bne _0809198A
	strh r1, [r4, #0xa]
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	b _0809199E
_0809198A:
	cmp r1, #1
	bne _080919A6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x12
	ldrh r1, [r4, #2]
	adds r0, r0, r1
	strh r0, [r4, #0xe]
	strh r3, [r4, #0xa]
	ldrh r1, [r4, #0xc]
	strh r1, [r4]
_0809199E:
	strh r0, [r4, #2]
	movs r0, #2
	strb r0, [r4, #0x14]
	b _08091B50
_080919A6:
	cmp r1, #2
	bne _08091A28
	ldrh r1, [r4, #6]
	movs r2, #6
	ldrsh r0, [r4, r2]
	cmp r0, #0xff
	bgt _080919E4
	adds r0, r1, #1
	strh r0, [r4, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xff
	ble _080919D2
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r4, #6]
	ldrb r1, [r4, #0x18]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
	b _080919E4
_080919D2:
	cmp r0, #0xbf
	ble _080919E4
	ldrb r0, [r4, #0x1a]
	movs r1, #0xd
	rsbs r1, r1, #0
	ands r1, r0
	movs r0, #4
	orrs r1, r0
	strb r1, [r4, #0x1a]
_080919E4:
	ldrh r0, [r4, #0xa]
	lsrs r0, r0, #2
	ldrh r3, [r4, #2]
	adds r0, r0, r3
	movs r2, #0
	strh r0, [r4, #0xe]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x50
	bgt _080919FA
	b _08091B50
_080919FA:
	movs r1, #0x50
	strh r1, [r4, #0xe]
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	strh r1, [r4, #2]
	movs r0, #0
	strh r0, [r4, #0xa]
	movs r5, #6
	ldrsh r1, [r4, r5]
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r1, r0
	beq _08091A16
	b _08091B50
_08091A16:
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _08091A24 @ =0x085FF530
	str r0, [r4, #0x1c]
	movs r0, #3
	strb r0, [r4, #0x14]
	b _08091B50
	.align 2, 0
_08091A24: .4byte 0x085FF530
_08091A28:
	cmp r1, #3
	bne _08091A58
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _08091A36
	b _08091B50
_08091A36:
	strh r3, [r4, #0xa]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _08091A54 @ =0x085FF540
	str r0, [r4, #0x1c]
	movs r0, #4
	strb r0, [r4, #0x14]
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r0, #8
	movs r2, #0x96
	movs r3, #0
	bl NewFileIntroLandingOnBslSetupOam
	b _08091B50
	.align 2, 0
_08091A54: .4byte 0x085FF540
_08091A58:
	cmp r1, #4
	bne _08091A78
	strh r3, [r4, #0xa]
	ldrb r0, [r4, #0x11]
	cmp r0, #6
	bne _08091B50
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _08091A74 @ =0x085FF530
	str r0, [r4, #0x1c]
	movs r0, #5
	strb r0, [r4, #0x14]
	b _08091B50
	.align 2, 0
_08091A74: .4byte 0x085FF530
_08091A78:
	cmp r1, #5
	bne _08091A98
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xa
	bls _08091B50
	strh r3, [r4, #0xa]
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	movs r0, #6
	strb r0, [r4, #0x14]
	b _08091B50
_08091A98:
	cmp r1, #6
	bne _08091AC8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x13
	ldrh r5, [r4, #2]
	adds r1, r0, r5
	strh r1, [r4, #0xe]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x58
	ble _08091B50
	strh r3, [r4, #0xa]
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	strh r1, [r4, #2]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _08091AC4 @ =0x085FF4D8
	str r0, [r4, #0x1c]
	movs r0, #7
	strb r0, [r4, #0x14]
	b _08091B50
	.align 2, 0
_08091AC4: .4byte 0x085FF4D8
_08091AC8:
	cmp r1, #7
	bne _08091B14
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	bne _08091AE4
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _08091AE4
	strb r2, [r4, #0x12]
_08091AE4:
	ldrh r0, [r4, #0xa]
	lsrs r0, r0, #3
	ldrh r5, [r4, #2]
	adds r1, r0, r5
	movs r2, #0
	strh r1, [r4, #0xe]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x67
	ble _08091B50
	movs r0, #0
	strh r0, [r4, #0xa]
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	strh r1, [r4, #2]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _08091B10 @ =0x085FF580
	str r0, [r4, #0x1c]
	movs r0, #8
	strb r0, [r4, #0x14]
	b _08091B50
	.align 2, 0
_08091B10: .4byte 0x085FF580
_08091B14:
	cmp r1, #8
	bne _08091B50
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	bne _08091B50
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _08091B50
	strh r1, [r4, #0xa]
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _08091B68 @ =0x085FF5A8
	str r0, [r4, #0x1c]
	movs r0, #9
	strb r0, [r4, #0x14]
	ldr r0, _08091B6C @ =gNonGameplayRam
	movs r5, #0x85
	lsls r5, r5, #2
	adds r0, r0, r5
	movs r1, #4
	strb r1, [r0]
_08091B50:
	ldr r0, _08091B6C @ =gNonGameplayRam
	ldr r1, _08091B70 @ =0x00000217
	adds r0, r0, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldrh r0, [r4, #0xe]
	subs r0, r0, r1
	strh r0, [r4, #0xe]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08091B68: .4byte 0x085FF5A8
_08091B6C: .4byte gNonGameplayRam
_08091B70: .4byte 0x00000217

	thumb_func_start NewFileIntroLandingOnBslSetupOam
NewFileIntroLandingOnBslSetupOam: @ 0x08091B74
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sb, r2
	lsls r3, r3, #0x18
	cmp r3, #0
	bne _08091BD8
	movs r2, #0
	ldr r0, _08091BD4 @ =gNonGameplayRam
	movs r3, #0x8b
	lsls r3, r3, #2
	adds r1, r0, r3
	ldrb r1, [r1]
	mov ip, r0
	cmp r1, #0
	beq _08091BC8
	mov r4, ip
_08091BA8:
	lsls r0, r2, #0x18
	movs r1, #0x80
	lsls r1, r1, #0x11
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x13
	bgt _08091C18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08091BA8
_08091BC8:
	lsls r0, r2, #0x18
	asrs r1, r0, #0x18
	adds r7, r0, #0
	cmp r1, #0x13
	ble _08091C20
	b _08091C18
	.align 2, 0
_08091BD4: .4byte gNonGameplayRam
_08091BD8:
	movs r2, #0x13
	ldr r0, _08091C1C @ =gNonGameplayRam
	movs r3, #0x9b
	lsls r3, r3, #3
	adds r1, r0, r3
	ldrb r1, [r1]
	mov ip, r0
	cmp r1, #0
	beq _08091C10
	mov r4, ip
	movs r3, #0x8b
	lsls r3, r3, #2
_08091BF0:
	lsls r0, r2, #0x18
	movs r1, #0xff
	lsls r1, r1, #0x18
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0
	blt _08091C18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08091BF0
_08091C10:
	lsls r0, r2, #0x18
	adds r7, r0, #0
	cmp r7, #0
	bge _08091C20
_08091C18:
	movs r0, #0x14
	b _08091EDC
	.align 2, 0
_08091C1C: .4byte gNonGameplayRam
_08091C20:
	movs r0, #0
	str r0, [sp]
	ldr r2, _08091C84 @ =0x040000D4
	mov r3, sp
	str r3, [r2]
	asrs r1, r7, #0x18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r5, r0, #2
	ldr r3, _08091C88 @ =0x030016A0
	adds r0, r5, r3
	str r0, [r2, #4]
	ldr r0, _08091C8C @ =0x85000009
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	ldr r1, _08091C90 @ =0xFFFFFDE4
	adds r0, r3, r1
	adds r2, r5, r0
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r2, r1
	mov r1, r8
	strh r1, [r0]
	ldr r1, _08091C94 @ =0x0000022A
	adds r0, r2, r1
	mov r1, sb
	strh r1, [r0]
	movs r1, #0x8b
	lsls r1, r1, #2
	adds r0, r2, r1
	strb r6, [r0]
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r4, r2, r0
	ldrb r1, [r4]
	movs r0, #1
	orrs r1, r0
	strb r1, [r4]
	cmp r6, #1
	bne _08091C9C
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08091C98 @ =NewFileIntroProcessLandingOnBslScroll
	str r1, [r0]
	b _08091EDA
	.align 2, 0
_08091C84: .4byte 0x040000D4
_08091C88: .4byte 0x030016A0
_08091C8C: .4byte 0x85000009
_08091C90: .4byte 0xFFFFFDE4
_08091C94: .4byte 0x0000022A
_08091C98: .4byte NewFileIntroProcessLandingOnBslScroll
_08091C9C:
	cmp r6, #2
	bne _08091CD4
	ldr r1, _08091CC8 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08091CCC @ =0x085FE430
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08091CD0 @ =NewFileIntroProcessBslDoor
	str r1, [r0]
	b _08091EDA
	.align 2, 0
_08091CC8: .4byte 0x00000236
_08091CCC: .4byte 0x085FE430
_08091CD0: .4byte NewFileIntroProcessBslDoor
_08091CD4:
	cmp r6, #3
	bne _08091CF0
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08091CEC @ =NewFileIntroProcessBslDoorLight
	str r1, [r0]
	b _08091EDA
	.align 2, 0
_08091CEC: .4byte NewFileIntroProcessBslDoorLight
_08091CF0:
	cmp r6, #4
	bne _08091D28
	ldr r0, _08091D1C @ =0x00000236
	adds r2, r2, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08091D20 @ =0x085FE410
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08091D24 @ =NewFileIntroProcessBslDoorTop
	str r1, [r0]
	b _08091EDA
	.align 2, 0
_08091D1C: .4byte 0x00000236
_08091D20: .4byte 0x085FE410
_08091D24: .4byte NewFileIntroProcessBslDoorTop
_08091D28:
	cmp r6, #5
	bne _08091D60
	ldr r1, _08091D54 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08091D58 @ =0x085FE420
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08091D5C @ =NewFileIntroProcessBslDoorBottom
	str r1, [r0]
	b _08091EDA
	.align 2, 0
_08091D54: .4byte 0x00000236
_08091D58: .4byte 0x085FE420
_08091D5C: .4byte NewFileIntroProcessBslDoorBottom
_08091D60:
	cmp r6, #6
	bne _08091D7C
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08091D78 @ =unk_91444
	str r1, [r0]
	b _08091EDA
	.align 2, 0
_08091D78: .4byte unk_91444
_08091D7C:
	cmp r6, #7
	bne _08091DCC
	ldr r0, _08091DBC @ =0x00000222
	adds r1, r2, r0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	ldrb r1, [r4]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r4]
	ldr r1, _08091DC0 @ =0x00000236
	adds r2, r2, r1
	ldrb r0, [r2]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08091DC4 @ =0x085FF618
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08091DC8 @ =unk_914a8
	str r1, [r0]
	b _08091EDA
	.align 2, 0
_08091DBC: .4byte 0x00000222
_08091DC0: .4byte 0x00000236
_08091DC4: .4byte 0x085FF618
_08091DC8: .4byte unk_914a8
_08091DCC:
	cmp r6, #8
	bne _08091DF0
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08091DE8 @ =0x085FF5B8
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08091DEC @ =NewFileIntroProcessShipLandingSmoke
	str r1, [r0]
	b _08091EDA
	.align 2, 0
_08091DE8: .4byte 0x085FF5B8
_08091DEC: .4byte NewFileIntroProcessShipLandingSmoke
_08091DF0:
	cmp r6, #9
	bne _08091E28
	ldr r0, _08091E1C @ =0x00000236
	adds r2, r2, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08091E20 @ =0x085FE3C0
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08091E24 @ =unk_918a8
	str r1, [r0]
	b _08091EDA
	.align 2, 0
_08091E1C: .4byte 0x00000236
_08091E20: .4byte 0x085FE3C0
_08091E24: .4byte unk_918a8
_08091E28:
	cmp r6, #0xa
	bne _08091E44
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08091E40 @ =NewFileIntroProcessExtendingShipArms
	str r1, [r0]
	b _08091EDA
	.align 2, 0
_08091E40: .4byte NewFileIntroProcessExtendingShipArms
_08091E44:
	cmp r6, #0xb
	bne _08091E8C
	asrs r0, r7, #0x18
	lsls r2, r0, #3
	adds r2, r2, r0
	lsls r2, r2, #2
	mov r1, ip
	adds r3, r2, r1
	ldr r0, _08091E80 @ =0x00000236
	adds r3, r3, r0
	ldrb r1, [r3]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, ip
	adds r0, r2, r0
	ldr r1, _08091E84 @ =0x085FF6C0
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, ip
	adds r2, r2, r0
	ldr r0, _08091E88 @ =NewFileIntroProcessLandingLights
	b _08091ED8
	.align 2, 0
_08091E80: .4byte 0x00000236
_08091E84: .4byte 0x085FF6C0
_08091E88: .4byte NewFileIntroProcessLandingLights
_08091E8C:
	cmp r6, #0xc
	bne _08091EDA
	asrs r0, r7, #0x18
	lsls r2, r0, #3
	adds r2, r2, r0
	lsls r2, r2, #2
	mov r1, ip
	adds r3, r2, r1
	ldr r0, _08091EEC @ =0x00000222
	adds r1, r3, r0
	movs r0, #2
	strh r0, [r1]
	movs r1, #0x8d
	lsls r1, r1, #2
	adds r4, r3, r1
	ldrb r1, [r4]
	subs r0, #9
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r4]
	ldr r0, _08091EF0 @ =0x00000236
	adds r3, r3, r0
	ldrb r0, [r3]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, ip
	adds r0, r2, r0
	ldr r1, _08091EF4 @ =0x085FF638
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, ip
	adds r2, r2, r0
	ldr r0, _08091EF8 @ =NewFileIntroProcessShipLanding
_08091ED8:
	str r0, [r2]
_08091EDA:
	lsrs r0, r7, #0x18
_08091EDC:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08091EEC: .4byte 0x00000222
_08091EF0: .4byte 0x00000236
_08091EF4: .4byte 0x085FF638
_08091EF8: .4byte NewFileIntroProcessShipLanding

	thumb_func_start NewFileIntroLandingOnBslVblank
NewFileIntroLandingOnBslVblank: @ 0x08091EFC
	push {r4, lr}
	ldr r3, _08091FDC @ =0x040000D4
	ldr r0, _08091FE0 @ =gOamData
	str r0, [r3]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r3, #4]
	ldr r0, _08091FE4 @ =0x84000100
	str r0, [r3, #8]
	ldr r0, [r3, #8]
	ldr r2, _08091FE8 @ =0x04000052
	ldr r0, _08091FEC @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08091FF0 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08091FF4 @ =0x04000054
	ldr r0, _08091FF8 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x3c
	ldr r0, _08091FFC @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08092000 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08092004 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08092008 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r2, _0809200C @ =gNonGameplayRam
	movs r0, #0x88
	lsls r0, r0, #1
	adds r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #1
	bne _08091F72
	movs r0, #0
	strb r0, [r1]
	ldr r1, _08092010 @ =0x00000111
	adds r0, r2, r1
	ldrb r0, [r0]
	lsls r0, r0, #5
	ldr r1, _08092014 @ =0x085FFB08
	adds r0, r0, r1
	str r0, [r3]
	ldr r0, _08092018 @ =0x05000340
	str r0, [r3, #4]
	ldr r0, _0809201C @ =0x84000008
	str r0, [r3, #8]
	ldr r0, [r3, #8]
_08091F72:
	movs r4, #0x96
	lsls r4, r4, #1
	adds r1, r2, r4
	ldrb r0, [r1]
	cmp r0, #1
	bne _08091F9A
	movs r0, #0
	strb r0, [r1]
	ldr r1, _08092020 @ =0x0000012D
	adds r0, r2, r1
	ldrb r0, [r0]
	lsls r0, r0, #5
	ldr r1, _08092024 @ =0x085FF908
	adds r0, r0, r1
	str r0, [r3]
	ldr r0, _08092028 @ =0x05000300
	str r0, [r3, #4]
	ldr r0, _0809201C @ =0x84000008
	str r0, [r3, #8]
	ldr r0, [r3, #8]
_08091F9A:
	movs r4, #0xa4
	lsls r4, r4, #1
	adds r1, r2, r4
	ldrb r0, [r1]
	cmp r0, #1
	bne _08091FD6
	movs r0, #0
	strb r0, [r1]
	ldr r0, _0809202C @ =0x00000149
	adds r0, r0, r2
	mov ip, r0
	ldrb r0, [r0]
	lsls r0, r0, #5
	ldr r2, _08092014 @ =0x085FFB08
	adds r0, r0, r2
	str r0, [r3]
	ldr r0, _08092030 @ =0x05000320
	str r0, [r3, #4]
	ldr r1, _0809201C @ =0x84000008
	str r1, [r3, #8]
	ldr r0, [r3, #8]
	mov r4, ip
	ldrb r0, [r4]
	lsls r0, r0, #5
	adds r0, r0, r2
	str r0, [r3]
	ldr r0, _08092034 @ =0x05000160
	str r0, [r3, #4]
	str r1, [r3, #8]
	ldr r0, [r3, #8]
_08091FD6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08091FDC: .4byte 0x040000D4
_08091FE0: .4byte gOamData
_08091FE4: .4byte 0x84000100
_08091FE8: .4byte 0x04000052
_08091FEC: .4byte 0x03001222
_08091FF0: .4byte 0x03001220
_08091FF4: .4byte 0x04000054
_08091FF8: .4byte gWrittenToBldy
_08091FFC: .4byte 0x0300122C
_08092000: .4byte 0x0300122E
_08092004: .4byte 0x03001230
_08092008: .4byte 0x03001232
_0809200C: .4byte gNonGameplayRam
_08092010: .4byte 0x00000111
_08092014: .4byte 0x085FFB08
_08092018: .4byte 0x05000340
_0809201C: .4byte 0x84000008
_08092020: .4byte 0x0000012D
_08092024: .4byte 0x085FF908
_08092028: .4byte 0x05000300
_0809202C: .4byte 0x00000149
_08092030: .4byte 0x05000320
_08092034: .4byte 0x05000160

	thumb_func_start NewFileIntroGetPositionAndSlotOfOamByType_2
NewFileIntroGetPositionAndSlotOfOamByType_2: @ 0x08092038
	push {r4, r5, r6, r7, lr}
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r1, #0
	ldr r7, _08092070 @ =gNonGameplayRam
	movs r6, #0x8b
	lsls r6, r6, #2
_08092048:
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r7
	adds r0, r3, r6
	ldrb r0, [r0]
	cmp r0, r5
	bne _08092078
	movs r5, #0x8a
	lsls r5, r5, #2
	adds r0, r3, r5
	ldrh r0, [r0]
	strh r0, [r4]
	ldr r4, _08092074 @ =0x0000022A
	adds r0, r3, r4
	ldrh r0, [r0]
	strh r0, [r2]
	adds r0, r1, #0
	b _08092090
	.align 2, 0
_08092070: .4byte gNonGameplayRam
_08092074: .4byte 0x0000022A
_08092078:
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x13
	bls _08092048
	movs r5, #0x96
	lsls r5, r5, #1
	adds r0, r5, #0
	strh r0, [r4]
	movs r0, #0xc8
	strh r0, [r2]
	movs r0, #0x14
_08092090:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start unk_92098
unk_92098: @ 0x08092098
	bx lr
	.align 2, 0

	thumb_func_start unk_9209c
unk_9209c: @ 0x0809209C
	push {r4, r5, lr}
	sub sp, #4
	ldr r3, _080921B4 @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _080921B8 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _080921BC @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _080921C0 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _080921C4 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _080921C8 @ =unk_99940
	bl CallbackSetVBlank
	movs r0, #0
	str r0, [sp]
	ldr r1, _080921CC @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r0, _080921D0 @ =gNonGameplayRam
	str r0, [r1, #4]
	ldr r0, _080921D4 @ =0x85000150
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r4, #0
	ldr r5, _080921D8 @ =0x0879C41C
_080920DC:
	lsls r0, r4, #2
	adds r0, r0, r5
	ldr r0, [r0]
	lsls r1, r4, #0xc
	ldr r2, _080921DC @ =0x06008000
	adds r1, r1, r2
	bl LZ77UncompVram
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #4
	bls _080920DC
	ldr r0, _080921E0 @ =0x08658BE0
	ldr r1, _080921E4 @ =0x0600E800
	bl LZ77UncompVram
	ldr r0, _080921E8 @ =0x08598898
	ldr r1, _080921EC @ =0x0600E000
	bl LZ77UncompVram
	ldr r4, _080921CC @ =0x040000D4
	ldr r0, _080921F0 @ =0x086591E4
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _080921F4 @ =0x84000080
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080921F8 @ =0x04000010
	movs r3, #0
	strh r3, [r0]
	adds r0, #2
	strh r3, [r0]
	adds r0, #2
	strh r3, [r0]
	adds r0, #2
	strh r3, [r0]
	adds r0, #2
	strh r3, [r0]
	adds r0, #2
	strh r3, [r0]
	adds r0, #2
	strh r3, [r0]
	adds r0, #2
	strh r3, [r0]
	ldr r0, _080921FC @ =0x0300122C
	movs r1, #8
	strh r1, [r0]
	ldr r0, _08092200 @ =0x0300122E
	strh r1, [r0]
	ldr r0, _08092204 @ =0x03001230
	strh r1, [r0]
	ldr r0, _08092208 @ =0x03001232
	strh r1, [r0]
	ldr r1, _0809220C @ =0x04000008
	ldr r2, _08092210 @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _08092214 @ =0x00001D08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x46
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _08092218 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _0809221C @ =0x04000054
	strh r1, [r0]
	ldr r0, _08092220 @ =0x03001220
	ldr r2, _08092224 @ =0x03001222
	strh r3, [r0]
	strh r1, [r2]
	ldr r0, _08092228 @ =0x04000052
	lsls r1, r1, #8
	strh r1, [r0]
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r1, _080921D0 @ =gNonGameplayRam
	ldr r0, _0809222C @ =0x0863A19C
	str r0, [r1]
	movs r0, #0
	str r0, [sp]
	mov r0, sp
	str r0, [r4]
	ldr r0, _08092230 @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _08092234 @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0x98
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08092238 @ =unk_93884
	bl CallbackSetVBlank
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080921B4: .4byte 0x04000208
_080921B8: .4byte 0x04000004
_080921BC: .4byte 0x0000FFEF
_080921C0: .4byte 0x04000200
_080921C4: .4byte 0x0000FFFD
_080921C8: .4byte unk_99940
_080921CC: .4byte 0x040000D4
_080921D0: .4byte gNonGameplayRam
_080921D4: .4byte 0x85000150
_080921D8: .4byte 0x0879C41C
_080921DC: .4byte 0x06008000
_080921E0: .4byte 0x08658BE0
_080921E4: .4byte 0x0600E800
_080921E8: .4byte 0x08598898
_080921EC: .4byte 0x0600E000
_080921F0: .4byte 0x086591E4
_080921F4: .4byte 0x84000080
_080921F8: .4byte 0x04000010
_080921FC: .4byte 0x0300122C
_08092200: .4byte 0x0300122E
_08092204: .4byte 0x03001230
_08092208: .4byte 0x03001232
_0809220C: .4byte 0x04000008
_08092210: .4byte 0x00001C08
_08092214: .4byte 0x00001D08
_08092218: .4byte gWrittenToBldy
_0809221C: .4byte 0x04000054
_08092220: .4byte 0x03001220
_08092224: .4byte 0x03001222
_08092228: .4byte 0x04000052
_0809222C: .4byte 0x0863A19C
_08092230: .4byte 0x0600D000
_08092234: .4byte 0x85000400
_08092238: .4byte unk_93884

	thumb_func_start IntroSamusInShipProcess
IntroSamusInShipProcess: @ 0x0809223C
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	movs r7, #0
	ldr r2, _0809226C @ =gNonGameplayRam
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r5, #0x85
	lsls r5, r5, #2
	adds r0, r2, r5
	ldrb r0, [r0]
	adds r3, r2, #0
	cmp r0, #6
	bls _08092260
	b _080924C2
_08092260:
	lsls r0, r0, #2
	ldr r1, _08092270 @ =_08092274
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809226C: .4byte gNonGameplayRam
_08092270: .4byte _08092274
_08092274: @ jump table
	.4byte _08092290 @ case 0
	.4byte _08092354 @ case 1
	.4byte _080923E8 @ case 2
	.4byte _08092426 @ case 3
	.4byte _0809244C @ case 4
	.4byte _08092460 @ case 5
	.4byte _08092490 @ case 6
_08092290:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r4, r3, r0
	ldrh r0, [r4]
	cmp r0, #5
	bhi _080922BC
	ldr r2, _080922B4 @ =0x0879C41C
	adds r1, r0, #0
	subs r1, #1
	lsls r0, r1, #2
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r1, r1, #0xc
	ldr r2, _080922B8 @ =0x06008000
	adds r1, r1, r2
	bl LZ77UncompVram
	b _08092480
	.align 2, 0
_080922B4: .4byte 0x0879C41C
_080922B8: .4byte 0x06008000
_080922BC:
	cmp r0, #6
	bne _08092320
	ldr r0, _080922F8 @ =0x08658BE0
	ldr r1, _080922FC @ =0x0600E800
	bl LZ77UncompVram
	ldr r1, _08092300 @ =0x040000D4
	ldr r0, _08092304 @ =0x086591E4
	str r0, [r1]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08092308 @ =0x84000040
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _0809230C @ =0x03001220
	movs r1, #0
	strh r1, [r0]
	ldr r2, _08092310 @ =0x03001222
	movs r0, #0x10
	strh r0, [r2]
	ldr r0, _08092314 @ =0x04000014
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r1, _08092318 @ =0x0400000A
	ldr r5, _0809231C @ =0x00001D08
	adds r0, r5, #0
	strh r0, [r1]
	b _08092480
	.align 2, 0
_080922F8: .4byte 0x08658BE0
_080922FC: .4byte 0x0600E800
_08092300: .4byte 0x040000D4
_08092304: .4byte 0x086591E4
_08092308: .4byte 0x84000040
_0809230C: .4byte 0x03001220
_08092310: .4byte 0x03001222
_08092314: .4byte 0x04000014
_08092318: .4byte 0x0400000A
_0809231C: .4byte 0x00001D08
_08092320:
	cmp r0, #7
	beq _08092326
	b _08092480
_08092326:
	ldr r1, _0809234C @ =0x04000050
	ldr r2, _08092350 @ =0x00003842
	adds r0, r2, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r5, #0x80
	lsls r5, r5, #2
	adds r1, r5, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	strh r0, [r4]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #1
	b _0809247E
	.align 2, 0
_0809234C: .4byte 0x04000050
_08092350: .4byte 0x00003842
_08092354:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r3, r2
	ldrh r0, [r1]
	cmp r0, #1
	beq _08092362
	b _08092480
_08092362:
	movs r0, #0
	strh r0, [r1]
	ldr r6, _080923AC @ =0x03001222
	ldrh r0, [r6]
	cmp r0, #0
	beq _080923C0
	cmp r0, #0x10
	bne _080923A2
	ldr r5, _080923B0 @ =0x080A8CDC
	ldr r4, _080923B4 @ =0x080A8D3C
	ldr r1, _080923B8 @ =0x00000F64
	adds r0, r4, r1
	ldrh r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r0, [r0]
	movs r1, #0xa
	bl ApplyMusicSoundFading
	ldr r2, _080923BC @ =0x00000F6C
	adds r4, r4, r2
	ldrh r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r0, [r0]
	movs r1, #0xa
	bl ApplyMusicSoundFading
_080923A2:
	ldrh r0, [r6]
	subs r0, #2
	strh r0, [r6]
	b _08092480
	.align 2, 0
_080923AC: .4byte 0x03001222
_080923B0: .4byte 0x080A8CDC
_080923B4: .4byte 0x080A8D3C
_080923B8: .4byte 0x00000F64
_080923BC: .4byte 0x00000F6C
_080923C0:
	str r0, [sp]
	ldr r1, _080923E0 @ =0x040000D4
	mov r5, sp
	str r5, [r1]
	movs r2, #0x87
	lsls r2, r2, #2
	adds r0, r3, r2
	str r0, [r1, #4]
	ldr r0, _080923E4 @ =0x850000B4
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r5, #0x85
	lsls r5, r5, #2
	adds r1, r3, r5
	movs r0, #2
	b _0809247E
	.align 2, 0
_080923E0: .4byte 0x040000D4
_080923E4: .4byte 0x850000B4
_080923E8:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r3, r0
	ldrh r0, [r1]
	cmp r0, #1
	bne _08092480
	movs r0, #0
	strh r0, [r1]
	ldr r4, _08092414 @ =0x03001220
	ldrh r0, [r4]
	cmp r0, #0xf
	bhi _0809241C
	cmp r0, #0
	bne _0809240C
	ldr r0, _08092418 @ =0x000001EB
	movs r1, #0
	bl unk_2ad4
_0809240C:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _08092480
	.align 2, 0
_08092414: .4byte 0x03001220
_08092418: .4byte 0x000001EB
_0809241C:
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #3
	b _0809247E
_08092426:
	movs r5, #0x84
	lsls r5, r5, #2
	adds r1, r3, r5
	ldrh r0, [r1]
	cmp r0, #0x28
	bne _08092480
	movs r2, #0
	strh r2, [r1]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #4
	strb r0, [r1]
	ldr r0, _08092448 @ =gWrittenToBldy
	strh r2, [r0]
	b _08092480
	.align 2, 0
_08092448: .4byte gWrittenToBldy
_0809244C:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #0
	strh r0, [r1]
	movs r5, #0x85
	lsls r5, r5, #2
	adds r1, r3, r5
	movs r0, #5
	b _0809247E
_08092460:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r3, r0
	ldrh r0, [r1]
	cmp r0, #1
	bne _08092480
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0809248C @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #6
_0809247E:
	strb r0, [r1]
_08092480:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _080924C2
	.align 2, 0
_0809248C: .4byte 0x04000050
_08092490:
	ldr r1, _080924A0 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _080924A4
	adds r0, #2
	strh r0, [r1]
	b _080924BA
	.align 2, 0
_080924A0: .4byte gWrittenToBldy
_080924A4:
	movs r5, #0x84
	lsls r5, r5, #2
	adds r1, r3, r5
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r3, r1
	strb r2, [r0]
	movs r7, #1
_080924BA:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_080924C2:
	bl IntroProcessText
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start IntroShipAlertInit
IntroShipAlertInit: @ 0x080924D0
	push {r4, r5, lr}
	sub sp, #4
	ldr r3, _080926A0 @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _080926A4 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _080926A8 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _080926AC @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _080926B0 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _080926B4 @ =unk_99940
	bl CallbackSetVBlank
	movs r0, #0
	str r0, [sp]
	ldr r1, _080926B8 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r0, _080926BC @ =0x030016A0
	str r0, [r1, #4]
	ldr r0, _080926C0 @ =0x850000B4
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r4, #0
	ldr r5, _080926C4 @ =0x0879C45C
_08092510:
	lsls r0, r4, #2
	adds r0, r0, r5
	ldr r0, [r0]
	lsls r1, r4, #0xc
	ldr r2, _080926C8 @ =0x06010000
	adds r1, r1, r2
	bl LZ77UncompVram
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #5
	bls _08092510
	ldr r1, _080926B8 @ =0x040000D4
	ldr r0, _080926CC @ =0x0865C268
	str r0, [r1]
	ldr r0, _080926D0 @ =0x05000200
	str r0, [r1, #4]
	ldr r0, _080926D4 @ =0x84000080
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r4, #0
	ldr r5, _080926D8 @ =0x0879C448
_0809253E:
	lsls r0, r4, #2
	adds r0, r0, r5
	ldr r0, [r0]
	lsls r1, r4, #0xc
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r1, r1, r3
	bl LZ77UncompVram
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #4
	bls _0809253E
	ldr r0, _080926DC @ =0x086593E4
	ldr r1, _080926E0 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _080926E4 @ =0x08598898
	ldr r1, _080926E8 @ =0x0600E000
	bl LZ77UncompVram
	ldr r4, _080926B8 @ =0x040000D4
	ldr r0, _080926EC @ =0x086599A4
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _080926F0 @ =0x84000040
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080926F4 @ =0x04000010
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r0, _080926F8 @ =0x0300122C
	strh r1, [r0]
	ldr r0, _080926FC @ =0x0300122E
	strh r1, [r0]
	ldr r0, _08092700 @ =0x03001230
	strh r1, [r0]
	ldr r0, _08092704 @ =0x03001232
	strh r1, [r0]
	ldr r2, _08092708 @ =0x04000008
	ldr r3, _0809270C @ =0x00001C08
	adds r0, r3, #0
	strh r0, [r2]
	adds r2, #2
	ldr r3, _08092710 @ =0x00001E01
	adds r0, r3, #0
	strh r0, [r2]
	adds r2, #2
	ldr r3, _08092714 @ =0x00001F02
	adds r0, r3, #0
	strh r0, [r2]
	adds r2, #0x44
	movs r0, #0xff
	strh r0, [r2]
	ldr r0, _08092718 @ =gWrittenToBldy
	movs r2, #0x10
	strh r2, [r0]
	ldr r0, _0809271C @ =0x04000054
	strh r2, [r0]
	ldr r2, _08092720 @ =0x03001220
	ldr r0, _08092724 @ =0x03001222
	strh r1, [r0]
	strh r1, [r2]
	ldr r0, _08092728 @ =0x04000052
	movs r5, #0
	strh r5, [r0]
	movs r0, #0x13
	movs r1, #0x60
	movs r2, #0x80
	movs r3, #0
	bl IntroSetupOam
	movs r0, #0x14
	movs r1, #0x80
	movs r2, #0x60
	movs r3, #0
	bl IntroSetupOam
	movs r0, #0x15
	movs r1, #0x80
	movs r2, #0x80
	movs r3, #0
	bl IntroSetupOam
	movs r0, #0x16
	movs r1, #0xc8
	movs r2, #0x26
	movs r3, #0
	bl IntroSetupOam
	movs r0, #0x17
	movs r1, #0xd2
	movs r2, #0x58
	movs r3, #0
	bl IntroSetupOam
	movs r0, #0x18
	movs r1, #0xd2
	movs r2, #0x58
	movs r3, #0xd2
	bl IntroSetupBigNumberOam
	movs r0, #0x19
	movs r1, #0x43
	movs r2, #0x97
	movs r3, #0xc8
	bl IntroSetupBigNumberOam
	movs r0, #0x1a
	movs r1, #0x2c
	movs r2, #0x98
	movs r3, #0xc8
	bl IntroSetupBigNumberOam
	movs r0, #0x1b
	movs r1, #0x25
	movs r2, #0x98
	movs r3, #0xc8
	bl IntroSetupBigNumberOam
	movs r0, #0x1c
	movs r1, #0x45
	movs r2, #0x7d
	movs r3, #0xc8
	bl IntroSetupBigNumberOam
	movs r0, #0x1d
	movs r1, #0x3e
	movs r2, #0x7d
	movs r3, #0xc8
	bl IntroSetupBigNumberOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r1, _0809272C @ =gNonGameplayRam
	ldr r0, _08092730 @ =0x0863A19C
	str r0, [r1]
	str r5, [sp]
	mov r0, sp
	str r0, [r4]
	ldr r0, _08092734 @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _08092738 @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0x98
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _0809273C @ =IntroShipAlertAndDraftingVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080926A0: .4byte 0x04000208
_080926A4: .4byte 0x04000004
_080926A8: .4byte 0x0000FFEF
_080926AC: .4byte 0x04000200
_080926B0: .4byte 0x0000FFFD
_080926B4: .4byte unk_99940
_080926B8: .4byte 0x040000D4
_080926BC: .4byte 0x030016A0
_080926C0: .4byte 0x850000B4
_080926C4: .4byte 0x0879C45C
_080926C8: .4byte 0x06010000
_080926CC: .4byte 0x0865C268
_080926D0: .4byte 0x05000200
_080926D4: .4byte 0x84000080
_080926D8: .4byte 0x0879C448
_080926DC: .4byte 0x086593E4
_080926E0: .4byte 0x0600F000
_080926E4: .4byte 0x08598898
_080926E8: .4byte 0x0600E000
_080926EC: .4byte 0x086599A4
_080926F0: .4byte 0x84000040
_080926F4: .4byte 0x04000010
_080926F8: .4byte 0x0300122C
_080926FC: .4byte 0x0300122E
_08092700: .4byte 0x03001230
_08092704: .4byte 0x03001232
_08092708: .4byte 0x04000008
_0809270C: .4byte 0x00001C08
_08092710: .4byte 0x00001E01
_08092714: .4byte 0x00001F02
_08092718: .4byte gWrittenToBldy
_0809271C: .4byte 0x04000054
_08092720: .4byte 0x03001220
_08092724: .4byte 0x03001222
_08092728: .4byte 0x04000052
_0809272C: .4byte gNonGameplayRam
_08092730: .4byte 0x0863A19C
_08092734: .4byte 0x0600D000
_08092738: .4byte 0x85000400
_0809273C: .4byte IntroShipAlertAndDraftingVblank

	thumb_func_start IntroShipAlertProcess
IntroShipAlertProcess: @ 0x08092740
	push {r4, r5, r6, r7, lr}
	movs r7, #0
	ldr r1, _08092768 @ =gNonGameplayRam
	movs r0, #0x84
	lsls r0, r0, #2
	adds r5, r1, r0
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r6, r1, r2
	ldrb r1, [r6]
	cmp r1, #1
	beq _0809277E
	cmp r1, #1
	bgt _0809276C
	cmp r1, #0
	beq _08092776
	b _08092824
	.align 2, 0
_08092768: .4byte gNonGameplayRam
_0809276C:
	cmp r1, #2
	beq _08092798
	cmp r1, #3
	beq _080927D4
	b _08092824
_08092776:
	bl IntroShipAlertInit
	movs r0, #1
	b _08092792
_0809277E:
	ldr r1, _0809278C @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _08092790
	subs r0, #2
	strh r0, [r1]
	b _080927C4
	.align 2, 0
_0809278C: .4byte gWrittenToBldy
_08092790:
	movs r0, #2
_08092792:
	strb r0, [r6]
	strh r7, [r5]
	b _080927C4
_08092798:
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _080927A8 @ =0x0000018F
	cmp r1, r0
	bne _080927B0
	ldr r0, _080927AC @ =gWrittenToBldy
	strh r7, [r0]
	b _080927C4
	.align 2, 0
_080927A8: .4byte 0x0000018F
_080927AC: .4byte gWrittenToBldy
_080927B0:
	movs r0, #0xc8
	lsls r0, r0, #1
	cmp r1, r0
	bne _080927C4
	strh r7, [r5]
	ldr r0, _080927D0 @ =0x04000050
	movs r1, #0xff
	strh r1, [r0]
	movs r0, #3
	strb r0, [r6]
_080927C4:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _08092824
	.align 2, 0
_080927D0: .4byte 0x04000050
_080927D4:
	ldr r4, _08092804 @ =gWrittenToBldy
	ldrh r0, [r4]
	cmp r0, #0xf
	bhi _08092814
	cmp r0, #0
	bne _080927FA
	ldr r2, _08092808 @ =0x080A8CDC
	ldr r0, _0809280C @ =0x080A8D3C
	ldr r1, _08092810 @ =0x00000F5C
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	movs r1, #0xa
	bl ApplyMusicSoundFading
_080927FA:
	ldrh r0, [r4]
	adds r0, #2
	strh r0, [r4]
	b _0809281C
	.align 2, 0
_08092804: .4byte gWrittenToBldy
_08092808: .4byte 0x080A8CDC
_0809280C: .4byte 0x080A8D3C
_08092810: .4byte 0x00000F5C
_08092814:
	movs r0, #0
	strb r0, [r6]
	strh r7, [r5]
	movs r7, #1
_0809281C:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_08092824:
	bl IntroProcessText
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start IntroSamusDriftingOutInit
IntroSamusDriftingOutInit: @ 0x08092830
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	ldr r3, _08092968 @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _0809296C @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _08092970 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08092974 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _08092978 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0809297C @ =unk_99940
	bl CallbackSetVBlank
	movs r4, #0
	str r4, [sp]
	ldr r5, _08092980 @ =0x040000D4
	mov r0, sp
	str r0, [r5]
	ldr r1, _08092984 @ =0x030016A0
	mov r8, r1
	str r1, [r5, #4]
	ldr r0, _08092988 @ =0x850000B4
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	ldr r0, _0809298C @ =0x086101B8
	ldr r1, _08092990 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _08092994 @ =0x08612F48
	str r0, [r5]
	ldr r0, _08092998 @ =0x05000200
	str r0, [r5, #4]
	ldr r6, _0809299C @ =0x84000080
	str r6, [r5, #8]
	ldr r0, [r5, #8]
	ldr r0, _080929A0 @ =0x08605D08
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _080929A4 @ =0x08609220
	ldr r1, _080929A8 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _080929AC @ =0x08598898
	ldr r1, _080929B0 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _080929B4 @ =0x08609020
	str r0, [r5]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r5, #4]
	str r6, [r5, #8]
	ldr r1, [r5, #8]
	strh r4, [r0]
	ldr r0, _080929B8 @ =0x04000010
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, _080929BC @ =0x0300122C
	strh r4, [r0]
	ldr r0, _080929C0 @ =0x0300122E
	strh r4, [r0]
	ldr r0, _080929C4 @ =0x03001230
	strh r4, [r0]
	ldr r0, _080929C8 @ =0x03001232
	strh r4, [r0]
	ldr r1, _080929CC @ =0x04000008
	ldr r2, _080929D0 @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #6
	ldr r2, _080929D4 @ =0x00001F03
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x42
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _080929D8 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _080929DC @ =0x04000054
	strh r1, [r0]
	ldr r1, _080929E0 @ =0x03001220
	ldr r0, _080929E4 @ =0x03001222
	strh r4, [r0]
	strh r4, [r1]
	ldr r0, _080929E8 @ =0x04000052
	strh r4, [r0]
	movs r0, #0xa
	movs r1, #0x91
	movs r2, #0x8c
	movs r3, #0
	bl IntroSetupOam
	movs r0, #0xb
	movs r1, #0x8c
	movs r2, #0x50
	movs r3, #0
	bl IntroSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _080929EC @ =0xFFFFFDE4
	add r8, r0
	ldr r0, _080929F0 @ =0x0863A19C
	mov r1, r8
	str r0, [r1]
	str r4, [sp]
	mov r2, sp
	str r2, [r5]
	ldr r0, _080929F4 @ =0x0600D000
	str r0, [r5, #4]
	ldr r0, _080929F8 @ =0x85000400
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xc0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _080929FC @ =IntroShipAlertAndDraftingVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08092968: .4byte 0x04000208
_0809296C: .4byte 0x04000004
_08092970: .4byte 0x0000FFEF
_08092974: .4byte 0x04000200
_08092978: .4byte 0x0000FFFD
_0809297C: .4byte unk_99940
_08092980: .4byte 0x040000D4
_08092984: .4byte 0x030016A0
_08092988: .4byte 0x850000B4
_0809298C: .4byte 0x086101B8
_08092990: .4byte 0x06010000
_08092994: .4byte 0x08612F48
_08092998: .4byte 0x05000200
_0809299C: .4byte 0x84000080
_080929A0: .4byte 0x08605D08
_080929A4: .4byte 0x08609220
_080929A8: .4byte 0x0600F800
_080929AC: .4byte 0x08598898
_080929B0: .4byte 0x0600E000
_080929B4: .4byte 0x08609020
_080929B8: .4byte 0x04000010
_080929BC: .4byte 0x0300122C
_080929C0: .4byte 0x0300122E
_080929C4: .4byte 0x03001230
_080929C8: .4byte 0x03001232
_080929CC: .4byte 0x04000008
_080929D0: .4byte 0x00001C08
_080929D4: .4byte 0x00001F03
_080929D8: .4byte gWrittenToBldy
_080929DC: .4byte 0x04000054
_080929E0: .4byte 0x03001220
_080929E4: .4byte 0x03001222
_080929E8: .4byte 0x04000052
_080929EC: .4byte 0xFFFFFDE4
_080929F0: .4byte 0x0863A19C
_080929F4: .4byte 0x0600D000
_080929F8: .4byte 0x85000400
_080929FC: .4byte IntroShipAlertAndDraftingVblank

	thumb_func_start IntroSamusDriftingOutProcess
IntroSamusDriftingOutProcess: @ 0x08092A00
	push {r4, r5, r6, lr}
	movs r6, #0
	ldr r2, _08092A2C @ =gNonGameplayRam
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrb r0, [r0]
	adds r4, r2, #0
	cmp r0, #4
	bls _08092A22
	b _08092BE6
_08092A22:
	lsls r0, r0, #2
	ldr r1, _08092A30 @ =_08092A34
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08092A2C: .4byte gNonGameplayRam
_08092A30: .4byte _08092A34
_08092A34: @ jump table
	.4byte _08092A48 @ case 0
	.4byte _08092A68 @ case 1
	.4byte _08092AC4 @ case 2
	.4byte _08092B10 @ case 3
	.4byte _08092B7C @ case 4
_08092A48:
	bl IntroSamusDriftingOutInit
	ldr r3, _08092A64 @ =gNonGameplayRam
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r3, r1
	strh r2, [r0]
	b _08092B64
	.align 2, 0
_08092A64: .4byte gNonGameplayRam
_08092A68:
	ldr r5, _08092A90 @ =gWrittenToBldy
	ldrh r2, [r5]
	cmp r2, #0
	beq _08092A98
	cmp r2, #0x10
	bne _08092A86
	movs r0, #0xf6
	lsls r0, r0, #1
	movs r1, #0
	bl unk_2ad4
	ldr r0, _08092A94 @ =0x000001ED
	movs r1, #0
	bl unk_2ad4
_08092A86:
	ldrh r0, [r5]
	subs r0, #2
	strh r0, [r5]
	b _08092AAA
	.align 2, 0
_08092A90: .4byte gWrittenToBldy
_08092A94: .4byte 0x000001ED
_08092A98:
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #2
	strb r1, [r0]
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r4, r1
	strh r2, [r0]
_08092AAA:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	blt _08092B64
	ldr r0, _08092ABC @ =gNonGameplayRam
	ldr r1, _08092AC0 @ =0x00000215
	adds r0, r0, r1
	b _08092AE6
	.align 2, 0
_08092ABC: .4byte gNonGameplayRam
_08092AC0: .4byte 0x00000215
_08092AC4:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r4, r1
	ldrh r0, [r0]
	cmp r0, #0x8c
	bne _08092AD8
	movs r0, #0x49
	movs r1, #0xf
	bl PlayMusic
_08092AD8:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	blt _08092B64
	ldr r1, _08092B0C @ =0x00000215
	adds r0, r4, r1
_08092AE6:
	ldrb r0, [r0]
	cmp r0, #9
	bhi _08092B64
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	bl SpecialCutsceneGetRandomNumber
	adds r2, r0, #0
	lsls r2, r2, #0x18
	adds r1, r4, #0
	lsrs r2, r2, #0x18
	movs r0, #0x10
	movs r3, #1
	bl IntroSetupOam
	b _08092B64
	.align 2, 0
_08092B0C: .4byte 0x00000215
_08092B10:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	blt _08092B42
	ldr r0, _08092B70 @ =gNonGameplayRam
	ldr r1, _08092B74 @ =0x00000215
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #9
	bhi _08092B42
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	bl SpecialCutsceneGetRandomNumber
	adds r2, r0, #0
	lsls r2, r2, #0x18
	adds r1, r4, #0
	lsrs r2, r2, #0x18
	movs r0, #0x10
	movs r3, #1
	bl IntroSetupOam
_08092B42:
	ldr r2, _08092B70 @ =gNonGameplayRam
	movs r0, #0x84
	lsls r0, r0, #2
	adds r3, r2, r0
	ldrh r0, [r3]
	cmp r0, #1
	bne _08092B64
	ldr r1, _08092B78 @ =0x04000050
	movs r0, #0xbf
	strh r0, [r1]
	movs r0, #0
	strh r0, [r3]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r2, r0
	movs r0, #4
	strb r0, [r1]
_08092B64:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _08092BE6
	.align 2, 0
_08092B70: .4byte gNonGameplayRam
_08092B74: .4byte 0x00000215
_08092B78: .4byte 0x04000050
_08092B7C:
	ldr r5, _08092BBC @ =gWrittenToBldy
	ldrh r1, [r5]
	cmp r1, #0xf
	bhi _08092BCC
	movs r0, #0x84
	lsls r0, r0, #2
	adds r2, r4, r0
	ldrh r0, [r2]
	cmp r0, #3
	bne _08092BDE
	movs r0, #0
	strh r0, [r2]
	cmp r1, #0
	bne _08092BB2
	ldr r2, _08092BC0 @ =0x080A8CDC
	ldr r0, _08092BC4 @ =0x080A8D3C
	ldr r1, _08092BC8 @ =0x00000F64
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	movs r1, #0x1e
	bl ApplyMusicSoundFading
_08092BB2:
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _08092BDE
	.align 2, 0
_08092BBC: .4byte gWrittenToBldy
_08092BC0: .4byte 0x080A8CDC
_08092BC4: .4byte 0x080A8D3C
_08092BC8: .4byte 0x00000F64
_08092BCC:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrh r0, [r1]
	cmp r0, #8
	bne _08092BDE
	movs r0, #0
	strh r0, [r1]
	movs r6, #1
_08092BDE:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_08092BE6:
	bl IntroProcessText
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start IntroSamusShipCrashing
IntroSamusShipCrashing: @ 0x08092BF4
	push {r4, lr}
	movs r4, #0
	ldr r0, _08092C10 @ =gNonGameplayRam
	ldrh r1, [r0, #8]
	adds r2, r0, #0
	cmp r1, #5
	bls _08092C04
	b _08092D02
_08092C04:
	lsls r0, r1, #2
	ldr r1, _08092C14 @ =_08092C18
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08092C10: .4byte gNonGameplayRam
_08092C14: .4byte _08092C18
_08092C18: @ jump table
	.4byte _08092C30 @ case 0
	.4byte _08092C44 @ case 1
	.4byte _08092C66 @ case 2
	.4byte _08092C90 @ case 3
	.4byte _08092CB8 @ case 4
	.4byte _08092CE0 @ case 5
_08092C30:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r1, _08092C40 @ =gNonGameplayRam
	movs r0, #2
	strh r0, [r1, #8]
	b _08092D02
	.align 2, 0
_08092C40: .4byte gNonGameplayRam
_08092C44:
	ldr r1, _08092C54 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _08092C58
	subs r0, #1
	strh r0, [r1]
	b _08092C5C
	.align 2, 0
_08092C54: .4byte gWrittenToBldy
_08092C58:
	movs r0, #2
	strh r0, [r2, #8]
_08092C5C:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _08092D02
_08092C66:
	bl IntroSamusInShipProcess
	cmp r0, #0
	beq _08092D02
	ldr r1, _08092C88 @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r1, r2
	movs r2, #0
	strb r2, [r0]
	ldr r3, _08092C8C @ =0x00000213
	adds r0, r1, r3
	strb r2, [r0]
	movs r0, #3
	strh r0, [r1, #8]
	b _08092D02
	.align 2, 0
_08092C88: .4byte gNonGameplayRam
_08092C8C: .4byte 0x00000213
_08092C90:
	bl IntroShipAlertProcess
	cmp r0, #0
	beq _08092D02
	ldr r1, _08092CB0 @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r1, r2
	movs r2, #0
	strb r2, [r0]
	ldr r3, _08092CB4 @ =0x00000213
	adds r0, r1, r3
	strb r2, [r0]
	movs r0, #4
	strh r0, [r1, #8]
	b _08092D02
	.align 2, 0
_08092CB0: .4byte gNonGameplayRam
_08092CB4: .4byte 0x00000213
_08092CB8:
	bl IntroSamusDriftingOutProcess
	cmp r0, #0
	beq _08092D02
	ldr r1, _08092CD8 @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r1, r2
	movs r2, #0
	strb r2, [r0]
	ldr r3, _08092CDC @ =0x00000213
	adds r0, r1, r3
	strb r2, [r0]
	movs r0, #5
	strh r0, [r1, #8]
	b _08092D02
	.align 2, 0
_08092CD8: .4byte gNonGameplayRam
_08092CDC: .4byte 0x00000213
_08092CE0:
	ldr r1, _08092CF0 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _08092CF4
	adds r0, #1
	strh r0, [r1]
	b _08092CFA
	.align 2, 0
_08092CF0: .4byte gWrittenToBldy
_08092CF4:
	movs r0, #0
	strh r0, [r2, #8]
	movs r4, #1
_08092CFA:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_08092D02:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start unk_92d0c
unk_92d0c: @ 0x08092D0C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r4, _08092D68 @ =sRandomNumberTable
	ldr r2, _08092D6C @ =gFrameCounter16Bit
	ldrh r1, [r2]
	movs r3, #0x1f
	adds r0, r3, #0
	ands r0, r1
	adds r0, r0, r4
	ldrb r0, [r0]
	lsrs r6, r0, #2
	ldrh r0, [r2]
	adds r0, #7
	ands r0, r3
	adds r0, r0, r4
	ldrb r0, [r0]
	lsrs r2, r0, #2
	adds r3, r2, #0
	movs r0, #8
	ldrsh r1, [r5, r0]
	cmp r1, #0
	bne _08092D70
	ldrb r0, [r5, #0x13]
	adds r0, #1
	strb r0, [r5, #0x13]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08092D98
	strb r1, [r5, #0x13]
	ldrh r1, [r5, #0xe]
	movs r3, #0xe
	ldrsh r0, [r5, r3]
	cmp r0, #0xf
	bgt _08092D98
	adds r0, r1, r2
	strh r0, [r5, #0xe]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	ble _08092D98
	movs r0, #0x10
	strh r0, [r5, #0xe]
	movs r0, #1
	strh r0, [r5, #8]
	b _08092D98
	.align 2, 0
_08092D68: .4byte sRandomNumberTable
_08092D6C: .4byte gFrameCounter16Bit
_08092D70:
	ldrb r0, [r5, #0x13]
	adds r0, #1
	movs r2, #0
	strb r0, [r5, #0x13]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08092D98
	strb r2, [r5, #0x13]
	ldrh r1, [r5, #0xe]
	movs r4, #0xe
	ldrsh r0, [r5, r4]
	cmp r0, #0
	ble _08092D98
	subs r0, r1, r3
	strh r0, [r5, #0xe]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _08092D98
	strh r2, [r5, #0xe]
	strh r2, [r5, #8]
_08092D98:
	movs r0, #4
	ldrsh r1, [r5, r0]
	cmp r1, #0
	bne _08092DCE
	ldrh r0, [r5, #0xa]
	adds r0, #1
	strh r0, [r5, #0xa]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08092DF6
	strh r1, [r5, #0xa]
	ldrh r1, [r5, #0xc]
	movs r2, #0xc
	ldrsh r0, [r5, r2]
	cmp r0, #0xf
	bgt _08092DF6
	adds r0, r1, r6
	strh r0, [r5, #0xc]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	ble _08092DF6
	movs r0, #0x10
	strh r0, [r5, #0xc]
	movs r0, #1
	strh r0, [r5, #4]
	b _08092DF6
_08092DCE:
	ldrh r0, [r5, #0xa]
	adds r0, #1
	movs r2, #0
	strh r0, [r5, #0xa]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08092DF6
	strh r2, [r5, #0xa]
	ldrh r1, [r5, #0xc]
	movs r3, #0xc
	ldrsh r0, [r5, r3]
	cmp r0, #0
	ble _08092DF6
	subs r0, r1, r6
	strh r0, [r5, #0xc]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _08092DF6
	strh r2, [r5, #0xc]
	strh r2, [r5, #4]
_08092DF6:
	ldr r1, _08092E40 @ =0x0300122C
	ldrh r0, [r5, #0xc]
	strh r0, [r1]
	ldr r1, _08092E44 @ =0x0300122E
	ldrh r0, [r5, #0xe]
	strh r0, [r1]
	ldr r0, _08092E48 @ =gNonGameplayRam
	movs r4, #0x85
	lsls r4, r4, #2
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #4
	bne _08092E3A
	ldrb r0, [r5, #0x15]
	adds r0, #1
	strb r0, [r5, #0x15]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _08092E3A
	movs r0, #0
	strb r0, [r5, #0x15]
	ldr r1, _08092E4C @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0
	beq _08092E2E
	subs r0, #1
	strh r0, [r1]
_08092E2E:
	ldr r1, _08092E50 @ =0x03001222
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _08092E3A
	adds r0, #1
	strh r0, [r1]
_08092E3A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08092E40: .4byte 0x0300122C
_08092E44: .4byte 0x0300122E
_08092E48: .4byte gNonGameplayRam
_08092E4C: .4byte 0x03001220
_08092E50: .4byte 0x03001222

	thumb_func_start IntroProcessDriftingShip
IntroProcessDriftingShip: @ 0x08092E54
	push {r4, r5, lr}
	adds r3, r0, #0
	ldrh r0, [r3, #0xa]
	adds r1, r0, #1
	movs r5, #0
	movs r4, #0
	strh r1, [r3, #0xa]
	ldrb r0, [r3, #0x14]
	cmp r0, #0
	bne _08092E78
	strh r0, [r3, #0xa]
	ldrh r0, [r3, #0xc]
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	strh r0, [r3, #2]
	movs r0, #1
	strb r0, [r3, #0x14]
	b _080930BA
_08092E78:
	cmp r0, #1
	bne _08092F00
	ldrb r1, [r3, #0x13]
	adds r1, #1
	strb r1, [r3, #0x13]
	ldr r2, _08092EFC @ =0x080A4FA4
	ldrb r0, [r3, #0x13]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x17
	ldrh r2, [r3, #2]
	adds r0, r0, r2
	strh r0, [r3, #0xe]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	cmp r1, #0x34
	bls _08092ED0
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc
	bne _08092EBA
	ldrb r0, [r3, #0x15]
	subs r0, #1
	strb r0, [r3, #0x15]
	ldrh r0, [r3, #0xc]
	subs r0, #1
	strh r0, [r3, #0xc]
	strh r4, [r3, #4]
_08092EBA:
	ldrh r0, [r3, #8]
	adds r0, #1
	strh r0, [r3, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xa
	bne _08092ED0
	strh r4, [r3, #8]
	ldrh r0, [r3, #6]
	subs r0, #1
	strh r0, [r3, #6]
_08092ED0:
	movs r0, #0x13
	ldrsb r0, [r3, r0]
	cmp r0, #0
	blt _08092EDA
	b _080930BA
_08092EDA:
	movs r1, #0
	movs r0, #0
	strh r0, [r3, #8]
	strh r0, [r3, #0xa]
	strh r0, [r3, #4]
	strb r1, [r3, #0x13]
	ldrh r0, [r3, #0xc]
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	strh r0, [r3, #2]
	movs r0, #2
	strb r0, [r3, #0x14]
	movs r0, #0xf9
	lsls r0, r0, #1
	bl SoundPlay
	b _080930BA
	.align 2, 0
_08092EFC: .4byte 0x080A4FA4
_08092F00:
	cmp r0, #2
	bne _08092F7C
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x12
	ldrh r0, [r3]
	subs r0, r0, r2
	strh r0, [r3, #0xc]
	lsrs r1, r1, #0x13
	ldrh r2, [r3, #2]
	subs r2, r2, r1
	ldr r1, _08092F78 @ =0x080A4FA4
	ldrb r0, [r3, #0x13]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x17
	adds r2, r2, r0
	strh r2, [r3, #0xe]
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc
	bne _08092F42
	ldrb r0, [r3, #0x15]
	subs r0, #1
	strb r0, [r3, #0x15]
	strh r4, [r3, #4]
_08092F42:
	ldrh r0, [r3, #8]
	adds r0, #1
	strh r0, [r3, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	bne _08092F58
	strh r4, [r3, #8]
	ldrh r0, [r3, #6]
	subs r0, #1
	strh r0, [r3, #6]
_08092F58:
	ldrb r0, [r3, #0x13]
	cmp r0, #0
	beq _08092F60
	b _080930BA
_08092F60:
	strh r4, [r3, #8]
	strh r4, [r3, #0xa]
	strh r4, [r3, #4]
	strb r5, [r3, #0x13]
	ldrh r0, [r3, #0xc]
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	strh r0, [r3, #2]
	movs r0, #3
	strb r0, [r3, #0x14]
	b _080930BA
	.align 2, 0
_08092F78: .4byte 0x080A4FA4
_08092F7C:
	cmp r0, #3
	bne _08092FE4
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x12
	ldrh r0, [r3]
	subs r0, r0, r2
	strh r0, [r3, #0xc]
	lsrs r1, r1, #0x13
	ldrh r0, [r3, #2]
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc
	bne _08092FAE
	ldrb r0, [r3, #0x15]
	subs r0, #1
	strb r0, [r3, #0x15]
	strh r4, [r3, #4]
_08092FAE:
	ldrh r0, [r3, #8]
	adds r0, #1
	strh r0, [r3, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _08092FC4
	strh r4, [r3, #8]
	ldrh r0, [r3, #6]
	subs r0, #1
	strh r0, [r3, #6]
_08092FC4:
	ldrb r0, [r3, #0x13]
	cmp r0, #0
	bne _08092FDE
	strh r4, [r3, #8]
	strh r4, [r3, #0xa]
	strh r4, [r3, #4]
	strb r5, [r3, #0x13]
	ldrh r0, [r3, #0xc]
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	strh r0, [r3, #2]
	movs r0, #4
	strb r0, [r3, #0x14]
_08092FDE:
	movs r1, #6
	ldrsh r0, [r3, r1]
	b _08093030
_08092FE4:
	cmp r0, #4
	bne _0809304A
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x11
	ldrh r0, [r3]
	subs r0, r0, r2
	strh r0, [r3, #0xc]
	lsrs r1, r1, #0x12
	ldrh r0, [r3, #2]
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	ldrh r0, [r3, #4]
	adds r0, #1
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc
	bne _08093016
	ldrb r0, [r3, #0x15]
	subs r0, #1
	strb r0, [r3, #0x15]
	strh r4, [r3, #4]
_08093016:
	ldrh r0, [r3, #8]
	adds r0, #1
	strh r0, [r3, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _0809302C
	strh r4, [r3, #8]
	ldrh r0, [r3, #6]
	subs r0, #1
	strh r0, [r3, #6]
_0809302C:
	movs r2, #6
	ldrsh r0, [r3, r2]
_08093030:
	cmp r0, #2
	bgt _080930BA
	strh r4, [r3, #8]
	strh r4, [r3, #0xa]
	strh r4, [r3, #4]
	strb r5, [r3, #0x13]
	ldrh r0, [r3, #0xc]
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	strh r0, [r3, #2]
	movs r0, #5
	strb r0, [r3, #0x14]
	b _080930BA
_0809304A:
	cmp r0, #5
	bne _08093094
	strh r4, [r3, #0xa]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r3, #6]
	strb r5, [r3, #0x12]
	strb r5, [r3, #0x11]
	ldrb r1, [r3, #0x18]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r3, #0x18]
	ldr r0, _08093088 @ =0x0860AD48
	str r0, [r3, #0x1c]
	movs r0, #6
	strb r0, [r3, #0x14]
	ldr r0, _0809308C @ =0x000001F3
	bl unk_3b1c
	ldr r1, _08093090 @ =gNonGameplayRam
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	strh r4, [r0]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r1, r0
	movs r0, #3
	strb r0, [r1]
	b _080930BA
	.align 2, 0
_08093088: .4byte 0x0860AD48
_0809308C: .4byte 0x000001F3
_08093090: .4byte gNonGameplayRam
_08093094:
	cmp r0, #6
	bne _080930BA
	ldrb r0, [r3, #0x11]
	lsls r0, r0, #3
	ldr r1, [r3, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r3, #0x12]
	cmp r0, r2
	bne _080930BA
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _080930BA
	strb r5, [r3, #0x10]
	ldrb r1, [r3, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r3, #0x18]
_080930BA:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start IntroProcessBslShipSpawning
IntroProcessBslShipSpawning: @ 0x080930C0
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrb r5, [r4, #0x14]
	cmp r5, #0
	bne _0809311C
	ldrh r1, [r4, #0xc]
	adds r1, #0x7a
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #0xc
	movs r3, #0
	bl IntroSetupOam
	ldrh r1, [r4, #0xc]
	adds r1, #0x32
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4, #0xe]
	adds r2, #1
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r0, #0xd
	movs r3, #0
	bl IntroSetupOam
	ldrh r1, [r4, #0xc]
	adds r1, #0x24
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #0xe
	movs r3, #0
	bl IntroSetupOam
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #0xf
	movs r3, #0
	bl IntroSetupOam
	strb r5, [r4, #0x10]
_0809311C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start IntroProcessBslShipBack
IntroProcessBslShipBack: @ 0x08093124
	push {r4, lr}
	adds r2, r0, #0
	ldrb r3, [r2, #0x14]
	cmp r3, #0
	bne _0809317E
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x14
	bne _080931F0
	ldrh r0, [r2]
	adds r0, #1
	movs r1, #0
	strh r0, [r2]
	strb r1, [r2, #0x13]
	ldrh r0, [r2, #0xa]
	cmp r0, #4
	bne _0809314E
	strh r3, [r2, #0xa]
_0809314E:
	ldrh r0, [r2, #0xa]
	adds r1, r0, #0
	adds r3, r0, #0
	cmp r1, #1
	bhi _0809315E
	ldrh r0, [r2, #0xe]
	adds r0, #1
	b _08093166
_0809315E:
	cmp r1, #3
	bhi _08093168
	ldrh r0, [r2, #0xe]
	subs r0, #1
_08093166:
	strh r0, [r2, #0xe]
_08093168:
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0x1e
	bne _08093178
	movs r1, #0
	movs r0, #1
	strb r0, [r2, #0x14]
	strb r1, [r2, #0x13]
_08093178:
	adds r0, r3, #1
	strh r0, [r2, #0xa]
	b _080931F0
_0809317E:
	cmp r3, #1
	bne _08093192
	ldrh r0, [r2, #0xc]
	movs r1, #0
	strh r0, [r2]
	ldrh r0, [r2, #0xe]
	strh r0, [r2, #2]
	strh r1, [r2, #0xa]
	movs r0, #2
	b _080931EE
_08093192:
	cmp r3, #2
	bne _080931F0
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _080931AE
	ldrh r0, [r2, #0xa]
	adds r0, #1
	movs r1, #0
	strh r0, [r2, #0xa]
	strb r1, [r2, #0x13]
_080931AE:
	movs r4, #0
	ldrsh r1, [r2, r4]
	movs r0, #0xe1
	lsls r0, r0, #2
	subs r0, r0, r1
	ldrh r1, [r2, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #0xc
	ldrh r1, [r2]
	adds r3, r0, r1
	strh r3, [r2, #0xc]
	movs r4, #4
	ldrsh r0, [r2, r4]
	movs r4, #2
	ldrsh r1, [r2, r4]
	subs r0, r0, r1
	ldrh r1, [r2, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #0xb
	ldrh r1, [r2, #2]
	adds r4, r0, r1
	strh r4, [r2, #0xe]
	lsls r1, r3, #0x10
	movs r0, #0xa0
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _080931F0
	movs r0, #0
	strh r0, [r2, #0xa]
	strh r3, [r2]
	strh r4, [r2, #2]
	movs r0, #3
_080931EE:
	strb r0, [r2, #0x14]
_080931F0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start IntroProcessDepthParticle
IntroProcessDepthParticle: @ 0x080931F8
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldrh r1, [r6, #0xa]
	strh r1, [r6, #4]
	ldrb r0, [r6, #0x14]
	cmp r0, #0
	bne _08093222
	movs r1, #0xc
	ldrsh r0, [r6, r1]
	subs r0, #0x78
	movs r1, #0x64
	muls r0, r1, r0
	strh r0, [r6]
	movs r2, #0xe
	ldrsh r0, [r6, r2]
	subs r0, #0x50
	muls r0, r1, r0
	strh r0, [r6, #2]
	movs r0, #1
	strb r0, [r6, #0x14]
	b _080932AE
_08093222:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x63
	bgt _080932A0
	cmp r0, #0x19
	bne _08093238
	ldr r0, _08093234 @ =0x0860AC18
	b _0809324A
	.align 2, 0
_08093234: .4byte 0x0860AC18
_08093238:
	cmp r0, #0x32
	bne _08093244
	ldr r0, _08093240 @ =0x0860AC28
	b _0809324A
	.align 2, 0
_08093240: .4byte 0x0860AC28
_08093244:
	cmp r0, #0x46
	bne _0809324C
	ldr r0, _0809329C @ =0x0860AC38
_0809324A:
	str r0, [r6, #0x1c]
_0809324C:
	movs r0, #4
	ldrsh r4, [r6, r0]
	rsbs r4, r4, #0
	adds r4, #0x64
	movs r1, #0
	ldrsh r0, [r6, r1]
	adds r1, r4, #0
	bl __divsi3
	adds r5, r0, #0
	adds r0, #0x78
	strh r0, [r6, #0xc]
	movs r2, #2
	ldrsh r0, [r6, r2]
	adds r1, r4, #0
	bl __divsi3
	adds r1, r0, #0
	adds r1, #0x50
	strh r1, [r6, #0xe]
	adds r5, #0x80
	lsls r5, r5, #0x10
	movs r0, #0x80
	lsls r0, r0, #0x11
	cmp r5, r0
	bhi _08093290
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0xa8
	bgt _08093290
	movs r0, #8
	rsbs r0, r0, #0
	cmp r1, r0
	bge _080932AE
_08093290:
	movs r0, #0
	strb r0, [r6, #0x10]
	ldrb r1, [r6, #0x18]
	subs r0, #2
	b _080932AA
	.align 2, 0
_0809329C: .4byte 0x0860AC38
_080932A0:
	movs r0, #0
	strb r0, [r6, #0x10]
	ldrb r1, [r6, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
_080932AA:
	ands r0, r1
	strb r0, [r6, #0x18]
_080932AE:
	ldrh r0, [r6, #0xa]
	adds r0, #1
	strh r0, [r6, #0xa]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start IntroProcessTimeAndDistanceOam
IntroProcessTimeAndDistanceOam: @ 0x080932BC
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _080932D6
	ldrb r5, [r4, #0x11]
	cmp r5, #1
	bne _080932D6
	movs r0, #0xf7
	lsls r0, r0, #1
	bl SoundPlay
	strb r5, [r4, #0x14]
_080932D6:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start IntroProcessAsteroidsPopUp
IntroProcessAsteroidsPopUp: @ 0x080932DC
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _080932F4
	ldrb r5, [r4, #0x11]
	cmp r5, #1
	bne _080932F4
	ldr r0, _080932FC @ =0x000001EF
	bl SoundPlay
	strb r5, [r4, #0x14]
_080932F4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080932FC: .4byte 0x000001EF

	thumb_func_start unk_93300
unk_93300: @ 0x08093300
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _0809332C
	ldrh r0, [r2, #0xa]
	adds r0, #1
	strh r0, [r2, #0xa]
	ldrh r1, [r2, #0xa]
	movs r3, #8
	ldrsh r0, [r2, r3]
	cmp r1, r0
	bne _0809332C
	ldrb r0, [r2, #0x18]
	movs r1, #1
	orrs r0, r1
	strb r0, [r2, #0x18]
	movs r0, #1
	strb r0, [r2, #0x14]
	ldr r0, _08093330 @ =0x000001F1
	bl SoundPlay
_0809332C:
	pop {r0}
	bx r0
	.align 2, 0
_08093330: .4byte 0x000001F1

	thumb_func_start unk_93334
unk_93334: @ 0x08093334
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x10]
	ldr r1, _08093374 @ =0x00FFFF00
	ands r0, r1
	ldr r1, _08093378 @ =0x00010100
	cmp r0, r1
	bne _0809334C
	movs r0, #0xf8
	lsls r0, r0, #1
	bl SoundPlay
_0809334C:
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #0x12]
	cmp r0, r2
	bne _0809336E
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0809336E
	strb r1, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
_0809336E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08093374: .4byte 0x00FFFF00
_08093378: .4byte 0x00010100

	thumb_func_start IntroOamProcessBigChangingNumber
IntroOamProcessBigChangingNumber: @ 0x0809337C
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _080933A2
	ldrh r0, [r2, #0xa]
	adds r0, #1
	strh r0, [r2, #0xa]
	ldrh r1, [r2, #0xa]
	movs r3, #8
	ldrsh r0, [r2, r3]
	cmp r1, r0
	bne _080933A2
	ldrb r0, [r2, #0x18]
	movs r1, #1
	orrs r0, r1
	strb r0, [r2, #0x18]
	movs r0, #1
	strb r0, [r2, #0x14]
_080933A2:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start IntroSetupOam
IntroSetupOam: @ 0x080933A8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sl, r2
	lsls r3, r3, #0x18
	cmp r3, #0
	bne _08093410
	movs r2, #0
	ldr r0, _0809340C @ =gNonGameplayRam
	movs r3, #0x8b
	lsls r3, r3, #2
	adds r1, r0, r3
	ldrb r1, [r1]
	mov r8, r0
	cmp r1, #0
	beq _080933FE
	mov r4, r8
_080933DE:
	lsls r0, r2, #0x18
	movs r1, #0x80
	lsls r1, r1, #0x11
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x13
	bgt _08093450
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _080933DE
_080933FE:
	lsls r0, r2, #0x18
	asrs r1, r0, #0x18
	mov ip, r0
	cmp r1, #0x13
	ble _08093458
	b _08093450
	.align 2, 0
_0809340C: .4byte gNonGameplayRam
_08093410:
	movs r2, #0x13
	ldr r0, _08093454 @ =gNonGameplayRam
	movs r3, #0x9b
	lsls r3, r3, #3
	adds r1, r0, r3
	ldrb r1, [r1]
	mov r8, r0
	cmp r1, #0
	beq _08093448
	mov r3, r8
	movs r4, #0x8b
	lsls r4, r4, #2
_08093428:
	lsls r0, r2, #0x18
	movs r1, #0xff
	lsls r1, r1, #0x18
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0
	blt _08093450
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _08093428
_08093448:
	lsls r0, r2, #0x18
	mov ip, r0
	cmp r0, #0
	bge _08093458
_08093450:
	movs r0, #0x14
	b _0809382E
	.align 2, 0
_08093454: .4byte gNonGameplayRam
_08093458:
	movs r0, #0
	str r0, [sp]
	ldr r2, _080934C0 @ =0x040000D4
	mov r3, sp
	str r3, [r2]
	mov r0, ip
	asrs r1, r0, #0x18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r4, r0, #2
	ldr r3, _080934C4 @ =0x030016A0
	adds r0, r4, r3
	str r0, [r2, #4]
	ldr r0, _080934C8 @ =0x85000009
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	ldr r1, _080934CC @ =0xFFFFFDE4
	adds r0, r3, r1
	adds r2, r4, r0
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r2, r1
	movs r7, #0
	mov r1, sb
	strh r1, [r0]
	ldr r1, _080934D0 @ =0x0000022A
	adds r0, r2, r1
	mov r1, sl
	strh r1, [r0]
	movs r1, #0x8b
	lsls r1, r1, #2
	adds r0, r2, r1
	strb r5, [r0]
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r6, r2, r0
	ldrb r1, [r6]
	movs r0, #1
	orrs r1, r0
	strb r1, [r6]
	cmp r5, #1
	bne _080934D8
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r6]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _080934D4 @ =unk_92d0c
	str r1, [r0]
	b _0809382A
	.align 2, 0
_080934C0: .4byte 0x040000D4
_080934C4: .4byte 0x030016A0
_080934C8: .4byte 0x85000009
_080934CC: .4byte 0xFFFFFDE4
_080934D0: .4byte 0x0000022A
_080934D4: .4byte unk_92d0c
_080934D8:
	cmp r5, #0xa
	bne _0809352C
	movs r1, #0x87
	lsls r1, r1, #2
	adds r0, r2, r1
	mov r1, sb
	strh r1, [r0]
	ldr r1, _0809351C @ =0x0000021E
	adds r0, r2, r1
	mov r1, sl
	strh r1, [r0]
	ldr r0, _08093520 @ =0x00000222
	adds r1, r2, r0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	ldrb r1, [r6]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r6]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08093524 @ =0x0860ACD0
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08093528 @ =IntroProcessDriftingShip
	str r1, [r0]
	b _0809382A
	.align 2, 0
_0809351C: .4byte 0x0000021E
_08093520: .4byte 0x00000222
_08093524: .4byte 0x0860ACD0
_08093528: .4byte IntroProcessDriftingShip
_0809352C:
	cmp r5, #0xb
	bne _08093558
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r6]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08093550 @ =0x0860ACD0
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08093554 @ =IntroProcessBslShipSpawning
	str r1, [r0]
	b _0809382A
	.align 2, 0
_08093550: .4byte 0x0860ACD0
_08093554: .4byte IntroProcessBslShipSpawning
_08093558:
	cmp r5, #0xc
	bne _08093578
	movs r0, #0x88
	lsls r0, r0, #2
	adds r1, r2, r0
	ldr r0, _08093570 @ =0x0000FFD8
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08093574 @ =0x0860AD28
	b _080935CE
	.align 2, 0
_08093570: .4byte 0x0000FFD8
_08093574: .4byte 0x0860AD28
_08093578:
	cmp r5, #0xd
	bne _08093598
	movs r0, #0x88
	lsls r0, r0, #2
	adds r1, r2, r0
	ldr r0, _08093590 @ =0x0000FFE2
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08093594 @ =0x0860AD18
	b _080935CE
	.align 2, 0
_08093590: .4byte 0x0000FFE2
_08093594: .4byte 0x0860AD18
_08093598:
	cmp r5, #0xe
	bne _080935B8
	movs r0, #0x88
	lsls r0, r0, #2
	adds r1, r2, r0
	ldr r0, _080935B0 @ =0x0000FFEC
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _080935B4 @ =0x0860AD08
	b _080935CE
	.align 2, 0
_080935B0: .4byte 0x0000FFEC
_080935B4: .4byte 0x0860AD08
_080935B8:
	cmp r5, #0xf
	bne _080935E8
	movs r0, #0x88
	lsls r0, r0, #2
	adds r1, r2, r0
	ldr r0, _080935DC @ =0x0000FFF6
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _080935E0 @ =0x0860ACF8
_080935CE:
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _080935E4 @ =IntroProcessBslShipBack
	str r1, [r0]
	b _0809382A
	.align 2, 0
_080935DC: .4byte 0x0000FFF6
_080935E0: .4byte 0x0860ACF8
_080935E4: .4byte IntroProcessBslShipBack
_080935E8:
	cmp r5, #0x10
	bne _0809360C
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08093604 @ =0x0860AC08
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08093608 @ =IntroProcessDepthParticle
	str r1, [r0]
	b _0809382A
	.align 2, 0
_08093604: .4byte 0x0860AC08
_08093608: .4byte IntroProcessDepthParticle
_0809360C:
	cmp r5, #0x13
	bne _08093630
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08093628 @ =0x0865BB38
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _0809362C @ =IntroProcessTimeAndDistanceOam
	str r1, [r0]
	b _0809382A
	.align 2, 0
_08093628: .4byte 0x0865BB38
_0809362C: .4byte IntroProcessTimeAndDistanceOam
_08093630:
	cmp r5, #0x14
	bne _0809364C
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08093648 @ =0x0865BD00
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	b _0809366E
	.align 2, 0
_08093648: .4byte 0x0865BD00
_0809364C:
	cmp r5, #0x15
	bne _0809367C
	mov r3, ip
	asrs r1, r3, #0x18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	movs r1, #0x8e
	lsls r1, r1, #2
	add r1, r8
	adds r1, r0, r1
	ldr r2, _08093674 @ =0x0865BD48
	str r2, [r1]
	movs r1, #0x8f
	lsls r1, r1, #2
	add r1, r8
	adds r0, r0, r1
_0809366E:
	ldr r1, _08093678 @ =unk_9397c
	str r1, [r0]
	b _0809382A
	.align 2, 0
_08093674: .4byte 0x0865BD48
_08093678: .4byte unk_9397c
_0809367C:
	cmp r5, #0x16
	bne _080936AC
	mov r0, ip
	asrs r1, r0, #0x18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	movs r1, #0x8e
	lsls r1, r1, #2
	add r1, r8
	adds r1, r0, r1
	ldr r2, _080936A4 @ =0x0865BD60
	str r2, [r1]
	movs r1, #0x8f
	lsls r1, r1, #2
	add r1, r8
	adds r0, r0, r1
	ldr r1, _080936A8 @ =IntroProcessAsteroidsPopUp
	str r1, [r0]
	b _0809382A
	.align 2, 0
_080936A4: .4byte 0x0865BD60
_080936A8: .4byte IntroProcessAsteroidsPopUp
_080936AC:
	cmp r5, #0x17
	bne _080936DC
	mov r3, ip
	asrs r1, r3, #0x18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	movs r1, #0x8e
	lsls r1, r1, #2
	add r1, r8
	adds r1, r0, r1
	ldr r2, _080936D4 @ =0x0865BE00
	str r2, [r1]
	movs r1, #0x8f
	lsls r1, r1, #2
	add r1, r8
	adds r0, r0, r1
	ldr r1, _080936D8 @ =unk_93334
	str r1, [r0]
	b _0809382A
	.align 2, 0
_080936D4: .4byte 0x0865BE00
_080936D8: .4byte unk_93334
_080936DC:
	cmp r5, #0x18
	bne _08093710
	mov r1, ip
	asrs r0, r1, #0x18
	lsls r2, r0, #3
	adds r2, r2, r0
	lsls r2, r2, #2
	mov r3, r8
	adds r1, r2, r3
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r1, r1, r0
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r2, r0
	ldr r1, _0809370C @ =0x0865BF10
	b _0809381C
	.align 2, 0
_0809370C: .4byte 0x0865BF10
_08093710:
	cmp r5, #0x19
	bne _08093754
	mov r1, ip
	asrs r0, r1, #0x18
	lsls r2, r0, #3
	adds r2, r2, r0
	lsls r2, r2, #2
	mov r3, r8
	adds r1, r2, r3
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r1, r1, r0
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r2, r0
	ldr r1, _0809374C @ =0x0865C0D0
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, r8
	adds r2, r2, r0
	ldr r0, _08093750 @ =unk_93300
	b _08093828
	.align 2, 0
_0809374C: .4byte 0x0865C0D0
_08093750: .4byte unk_93300
_08093754:
	cmp r5, #0x1a
	bne _08093788
	mov r1, ip
	asrs r0, r1, #0x18
	lsls r2, r0, #3
	adds r2, r2, r0
	lsls r2, r2, #2
	mov r3, r8
	adds r1, r2, r3
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r1, r1, r0
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r2, r0
	ldr r1, _08093784 @ =0x0865C128
	b _0809381C
	.align 2, 0
_08093784: .4byte 0x0865C128
_08093788:
	cmp r5, #0x1b
	bne _080937BC
	mov r1, ip
	asrs r0, r1, #0x18
	lsls r2, r0, #3
	adds r2, r2, r0
	lsls r2, r2, #2
	mov r3, r8
	adds r1, r2, r3
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r1, r1, r0
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r2, r0
	ldr r1, _080937B8 @ =0x0865C180
	b _0809381C
	.align 2, 0
_080937B8: .4byte 0x0865C180
_080937BC:
	cmp r5, #0x1c
	bne _080937F0
	mov r1, ip
	asrs r0, r1, #0x18
	lsls r2, r0, #3
	adds r2, r2, r0
	lsls r2, r2, #2
	mov r3, r8
	adds r1, r2, r3
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r1, r1, r0
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r2, r0
	ldr r1, _080937EC @ =0x0865C1D8
	b _0809381C
	.align 2, 0
_080937EC: .4byte 0x0865C1D8
_080937F0:
	cmp r5, #0x1d
	bne _0809382A
	mov r1, ip
	asrs r0, r1, #0x18
	lsls r2, r0, #3
	adds r2, r2, r0
	lsls r2, r2, #2
	mov r3, r8
	adds r1, r2, r3
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r1, r1, r0
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r2, r0
	ldr r1, _08093840 @ =0x0865C230
_0809381C:
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, r8
	adds r2, r2, r0
	ldr r0, _08093844 @ =IntroOamProcessBigChangingNumber
_08093828:
	str r0, [r2]
_0809382A:
	mov r1, ip
	lsrs r0, r1, #0x18
_0809382E:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08093840: .4byte 0x0865C230
_08093844: .4byte IntroOamProcessBigChangingNumber

	thumb_func_start IntroSetupBigNumberOam
IntroSetupBigNumberOam: @ 0x08093848
	push {r4, lr}
	adds r4, r3, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #0
	bl IntroSetupOam
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08093880 @ =gNonGameplayRam
	lsls r1, r0, #3
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	movs r0, #0x89
	lsls r0, r0, #2
	adds r1, r1, r0
	strh r4, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08093880: .4byte gNonGameplayRam

	thumb_func_start unk_93884
unk_93884: @ 0x08093884
	ldr r1, _080938D0 @ =0x040000D4
	ldr r0, _080938D4 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _080938D8 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _080938DC @ =0x04000052
	ldr r0, _080938E0 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _080938E4 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _080938E8 @ =0x04000054
	ldr r0, _080938EC @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x3c
	ldr r0, _080938F0 @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080938F4 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080938F8 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080938FC @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_080938D0: .4byte 0x040000D4
_080938D4: .4byte gOamData
_080938D8: .4byte 0x84000100
_080938DC: .4byte 0x04000052
_080938E0: .4byte 0x03001222
_080938E4: .4byte 0x03001220
_080938E8: .4byte 0x04000054
_080938EC: .4byte gWrittenToBldy
_080938F0: .4byte 0x0300122C
_080938F4: .4byte 0x0300122E
_080938F8: .4byte 0x03001230
_080938FC: .4byte 0x03001232

	thumb_func_start IntroShipAlertAndDraftingVblank
IntroShipAlertAndDraftingVblank: @ 0x08093900
	ldr r1, _0809394C @ =0x040000D4
	ldr r0, _08093950 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08093954 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _08093958 @ =0x04000052
	ldr r0, _0809395C @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08093960 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08093964 @ =0x04000054
	ldr r0, _08093968 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x3c
	ldr r0, _0809396C @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08093970 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08093974 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08093978 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_0809394C: .4byte 0x040000D4
_08093950: .4byte gOamData
_08093954: .4byte 0x84000100
_08093958: .4byte 0x04000052
_0809395C: .4byte 0x03001222
_08093960: .4byte 0x03001220
_08093964: .4byte 0x04000054
_08093968: .4byte gWrittenToBldy
_0809396C: .4byte 0x0300122C
_08093970: .4byte 0x0300122E
_08093974: .4byte 0x03001230
_08093978: .4byte 0x03001232

	thumb_func_start unk_9397c
unk_9397c: @ 0x0809397C
	bx lr
	.align 2, 0

	thumb_func_start IntroSpaceViewInit
IntroSpaceViewInit: @ 0x08093980
	push {r4, r5, r6, lr}
	sub sp, #8
	ldr r3, _08093B10 @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _08093B14 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _08093B18 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08093B1C @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _08093B20 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _08093B24 @ =unk_99940
	bl CallbackSetVBlank
	movs r0, #0x80
	lsls r0, r0, #0x11
	bl unk_24ec
	bl StopAllMusicsAndSounds
	movs r6, #0
	str r6, [sp]
	ldr r4, _08093B28 @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r0, _08093B2C @ =gNonGameplayRam
	str r0, [r4, #4]
	ldr r0, _08093B30 @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08093B34 @ =0x086101B8
	ldr r1, _08093B38 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _08093B3C @ =0x08612F48
	str r0, [r4]
	ldr r0, _08093B40 @ =0x05000200
	str r0, [r4, #4]
	ldr r0, _08093B44 @ =0x84000080
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08093B48 @ =0x0860BCA4
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _08093B4C @ =0x0860B670
	ldr r5, _08093B50 @ =0x02010000
	adds r1, r5, #0
	bl LZ77UncompWram
	str r5, [r4]
	ldr r0, _08093B54 @ =0x0600E800
	str r0, [r4, #4]
	ldr r0, _08093B58 @ =0x84000200
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	add r1, sp, #4
	ldr r2, _08093B5C @ =0x000001FF
	adds r0, r2, #0
	strh r0, [r1]
	str r1, [r4]
	ldr r0, _08093B60 @ =0x0600F000
	str r0, [r4, #4]
	ldr r0, _08093B64 @ =0x81000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08093B68 @ =0x0860B148
	ldr r1, _08093B6C @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _08093B70 @ =0x08612E48
	str r0, [r4]
	ldr r0, _08093B74 @ =0x05000100
	str r0, [r4, #4]
	ldr r0, _08093B78 @ =0x84000040
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	strh r6, [r0]
	ldr r0, _08093B7C @ =0x08598898
	ldr r1, _08093B80 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _08093B84 @ =0x04000010
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	ldr r0, _08093B88 @ =gBg1XPosition
	strh r6, [r0]
	ldr r0, _08093B8C @ =gBg1YPosition
	strh r6, [r0]
	ldr r0, _08093B90 @ =0x0300122C
	strh r6, [r0]
	ldr r0, _08093B94 @ =0x0300122E
	strh r6, [r0]
	ldr r0, _08093B98 @ =0x03001230
	strh r6, [r0]
	ldr r0, _08093B9C @ =0x03001232
	strh r6, [r0]
	ldr r1, _08093BA0 @ =0x04000008
	ldr r2, _08093BA4 @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	ldr r2, _08093BA8 @ =0x00005D02
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _08093BAC @ =0x00001F03
	adds r0, r2, #0
	strh r0, [r1]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #1
	bl IntroSpaceViewSetupOam
	movs r1, #0xf0
	rsbs r1, r1, #0
	movs r2, #0x6e
	rsbs r2, r2, #0
	movs r0, #2
	movs r3, #1
	bl IntroSpaceViewSetupOam
	movs r5, #0
_08093AA4:
	bl SpecialCutsceneGetRandomNumber
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl SpecialCutsceneGetRandomNumber
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #5
	adds r1, r4, #0
	movs r3, #1
	bl IntroSpaceViewSetupOam
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #9
	bls _08093AA4
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r1, _08093B2C @ =gNonGameplayRam
	ldr r0, _08093BB0 @ =0x0863A19C
	str r0, [r1]
	movs r0, #0
	str r0, [sp]
	ldr r1, _08093B28 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r0, _08093BB4 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _08093BB8 @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	subs r1, #0xd4
	movs r2, #0xe0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08093BBC @ =IntroSpaceViewVblank
	bl CallbackSetVBlank
	movs r0, #0x60
	movs r1, #0xf
	bl PlayMusic
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08093B10: .4byte 0x04000208
_08093B14: .4byte 0x04000004
_08093B18: .4byte 0x0000FFEF
_08093B1C: .4byte 0x04000200
_08093B20: .4byte 0x0000FFFD
_08093B24: .4byte unk_99940
_08093B28: .4byte 0x040000D4
_08093B2C: .4byte gNonGameplayRam
_08093B30: .4byte 0x85000150
_08093B34: .4byte 0x086101B8
_08093B38: .4byte 0x06010000
_08093B3C: .4byte 0x08612F48
_08093B40: .4byte 0x05000200
_08093B44: .4byte 0x84000080
_08093B48: .4byte 0x0860BCA4
_08093B4C: .4byte 0x0860B670
_08093B50: .4byte 0x02010000
_08093B54: .4byte 0x0600E800
_08093B58: .4byte 0x84000200
_08093B5C: .4byte 0x000001FF
_08093B60: .4byte 0x0600F000
_08093B64: .4byte 0x81000400
_08093B68: .4byte 0x0860B148
_08093B6C: .4byte 0x0600F800
_08093B70: .4byte 0x08612E48
_08093B74: .4byte 0x05000100
_08093B78: .4byte 0x84000040
_08093B7C: .4byte 0x08598898
_08093B80: .4byte 0x0600E000
_08093B84: .4byte 0x04000010
_08093B88: .4byte gBg1XPosition
_08093B8C: .4byte gBg1YPosition
_08093B90: .4byte 0x0300122C
_08093B94: .4byte 0x0300122E
_08093B98: .4byte 0x03001230
_08093B9C: .4byte 0x03001232
_08093BA0: .4byte 0x04000008
_08093BA4: .4byte 0x00001C08
_08093BA8: .4byte 0x00005D02
_08093BAC: .4byte 0x00001F03
_08093BB0: .4byte 0x0863A19C
_08093BB4: .4byte 0x0600D000
_08093BB8: .4byte 0x85000400
_08093BBC: .4byte IntroSpaceViewVblank

	thumb_func_start IntroSpaceViewPartProcess
IntroSpaceViewPartProcess: @ 0x08093BC0
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	movs r7, #0
	ldr r2, _08093BF0 @ =gNonGameplayRam
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r3, #0x85
	lsls r3, r3, #2
	adds r0, r2, r3
	ldrb r0, [r0]
	adds r4, r2, #0
	cmp r0, #7
	bls _08093BE4
	b _08093F38
_08093BE4:
	lsls r0, r0, #2
	ldr r1, _08093BF4 @ =_08093BF8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08093BF0: .4byte gNonGameplayRam
_08093BF4: .4byte _08093BF8
_08093BF8: @ jump table
	.4byte _08093C18 @ case 0
	.4byte _08093C7C @ case 1
	.4byte _08093CB8 @ case 2
	.4byte _08093CEC @ case 3
	.4byte _08093D54 @ case 4
	.4byte _08093D98 @ case 5
	.4byte _08093E5C @ case 6
	.4byte _08093F18 @ case 7
_08093C18:
	ldr r2, _08093C28 @ =gWrittenToBldy
	ldrh r0, [r2]
	adds r1, r0, #0
	cmp r1, #0
	beq _08093C2C
	subs r0, #1
	strh r0, [r2]
	b _08093C3E
	.align 2, 0
_08093C28: .4byte gWrittenToBldy
_08093C2C:
	movs r5, #0x84
	lsls r5, r5, #2
	adds r0, r4, r5
	strh r1, [r0]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #1
	strb r0, [r1]
_08093C3E:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3f
	bls _08093C4C
	b _08093F00
_08093C4C:
	ldr r0, _08093C74 @ =gNonGameplayRam
	ldr r1, _08093C78 @ =0x00000215
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0xd
	bls _08093C5A
	b _08093F00
_08093C5A:
	bl SpecialCutsceneGetRandomNumber
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl SpecialCutsceneGetRandomNumber
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #5
	adds r1, r4, #0
	b _08093D40
	.align 2, 0
_08093C74: .4byte gNonGameplayRam
_08093C78: .4byte 0x00000215
_08093C7C:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r4, r2
	ldrh r0, [r1]
	cmp r0, #0x1e
	bne _08093CA2
	movs r0, #0
	strh r0, [r1]
	movs r0, #4
	movs r1, #0x78
	movs r2, #0x4a
	movs r3, #0
	bl IntroSpaceViewSetupOam
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r4, r3
	movs r0, #2
	strb r0, [r1]
_08093CA2:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _08093CAE
	b _08093F00
_08093CAE:
	ldr r5, _08093CB4 @ =0x00000215
	adds r0, r4, r5
	b _08093D2A
	.align 2, 0
_08093CB4: .4byte 0x00000215
_08093CB8:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r2, r4, r0
	ldrh r1, [r2]
	subs r0, #0x30
	cmp r1, r0
	bne _08093CD4
	movs r0, #0
	strh r0, [r2]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r0, #3
	strb r0, [r1]
_08093CD4:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _08093CE0
	b _08093F00
_08093CE0:
	ldr r3, _08093CE8 @ =0x00000215
	adds r0, r4, r3
	b _08093D2A
	.align 2, 0
_08093CE8: .4byte 0x00000215
_08093CEC:
	movs r5, #0x84
	lsls r5, r5, #2
	adds r2, r4, r5
	ldrh r1, [r2]
	cmp r1, #0x1e
	bne _08093D04
	ldr r0, _08093D00 @ =0x000001E9
	bl SoundPlay
	b _08093D18
	.align 2, 0
_08093D00: .4byte 0x000001E9
_08093D04:
	ldr r0, _08093D48 @ =0x0000041A
	cmp r1, r0
	bne _08093D18
	movs r0, #0
	strh r0, [r2]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #5
	strb r0, [r1]
_08093D18:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _08093D24
	b _08093F00
_08093D24:
	ldr r0, _08093D4C @ =gNonGameplayRam
	ldr r1, _08093D50 @ =0x00000215
	adds r0, r0, r1
_08093D2A:
	ldrb r0, [r0]
	cmp r0, #0xb
	bls _08093D32
	b _08093F00
_08093D32:
	bl SpecialCutsceneGetRandomNumber
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #5
	movs r1, #0
_08093D40:
	movs r3, #1
	bl IntroSpaceViewSetupOam
	b _08093F00
	.align 2, 0
_08093D48: .4byte 0x0000041A
_08093D4C: .4byte gNonGameplayRam
_08093D50: .4byte 0x00000215
_08093D54:
	ldr r4, _08093D84 @ =gWrittenToBldy
	ldrh r0, [r4]
	cmp r0, #0xf
	bhi _08093D94
	cmp r0, #0
	bne _08093D7A
	ldr r2, _08093D88 @ =0x080A8CDC
	ldr r0, _08093D8C @ =0x080A8D3C
	ldr r3, _08093D90 @ =0x00000F5C
	adds r0, r0, r3
	ldrh r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	movs r1, #0xa
	bl ApplyMusicSoundFading
_08093D7A:
	ldrh r0, [r4]
	adds r0, #2
	strh r0, [r4]
	b _08093F00
	.align 2, 0
_08093D84: .4byte gWrittenToBldy
_08093D88: .4byte 0x080A8CDC
_08093D8C: .4byte 0x080A8D3C
_08093D90: .4byte 0x00000F5C
_08093D94:
	movs r7, #1
	b _08093F00
_08093D98:
	movs r5, #0x84
	lsls r5, r5, #2
	adds r3, r4, r5
	ldrh r0, [r3]
	cmp r0, #5
	bhi _08093DC4
	ldr r2, _08093DBC @ =0x0879C41C
	adds r1, r0, #0
	subs r1, #1
	lsls r0, r1, #2
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r1, r1, #0xc
	ldr r2, _08093DC0 @ =0x06008000
	adds r1, r1, r2
	bl LZ77UncompVram
	b _08093F00
	.align 2, 0
_08093DBC: .4byte 0x0879C41C
_08093DC0: .4byte 0x06008000
_08093DC4:
	cmp r0, #6
	bne _08093E28
	ldr r0, _08093E00 @ =0x08658BE0
	ldr r1, _08093E04 @ =0x0600E000
	bl LZ77UncompVram
	ldr r1, _08093E08 @ =0x040000D4
	ldr r0, _08093E0C @ =0x086591E4
	str r0, [r1]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08093E10 @ =0x84000040
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08093E14 @ =0x03001220
	movs r1, #0
	strh r1, [r0]
	ldr r2, _08093E18 @ =0x03001222
	movs r0, #0x10
	strh r0, [r2]
	ldr r0, _08093E1C @ =0x04000014
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r1, _08093E20 @ =0x0400000A
	ldr r3, _08093E24 @ =0x00001C08
	adds r0, r3, #0
	strh r0, [r1]
	b _08093F00
	.align 2, 0
_08093E00: .4byte 0x08658BE0
_08093E04: .4byte 0x0600E000
_08093E08: .4byte 0x040000D4
_08093E0C: .4byte 0x086591E4
_08093E10: .4byte 0x84000040
_08093E14: .4byte 0x03001220
_08093E18: .4byte 0x03001222
_08093E1C: .4byte 0x04000014
_08093E20: .4byte 0x0400000A
_08093E24: .4byte 0x00001C08
_08093E28:
	cmp r0, #7
	bne _08093F00
	ldr r1, _08093E54 @ =0x04000050
	ldr r5, _08093E58 @ =0x00003C42
	adds r0, r5, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r5, #0x80
	lsls r5, r5, #2
	adds r1, r5, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	strh r0, [r3]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #6
	strb r0, [r1]
	b _08093F00
	.align 2, 0
_08093E54: .4byte 0x04000050
_08093E58: .4byte 0x00003C42
_08093E5C:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r4, r2
	ldrh r0, [r1]
	cmp r0, #4
	bne _08093F00
	movs r2, #0
	strh r2, [r1]
	ldr r6, _08093EC0 @ =0x03001220
	ldrh r0, [r6]
	cmp r0, #0xf
	bhi _08093EDC
	cmp r0, #0
	bne _08093EB0
	ldr r5, _08093EC4 @ =0x080A8CDC
	ldr r4, _08093EC8 @ =0x080A8D3C
	ldr r3, _08093ECC @ =0x00000F4C
	adds r0, r4, r3
	ldrh r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r0, [r0]
	movs r1, #0x3c
	bl ApplyMusicSoundFading
	ldr r0, _08093ED0 @ =0x00000F54
	adds r4, r4, r0
	ldrh r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r0, [r0]
	movs r1, #0x3c
	bl ApplyMusicSoundFading
	ldr r0, _08093ED4 @ =0x000001EB
	movs r1, #0x3c
	bl unk_2ad4
_08093EB0:
	ldrh r0, [r6]
	adds r0, #1
	strh r0, [r6]
	ldr r1, _08093ED8 @ =0x03001222
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	b _08093F00
	.align 2, 0
_08093EC0: .4byte 0x03001220
_08093EC4: .4byte 0x080A8CDC
_08093EC8: .4byte 0x080A8D3C
_08093ECC: .4byte 0x00000F4C
_08093ED0: .4byte 0x00000F54
_08093ED4: .4byte 0x000001EB
_08093ED8: .4byte 0x03001222
_08093EDC:
	str r2, [sp]
	ldr r1, _08093F0C @ =0x040000D4
	mov r3, sp
	str r3, [r1]
	movs r5, #0x87
	lsls r5, r5, #2
	adds r0, r4, r5
	str r0, [r1, #4]
	ldr r0, _08093F10 @ =0x850000B4
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r4, r0
	movs r0, #7
	strb r0, [r1]
	ldr r0, _08093F14 @ =gWrittenToBldy
	strh r2, [r0]
_08093F00:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _08093F38
	.align 2, 0
_08093F0C: .4byte 0x040000D4
_08093F10: .4byte 0x850000B4
_08093F14: .4byte gWrittenToBldy
_08093F18:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r4, r2
	ldrh r0, [r1]
	cmp r0, #0x96
	bne _08093F38
	movs r0, #0
	strh r0, [r1]
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r4, r3
	movs r0, #4
	strb r0, [r1]
	ldr r1, _08093F48 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
_08093F38:
	bl IntroProcessText
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08093F48: .4byte 0x04000050

	thumb_func_start IntroFlyingViewInit
IntroFlyingViewInit: @ 0x08093F4C
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	ldr r3, _0809407C @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _08094080 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _08094084 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08094088 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0809408C @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _08094090 @ =unk_99940
	bl CallbackSetVBlank
	movs r5, #0
	str r5, [sp]
	ldr r4, _08094094 @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r1, _08094098 @ =0x030016A0
	mov r8, r1
	str r1, [r4, #4]
	ldr r0, _0809409C @ =0x850000B4
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080940A0 @ =0x086101B8
	ldr r1, _080940A4 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _080940A8 @ =0x08612F48
	str r0, [r4]
	ldr r0, _080940AC @ =0x05000200
	str r0, [r4, #4]
	ldr r6, _080940B0 @ =0x84000080
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080940B4 @ =0x08605D08
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _080940B8 @ =0x08609220
	ldr r1, _080940BC @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _080940C0 @ =0x08598898
	ldr r1, _080940C4 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _080940C8 @ =0x08609020
	str r0, [r4]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	str r1, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080940CC @ =0x08598A8C
	str r0, [r4]
	ldr r0, _080940D0 @ =0x050001E0
	str r0, [r4, #4]
	ldr r0, _080940D4 @ =0x84000008
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	strh r5, [r1]
	ldr r0, _080940D8 @ =0x04000010
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r0, _080940DC @ =gBg1XPosition
	strh r5, [r0]
	ldr r0, _080940E0 @ =gBg1YPosition
	strh r5, [r0]
	ldr r0, _080940E4 @ =0x0300122C
	strh r5, [r0]
	ldr r0, _080940E8 @ =0x0300122E
	strh r5, [r0]
	ldr r0, _080940EC @ =0x03001230
	strh r5, [r0]
	ldr r0, _080940F0 @ =0x03001232
	strh r5, [r0]
	ldr r1, _080940F4 @ =0x04000008
	ldr r2, _080940F8 @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #6
	ldr r2, _080940FC @ =0x00001F03
	adds r0, r2, #0
	strh r0, [r1]
	movs r0, #0xa
	movs r1, #0x91
	movs r2, #0x8c
	movs r3, #0
	bl IntroSpaceViewSetupOam
	movs r0, #0xb
	movs r1, #0x8c
	movs r2, #0x50
	movs r3, #0
	bl IntroSpaceViewSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _08094100 @ =0xFFFFFDE4
	add r8, r0
	ldr r0, _08094104 @ =0x0863A19C
	mov r1, r8
	str r0, [r1]
	str r5, [sp]
	mov r2, sp
	str r2, [r4]
	ldr r0, _08094108 @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _0809410C @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xc8
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08094110 @ =IntroSpaceViewVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809407C: .4byte 0x04000208
_08094080: .4byte 0x04000004
_08094084: .4byte 0x0000FFEF
_08094088: .4byte 0x04000200
_0809408C: .4byte 0x0000FFFD
_08094090: .4byte unk_99940
_08094094: .4byte 0x040000D4
_08094098: .4byte 0x030016A0
_0809409C: .4byte 0x850000B4
_080940A0: .4byte 0x086101B8
_080940A4: .4byte 0x06010000
_080940A8: .4byte 0x08612F48
_080940AC: .4byte 0x05000200
_080940B0: .4byte 0x84000080
_080940B4: .4byte 0x08605D08
_080940B8: .4byte 0x08609220
_080940BC: .4byte 0x0600F800
_080940C0: .4byte 0x08598898
_080940C4: .4byte 0x0600E000
_080940C8: .4byte 0x08609020
_080940CC: .4byte 0x08598A8C
_080940D0: .4byte 0x050001E0
_080940D4: .4byte 0x84000008
_080940D8: .4byte 0x04000010
_080940DC: .4byte gBg1XPosition
_080940E0: .4byte gBg1YPosition
_080940E4: .4byte 0x0300122C
_080940E8: .4byte 0x0300122E
_080940EC: .4byte 0x03001230
_080940F0: .4byte 0x03001232
_080940F4: .4byte 0x04000008
_080940F8: .4byte 0x00001C08
_080940FC: .4byte 0x00001F03
_08094100: .4byte 0xFFFFFDE4
_08094104: .4byte 0x0863A19C
_08094108: .4byte 0x0600D000
_0809410C: .4byte 0x85000400
_08094110: .4byte IntroSpaceViewVblank

	thumb_func_start IntroFlyingViewProcess
IntroFlyingViewProcess: @ 0x08094114
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _0809413C @ =gNonGameplayRam
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r4, r0
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #1
	beq _0809417C
	cmp r0, #1
	bgt _08094140
	cmp r0, #0
	beq _08094146
	b _080941F6
	.align 2, 0
_0809413C: .4byte gNonGameplayRam
_08094140:
	cmp r0, #2
	beq _080941D8
	b _080941F6
_08094146:
	ldr r4, _0809416C @ =gWrittenToBldy
	ldrh r0, [r4]
	cmp r0, #0
	beq _08094174
	cmp r0, #0x10
	bne _08094164
	movs r0, #0xf6
	lsls r0, r0, #1
	movs r1, #0
	bl unk_2ad4
	ldr r0, _08094170 @ =0x000001ED
	movs r1, #0
	bl unk_2ad4
_08094164:
	ldrh r0, [r4]
	subs r0, #2
	strh r0, [r4]
	b _080941C6
	.align 2, 0
_0809416C: .4byte gWrittenToBldy
_08094170: .4byte 0x000001ED
_08094174:
	strh r5, [r1]
	movs r0, #1
	strb r0, [r2]
	b _080941C6
_0809417C:
	bl SpecialCutsceneGetRandomNumber
	lsls r0, r0, #0x18
	cmp r0, #0
	blt _080941AE
	ldr r1, _080941D0 @ =0x00000215
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #9
	bhi _080941AE
	bl SpecialCutsceneGetRandomNumber
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl SpecialCutsceneGetRandomNumber
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #0x10
	adds r1, r4, #0
	movs r3, #0
	bl IntroSpaceViewSetupOam
_080941AE:
	ldr r0, _080941D4 @ =gNonGameplayRam
	movs r1, #0x84
	lsls r1, r1, #2
	adds r2, r0, r1
	ldrh r1, [r2]
	movs r0, #0x96
	lsls r0, r0, #1
	cmp r1, r0
	bne _080941C6
	movs r0, #0
	strh r0, [r2]
	movs r5, #1
_080941C6:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _080941F6
	.align 2, 0
_080941D0: .4byte 0x00000215
_080941D4: .4byte gNonGameplayRam
_080941D8:
	ldr r1, _080941E8 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _080941EC
	adds r0, #1
	strh r0, [r1]
	b _080941EE
	.align 2, 0
_080941E8: .4byte gWrittenToBldy
_080941EC:
	movs r5, #1
_080941EE:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_080941F6:
	bl IntroProcessText
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start IntroSpaceView
IntroSpaceView: @ 0x08094204
	push {r4, lr}
	movs r4, #0
	ldr r0, _08094220 @ =gNonGameplayRam
	ldrh r1, [r0, #8]
	adds r2, r0, #0
	cmp r1, #7
	bls _08094214
	b _0809431E
_08094214:
	lsls r0, r1, #2
	ldr r1, _08094224 @ =_08094228
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08094220: .4byte gNonGameplayRam
_08094224: .4byte _08094228
_08094228: @ jump table
	.4byte _08094248 @ case 0
	.4byte _08094258 @ case 1
	.4byte _08094274 @ case 2
	.4byte _0809429C @ case 3
	.4byte _080942BC @ case 4
	.4byte _080942CC @ case 5
	.4byte _080942D2 @ case 6
	.4byte _080942FC @ case 7
_08094248:
	bl IntroSpaceViewInit
	ldr r1, _08094254 @ =gNonGameplayRam
	movs r0, #1
	strh r0, [r1, #8]
	b _0809431E
	.align 2, 0
_08094254: .4byte gNonGameplayRam
_08094258:
	bl SpecialCutsceneFadeIn
	ldr r0, _0809426C @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _0809431E
	ldr r1, _08094270 @ =gNonGameplayRam
	movs r0, #2
	strh r0, [r1, #8]
	b _0809431E
	.align 2, 0
_0809426C: .4byte gWrittenToBldy
_08094270: .4byte gNonGameplayRam
_08094274:
	bl IntroSpaceViewPartProcess
	cmp r0, #0
	beq _0809431E
	ldr r1, _08094294 @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r1, r2
	movs r2, #0
	strb r2, [r0]
	ldr r3, _08094298 @ =0x00000213
	adds r0, r1, r3
	strb r2, [r0]
	movs r0, #3
	strh r0, [r1, #8]
	b _0809431E
	.align 2, 0
_08094294: .4byte gNonGameplayRam
_08094298: .4byte 0x00000213
_0809429C:
	ldr r1, _080942AC @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _080942B0
	adds r0, #1
	strh r0, [r1]
	b _080942B4
	.align 2, 0
_080942AC: .4byte gWrittenToBldy
_080942B0:
	movs r0, #4
	strh r0, [r2, #8]
_080942B4:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_080942BC:
	bl IntroFlyingViewInit
	ldr r1, _080942C8 @ =gNonGameplayRam
	movs r0, #6
	strh r0, [r1, #8]
	b _0809431E
	.align 2, 0
_080942C8: .4byte gNonGameplayRam
_080942CC:
	movs r0, #6
	strh r0, [r2, #8]
	b _0809431E
_080942D2:
	bl IntroFlyingViewProcess
	cmp r0, #0
	beq _0809431E
	ldr r2, _080942F4 @ =gNonGameplayRam
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r2, r0
	movs r0, #0
	strb r0, [r1]
	ldr r3, _080942F8 @ =0x00000213
	adds r1, r2, r3
	strb r0, [r1]
	strh r0, [r2, #8]
	movs r4, #1
	b _0809431E
	.align 2, 0
_080942F4: .4byte gNonGameplayRam
_080942F8: .4byte 0x00000213
_080942FC:
	ldr r1, _0809430C @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _08094310
	adds r0, #1
	strh r0, [r1]
	b _08094316
	.align 2, 0
_0809430C: .4byte gWrittenToBldy
_08094310:
	movs r0, #0
	strh r0, [r2, #8]
	movs r4, #1
_08094316:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_0809431E:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start IntroProcessSpaceViewScrolling
IntroProcessSpaceViewScrolling: @ 0x08094328
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0x12]
	adds r0, #1
	strb r0, [r1, #0x12]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	bne _08094346
	movs r0, #0
	strb r0, [r1, #0x12]
	ldr r1, _0809434C @ =0x03001230
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
_08094346:
	pop {r0}
	bx r0
	.align 2, 0
_0809434C: .4byte 0x03001230

	thumb_func_start IntroProcessBslShipSideways
IntroProcessBslShipSideways: @ 0x08094350
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldrh r1, [r5, #0xc]
	movs r6, #0
	strh r1, [r5, #4]
	ldrb r0, [r5, #0x14]
	cmp r0, #0
	bne _08094380
	strh r1, [r5]
	ldrh r0, [r5, #0xe]
	strh r0, [r5, #2]
	ldr r0, _0809437C @ =gNonGameplayRam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #3
	beq _08094376
	b _080944D6
_08094376:
	movs r0, #1
	b _080944D4
	.align 2, 0
_0809437C: .4byte gNonGameplayRam
_08094380:
	cmp r0, #1
	bne _080943E2
	ldrh r0, [r5, #0xa]
	adds r0, #1
	strh r0, [r5, #0xa]
	lsls r0, r0, #0x10
	movs r1, #0xc3
	lsls r1, r1, #0x12
	cmp r0, r1
	bne _080943A2
	movs r1, #0x82
	lsls r1, r1, #1
	movs r0, #3
	movs r2, #0x6e
	movs r3, #0
	bl IntroSpaceViewSetupOam
_080943A2:
	movs r2, #0
	ldrsh r0, [r5, r2]
	movs r1, #0x3c
	subs r1, r1, r0
	ldrh r0, [r5, #0xa]
	lsls r0, r0, #1
	muls r0, r1, r0
	asrs r0, r0, #0xb
	ldrh r3, [r5]
	adds r2, r0, r3
	strh r2, [r5, #0xc]
	movs r4, #2
	ldrsh r0, [r5, r4]
	movs r1, #0xa
	subs r1, r1, r0
	ldrh r0, [r5, #0xa]
	lsls r0, r0, #1
	muls r0, r1, r0
	asrs r0, r0, #0xb
	ldrh r7, [r5, #2]
	adds r1, r0, r7
	strh r1, [r5, #0xe]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1d
	bgt _080943D8
	b _080944D6
_080943D8:
	strh r6, [r5, #0xa]
	strh r2, [r5]
	strh r1, [r5, #2]
	movs r0, #2
	b _080944D4
_080943E2:
	cmp r0, #2
	bne _08094408
	ldrh r0, [r5, #0xa]
	adds r0, #1
	strh r0, [r5, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080944D6
	strh r6, [r5, #0xa]
	movs r0, #4
	strh r0, [r5, #2]
	strh r1, [r5, #4]
	ldrh r0, [r5, #0xe]
	strh r0, [r5, #8]
	movs r0, #0
	strb r0, [r5, #0x13]
	movs r0, #3
	b _080944D4
_08094408:
	cmp r0, #3
	bne _08094480
	movs r0, #0
	ldrsh r3, [r5, r0]
	ldr r2, _08094478 @ =0x080A4FA4
	ldrb r1, [r5, #0x13]
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r0, [r0, r4]
	adds r4, r3, #0
	muls r4, r0, r4
	movs r7, #2
	ldrsh r3, [r5, r7]
	lsls r1, r1, #1
	adds r1, r1, r2
	movs r7, #0
	ldrsh r0, [r1, r7]
	muls r3, r0, r3
	movs r1, #0
	ldrsh r0, [r2, r1]
	adds r1, r4, #0
	muls r1, r0, r1
	adds r2, #0x80
	movs r4, #0
	ldrsh r0, [r2, r4]
	muls r0, r3, r0
	adds r1, r1, r0
	ldrh r0, [r5, #0xa]
	lsrs r0, r0, #2
	ldrh r7, [r5]
	adds r0, r0, r7
	strh r0, [r5, #0xc]
	asrs r1, r1, #0x10
	ldrh r0, [r5, #8]
	adds r1, r1, r0
	strh r1, [r5, #0xe]
	ldrb r0, [r5, #0x13]
	adds r0, #1
	strb r0, [r5, #0x13]
	ldrh r0, [r5, #0xa]
	adds r0, #1
	strh r0, [r5, #0xa]
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0x3c
	beq _080944D6
	ldr r0, _0809447C @ =0x00007530
	cmp r1, r0
	bne _080944D6
	strh r6, [r5, #0xa]
	movs r0, #4
	b _080944D4
	.align 2, 0
_08094478: .4byte 0x080A4FA4
_0809447C: .4byte 0x00007530
_08094480:
	cmp r0, #4
	bne _08094490
	movs r0, #5
	strb r0, [r5, #0x14]
	strh r1, [r5]
	ldrh r0, [r5, #0xe]
	strh r0, [r5, #2]
	b _080944D6
_08094490:
	cmp r0, #5
	bne _080944D6
	ldrh r0, [r5, #0xa]
	adds r0, #1
	strh r0, [r5, #0xa]
	movs r2, #0
	ldrsh r1, [r5, r2]
	movs r0, #0x82
	lsls r0, r0, #2
	subs r0, r0, r1
	ldrh r1, [r5, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #0xa
	ldrh r3, [r5]
	adds r2, r0, r3
	strh r2, [r5, #0xc]
	movs r4, #2
	ldrsh r1, [r5, r4]
	movs r0, #0x64
	subs r0, r0, r1
	ldrh r1, [r5, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #0xa
	ldrh r7, [r5, #2]
	adds r3, r0, r7
	strh r3, [r5, #0xe]
	lsls r1, r2, #0x10
	ldr r0, _08094544 @ =0x02070000
	cmp r1, r0
	ble _080944D6
	strh r6, [r5, #0xa]
	strh r2, [r5]
	strh r3, [r5, #2]
	movs r0, #6
_080944D4:
	strb r0, [r5, #0x14]
_080944D6:
	ldr r0, _08094548 @ =0x0300122C
	ldrh r2, [r5, #0xc]
	strh r2, [r0]
	ldr r1, _0809454C @ =0x0300122E
	ldrh r0, [r5, #0xe]
	strh r0, [r1]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x78
	rsbs r1, r1, #0
	cmp r0, r1
	blt _08094584
	ldrb r0, [r5, #4]
	subs r0, r2, r0
	ldrb r2, [r5, #0x11]
	adds r1, r0, r2
	movs r4, #0
	strb r1, [r5, #0x11]
	ldrb r2, [r5, #0x1a]
	lsrs r0, r2, #4
	cmp r0, #0
	bne _08094558
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _08094584
	adds r0, r1, #0
	subs r0, #8
	strb r0, [r5, #0x11]
	ldrb r1, [r5, #0x12]
	lsls r1, r1, #1
	ldr r0, _08094550 @ =0x02010800
	adds r0, r1, r0
	ldr r2, _08094554 @ =0x0600F000
	adds r1, r1, r2
	movs r2, #1
	movs r3, #0x14
	bl Dma3Transfer_Unused2
	ldrb r0, [r5, #0x12]
	adds r0, #1
	strb r0, [r5, #0x12]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x20
	bne _08094584
	strb r4, [r5, #0x12]
	ldrb r0, [r5, #0x1a]
	movs r1, #0xf
	ands r1, r0
	movs r0, #0x10
	orrs r1, r0
	strb r1, [r5, #0x1a]
	b _08094584
	.align 2, 0
_08094544: .4byte 0x02070000
_08094548: .4byte 0x0300122C
_0809454C: .4byte 0x0300122E
_08094550: .4byte 0x02010800
_08094554: .4byte 0x0600F000
_08094558:
	cmp r0, #1
	bne _08094584
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _08094584
	adds r0, r1, #0
	subs r0, #8
	strb r0, [r5, #0x11]
	ldrb r0, [r5, #0x12]
	adds r0, #1
	strb r0, [r5, #0x12]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x20
	bne _08094584
	strb r4, [r5, #0x12]
	movs r0, #0xf
	ands r0, r2
	movs r1, #0xa0
	orrs r0, r1
	strb r0, [r5, #0x1a]
_08094584:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start IntroProcessSamusSHipEntering
IntroProcessSamusSHipEntering: @ 0x0809458C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r4, #0
	ldrb r0, [r6, #0x14]
	cmp r0, #0
	bne _080945BC
	movs r0, #0x64
	strh r0, [r6]
	movs r0, #0x1e
	strh r0, [r6, #2]
	ldrh r0, [r6, #0xc]
	strh r0, [r6, #4]
	ldrh r0, [r6, #0xe]
	subs r0, #0x1e
	strh r0, [r6, #8]
	movs r0, #0x40
	strb r0, [r6, #0x13]
	movs r0, #1
	strb r0, [r6, #0x14]
	movs r0, #0xf5
	lsls r0, r0, #1
	bl SoundPlay
	b _08094676
_080945BC:
	cmp r0, #1
	bne _080945DE
	ldrb r1, [r6, #0x13]
	adds r1, #1
	strb r1, [r6, #0x13]
	ldrh r0, [r6, #6]
	subs r0, #2
	strh r0, [r6, #6]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	cmp r1, #0x80
	bne _08094676
	movs r0, #2
	strb r0, [r6, #0x14]
	adds r0, #0xfe
	strh r0, [r6, #6]
	b _08094676
_080945DE:
	cmp r0, #2
	bne _080945FA
	strh r4, [r6]
	movs r0, #8
	strh r0, [r6, #2]
	ldrh r0, [r6, #0xc]
	strh r0, [r6, #4]
	ldrh r0, [r6, #0xe]
	strh r0, [r6, #8]
	movs r0, #0x80
	strb r0, [r6, #0x13]
	movs r0, #3
	strb r0, [r6, #0x14]
	b _08094676
_080945FA:
	cmp r0, #3
	bne _08094612
	ldrb r0, [r6, #0x13]
	adds r0, #2
	strb r0, [r6, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xc0
	bne _08094676
	movs r0, #4
	strb r0, [r6, #0x14]
	b _08094676
_08094612:
	cmp r0, #4
	bne _08094634
	ldrb r0, [r6, #0x13]
	adds r0, #1
	strb r0, [r6, #0x13]
	ldrh r0, [r6, #0xa]
	adds r0, #1
	strh r0, [r6, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #8
	bne _08094676
	strh r4, [r6, #0xa]
	ldrh r0, [r6, #4]
	subs r0, #1
	strh r0, [r6, #4]
	b _08094676
_08094634:
	cmp r0, #5
	bne _0809465A
	ldrh r2, [r6, #0xc]
	movs r1, #0x8c
	lsls r1, r1, #1
	adds r0, r1, #0
	subs r0, r0, r2
	strh r0, [r6]
	movs r1, #0x3c
	strh r1, [r6, #2]
	adds r2, r2, r0
	strh r2, [r6, #4]
	ldrh r0, [r6, #0xe]
	strh r0, [r6, #8]
	movs r0, #0x80
	strb r0, [r6, #0x13]
	movs r0, #6
	strb r0, [r6, #0x14]
	b _08094676
_0809465A:
	cmp r0, #6
	bne _08094676
	ldrb r0, [r6, #0x13]
	adds r0, #1
	strb r0, [r6, #0x13]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08094676
	strb r4, [r6, #0x10]
	ldrb r1, [r6, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r6, #0x18]
_08094676:
	movs r2, #0
	ldrsh r3, [r6, r2]
	ldr r2, _080946D4 @ =0x080A4FA4
	ldrb r1, [r6, #0x13]
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r0, [r0, r4]
	adds r5, r3, #0
	muls r5, r0, r5
	movs r0, #2
	ldrsh r3, [r6, r0]
	lsls r1, r1, #1
	adds r1, r1, r2
	movs r4, #0
	ldrsh r0, [r1, r4]
	adds r4, r3, #0
	muls r4, r0, r4
	adds r0, r2, #0
	adds r0, #0x80
	movs r1, #0
	ldrsh r3, [r0, r1]
	adds r1, r5, #0
	muls r1, r3, r1
	movs r0, #0
	ldrsh r2, [r2, r0]
	adds r0, r4, #0
	muls r0, r2, r0
	subs r1, r1, r0
	adds r0, r5, #0
	muls r0, r2, r0
	adds r2, r4, #0
	muls r2, r3, r2
	adds r0, r0, r2
	asrs r1, r1, #0x10
	ldrh r2, [r6, #4]
	adds r1, r1, r2
	strh r1, [r6, #0xc]
	asrs r0, r0, #0x10
	ldrh r4, [r6, #8]
	adds r0, r0, r4
	strh r0, [r6, #0xe]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080946D4: .4byte 0x080A4FA4

	thumb_func_start IntroProcessSplashText
IntroProcessSplashText: @ 0x080946D8
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x11]
	lsls r0, r0, #3
	ldr r1, [r2, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _080946FE
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _080946FE
	strb r1, [r2, #0x10]
	ldrb r1, [r2, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x18]
_080946FE:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start IntroProcessSpaceViewParticle
IntroProcessSpaceViewParticle: @ 0x08094704
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _08094740
	bl SpecialCutsceneGetRandomNumber
	movs r1, #7
	ands r1, r0
	adds r1, #1
	strh r1, [r4, #8]
	bl SpecialCutsceneGetRandomNumber
	movs r1, #3
	ands r1, r0
	strh r1, [r4, #4]
	ldr r1, _0809473C @ =0x0879C394
	movs r2, #4
	ldrsh r0, [r4, r2]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r4, #0x1c]
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	movs r0, #1
	strb r0, [r4, #0x14]
	b _08094792
	.align 2, 0
_0809473C: .4byte 0x0879C394
_08094740:
	cmp r0, #1
	bne _08094792
	ldrh r0, [r4, #0xa]
	adds r0, #1
	strh r0, [r4, #0xa]
	movs r0, #8
	ldrsh r1, [r4, r0]
	ldrh r0, [r4, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #4
	ldrh r1, [r4]
	adds r0, r0, r1
	strh r0, [r4, #0xc]
	ldrb r0, [r4, #0x13]
	adds r0, #1
	strb r0, [r4, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	bne _08094792
	movs r0, #0
	strb r0, [r4, #0x13]
	ldrh r1, [r4, #4]
	movs r2, #4
	ldrsh r0, [r4, r2]
	cmp r0, #4
	bgt _0809477A
	adds r0, r1, #1
	b _0809477C
_0809477A:
	movs r0, #0
_0809477C:
	strh r0, [r4, #4]
	ldr r1, _080947B4 @ =0x0879C394
	movs r2, #4
	ldrsh r0, [r4, r2]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r4, #0x1c]
	movs r0, #0
	strb r0, [r4, #0x12]
	strb r0, [r4, #0x11]
_08094792:
	movs r1, #0xc
	ldrsh r0, [r4, r1]
	cmp r0, #0xef
	bgt _080947A2
	movs r2, #0xe
	ldrsh r0, [r4, r2]
	cmp r0, #0x9f
	ble _080947AE
_080947A2:
	movs r0, #0
	strb r0, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	subs r0, #2
	ands r0, r1
	strb r0, [r4, #0x18]
_080947AE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080947B4: .4byte 0x0879C394

	thumb_func_start IntroProcessIdleShipBackview
IntroProcessIdleShipBackview: @ 0x080947B8
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _080947D2
	strh r0, [r2, #0xa]
	ldrh r0, [r2, #0xc]
	strh r0, [r2]
	ldrh r0, [r2, #0xe]
	strh r0, [r2, #2]
	movs r0, #1
	strb r0, [r2, #0x14]
	b _080947F0
_080947D2:
	cmp r0, #1
	bne _080947F0
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	ldr r1, _080947F4 @ =0x080A4FA4
	ldrb r0, [r2, #0x13]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x15
	ldrh r1, [r2, #2]
	adds r0, r0, r1
	strh r0, [r2, #0xe]
_080947F0:
	pop {r0}
	bx r0
	.align 2, 0
_080947F4: .4byte 0x080A4FA4

	thumb_func_start IntroProcessBslShipSpawning_2
IntroProcessBslShipSpawning_2: @ 0x080947F8
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrb r5, [r4, #0x14]
	cmp r5, #0
	bne _08094854
	ldrh r1, [r4, #0xc]
	adds r1, #0x7a
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #0xc
	movs r3, #0
	bl IntroSpaceViewSetupOam
	ldrh r1, [r4, #0xc]
	adds r1, #0x32
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4, #0xe]
	adds r2, #1
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r0, #0xd
	movs r3, #0
	bl IntroSpaceViewSetupOam
	ldrh r1, [r4, #0xc]
	adds r1, #0x24
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #0xe
	movs r3, #0
	bl IntroSpaceViewSetupOam
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	movs r0, #0xf
	movs r3, #0
	bl IntroSpaceViewSetupOam
	strb r5, [r4, #0x10]
_08094854:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start IntroProcessBslShipBackview
IntroProcessBslShipBackview: @ 0x0809485C
	push {r4, lr}
	adds r2, r0, #0
	ldrb r3, [r2, #0x14]
	cmp r3, #0
	bne _080948BA
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x14
	bne _0809492C
	ldrh r0, [r2]
	adds r0, #1
	movs r1, #0
	strh r0, [r2]
	strb r1, [r2, #0x13]
	ldrh r0, [r2, #0xa]
	cmp r0, #4
	bne _08094886
	strh r3, [r2, #0xa]
_08094886:
	ldrh r0, [r2, #0xa]
	adds r1, r0, #0
	adds r3, r0, #0
	cmp r1, #1
	bhi _08094896
	ldrh r0, [r2, #0xe]
	adds r0, #1
	b _0809489E
_08094896:
	cmp r1, #3
	bhi _080948A0
	ldrh r0, [r2, #0xe]
	subs r0, #1
_0809489E:
	strh r0, [r2, #0xe]
_080948A0:
	movs r0, #0
	ldrsh r1, [r2, r0]
	movs r0, #0x96
	lsls r0, r0, #1
	cmp r1, r0
	bne _080948B4
	movs r1, #0
	movs r0, #1
	strb r0, [r2, #0x14]
	strb r1, [r2, #0x13]
_080948B4:
	adds r0, r3, #1
	strh r0, [r2, #0xa]
	b _0809492C
_080948BA:
	cmp r3, #1
	bne _080948CE
	ldrh r0, [r2, #0xc]
	movs r1, #0
	strh r0, [r2]
	ldrh r0, [r2, #0xe]
	strh r0, [r2, #2]
	strh r1, [r2, #0xa]
	movs r0, #2
	b _0809492A
_080948CE:
	cmp r3, #2
	bne _0809492C
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _080948EA
	ldrh r0, [r2, #0xa]
	adds r0, #1
	movs r1, #0
	strh r0, [r2, #0xa]
	strb r1, [r2, #0x13]
_080948EA:
	movs r4, #0
	ldrsh r1, [r2, r4]
	movs r0, #0xe1
	lsls r0, r0, #2
	subs r0, r0, r1
	ldrh r1, [r2, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #0xc
	ldrh r1, [r2]
	adds r3, r0, r1
	strh r3, [r2, #0xc]
	movs r4, #4
	ldrsh r0, [r2, r4]
	movs r4, #2
	ldrsh r1, [r2, r4]
	subs r0, r0, r1
	ldrh r1, [r2, #0xa]
	muls r0, r1, r0
	asrs r0, r0, #0xb
	ldrh r1, [r2, #2]
	adds r4, r0, r1
	strh r4, [r2, #0xe]
	lsls r1, r3, #0x10
	movs r0, #0xa0
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _0809492C
	movs r0, #0
	strh r0, [r2, #0xa]
	strh r3, [r2]
	strh r4, [r2, #2]
	movs r0, #3
_0809492A:
	strb r0, [r2, #0x14]
_0809492C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start IntroProcessIdleDepthParticle
IntroProcessIdleDepthParticle: @ 0x08094934
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldrh r1, [r6, #0xa]
	strh r1, [r6, #4]
	ldrb r0, [r6, #0x14]
	cmp r0, #0
	bne _0809495E
	movs r1, #0xc
	ldrsh r0, [r6, r1]
	subs r0, #0x78
	movs r1, #0x64
	muls r0, r1, r0
	strh r0, [r6]
	movs r2, #0xe
	ldrsh r0, [r6, r2]
	subs r0, #0x50
	muls r0, r1, r0
	strh r0, [r6, #2]
	movs r0, #1
	strb r0, [r6, #0x14]
	b _080949EA
_0809495E:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x63
	bgt _080949DC
	cmp r0, #0x19
	bne _08094974
	ldr r0, _08094970 @ =0x0860AC18
	b _08094986
	.align 2, 0
_08094970: .4byte 0x0860AC18
_08094974:
	cmp r0, #0x32
	bne _08094980
	ldr r0, _0809497C @ =0x0860AC28
	b _08094986
	.align 2, 0
_0809497C: .4byte 0x0860AC28
_08094980:
	cmp r0, #0x46
	bne _08094988
	ldr r0, _080949D8 @ =0x0860AC38
_08094986:
	str r0, [r6, #0x1c]
_08094988:
	movs r0, #4
	ldrsh r4, [r6, r0]
	rsbs r4, r4, #0
	adds r4, #0x64
	movs r1, #0
	ldrsh r0, [r6, r1]
	adds r1, r4, #0
	bl __divsi3
	adds r5, r0, #0
	adds r0, #0x78
	strh r0, [r6, #0xc]
	movs r2, #2
	ldrsh r0, [r6, r2]
	adds r1, r4, #0
	bl __divsi3
	adds r1, r0, #0
	adds r1, #0x50
	strh r1, [r6, #0xe]
	adds r5, #0x80
	lsls r5, r5, #0x10
	movs r0, #0x80
	lsls r0, r0, #0x11
	cmp r5, r0
	bhi _080949CC
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0xa8
	bgt _080949CC
	movs r0, #8
	rsbs r0, r0, #0
	cmp r1, r0
	bge _080949EA
_080949CC:
	movs r0, #0
	strb r0, [r6, #0x10]
	ldrb r1, [r6, #0x18]
	subs r0, #2
	b _080949E6
	.align 2, 0
_080949D8: .4byte 0x0860AC38
_080949DC:
	movs r0, #0
	strb r0, [r6, #0x10]
	ldrb r1, [r6, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
_080949E6:
	ands r0, r1
	strb r0, [r6, #0x18]
_080949EA:
	ldrh r0, [r6, #0xa]
	adds r0, #1
	strh r0, [r6, #0xa]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start IntroSpaceViewSetupOam
IntroSpaceViewSetupOam: @ 0x080949F8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sl, r2
	lsls r3, r3, #0x18
	cmp r3, #0
	bne _08094A60
	movs r2, #0
	ldr r0, _08094A5C @ =gNonGameplayRam
	movs r3, #0x8b
	lsls r3, r3, #2
	adds r1, r0, r3
	ldrb r1, [r1]
	mov r8, r0
	cmp r1, #0
	beq _08094A4E
	mov r4, r8
_08094A2E:
	lsls r0, r2, #0x18
	movs r1, #0x80
	lsls r1, r1, #0x11
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x13
	bgt _08094AA0
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08094A2E
_08094A4E:
	lsls r0, r2, #0x18
	asrs r1, r0, #0x18
	mov ip, r0
	cmp r1, #0x13
	ble _08094AA8
	b _08094AA0
	.align 2, 0
_08094A5C: .4byte gNonGameplayRam
_08094A60:
	movs r2, #0x13
	ldr r0, _08094AA4 @ =gNonGameplayRam
	movs r3, #0x9b
	lsls r3, r3, #3
	adds r1, r0, r3
	ldrb r1, [r1]
	mov r8, r0
	cmp r1, #0
	beq _08094A98
	mov r4, r8
	movs r3, #0x8b
	lsls r3, r3, #2
_08094A78:
	lsls r0, r2, #0x18
	movs r1, #0xff
	lsls r1, r1, #0x18
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0
	blt _08094AA0
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08094A78
_08094A98:
	lsls r0, r2, #0x18
	mov ip, r0
	cmp r0, #0
	bge _08094AA8
_08094AA0:
	movs r0, #0x14
	b _08094DD0
	.align 2, 0
_08094AA4: .4byte gNonGameplayRam
_08094AA8:
	movs r0, #0
	str r0, [sp]
	ldr r2, _08094B10 @ =0x040000D4
	mov r3, sp
	str r3, [r2]
	mov r0, ip
	asrs r1, r0, #0x18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r4, r0, #2
	ldr r3, _08094B14 @ =0x030016A0
	adds r0, r4, r3
	str r0, [r2, #4]
	ldr r0, _08094B18 @ =0x85000009
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	ldr r1, _08094B1C @ =0xFFFFFDE4
	adds r0, r3, r1
	adds r2, r4, r0
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r2, r1
	movs r7, #0
	mov r1, sb
	strh r1, [r0]
	ldr r1, _08094B20 @ =0x0000022A
	adds r0, r2, r1
	mov r1, sl
	strh r1, [r0]
	movs r1, #0x8b
	lsls r1, r1, #2
	adds r0, r2, r1
	strb r6, [r0]
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r5, r2, r0
	ldrb r1, [r5]
	movs r0, #1
	orrs r1, r0
	strb r1, [r5]
	cmp r6, #1
	bne _08094B28
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r5]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08094B24 @ =IntroProcessSpaceViewScrolling
	str r1, [r0]
	b _08094DCC
	.align 2, 0
_08094B10: .4byte 0x040000D4
_08094B14: .4byte 0x030016A0
_08094B18: .4byte 0x85000009
_08094B1C: .4byte 0xFFFFFDE4
_08094B20: .4byte 0x0000022A
_08094B24: .4byte IntroProcessSpaceViewScrolling
_08094B28:
	cmp r6, #2
	bne _08094B44
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r5]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08094B40 @ =IntroProcessBslShipSideways
	str r1, [r0]
	b _08094DCC
	.align 2, 0
_08094B40: .4byte IntroProcessBslShipSideways
_08094B44:
	cmp r6, #3
	bne _08094B90
	ldr r0, _08094B80 @ =0x00000222
	adds r1, r2, r0
	subs r0, #0xa2
	strh r0, [r1]
	ldr r1, _08094B84 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	ldrb r0, [r5]
	movs r1, #6
	orrs r0, r1
	strb r0, [r5]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08094B88 @ =0x0860AC98
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08094B8C @ =IntroProcessSamusSHipEntering
	str r1, [r0]
	b _08094DCC
	.align 2, 0
_08094B80: .4byte 0x00000222
_08094B84: .4byte 0x00000236
_08094B88: .4byte 0x0860AC98
_08094B8C: .4byte IntroProcessSamusSHipEntering
_08094B90:
	cmp r6, #4
	bne _08094BB4
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08094BAC @ =0x0860AF10
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08094BB0 @ =IntroProcessSplashText
	str r1, [r0]
	b _08094DCC
	.align 2, 0
_08094BAC: .4byte 0x0860AF10
_08094BB0: .4byte IntroProcessSplashText
_08094BB4:
	cmp r6, #5
	bne _08094BE8
	ldr r0, _08094BDC @ =0x00000236
	adds r2, r2, r0
	ldrb r0, [r2]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08094BE0 @ =0x0860AC38
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08094BE4 @ =IntroProcessSpaceViewParticle
	str r1, [r0]
	b _08094DCC
	.align 2, 0
_08094BDC: .4byte 0x00000236
_08094BE0: .4byte 0x0860AC38
_08094BE4: .4byte IntroProcessSpaceViewParticle
_08094BE8:
	cmp r6, #0xa
	bne _08094C54
	movs r1, #0x87
	lsls r1, r1, #2
	adds r0, r2, r1
	mov r1, sb
	strh r1, [r0]
	ldr r1, _08094C40 @ =0x0000021E
	adds r0, r2, r1
	mov r1, sl
	strh r1, [r0]
	ldr r0, _08094C44 @ =0x00000222
	adds r1, r2, r0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	ldr r1, _08094C48 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	ldrb r1, [r5]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r5]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08094C4C @ =0x0860ACD0
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08094C50 @ =IntroProcessIdleShipBackview
	str r1, [r0]
	b _08094DCC
	.align 2, 0
_08094C40: .4byte 0x0000021E
_08094C44: .4byte 0x00000222
_08094C48: .4byte 0x00000236
_08094C4C: .4byte 0x0860ACD0
_08094C50: .4byte IntroProcessIdleShipBackview
_08094C54:
	cmp r6, #0xb
	bne _08094C80
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r5]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08094C78 @ =0x0860ACD0
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08094C7C @ =IntroProcessBslShipSpawning_2
	str r1, [r0]
	b _08094DCC
	.align 2, 0
_08094C78: .4byte 0x0860ACD0
_08094C7C: .4byte IntroProcessBslShipSpawning_2
_08094C80:
	cmp r6, #0xc
	bne _08094CB8
	movs r0, #0x88
	lsls r0, r0, #2
	adds r1, r2, r0
	ldr r0, _08094CAC @ =0x0000FFD8
	strh r0, [r1]
	ldr r1, _08094CB0 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08094CB4 @ =0x0860AD28
	b _08094D18
	.align 2, 0
_08094CAC: .4byte 0x0000FFD8
_08094CB0: .4byte 0x00000236
_08094CB4: .4byte 0x0860AD28
_08094CB8:
	cmp r6, #0xd
	bne _08094CF0
	movs r0, #0x88
	lsls r0, r0, #2
	adds r1, r2, r0
	ldr r0, _08094CE4 @ =0x0000FFE2
	strh r0, [r1]
	ldr r1, _08094CE8 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08094CEC @ =0x0860AD18
	b _08094D18
	.align 2, 0
_08094CE4: .4byte 0x0000FFE2
_08094CE8: .4byte 0x00000236
_08094CEC: .4byte 0x0860AD18
_08094CF0:
	cmp r6, #0xe
	bne _08094D38
	movs r0, #0x88
	lsls r0, r0, #2
	adds r1, r2, r0
	ldr r0, _08094D28 @ =0x0000FFEC
	strh r0, [r1]
	ldr r1, _08094D2C @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08094D30 @ =0x0860AD08
_08094D18:
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08094D34 @ =IntroProcessBslShipBackview
	str r1, [r0]
	b _08094DCC
	.align 2, 0
_08094D28: .4byte 0x0000FFEC
_08094D2C: .4byte 0x00000236
_08094D30: .4byte 0x0860AD08
_08094D34: .4byte IntroProcessBslShipBackview
_08094D38:
	cmp r6, #0xf
	bne _08094D90
	mov r3, ip
	asrs r0, r3, #0x18
	lsls r2, r0, #3
	adds r2, r2, r0
	lsls r2, r2, #2
	mov r0, r8
	adds r3, r2, r0
	movs r0, #0x88
	lsls r0, r0, #2
	adds r1, r3, r0
	ldr r0, _08094D80 @ =0x0000FFF6
	strh r0, [r1]
	ldr r1, _08094D84 @ =0x00000236
	adds r3, r3, r1
	ldrb r1, [r3]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r2, r0
	ldr r1, _08094D88 @ =0x0860ACF8
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, r8
	adds r2, r2, r0
	ldr r0, _08094D8C @ =IntroProcessBslShipBackview
	b _08094DCA
	.align 2, 0
_08094D80: .4byte 0x0000FFF6
_08094D84: .4byte 0x00000236
_08094D88: .4byte 0x0860ACF8
_08094D8C: .4byte IntroProcessBslShipBackview
_08094D90:
	cmp r6, #0x10
	bne _08094DCC
	mov r3, ip
	asrs r0, r3, #0x18
	lsls r2, r0, #3
	adds r2, r2, r0
	lsls r2, r2, #2
	mov r0, r8
	adds r3, r2, r0
	ldr r1, _08094DE0 @ =0x00000236
	adds r3, r3, r1
	ldrb r1, [r3]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r3]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, r8
	adds r0, r2, r0
	ldr r1, _08094DE4 @ =0x0860AC08
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, r8
	adds r2, r2, r0
	ldr r0, _08094DE8 @ =IntroProcessIdleDepthParticle
_08094DCA:
	str r0, [r2]
_08094DCC:
	mov r3, ip
	lsrs r0, r3, #0x18
_08094DD0:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08094DE0: .4byte 0x00000236
_08094DE4: .4byte 0x0860AC08
_08094DE8: .4byte IntroProcessIdleDepthParticle

	thumb_func_start IntroSpaceViewVblank
IntroSpaceViewVblank: @ 0x08094DEC
	ldr r1, _08094E48 @ =0x040000D4
	ldr r0, _08094E4C @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08094E50 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _08094E54 @ =0x04000052
	ldr r0, _08094E58 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08094E5C @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08094E60 @ =0x04000054
	ldr r0, _08094E64 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x40
	ldr r0, _08094E68 @ =gBg1XPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08094E6C @ =gBg1YPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08094E70 @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08094E74 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08094E78 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08094E7C @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_08094E48: .4byte 0x040000D4
_08094E4C: .4byte gOamData
_08094E50: .4byte 0x84000100
_08094E54: .4byte 0x04000052
_08094E58: .4byte 0x03001222
_08094E5C: .4byte 0x03001220
_08094E60: .4byte 0x04000054
_08094E64: .4byte gWrittenToBldy
_08094E68: .4byte gBg1XPosition
_08094E6C: .4byte gBg1YPosition
_08094E70: .4byte 0x0300122C
_08094E74: .4byte 0x0300122E
_08094E78: .4byte 0x03001230
_08094E7C: .4byte 0x03001232

	thumb_func_start unk_94e80
unk_94e80: @ 0x08094E80
	bx lr
	.align 2, 0

	thumb_func_start EndingSubroutine
EndingSubroutine: @ 0x08094E84
	push {r4, r5, lr}
	sub sp, #4
	movs r5, #0
	ldr r4, _08094EA0 @ =gSubGameMode1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08094ED4
	cmp r0, #1
	bgt _08094EA4
	cmp r0, #0
	beq _08094EAE
	b _08094F6A
	.align 2, 0
_08094EA0: .4byte gSubGameMode1
_08094EA4:
	cmp r0, #2
	beq _08094EE2
	cmp r0, #3
	beq _08094F00
	b _08094F6A
_08094EAE:
	str r5, [sp]
	ldr r1, _08094EC8 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r0, _08094ECC @ =gNonGameplayRam
	str r0, [r1, #4]
	ldr r0, _08094ED0 @ =0x85000150
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r0, #1
	strh r0, [r4]
	b _08094F6A
	.align 2, 0
_08094EC8: .4byte 0x040000D4
_08094ECC: .4byte gNonGameplayRam
_08094ED0: .4byte 0x85000150
_08094ED4:
	bl EndingBslCrashing
	cmp r0, #0
	beq _08094F6A
	movs r0, #2
	strh r0, [r4]
	b _08094F6A
_08094EE2:
	bl EndingInShip
	cmp r0, #0
	beq _08094F6A
	ldr r0, _08094EF8 @ =gNonGameplayRam
	ldr r1, _08094EFC @ =0x0000020E
	adds r0, r0, r1
	strh r5, [r0]
	movs r0, #3
	strh r0, [r4]
	b _08094F6A
	.align 2, 0
_08094EF8: .4byte gNonGameplayRam
_08094EFC: .4byte 0x0000020E
_08094F00:
	ldr r0, _08094F24 @ =gNonGameplayRam
	ldr r1, _08094F28 @ =0x0000020E
	adds r4, r0, r1
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	ldr r2, _08094F2C @ =gWrittenToBldy
	ldrh r1, [r2]
	cmp r1, #0xf
	bhi _08094F30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08094F66
	strh r5, [r4]
	adds r0, r1, #1
	strh r0, [r2]
	b _08094F66
	.align 2, 0
_08094F24: .4byte gNonGameplayRam
_08094F28: .4byte 0x0000020E
_08094F2C: .4byte gWrittenToBldy
_08094F30:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08094F40
	movs r0, #0
	bl Sram_ProcessEndingSave
	b _08094F66
_08094F40:
	cmp r0, #2
	bne _08094F4C
	movs r0, #1
	bl Sram_ProcessEndingSave
	b _08094F66
_08094F4C:
	cmp r0, #3
	bne _08094F58
	movs r0, #2
	bl Sram_ProcessEndingSave
	b _08094F66
_08094F58:
	cmp r0, #4
	bne _08094F66
	movs r0, #3
	bl Sram_ProcessEndingSave
	strh r5, [r4]
	movs r5, #1
_08094F66:
	bl SpecialCutsceneDrawAllOam
_08094F6A:
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start EndingBslCrashingInit
EndingBslCrashingInit: @ 0x08094F74
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	ldr r3, _080950DC @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _080950E0 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _080950E4 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _080950E8 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _080950EC @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _080950F0 @ =unk_99940
	bl CallbackSetVBlank
	movs r5, #0
	str r5, [sp]
	ldr r4, _080950F4 @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r1, _080950F8 @ =gNonGameplayRam
	mov r8, r1
	str r1, [r4, #4]
	ldr r0, _080950FC @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08095100 @ =0x086238F4
	ldr r1, _08095104 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _08095108 @ =0x08636C38
	str r0, [r4]
	ldr r0, _0809510C @ =0x05000200
	str r0, [r4, #4]
	ldr r6, _08095110 @ =0x84000080
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08095114 @ =0x0862B5F4
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _08095118 @ =0x08638C14
	ldr r1, _0809511C @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _08095120 @ =0x08639BC4
	ldr r1, _08095124 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _08095128 @ =0x08637038
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809512C @ =gBg1XPosition
	strh r5, [r0]
	ldr r0, _08095130 @ =gBg1YPosition
	movs r2, #8
	strh r2, [r0]
	ldr r0, _08095134 @ =0x0300122C
	strh r5, [r0]
	ldr r0, _08095138 @ =0x0300122E
	strh r5, [r0]
	ldr r0, _0809513C @ =0x03001230
	strh r5, [r0]
	ldr r0, _08095140 @ =0x03001232
	strh r5, [r0]
	ldr r0, _08095144 @ =0x04000010
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r2, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r1, _08095148 @ =0x04000008
	ldr r3, _0809514C @ =0x00001C08
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #2
	ldr r3, _08095150 @ =0x00001E01
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #4
	ldr r3, _08095154 @ =0x00001F03
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #0x42
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _08095158 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _0809515C @ =0x04000054
	strh r1, [r0]
	ldr r0, _08095160 @ =0x03001220
	strh r2, [r0]
	ldr r1, _08095164 @ =0x03001222
	movs r0, #0xe
	strh r0, [r1]
	movs r1, #0x28
	rsbs r1, r1, #0
	movs r0, #5
	movs r2, #0xc8
	movs r3, #0
	bl EndingBslCrashingSetupOam
	movs r0, #4
	movs r1, #0x80
	movs r2, #0x48
	movs r3, #1
	bl EndingBslCrashingSetupOam
	movs r0, #2
	movs r1, #0xa4
	movs r2, #0x28
	movs r3, #1
	bl EndingBslCrashingSetupOam
	movs r0, #1
	movs r1, #0xa4
	movs r2, #0x28
	movs r3, #1
	bl EndingBslCrashingSetupOam
	movs r0, #3
	movs r1, #0x86
	movs r2, #0x3c
	movs r3, #1
	bl EndingBslCrashingSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _08095168 @ =0x0863A19C
	mov r1, r8
	str r0, [r1]
	str r5, [sp]
	mov r2, sp
	str r2, [r4]
	ldr r0, _0809516C @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _08095170 @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r3, #0xc0
	lsls r3, r3, #5
	adds r0, r3, #0
	strh r0, [r1]
	ldr r0, _08095174 @ =EndingBslCrashingVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080950DC: .4byte 0x04000208
_080950E0: .4byte 0x04000004
_080950E4: .4byte 0x0000FFEF
_080950E8: .4byte 0x04000200
_080950EC: .4byte 0x0000FFFD
_080950F0: .4byte unk_99940
_080950F4: .4byte 0x040000D4
_080950F8: .4byte gNonGameplayRam
_080950FC: .4byte 0x85000150
_08095100: .4byte 0x086238F4
_08095104: .4byte 0x06010000
_08095108: .4byte 0x08636C38
_0809510C: .4byte 0x05000200
_08095110: .4byte 0x84000080
_08095114: .4byte 0x0862B5F4
_08095118: .4byte 0x08638C14
_0809511C: .4byte 0x0600F000
_08095120: .4byte 0x08639BC4
_08095124: .4byte 0x0600F800
_08095128: .4byte 0x08637038
_0809512C: .4byte gBg1XPosition
_08095130: .4byte gBg1YPosition
_08095134: .4byte 0x0300122C
_08095138: .4byte 0x0300122E
_0809513C: .4byte 0x03001230
_08095140: .4byte 0x03001232
_08095144: .4byte 0x04000010
_08095148: .4byte 0x04000008
_0809514C: .4byte 0x00001C08
_08095150: .4byte 0x00001E01
_08095154: .4byte 0x00001F03
_08095158: .4byte gWrittenToBldy
_0809515C: .4byte 0x04000054
_08095160: .4byte 0x03001220
_08095164: .4byte 0x03001222
_08095168: .4byte 0x0863A19C
_0809516C: .4byte 0x0600D000
_08095170: .4byte 0x85000400
_08095174: .4byte EndingBslCrashingVblank

	thumb_func_start EndingShipFrontViewInit
EndingShipFrontViewInit: @ 0x08095178
	push {r4, r5, r6, lr}
	sub sp, #8
	ldr r3, _080952D4 @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _080952D8 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _080952DC @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _080952E0 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _080952E4 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _080952E8 @ =unk_99940
	bl CallbackSetVBlank
	movs r5, #0
	str r5, [sp]
	ldr r4, _080952EC @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r6, _080952F0 @ =0x030016A0
	str r6, [r4, #4]
	ldr r0, _080952F4 @ =0x850000B4
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	add r1, sp, #4
	strh r5, [r1]
	str r1, [r4]
	ldr r2, _080952F8 @ =0xFFFFFDF8
	adds r0, r6, r2
	str r0, [r4, #4]
	ldr r2, _080952FC @ =0x8100007E
	str r2, [r4, #8]
	ldr r0, [r4, #8]
	strh r5, [r1]
	str r1, [r4]
	ldr r1, _08095300 @ =0xFFFFFEF4
	adds r0, r6, r1
	str r0, [r4, #4]
	str r2, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08095304 @ =0x08626738
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _08095308 @ =0x0863929C
	ldr r1, _0809530C @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _08095310 @ =0x086395B8
	ldr r1, _08095314 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _08095318 @ =0x08636E38
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _0809531C @ =0x84000080
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08095320 @ =gBg1XPosition
	strh r5, [r0]
	ldr r0, _08095324 @ =gBg1YPosition
	strh r5, [r0]
	ldr r0, _08095328 @ =0x0300122C
	strh r5, [r0]
	ldr r3, _0809532C @ =0x0300122E
	ldr r2, _08095330 @ =0x0000FFE2
	adds r0, r2, #0
	strh r0, [r3]
	ldr r0, _08095334 @ =0x03001230
	strh r5, [r0]
	ldr r0, _08095338 @ =0x03001232
	strh r5, [r0]
	ldr r0, _0809533C @ =0x04000010
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r1, _08095340 @ =0x04000008
	ldr r2, _08095344 @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	ldr r2, _08095348 @ =0x00001E02
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _0809534C @ =0x00001F03
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x42
	movs r0, #0xbf
	strh r0, [r1]
	ldr r0, _08095350 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _08095354 @ =0x04000054
	strh r1, [r0]
	ldr r0, _08095358 @ =0x03001220
	strh r1, [r0]
	ldr r0, _0809535C @ =0x03001222
	strh r1, [r0]
	ldr r2, _08095360 @ =0x04000052
	lsls r0, r1, #8
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	ldrsh r2, [r3, r0]
	movs r0, #0xc
	movs r1, #0
	movs r3, #0
	bl EndingBslCrashingSetupOam
	movs r0, #0xa
	movs r1, #0x78
	movs r2, #0x6a
	movs r3, #1
	bl EndingBslCrashingSetupOam
	movs r0, #0xb
	movs r1, #0x78
	movs r2, #0x40
	movs r3, #0
	bl EndingBslCrashingSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r1, _08095364 @ =0xFFFFFDE4
	adds r6, r6, r1
	ldr r0, _08095368 @ =0x0863A19C
	str r0, [r6]
	str r5, [sp]
	mov r2, sp
	str r2, [r4]
	ldr r0, _0809536C @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _08095370 @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xe0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08095374 @ =EndingShipFrontViewVblank
	bl CallbackSetVBlank
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080952D4: .4byte 0x04000208
_080952D8: .4byte 0x04000004
_080952DC: .4byte 0x0000FFEF
_080952E0: .4byte 0x04000200
_080952E4: .4byte 0x0000FFFD
_080952E8: .4byte unk_99940
_080952EC: .4byte 0x040000D4
_080952F0: .4byte 0x030016A0
_080952F4: .4byte 0x850000B4
_080952F8: .4byte 0xFFFFFDF8
_080952FC: .4byte 0x8100007E
_08095300: .4byte 0xFFFFFEF4
_08095304: .4byte 0x08626738
_08095308: .4byte 0x0863929C
_0809530C: .4byte 0x0600F000
_08095310: .4byte 0x086395B8
_08095314: .4byte 0x0600F800
_08095318: .4byte 0x08636E38
_0809531C: .4byte 0x84000080
_08095320: .4byte gBg1XPosition
_08095324: .4byte gBg1YPosition
_08095328: .4byte 0x0300122C
_0809532C: .4byte 0x0300122E
_08095330: .4byte 0x0000FFE2
_08095334: .4byte 0x03001230
_08095338: .4byte 0x03001232
_0809533C: .4byte 0x04000010
_08095340: .4byte 0x04000008
_08095344: .4byte 0x00001C08
_08095348: .4byte 0x00001E02
_0809534C: .4byte 0x00001F03
_08095350: .4byte gWrittenToBldy
_08095354: .4byte 0x04000054
_08095358: .4byte 0x03001220
_0809535C: .4byte 0x03001222
_08095360: .4byte 0x04000052
_08095364: .4byte 0xFFFFFDE4
_08095368: .4byte 0x0863A19C
_0809536C: .4byte 0x0600D000
_08095370: .4byte 0x85000400
_08095374: .4byte EndingShipFrontViewVblank

	thumb_func_start EndingBslCrashingProcess
EndingBslCrashingProcess: @ 0x08095378
	push {r4, r5, r6, lr}
	movs r5, #0
	ldr r2, _080953A4 @ =gNonGameplayRam
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r4, #0x85
	lsls r4, r4, #2
	adds r0, r2, r4
	ldrb r0, [r0]
	adds r3, r2, #0
	cmp r0, #9
	bls _0809539A
	b _08095634
_0809539A:
	lsls r0, r0, #2
	ldr r1, _080953A8 @ =_080953AC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080953A4: .4byte gNonGameplayRam
_080953A8: .4byte _080953AC
_080953AC: @ jump table
	.4byte _080953D4 @ case 0
	.4byte _08095418 @ case 1
	.4byte _08095424 @ case 2
	.4byte _0809548C @ case 3
	.4byte _080954E4 @ case 4
	.4byte _08095534 @ case 5
	.4byte _08095556 @ case 6
	.4byte _08095578 @ case 7
	.4byte _0809559C @ case 8
	.4byte _080955EC @ case 9
_080953D4:
	ldr r4, _080953F0 @ =gWrittenToBldy
	ldrh r2, [r4]
	cmp r2, #0
	beq _080953F8
	cmp r2, #0x10
	bne _080953E6
	ldr r0, _080953F4 @ =0x0000024B
	bl unk_3b1c
_080953E6:
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	b _080955DC
	.align 2, 0
_080953F0: .4byte gWrittenToBldy
_080953F4: .4byte 0x0000024B
_080953F8:
	ldr r1, _08095414 @ =0x04000050
	movs r6, #0xc4
	lsls r6, r6, #4
	adds r0, r6, #0
	strh r0, [r1]
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r3, r1
	strh r2, [r0]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #1
	b _080955DA
	.align 2, 0
_08095414: .4byte 0x04000050
_08095418:
	movs r4, #0x84
	lsls r4, r4, #2
	adds r1, r3, r4
	movs r0, #0
	strh r0, [r1]
	b _080955DC
_08095424:
	movs r6, #0x84
	lsls r6, r6, #2
	adds r4, r3, r6
	ldrh r2, [r4]
	cmp r2, #1
	bne _08095458
	ldr r0, _0809544C @ =0x03001220
	movs r1, #0xa
	strh r1, [r0]
	ldr r0, _08095450 @ =0x03001222
	strh r1, [r0]
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r3, r1
	movs r1, #0
	strb r2, [r0]
	ldr r2, _08095454 @ =0x00000111
	adds r0, r3, r2
	strb r1, [r0]
	b _080955DC
	.align 2, 0
_0809544C: .4byte 0x03001220
_08095450: .4byte 0x03001222
_08095454: .4byte 0x00000111
_08095458:
	cmp r2, #2
	beq _0809545E
	b _080955DC
_0809545E:
	ldr r1, _08095484 @ =0x04000050
	ldr r6, _08095488 @ =0x00000842
	adds r0, r6, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r6, #0x80
	lsls r6, r6, #2
	adds r1, r6, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	strh r0, [r4]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #3
	b _080955DA
	.align 2, 0
_08095484: .4byte 0x04000050
_08095488: .4byte 0x00000842
_0809548C:
	ldr r1, _080954B8 @ =0x00000111
	adds r4, r3, r1
	ldrb r2, [r4]
	cmp r2, #0xe
	bhi _080954BC
	movs r6, #0x84
	lsls r6, r6, #2
	adds r1, r3, r6
	ldrh r0, [r1]
	cmp r0, #4
	beq _080954A4
	b _080955DC
_080954A4:
	movs r0, #0
	strh r0, [r1]
	movs r0, #0x88
	lsls r0, r0, #1
	adds r1, r3, r0
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #1
	strb r0, [r4]
	b _080955DC
	.align 2, 0
_080954B8: .4byte 0x00000111
_080954BC:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r3, r2
	ldrh r0, [r1]
	cmp r0, #0x14
	beq _080954CA
	b _080955DC
_080954CA:
	movs r0, #0
	strh r0, [r1]
	ldr r1, _080954E0 @ =gWrittenToBldy
	movs r0, #0x10
	strh r0, [r1]
	movs r4, #0x85
	lsls r4, r4, #2
	adds r1, r3, r4
	movs r0, #4
	b _080955DA
	.align 2, 0
_080954E0: .4byte gWrittenToBldy
_080954E4:
	ldr r4, _0809550C @ =0x03001220
	ldrh r2, [r4]
	cmp r2, #0xf
	bhi _08095514
	movs r6, #0x84
	lsls r6, r6, #2
	adds r1, r3, r6
	ldrh r0, [r1]
	cmp r0, #6
	bne _080955DC
	movs r0, #0
	strh r0, [r1]
	adds r0, r2, #1
	strh r0, [r4]
	ldr r1, _08095510 @ =0x03001222
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _080955DC
	.align 2, 0
_0809550C: .4byte 0x03001220
_08095510: .4byte 0x03001222
_08095514:
	ldr r1, _08095530 @ =0x04000050
	movs r0, #0xbf
	strh r0, [r1]
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #0
	strh r0, [r1]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #5
	b _080955DA
	.align 2, 0
_08095530: .4byte 0x04000050
_08095534:
	movs r4, #0x84
	lsls r4, r4, #2
	adds r1, r3, r4
	ldrh r0, [r1]
	cmp r0, #0xa
	beq _08095542
	b _08095634
_08095542:
	movs r0, #0
	strh r0, [r1]
	movs r6, #0x85
	lsls r6, r6, #2
	adds r1, r3, r6
	movs r0, #6
	strb r0, [r1]
	bl EndingShipFrontViewInit
	b _08095634
_08095556:
	ldr r1, _08095574 @ =0x04000050
	movs r2, #0xc4
	lsls r2, r2, #4
	adds r0, r2, #0
	strh r0, [r1]
	movs r4, #0x84
	lsls r4, r4, #2
	adds r1, r3, r4
	movs r0, #0
	strh r0, [r1]
	movs r6, #0x85
	lsls r6, r6, #2
	adds r1, r3, r6
	movs r0, #7
	b _080955DA
	.align 2, 0
_08095574: .4byte 0x04000050
_08095578:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r3, r0
	ldrh r0, [r1]
	cmp r0, #0xa8
	bne _080955DC
	movs r0, #0
	strh r0, [r1]
	ldr r1, _08095598 @ =gWrittenToBldy
	movs r0, #2
	strh r0, [r1]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #8
	b _080955DA
	.align 2, 0
_08095598: .4byte gWrittenToBldy
_0809559C:
	movs r4, #0x84
	lsls r4, r4, #2
	adds r1, r3, r4
	ldrh r0, [r1]
	cmp r0, #1
	bne _080955DC
	movs r0, #0
	strh r0, [r1]
	ldr r1, _080955C8 @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0
	beq _080955CC
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080955DC
	movs r0, #0xa
	bl SpecialCutsceneDestroyOamOfType
	b _080955DC
	.align 2, 0
_080955C8: .4byte 0x03001220
_080955CC:
	ldr r1, _080955E8 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	movs r6, #0x85
	lsls r6, r6, #2
	adds r1, r3, r6
	movs r0, #9
_080955DA:
	strb r0, [r1]
_080955DC:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _08095634
	.align 2, 0
_080955E8: .4byte 0x04000050
_080955EC:
	ldr r4, _0809560C @ =gWrittenToBldy
	ldrh r2, [r4]
	cmp r2, #0xf
	bhi _08095610
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r3, r0
	ldrh r0, [r1]
	cmp r0, #4
	bne _0809562C
	adds r0, r2, #1
	strh r0, [r4]
	movs r0, #0
	strh r0, [r1]
	b _0809562C
	.align 2, 0
_0809560C: .4byte gWrittenToBldy
_08095610:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r2, r3, r1
	ldrh r0, [r2]
	cmp r0, #0x5a
	bne _0809562C
	movs r0, #0
	movs r1, #0
	strh r1, [r2]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	strb r0, [r1]
	movs r5, #1
_0809562C:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_08095634:
	adds r0, r5, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start EndingBslCrashing
EndingBslCrashing: @ 0x0809563C
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _08095654 @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _08095668
	cmp r0, #1
	bgt _08095658
	cmp r0, #0
	beq _08095662
	b _080956BC
	.align 2, 0
_08095654: .4byte gNonGameplayRam
_08095658:
	cmp r0, #2
	beq _08095680
	cmp r0, #3
	beq _0809569C
	b _080956BC
_08095662:
	bl EndingBslCrashingInit
	b _08095674
_08095668:
	bl SpecialCutsceneFadeIn
	ldr r0, _0809567C @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _080956BC
_08095674:
	movs r0, #2
	strh r0, [r4, #8]
	b _080956BC
	.align 2, 0
_0809567C: .4byte gWrittenToBldy
_08095680:
	bl EndingBslCrashingProcess
	cmp r0, #0
	beq _080956BC
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	strb r5, [r0]
	subs r1, #1
	adds r0, r4, r1
	strb r5, [r0]
	movs r0, #3
	strh r0, [r4, #8]
	b _080956BC
_0809569C:
	ldr r1, _080956AC @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _080956B0
	adds r0, #1
	strh r0, [r1]
	b _080956B4
	.align 2, 0
_080956AC: .4byte gWrittenToBldy
_080956B0:
	strh r5, [r4, #8]
	movs r5, #1
_080956B4:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_080956BC:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start EndingProcessFallingBsl
EndingProcessFallingBsl: @ 0x080956C4
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #0xa]
	adds r0, #1
	movs r2, #0
	strh r0, [r4, #0xa]
	ldrb r1, [r4, #0x14]
	cmp r1, #0
	bne _080956E6
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	strh r1, [r4, #0xa]
	movs r0, #1
	strb r0, [r4, #0x14]
	b _08095796
_080956E6:
	cmp r1, #1
	bne _08095744
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	bne _08095702
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _08095702
	strb r2, [r4, #0x12]
_08095702:
	ldrh r0, [r4, #0xa]
	movs r1, #5
	bl __udivsi3
	ldrh r1, [r4]
	subs r1, r1, r0
	strh r1, [r4, #0xc]
	ldrh r0, [r4, #0xa]
	movs r1, #5
	bl __udivsi3
	ldrh r1, [r4, #2]
	adds r1, r1, r0
	strh r1, [r4, #0xe]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, #0x50
	ble _0809572E
	movs r0, #0
	strh r0, [r4, #0xa]
	movs r0, #2
	strb r0, [r4, #0x14]
_0809572E:
	ldrb r0, [r4, #0x10]
	cmp r0, #1
	bne _0809573C
	ldrh r0, [r4, #6]
	subs r0, #1
	strh r0, [r4, #6]
	b _08095796
_0809573C:
	ldrh r0, [r4, #6]
	subs r0, #2
	strh r0, [r4, #6]
	b _08095796
_08095744:
	cmp r1, #2
	bne _08095770
	movs r0, #3
	strb r0, [r4, #0x14]
	ldrb r0, [r4, #0x10]
	cmp r0, #1
	bne _0809578A
	ldr r0, _08095768 @ =0x086362B8
	str r0, [r4, #0x1c]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _0809576C @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r0, r2
	strb r1, [r0]
	b _08095796
	.align 2, 0
_08095768: .4byte 0x086362B8
_0809576C: .4byte gNonGameplayRam
_08095770:
	cmp r1, #3
	bne _08095796
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	bne _08095796
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _08095796
_0809578A:
	strb r2, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
_08095796:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start unk_9579c
unk_9579c: @ 0x0809579C
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _080957C8
	ldrb r0, [r2, #0x11]
	lsls r0, r0, #3
	ldr r1, [r2, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _080957C8
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _080957C8
	strb r1, [r2, #0x10]
	ldrb r1, [r2, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x18]
_080957C8:
	pop {r0}
	bx r0

	thumb_func_start EndingProcessLeavingSmallShip
EndingProcessLeavingSmallShip: @ 0x080957CC
	push {r4, r5, lr}
	adds r5, r0, #0
	ldrh r0, [r5, #0xa]
	adds r2, r0, #1
	strh r2, [r5, #0xa]
	ldrb r1, [r5, #0x14]
	cmp r1, #0
	bne _080957FC
	ldrh r0, [r5, #0xc]
	strh r0, [r5]
	ldrh r0, [r5, #0xe]
	strh r0, [r5, #2]
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x96
	bne _0809582A
	strh r1, [r5, #0xa]
	ldrb r0, [r5, #0x18]
	movs r1, #1
	orrs r0, r1
	strb r0, [r5, #0x18]
	movs r0, #1
	strb r0, [r5, #0x14]
	b _0809582A
_080957FC:
	cmp r1, #1
	bne _0809582A
	lsls r0, r2, #2
	ldrh r4, [r5]
	subs r4, r4, r0
	strh r4, [r5, #0xc]
	ldrh r0, [r5, #0xa]
	movs r1, #3
	bl __udivsi3
	ldrh r1, [r5, #2]
	adds r1, r1, r0
	strh r1, [r5, #0xe]
	lsls r4, r4, #0x10
	cmp r4, #0
	bge _0809582A
	movs r0, #0
	strb r0, [r5, #0x10]
	ldrb r1, [r5, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r5, #0x18]
_0809582A:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start EndingProcessLeavingBigShip
EndingProcessLeavingBigShip: @ 0x08095830
	push {lr}
	adds r3, r0, #0
	ldrh r0, [r3, #0xa]
	adds r2, r0, #1
	strh r2, [r3, #0xa]
	ldrb r1, [r3, #0x14]
	cmp r1, #0
	bne _08095860
	ldrh r0, [r3, #0xc]
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	strh r0, [r3, #2]
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xf0
	bne _08095890
	strh r1, [r3, #0xa]
	ldrb r0, [r3, #0x18]
	movs r1, #1
	orrs r0, r1
	strb r0, [r3, #0x18]
	movs r0, #1
	strb r0, [r3, #0x14]
	b _08095890
_08095860:
	cmp r1, #1
	bne _08095890
	lsls r2, r2, #2
	ldrh r0, [r3]
	adds r2, r2, r0
	strh r2, [r3, #0xc]
	ldrh r0, [r3, #0xa]
	lsls r1, r0, #1
	adds r1, r1, r0
	ldrh r0, [r3, #2]
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	lsls r2, r2, #0x10
	movs r0, #0x8c
	lsls r0, r0, #0x11
	cmp r2, r0
	ble _08095890
	movs r0, #0
	strb r0, [r3, #0x10]
	ldrb r1, [r3, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r3, #0x18]
_08095890:
	pop {r0}
	bx r0

	thumb_func_start EndingProcessFrontFacingShipThrusters
EndingProcessFrontFacingShipThrusters: @ 0x08095894
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldrb r0, [r5, #0x14]
	cmp r0, #0
	bne _080958A8
	ldrh r0, [r5, #0xe]
	strh r0, [r5, #2]
	movs r0, #1
	strb r0, [r5, #0x14]
_080958A8:
	mov r4, sp
	adds r4, #2
	movs r0, #0xc
	mov r1, sp
	adds r2, r4, #0
	bl EndingGetPositionAndSlotOfOamByType
	ldrh r0, [r5, #2]
	ldrh r1, [r4]
	subs r0, r0, r1
	strh r0, [r5, #0xe]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start EndingProcessFrontFacingShip
EndingProcessFrontFacingShip: @ 0x080958C8
	push {r4, lr}
	adds r3, r0, #0
	ldrh r0, [r3, #0xa]
	adds r0, #1
	movs r4, #0
	strh r0, [r3, #0xa]
	ldrb r1, [r3, #0x14]
	cmp r1, #0
	bne _080958EA
	ldrh r0, [r3, #0xe]
	strh r0, [r3, #2]
	strh r4, [r3, #0xa]
	movs r0, #4
	strb r0, [r3, #0x13]
	movs r0, #1
	strb r0, [r3, #0x14]
	b _08095944
_080958EA:
	cmp r1, #1
	bne _0809591C
	ldrb r1, [r3, #0x13]
	adds r1, #1
	strb r1, [r3, #0x13]
	ldr r2, _08095918 @ =0x080A4FA4
	ldrb r0, [r3, #0x13]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	ldrh r2, [r3, #2]
	adds r0, r0, r2
	strh r0, [r3, #0xe]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	cmp r1, #0x40
	bne _08095944
	movs r0, #2
	strb r0, [r3, #0x14]
	strh r4, [r3, #0xa]
	b _08095944
	.align 2, 0
_08095918: .4byte 0x080A4FA4
_0809591C:
	cmp r1, #2
	bne _08095944
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _08095930
	strh r4, [r3, #0xa]
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
_08095930:
	ldr r1, _08095950 @ =0x080A4FA4
	ldrb r0, [r3, #0x13]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	ldrh r1, [r3, #2]
	adds r0, r0, r1
	strh r0, [r3, #0xe]
_08095944:
	ldr r1, _08095954 @ =0x0300122E
	ldrh r0, [r3, #0xe]
	strh r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08095950: .4byte 0x080A4FA4
_08095954: .4byte 0x0300122E

	thumb_func_start EndingBslCrashingSetupOam
EndingBslCrashingSetupOam: @ 0x08095958
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sb, r2
	lsls r3, r3, #0x18
	cmp r3, #0
	bne _080959BC
	movs r2, #0
	ldr r1, _080959B8 @ =gNonGameplayRam
	movs r3, #0x8b
	lsls r3, r3, #2
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080959AA
	adds r4, r1, #0
_0809598A:
	lsls r0, r2, #0x18
	movs r1, #0x80
	lsls r1, r1, #0x11
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x13
	bgt _080959FA
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _0809598A
_080959AA:
	lsls r0, r2, #0x18
	asrs r1, r0, #0x18
	adds r7, r0, #0
	cmp r1, #0x13
	ble _08095A04
	b _080959FA
	.align 2, 0
_080959B8: .4byte gNonGameplayRam
_080959BC:
	movs r2, #0x13
	ldr r1, _08095A00 @ =gNonGameplayRam
	movs r3, #0x9b
	lsls r3, r3, #3
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080959F2
	adds r4, r1, #0
	movs r3, #0x8b
	lsls r3, r3, #2
_080959D2:
	lsls r0, r2, #0x18
	movs r1, #0xff
	lsls r1, r1, #0x18
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0
	blt _080959FA
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _080959D2
_080959F2:
	lsls r0, r2, #0x18
	adds r7, r0, #0
	cmp r7, #0
	bge _08095A04
_080959FA:
	movs r0, #0x14
	b _08095C3E
	.align 2, 0
_08095A00: .4byte gNonGameplayRam
_08095A04:
	movs r0, #0
	str r0, [sp]
	ldr r2, _08095A94 @ =0x040000D4
	mov r3, sp
	str r3, [r2]
	asrs r1, r7, #0x18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r5, r0, #2
	ldr r0, _08095A98 @ =0x030016A0
	mov ip, r0
	adds r0, r5, r0
	str r0, [r2, #4]
	ldr r0, _08095A9C @ =0x85000009
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	ldr r0, _08095AA0 @ =0xFFFFFDE4
	add r0, ip
	adds r2, r5, r0
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r2, r1
	mov r3, r8
	strh r3, [r0]
	adds r1, #2
	adds r0, r2, r1
	mov r3, sb
	strh r3, [r0]
	adds r1, #2
	adds r0, r2, r1
	strb r6, [r0]
	movs r3, #0x8d
	lsls r3, r3, #2
	adds r4, r2, r3
	ldrb r1, [r4]
	movs r0, #1
	orrs r1, r0
	strb r1, [r4]
	cmp r6, #1
	bne _08095AB4
	ldr r0, _08095AA4 @ =0x00000222
	adds r1, r2, r0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	ldr r1, _08095AA8 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	ldrb r1, [r4]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r4]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08095AAC @ =0x08636020
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08095AB0 @ =EndingProcessFallingBsl
	b _08095C3A
	.align 2, 0
_08095A94: .4byte 0x040000D4
_08095A98: .4byte 0x030016A0
_08095A9C: .4byte 0x85000009
_08095AA0: .4byte 0xFFFFFDE4
_08095AA4: .4byte 0x00000222
_08095AA8: .4byte 0x00000236
_08095AAC: .4byte 0x08636020
_08095AB0: .4byte EndingProcessFallingBsl
_08095AB4:
	cmp r6, #2
	bne _08095B14
	ldr r3, _08095B04 @ =0x00000222
	adds r1, r2, r3
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	ldrb r1, [r4]
	movs r0, #0x19
	rsbs r0, r0, #0
	ands r0, r1
	movs r3, #8
	orrs r0, r3
	strb r0, [r4]
	ldr r0, _08095B08 @ =0x00000236
	adds r2, r2, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r3
	strb r0, [r2]
	ldrb r1, [r4]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r4]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08095B0C @ =0x08636038
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08095B10 @ =EndingProcessFallingBsl
	b _08095C3A
	.align 2, 0
_08095B04: .4byte 0x00000222
_08095B08: .4byte 0x00000236
_08095B0C: .4byte 0x08636038
_08095B10: .4byte EndingProcessFallingBsl
_08095B14:
	cmp r6, #3
	bne _08095B4C
	ldr r1, _08095B40 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08095B44 @ =0x08636050
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08095B48 @ =unk_9579c
	b _08095C3A
	.align 2, 0
_08095B40: .4byte 0x00000236
_08095B44: .4byte 0x08636050
_08095B48: .4byte unk_9579c
_08095B4C:
	cmp r6, #4
	bne _08095B88
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4]
	ldr r3, _08095B7C @ =0x00000236
	adds r2, r2, r3
	ldrb r1, [r2]
	subs r0, #0xb
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08095B80 @ =0x08636288
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08095B84 @ =EndingProcessLeavingSmallShip
	b _08095C3A
	.align 2, 0
_08095B7C: .4byte 0x00000236
_08095B80: .4byte 0x08636288
_08095B84: .4byte EndingProcessLeavingSmallShip
_08095B88:
	cmp r6, #5
	bne _08095BB0
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08095BA8 @ =0x086362A0
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08095BAC @ =EndingProcessLeavingBigShip
	b _08095C3A
	.align 2, 0
_08095BA8: .4byte 0x086362A0
_08095BAC: .4byte EndingProcessLeavingBigShip
_08095BB0:
	cmp r6, #0xa
	bne _08095BEC
	movs r0, #0x19
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #8
	orrs r1, r0
	strb r1, [r4]
	ldr r0, _08095BE0 @ =0x00000236
	adds r2, r2, r0
	ldrb r0, [r2]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08095BE4 @ =0x086363A0
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08095BE8 @ =unk_95e20
	b _08095C3A
	.align 2, 0
_08095BE0: .4byte 0x00000236
_08095BE4: .4byte 0x086363A0
_08095BE8: .4byte unk_95e20
_08095BEC:
	cmp r6, #0xb
	bne _08095C1C
	ldr r1, _08095C10 @ =0x00000236
	adds r2, r2, r1
	ldrb r0, [r2]
	movs r1, #0xc
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08095C14 @ =0x086363B8
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08095C18 @ =EndingProcessFrontFacingShipThrusters
	b _08095C3A
	.align 2, 0
_08095C10: .4byte 0x00000236
_08095C14: .4byte 0x086363B8
_08095C18: .4byte EndingProcessFrontFacingShipThrusters
_08095C1C:
	cmp r6, #0xc
	bne _08095C3C
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r4]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08095C4C @ =0x086363A0
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08095C50 @ =EndingProcessFrontFacingShip
_08095C3A:
	str r1, [r0]
_08095C3C:
	lsrs r0, r7, #0x18
_08095C3E:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08095C4C: .4byte 0x086363A0
_08095C50: .4byte EndingProcessFrontFacingShip

	thumb_func_start EndingBslCrashingVblank
EndingBslCrashingVblank: @ 0x08095C54
	push {lr}
	ldr r3, _08095CE0 @ =0x040000D4
	ldr r0, _08095CE4 @ =gOamData
	str r0, [r3]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r3, #4]
	ldr r0, _08095CE8 @ =0x84000100
	str r0, [r3, #8]
	ldr r0, [r3, #8]
	ldr r2, _08095CEC @ =0x04000052
	ldr r0, _08095CF0 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08095CF4 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08095CF8 @ =0x04000054
	ldr r0, _08095CFC @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x40
	ldr r0, _08095D00 @ =gBg1XPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08095D04 @ =gBg1YPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08095D08 @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08095D0C @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08095D10 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08095D14 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _08095D18 @ =gNonGameplayRam
	movs r0, #0x88
	lsls r0, r0, #1
	adds r2, r1, r0
	ldrb r0, [r2]
	cmp r0, #1
	bne _08095CDA
	movs r0, #0
	strb r0, [r2]
	ldr r2, _08095D1C @ =0x00000111
	adds r0, r1, r2
	ldrb r0, [r0]
	lsls r0, r0, #5
	ldr r1, _08095D20 @ =0x08636A38
	adds r0, r0, r1
	str r0, [r3]
	ldr r0, _08095D24 @ =0x05000120
	str r0, [r3, #4]
	ldr r0, _08095D28 @ =0x84000008
	str r0, [r3, #8]
	ldr r0, [r3, #8]
_08095CDA:
	pop {r0}
	bx r0
	.align 2, 0
_08095CE0: .4byte 0x040000D4
_08095CE4: .4byte gOamData
_08095CE8: .4byte 0x84000100
_08095CEC: .4byte 0x04000052
_08095CF0: .4byte 0x03001222
_08095CF4: .4byte 0x03001220
_08095CF8: .4byte 0x04000054
_08095CFC: .4byte gWrittenToBldy
_08095D00: .4byte gBg1XPosition
_08095D04: .4byte gBg1YPosition
_08095D08: .4byte 0x0300122C
_08095D0C: .4byte 0x0300122E
_08095D10: .4byte 0x03001230
_08095D14: .4byte 0x03001232
_08095D18: .4byte gNonGameplayRam
_08095D1C: .4byte 0x00000111
_08095D20: .4byte 0x08636A38
_08095D24: .4byte 0x05000120
_08095D28: .4byte 0x84000008

	thumb_func_start EndingShipFrontViewVblank
EndingShipFrontViewVblank: @ 0x08095D2C
	ldr r1, _08095D88 @ =0x040000D4
	ldr r0, _08095D8C @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08095D90 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _08095D94 @ =0x04000052
	ldr r0, _08095D98 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08095D9C @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08095DA0 @ =0x04000054
	ldr r0, _08095DA4 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x40
	ldr r0, _08095DA8 @ =gBg1XPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08095DAC @ =gBg1YPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08095DB0 @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08095DB4 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08095DB8 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08095DBC @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_08095D88: .4byte 0x040000D4
_08095D8C: .4byte gOamData
_08095D90: .4byte 0x84000100
_08095D94: .4byte 0x04000052
_08095D98: .4byte 0x03001222
_08095D9C: .4byte 0x03001220
_08095DA0: .4byte 0x04000054
_08095DA4: .4byte gWrittenToBldy
_08095DA8: .4byte gBg1XPosition
_08095DAC: .4byte gBg1YPosition
_08095DB0: .4byte 0x0300122C
_08095DB4: .4byte 0x0300122E
_08095DB8: .4byte 0x03001230
_08095DBC: .4byte 0x03001232

	thumb_func_start EndingGetPositionAndSlotOfOamByType
EndingGetPositionAndSlotOfOamByType: @ 0x08095DC0
	push {r4, r5, r6, r7, lr}
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r1, #0
	ldr r7, _08095DF8 @ =gNonGameplayRam
	movs r6, #0x8b
	lsls r6, r6, #2
_08095DD0:
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r7
	adds r0, r3, r6
	ldrb r0, [r0]
	cmp r0, r5
	bne _08095E00
	movs r5, #0x8a
	lsls r5, r5, #2
	adds r0, r3, r5
	ldrh r0, [r0]
	strh r0, [r4]
	ldr r4, _08095DFC @ =0x0000022A
	adds r0, r3, r4
	ldrh r0, [r0]
	strh r0, [r2]
	adds r0, r1, #0
	b _08095E18
	.align 2, 0
_08095DF8: .4byte gNonGameplayRam
_08095DFC: .4byte 0x0000022A
_08095E00:
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x13
	bls _08095DD0
	movs r5, #0x96
	lsls r5, r5, #1
	adds r0, r5, #0
	strh r0, [r4]
	movs r0, #0xc8
	strh r0, [r2]
	movs r0, #0x14
_08095E18:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start unk_95e20
unk_95e20: @ 0x08095E20
	bx lr
	.align 2, 0

	thumb_func_start EndingMonologueInit
EndingMonologueInit: @ 0x08095E24
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	ldr r3, _08095F78 @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _08095F7C @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _08095F80 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08095F84 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _08095F88 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _08095F8C @ =unk_99940
	bl CallbackSetVBlank
	movs r6, #0
	str r6, [sp]
	ldr r4, _08095F90 @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r1, _08095F94 @ =gNonGameplayRam
	mov r8, r1
	str r1, [r4, #4]
	ldr r0, _08095F98 @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08095F9C @ =0x086150E8
	ldr r1, _08095FA0 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _08095FA4 @ =0x08636638
	str r0, [r4]
	ldr r0, _08095FA8 @ =0x05000200
	str r0, [r4, #4]
	ldr r5, _08095FAC @ =0x84000080
	str r5, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08095FB0 @ =0x086186A4
	ldr r1, _08095FB4 @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _08095FB8 @ =0x086377F8
	ldr r1, _08095FBC @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _08095FC0 @ =0x08636438
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	str r5, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08095FC4 @ =0x08662804
	movs r5, #0x80
	lsls r5, r5, #0x12
	adds r1, r5, #0
	bl LZ77UncompWram
	str r5, [r4]
	ldr r0, _08095FC8 @ =0x06004800
	str r0, [r4, #4]
	ldr r0, _08095FCC @ =0x84000200
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	str r6, [sp]
	mov r2, sp
	str r2, [r4]
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _08095FD0 @ =0x85001200
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08095FD4 @ =0x08663820
	str r0, [r4]
	ldr r0, _08095FD8 @ =0x05000180
	str r0, [r4, #4]
	ldr r0, _08095FDC @ =0x84000020
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08095FE0 @ =gBg1XPosition
	strh r6, [r0]
	ldr r0, _08095FE4 @ =gBg1YPosition
	strh r6, [r0]
	ldr r0, _08095FE8 @ =0x0300122C
	strh r6, [r0]
	ldr r0, _08095FEC @ =0x0300122E
	strh r6, [r0]
	ldr r0, _08095FF0 @ =0x03001230
	strh r6, [r0]
	ldr r0, _08095FF4 @ =0x03001232
	strh r6, [r0]
	ldr r0, _08095FF8 @ =0x04000010
	strh r6, [r0]
	ldr r1, _08095FFC @ =0x04000012
	movs r0, #4
	strh r0, [r1]
	ldr r0, _08096000 @ =0x04000014
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	subs r1, #0xa
	movs r2, #0x90
	lsls r2, r2, #4
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _08096004 @ =0x00001E01
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	ldr r2, _08096008 @ =0x00001F0B
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x42
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _0809600C @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _08096010 @ =0x04000054
	strh r1, [r0]
	ldr r0, _08096014 @ =0x03001220
	strh r6, [r0]
	ldr r0, _08096018 @ =0x03001222
	strh r1, [r0]
	movs r1, #0x82
	lsls r1, r1, #1
	movs r0, #1
	movs r2, #0xb4
	movs r3, #0
	bl EndingDialogueSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _0809601C @ =0x0863A19C
	mov r1, r8
	str r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xc0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08096020 @ =EndingMonologueVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08095F78: .4byte 0x04000208
_08095F7C: .4byte 0x04000004
_08095F80: .4byte 0x0000FFEF
_08095F84: .4byte 0x04000200
_08095F88: .4byte 0x0000FFFD
_08095F8C: .4byte unk_99940
_08095F90: .4byte 0x040000D4
_08095F94: .4byte gNonGameplayRam
_08095F98: .4byte 0x85000150
_08095F9C: .4byte 0x086150E8
_08095FA0: .4byte 0x06010000
_08095FA4: .4byte 0x08636638
_08095FA8: .4byte 0x05000200
_08095FAC: .4byte 0x84000080
_08095FB0: .4byte 0x086186A4
_08095FB4: .4byte 0x06008000
_08095FB8: .4byte 0x086377F8
_08095FBC: .4byte 0x0600F800
_08095FC0: .4byte 0x08636438
_08095FC4: .4byte 0x08662804
_08095FC8: .4byte 0x06004800
_08095FCC: .4byte 0x84000200
_08095FD0: .4byte 0x85001200
_08095FD4: .4byte 0x08663820
_08095FD8: .4byte 0x05000180
_08095FDC: .4byte 0x84000020
_08095FE0: .4byte gBg1XPosition
_08095FE4: .4byte gBg1YPosition
_08095FE8: .4byte 0x0300122C
_08095FEC: .4byte 0x0300122E
_08095FF0: .4byte 0x03001230
_08095FF4: .4byte 0x03001232
_08095FF8: .4byte 0x04000010
_08095FFC: .4byte 0x04000012
_08096000: .4byte 0x04000014
_08096004: .4byte 0x00001E01
_08096008: .4byte 0x00001F0B
_0809600C: .4byte gWrittenToBldy
_08096010: .4byte 0x04000054
_08096014: .4byte 0x03001220
_08096018: .4byte 0x03001222
_0809601C: .4byte 0x0863A19C
_08096020: .4byte EndingMonologueVblank

	thumb_func_start EndingAdamConversationInit
EndingAdamConversationInit: @ 0x08096024
	push {r4, r5, r6, lr}
	sub sp, #8
	ldr r3, _0809617C @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _08096180 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _08096184 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08096188 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0809618C @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _08096190 @ =unk_99940
	bl CallbackSetVBlank
	movs r5, #0
	str r5, [sp]
	ldr r4, _08096194 @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r6, _08096198 @ =0x030016A0
	str r6, [r4, #4]
	ldr r0, _0809619C @ =0x850000B4
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	add r1, sp, #4
	strh r5, [r1]
	str r1, [r4]
	ldr r2, _080961A0 @ =0xFFFFFDF8
	adds r0, r6, r2
	str r0, [r4, #4]
	ldr r2, _080961A4 @ =0x8100007E
	str r2, [r4, #8]
	ldr r0, [r4, #8]
	strh r5, [r1]
	str r1, [r4]
	ldr r1, _080961A8 @ =0xFFFFFEF4
	adds r0, r6, r1
	str r0, [r4, #4]
	str r2, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080961AC @ =0x086131C8
	ldr r1, _080961B0 @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _080961B4 @ =0x08637238
	ldr r1, _080961B8 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _080961BC @ =0x08598898
	ldr r1, _080961C0 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _080961C4 @ =0x08636438
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _080961C8 @ =0x84000080
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080961CC @ =0x03001224
	ldr r1, _080961D0 @ =0x0000FFF8
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _080961D4 @ =0x03001226
	movs r1, #8
	strh r1, [r0]
	ldr r0, _080961D8 @ =gBg1XPosition
	strh r5, [r0]
	ldr r0, _080961DC @ =gBg1YPosition
	strh r5, [r0]
	ldr r0, _080961E0 @ =0x0300122C
	strh r5, [r0]
	ldr r0, _080961E4 @ =0x0300122E
	strh r5, [r0]
	ldr r0, _080961E8 @ =0x03001230
	strh r5, [r0]
	ldr r0, _080961EC @ =0x03001232
	strh r5, [r0]
	ldr r0, _080961F0 @ =0x04000010
	strh r2, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r1, _080961F4 @ =0x04000008
	ldr r2, _080961F8 @ =0x00001C08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #6
	ldr r2, _080961FC @ =0x00001F0B
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x42
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _08096200 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _08096204 @ =0x04000054
	strh r1, [r0]
	ldr r0, _08096208 @ =0x03001220
	strh r1, [r0]
	ldr r0, _0809620C @ =0x03001222
	strh r1, [r0]
	ldr r2, _08096210 @ =0x04000052
	lsls r0, r1, #8
	orrs r0, r1
	strh r0, [r2]
	movs r0, #2
	movs r1, #0x70
	movs r2, #0x50
	movs r3, #1
	bl EndingDialogueSetupOam
	movs r0, #3
	movs r1, #0x70
	movs r2, #0x50
	movs r3, #1
	bl EndingDialogueSetupOam
	movs r0, #4
	movs r1, #0x70
	movs r2, #0x50
	movs r3, #1
	bl EndingDialogueSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _08096214 @ =0xFFFFFDE4
	adds r6, r6, r0
	ldr r0, _08096218 @ =0x0863A19C
	str r0, [r6]
	str r5, [sp]
	mov r1, sp
	str r1, [r4]
	ldr r0, _0809621C @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _08096220 @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xc8
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08096224 @ =EndingConversationAndAnimalsVblank
	bl CallbackSetVBlank
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809617C: .4byte 0x04000208
_08096180: .4byte 0x04000004
_08096184: .4byte 0x0000FFEF
_08096188: .4byte 0x04000200
_0809618C: .4byte 0x0000FFFD
_08096190: .4byte unk_99940
_08096194: .4byte 0x040000D4
_08096198: .4byte 0x030016A0
_0809619C: .4byte 0x850000B4
_080961A0: .4byte 0xFFFFFDF8
_080961A4: .4byte 0x8100007E
_080961A8: .4byte 0xFFFFFEF4
_080961AC: .4byte 0x086131C8
_080961B0: .4byte 0x06008000
_080961B4: .4byte 0x08637238
_080961B8: .4byte 0x0600F800
_080961BC: .4byte 0x08598898
_080961C0: .4byte 0x0600E000
_080961C4: .4byte 0x08636438
_080961C8: .4byte 0x84000080
_080961CC: .4byte 0x03001224
_080961D0: .4byte 0x0000FFF8
_080961D4: .4byte 0x03001226
_080961D8: .4byte gBg1XPosition
_080961DC: .4byte gBg1YPosition
_080961E0: .4byte 0x0300122C
_080961E4: .4byte 0x0300122E
_080961E8: .4byte 0x03001230
_080961EC: .4byte 0x03001232
_080961F0: .4byte 0x04000010
_080961F4: .4byte 0x04000008
_080961F8: .4byte 0x00001C08
_080961FC: .4byte 0x00001F0B
_08096200: .4byte gWrittenToBldy
_08096204: .4byte 0x04000054
_08096208: .4byte 0x03001220
_0809620C: .4byte 0x03001222
_08096210: .4byte 0x04000052
_08096214: .4byte 0xFFFFFDE4
_08096218: .4byte 0x0863A19C
_0809621C: .4byte 0x0600D000
_08096220: .4byte 0x85000400
_08096224: .4byte EndingConversationAndAnimalsVblank

	thumb_func_start EndingAnimalsInit
EndingAnimalsInit: @ 0x08096228
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #8
	ldr r3, _08096390 @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _08096394 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _08096398 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0809639C @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _080963A0 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _080963A4 @ =unk_99940
	bl CallbackSetVBlank
	movs r5, #0
	str r5, [sp]
	ldr r4, _080963A8 @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r1, _080963AC @ =0x030016A0
	mov r8, r1
	str r1, [r4, #4]
	ldr r0, _080963B0 @ =0x850000B4
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	add r6, sp, #4
	strh r5, [r6]
	str r6, [r4]
	ldr r0, _080963B4 @ =0xFFFFFDF8
	add r0, r8
	str r0, [r4, #4]
	ldr r1, _080963B8 @ =0x8100007E
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	strh r5, [r6]
	str r6, [r4]
	ldr r0, _080963BC @ =0xFFFFFEF4
	add r0, r8
	str r0, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080963C0 @ =0x0861B89C
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _080963C4 @ =0x086217A8
	ldr r1, _080963C8 @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _080963CC @ =0x08638654
	ldr r1, _080963D0 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _080963D4 @ =0x08637DB8
	ldr r1, _080963D8 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _080963DC @ =0x08636838
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _080963E0 @ =0x84000080
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r2, _080963E4 @ =0x000002FF
	adds r0, r2, #0
	strh r0, [r6]
	str r6, [r4]
	ldr r0, _080963E8 @ =0x0600F500
	str r0, [r4, #4]
	ldr r0, _080963EC @ =0x81000180
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080963F0 @ =0x03001224
	strh r5, [r0]
	ldr r0, _080963F4 @ =0x03001226
	strh r5, [r0]
	ldr r0, _080963F8 @ =gBg1XPosition
	strh r5, [r0]
	ldr r0, _080963FC @ =gBg1YPosition
	strh r5, [r0]
	ldr r0, _08096400 @ =0x0300122C
	strh r5, [r0]
	ldr r0, _08096404 @ =0x03001230
	strh r5, [r0]
	ldr r1, _08096408 @ =0x0300122E
	ldr r2, _0809640C @ =0x0000FFE2
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08096410 @ =0x03001232
	movs r1, #0xe2
	strh r1, [r0]
	ldr r0, _08096414 @ =0x04000010
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r1, _08096418 @ =0x0400000C
	ldr r2, _0809641C @ =0x00001E0A
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	adds r2, #0xf9
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x42
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _08096420 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _08096424 @ =0x04000054
	strh r1, [r0]
	ldr r0, _08096428 @ =0x03001220
	strh r1, [r0]
	ldr r0, _0809642C @ =0x03001222
	strh r1, [r0]
	ldr r2, _08096430 @ =0x04000052
	lsls r0, r1, #8
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0x14
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl EndingDialogueSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _08096434 @ =0xFFFFFDE4
	add r8, r0
	ldr r0, _08096438 @ =0x0863A19C
	mov r1, r8
	str r0, [r1]
	str r5, [sp]
	mov r2, sp
	str r2, [r4]
	ldr r0, _0809643C @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _08096440 @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xe0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _08096444 @ =EndingConversationAndAnimalsVblank
	bl CallbackSetVBlank
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08096390: .4byte 0x04000208
_08096394: .4byte 0x04000004
_08096398: .4byte 0x0000FFEF
_0809639C: .4byte 0x04000200
_080963A0: .4byte 0x0000FFFD
_080963A4: .4byte unk_99940
_080963A8: .4byte 0x040000D4
_080963AC: .4byte 0x030016A0
_080963B0: .4byte 0x850000B4
_080963B4: .4byte 0xFFFFFDF8
_080963B8: .4byte 0x8100007E
_080963BC: .4byte 0xFFFFFEF4
_080963C0: .4byte 0x0861B89C
_080963C4: .4byte 0x086217A8
_080963C8: .4byte 0x06008000
_080963CC: .4byte 0x08638654
_080963D0: .4byte 0x0600F000
_080963D4: .4byte 0x08637DB8
_080963D8: .4byte 0x0600F800
_080963DC: .4byte 0x08636838
_080963E0: .4byte 0x84000080
_080963E4: .4byte 0x000002FF
_080963E8: .4byte 0x0600F500
_080963EC: .4byte 0x81000180
_080963F0: .4byte 0x03001224
_080963F4: .4byte 0x03001226
_080963F8: .4byte gBg1XPosition
_080963FC: .4byte gBg1YPosition
_08096400: .4byte 0x0300122C
_08096404: .4byte 0x03001230
_08096408: .4byte 0x0300122E
_0809640C: .4byte 0x0000FFE2
_08096410: .4byte 0x03001232
_08096414: .4byte 0x04000010
_08096418: .4byte 0x0400000C
_0809641C: .4byte 0x00001E0A
_08096420: .4byte gWrittenToBldy
_08096424: .4byte 0x04000054
_08096428: .4byte 0x03001220
_0809642C: .4byte 0x03001222
_08096430: .4byte 0x04000052
_08096434: .4byte 0xFFFFFDE4
_08096438: .4byte 0x0863A19C
_0809643C: .4byte 0x0600D000
_08096440: .4byte 0x85000400
_08096444: .4byte EndingConversationAndAnimalsVblank

	thumb_func_start EndingInShipProcess
EndingInShipProcess: @ 0x08096448
	push {r4, r5, r6, r7, lr}
	movs r6, #0
	ldr r2, _08096474 @ =gNonGameplayRam
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r7, #0x85
	lsls r7, r7, #2
	adds r0, r2, r7
	ldrb r0, [r0]
	adds r5, r2, #0
	cmp r0, #0xf
	bls _0809646A
	b _08096920
_0809646A:
	lsls r0, r0, #2
	ldr r1, _08096478 @ =_0809647C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08096474: .4byte gNonGameplayRam
_08096478: .4byte _0809647C
_0809647C: @ jump table
	.4byte _080964BC @ case 0
	.4byte _080964F2 @ case 1
	.4byte _08096550 @ case 2
	.4byte _080965F4 @ case 3
	.4byte _0809663C @ case 4
	.4byte _08096698 @ case 5
	.4byte _080966E0 @ case 6
	.4byte _080966FC @ case 7
	.4byte _08096716 @ case 8
	.4byte _0809673C @ case 9
	.4byte _0809678A @ case 10
	.4byte _0809681C @ case 11
	.4byte _08096828 @ case 12
	.4byte _08096878 @ case 13
	.4byte _080968A0 @ case 14
	.4byte _080968E8 @ case 15
_080964BC:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrh r0, [r1]
	cmp r0, #7
	beq _080964CA
	b _080968D8
_080964CA:
	movs r0, #0
	strh r0, [r1]
	ldr r1, _080964DC @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _080964E0
	subs r0, #1
	strh r0, [r1]
	b _080968D8
	.align 2, 0
_080964DC: .4byte gWrittenToBldy
_080964E0:
	movs r0, #0x56
	movs r1, #0xe
	bl PlayMusic
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #1
	b _080968D6
_080964F2:
	movs r7, #0x84
	lsls r7, r7, #2
	adds r1, r5, r7
	ldrh r0, [r1]
	cmp r0, #0x46
	beq _08096500
	b _080968D8
_08096500:
	movs r4, #0
	movs r2, #0
	strh r2, [r1]
	movs r3, #0x80
	lsls r3, r3, #0x13
	ldrh r0, [r3]
	movs r7, #0x80
	lsls r7, r7, #1
	adds r1, r7, #0
	orrs r0, r1
	strh r0, [r3]
	strh r2, [r5, #0x12]
	strh r2, [r5, #0x10]
	strh r2, [r5, #0xe]
	strh r2, [r5, #0xc]
	ldr r1, _08096544 @ =0x00000212
	adds r0, r5, r1
	strb r4, [r0]
	ldr r1, _08096548 @ =0x0879C5A4
	ldr r0, _0809654C @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	str r0, [r5]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #2
	b _080968D6
	.align 2, 0
_08096544: .4byte 0x00000212
_08096548: .4byte 0x0879C5A4
_0809654C: .4byte 0x03000011
_08096550:
	ldr r0, [r5]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _08096578
	ldr r0, _08096598 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08096578
	movs r7, #0x86
	lsls r7, r7, #2
	adds r1, r5, r7
	ldrb r0, [r1]
	cmp r0, #0
	bne _08096578
	movs r0, #1
	strb r0, [r1]
_08096578:
	ldr r3, _0809659C @ =gNonGameplayRam
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r4, #0
	movs r0, #0
	strh r0, [r1]
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r3, r1
	ldrb r2, [r0]
	cmp r2, #2
	bne _080965A0
	strb r4, [r0]
	b _080965AE
	.align 2, 0
_08096598: .4byte gChangedInput
_0809659C: .4byte gNonGameplayRam
_080965A0:
	cmp r2, #3
	bne _080965AE
	strb r4, [r0]
	movs r7, #0x85
	lsls r7, r7, #2
	adds r0, r3, r7
	strb r2, [r0]
_080965AE:
	bl EndingCheckMonologueEnded
	cmp r0, #0
	beq _080965CC
	ldr r3, _080965DC @ =gNonGameplayRam
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r2, #0
	movs r0, #3
	strb r0, [r1]
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r3, r1
	strb r2, [r0]
_080965CC:
	ldr r0, _080965DC @ =gNonGameplayRam
	ldr r2, _080965E0 @ =0x00000213
	adds r1, r0, r2
	ldrb r0, [r1]
	cmp r0, #0
	bne _080965E4
	movs r0, #0x64
	b _080968D6
	.align 2, 0
_080965DC: .4byte gNonGameplayRam
_080965E0: .4byte 0x00000213
_080965E4:
	cmp r0, #1
	beq _080965EA
	b _080968D8
_080965EA:
	movs r0, #0x64
	strb r0, [r1]
	bl SpecialCutsceneProcessMonologue
	b _080968D8
_080965F4:
	movs r7, #0x84
	lsls r7, r7, #2
	adds r1, r5, r7
	ldrh r0, [r1]
	cmp r0, #1
	bne _08096618
	ldr r1, _08096610 @ =0x03001222
	movs r0, #0
	strh r0, [r1]
	ldr r1, _08096614 @ =0x03001220
_08096608:
	movs r0, #0x10
	strh r0, [r1]
	b _080968D8
	.align 2, 0
_08096610: .4byte 0x03001222
_08096614: .4byte 0x03001220
_08096618:
	cmp r0, #0x14
	beq _0809661E
	b _080968D8
_0809661E:
	movs r0, #0
	strh r0, [r1]
	ldr r1, _08096634 @ =0x04000050
	ldr r2, _08096638 @ =0x00001841
	adds r0, r2, #0
	strh r0, [r1]
	movs r7, #0x85
	lsls r7, r7, #2
	adds r1, r5, r7
	movs r0, #4
	b _080968D6
	.align 2, 0
_08096634: .4byte 0x04000050
_08096638: .4byte 0x00001841
_0809663C:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrh r0, [r1]
	cmp r0, #4
	beq _0809664A
	b _080968D8
_0809664A:
	movs r0, #0
	strh r0, [r1]
	ldr r2, _0809668C @ =0x03001222
	ldrh r0, [r2]
	cmp r0, #0xf
	bhi _0809665A
	adds r0, #1
	strh r0, [r2]
_0809665A:
	ldr r1, _08096690 @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0
	beq _08096666
	subs r0, #1
	strh r0, [r1]
_08096666:
	ldrh r0, [r2]
	cmp r0, #0x10
	beq _0809666E
	b _080968D8
_0809666E:
	ldrh r0, [r1]
	cmp r0, #0
	beq _08096676
	b _080968D8
_08096676:
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _08096694 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #5
	b _080968D6
	.align 2, 0
_0809668C: .4byte 0x03001222
_08096690: .4byte 0x03001220
_08096694: .4byte 0x0000FEFF
_08096698:
	movs r7, #0x84
	lsls r7, r7, #2
	adds r2, r5, r7
	ldrh r0, [r2]
	cmp r0, #0xa
	bne _080966B2
	movs r0, #0x1e
	movs r1, #0x78
	movs r2, #0x50
	movs r3, #1
	bl EndingDialogueSetupOam
	b _080968D8
_080966B2:
	cmp r0, #0x27
	bne _080966C0
	ldr r1, _080966BC @ =gWrittenToBldy
	b _08096608
	.align 2, 0
_080966BC: .4byte gWrittenToBldy
_080966C0:
	cmp r0, #0x28
	beq _080966C6
	b _080968D8
_080966C6:
	ldr r1, _080966DC @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	movs r0, #0
	strh r0, [r2]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r5, r0
	movs r0, #6
	b _080968D6
	.align 2, 0
_080966DC: .4byte 0x04000050
_080966E0:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r5, r2
	ldrh r0, [r1]
	cmp r0, #1
	beq _080966EE
	b _080968D8
_080966EE:
	movs r0, #0
	strh r0, [r1]
	movs r7, #0x85
	lsls r7, r7, #2
	adds r1, r5, r7
	movs r0, #7
	b _080968D6
_080966FC:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r5, r0
	movs r0, #0
	strh r0, [r1]
	bl EndingAdamConversationInit
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #8
	strb r0, [r1]
	b _08096920
_08096716:
	ldr r1, _08096738 @ =gWrittenToBldy
	movs r0, #0
	strh r0, [r1]
	movs r7, #0x84
	lsls r7, r7, #2
	adds r1, r5, r7
	movs r0, #0
	strh r0, [r1]
	movs r0, #0x93
	lsls r0, r0, #2
	bl SoundPlay
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r5, r0
	movs r0, #9
	b _080968D6
	.align 2, 0
_08096738: .4byte gWrittenToBldy
_0809673C:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r4, r5, r1
	ldrh r0, [r4]
	cmp r0, #0xa
	beq _08096806
	cmp r0, #0x28
	bne _08096806
	movs r0, #0xff
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl EndingDialogueSetupOam
	movs r0, #6
	movs r1, #0x14
	movs r2, #0xc0
	movs r3, #0
	bl EndingDialogueSetupOam
	movs r0, #7
	movs r1, #0x80
	movs r2, #0xc0
	movs r3, #0
	bl EndingDialogueSetupOam
	movs r0, #9
	movs r1, #0x80
	movs r2, #0xc0
	movs r3, #0
	bl EndingDialogueSetupOam
	movs r0, #0
	strh r0, [r4]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0xa
	b _08096804
_0809678A:
	movs r7, #0x84
	lsls r7, r7, #2
	adds r1, r5, r7
	movs r0, #0
	strh r0, [r1]
	ldr r0, [r5]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _080967BC
	ldr r0, _080967D4 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080967BC
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080967BC
	movs r0, #1
	strb r0, [r1]
_080967BC:
	movs r1, #0x86
	lsls r1, r1, #2
	adds r3, r5, r1
	ldrb r0, [r3]
	cmp r0, #2
	bne _080967DC
	movs r0, #0
	strb r0, [r3]
	ldr r0, _080967D8 @ =0x00000203
	bl SoundPlay
	b _08096806
	.align 2, 0
_080967D4: .4byte gChangedInput
_080967D8: .4byte 0x00000203
_080967DC:
	cmp r0, #3
	bne _08096806
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _08096814 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	movs r0, #0
	strb r0, [r3]
	ldr r0, _08096818 @ =0x00000203
	bl SoundPlay
	movs r0, #0xa
	bl FadeMusic
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0xb
_08096804:
	strb r0, [r1]
_08096806:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	bl EndingProcessAdamText
	b _08096920
	.align 2, 0
_08096814: .4byte 0x0000FEFF
_08096818: .4byte 0x00000203
_0809681C:
	movs r7, #0x84
	lsls r7, r7, #2
	adds r1, r5, r7
	movs r0, #0
	strh r0, [r1]
	b _080968D8
_08096828:
	movs r0, #0x84
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrh r0, [r1]
	cmp r0, #1
	bne _0809685C
	ldr r2, _08096850 @ =0x080A8CDC
	ldr r0, _08096854 @ =0x080A8D3C
	ldr r1, _08096858 @ =0x00001264
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	movs r1, #0
	bl ApplyMusicSoundFading
	b _080968D8
	.align 2, 0
_08096850: .4byte 0x080A8CDC
_08096854: .4byte 0x080A8D3C
_08096858: .4byte 0x00001264
_0809685C:
	cmp r0, #0xa
	bne _080968D8
	movs r0, #0
	strh r0, [r1]
	ldr r1, _08096874 @ =gWrittenToBldy
	movs r0, #0x10
	strh r0, [r1]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0xd
	b _080968D6
	.align 2, 0
_08096874: .4byte gWrittenToBldy
_08096878:
	bl EndingAnimalsInit
	ldr r2, _08096898 @ =gNonGameplayRam
	movs r7, #0x84
	lsls r7, r7, #2
	adds r0, r2, r7
	movs r1, #0
	strh r1, [r0]
	ldr r0, _0809689C @ =gWrittenToBldy
	strh r1, [r0]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r2, r0
	movs r0, #0xe
	strb r0, [r1]
	b _08096920
	.align 2, 0
_08096898: .4byte gNonGameplayRam
_0809689C: .4byte gWrittenToBldy
_080968A0:
	movs r1, #0x84
	lsls r1, r1, #2
	adds r2, r5, r1
	ldrh r1, [r2]
	cmp r1, #1
	bne _080968B6
	movs r0, #0x53
	movs r1, #0xe
	bl PlayMusic
	b _080968D8
_080968B6:
	movs r0, #0xa0
	lsls r0, r0, #2
	cmp r1, r0
	bne _080968D8
	movs r0, #0
	strh r0, [r2]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _080968E4 @ =0x0000FBFF
	ands r0, r1
	strh r0, [r2]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0xf
_080968D6:
	strb r0, [r1]
_080968D8:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _08096920
	.align 2, 0
_080968E4: .4byte 0x0000FBFF
_080968E8:
	movs r7, #0x84
	lsls r7, r7, #2
	adds r1, r5, r7
	ldrh r0, [r1]
	cmp r0, #2
	bne _08096918
	movs r0, #0
	strh r0, [r1]
	ldr r1, _08096908 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0809690C
	adds r0, #1
	strh r0, [r1]
	b _08096918
	.align 2, 0
_08096908: .4byte gWrittenToBldy
_0809690C:
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r5, r0
	movs r0, #0
	strb r0, [r1]
	movs r6, #1
_08096918:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_08096920:
	adds r0, r6, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start EndingInShip
EndingInShip: @ 0x08096928
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _08096940 @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _08096954
	cmp r0, #1
	bgt _08096944
	cmp r0, #0
	beq _0809694E
	b _080969A8
	.align 2, 0
_08096940: .4byte gNonGameplayRam
_08096944:
	cmp r0, #2
	beq _0809696C
	cmp r0, #3
	beq _08096988
	b _080969A8
_0809694E:
	bl EndingMonologueInit
	b _08096960
_08096954:
	bl SpecialCutsceneFadeIn
	ldr r0, _08096968 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _080969A8
_08096960:
	movs r0, #2
	strh r0, [r4, #8]
	b _080969A8
	.align 2, 0
_08096968: .4byte gWrittenToBldy
_0809696C:
	bl EndingInShipProcess
	cmp r0, #0
	beq _080969A8
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	strb r5, [r0]
	subs r1, #1
	adds r0, r4, r1
	strb r5, [r0]
	movs r0, #3
	strh r0, [r4, #8]
	b _080969A8
_08096988:
	ldr r1, _08096998 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0809699C
	adds r0, #1
	strh r0, [r1]
	b _080969A0
	.align 2, 0
_08096998: .4byte gWrittenToBldy
_0809699C:
	strh r5, [r4, #8]
	movs r5, #1
_080969A0:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_080969A8:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start EndingProcessMonologueCursor
EndingProcessMonologueCursor: @ 0x080969B0
	push {lr}
	adds r2, r0, #0
	ldr r3, _080969D0 @ =gNonGameplayRam
	ldr r0, [r3]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _080969D4
	movs r0, #0x76
	strh r0, [r2, #0xc]
	ldrh r0, [r3, #0xe]
	lsls r0, r0, #3
	adds r0, #0x18
	strh r0, [r2, #0xe]
	b _080969DA
	.align 2, 0
_080969D0: .4byte gNonGameplayRam
_080969D4:
	movs r0, #0x82
	lsls r0, r0, #1
	strh r0, [r2, #0xc]
_080969DA:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_969e0
unk_969e0: @ 0x080969E0
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _08096A02
	ldrb r0, [r2, #0x11]
	lsls r0, r0, #3
	ldr r1, [r2, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _08096A02
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _08096A02
	strb r1, [r2, #0x12]
_08096A02:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start EndingProcessSr388RadarView
EndingProcessSr388RadarView: @ 0x08096A08
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _08096A34
	ldrb r0, [r2, #0x11]
	lsls r0, r0, #3
	ldr r1, [r2, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _08096A34
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _08096A34
	strb r1, [r2, #0x12]
	strb r1, [r2, #0x11]
	ldr r0, _08096A38 @ =0x08633EC4
	str r0, [r2, #0x1c]
	movs r0, #1
	strb r0, [r2, #0x14]
_08096A34:
	pop {r0}
	bx r0
	.align 2, 0
_08096A38: .4byte 0x08633EC4

	thumb_func_start EndingProcessSamusViewRadarView
EndingProcessSamusViewRadarView: @ 0x08096A3C
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _08096A68
	ldrb r0, [r2, #0x11]
	lsls r0, r0, #3
	ldr r1, [r2, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _08096A68
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _08096A68
	strb r1, [r2, #0x12]
	strb r1, [r2, #0x11]
	ldr r0, _08096A6C @ =0x08633F0C
	str r0, [r2, #0x1c]
	movs r0, #1
	strb r0, [r2, #0x14]
_08096A68:
	pop {r0}
	bx r0
	.align 2, 0
_08096A6C: .4byte 0x08633F0C

	thumb_func_start unk_96a70
unk_96a70: @ 0x08096A70
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r6, r1, r0
	ldrb r5, [r4, #0x14]
	cmp r5, #0
	bne _08096AB4
	ldr r0, [r4, #0x10]
	ldr r1, _08096AAC @ =0x00FFFF00
	ands r0, r1
	ldr r1, _08096AB0 @ =0x00010100
	cmp r0, r1
	bne _08096A96
	movs r0, #0x8e
	lsls r0, r0, #1
	bl SoundPlay
_08096A96:
	ldrb r0, [r6, #4]
	ldrb r1, [r4, #0x12]
	cmp r0, r1
	bne _08096B06
	ldrb r0, [r6, #0xc]
	cmp r0, #0
	bne _08096B06
	strb r5, [r4, #0x12]
	movs r0, #1
	strb r0, [r4, #0x14]
	b _08096B06
	.align 2, 0
_08096AAC: .4byte 0x00FFFF00
_08096AB0: .4byte 0x00010100
_08096AB4:
	cmp r5, #1
	bne _08096AE8
	movs r1, #0
	strb r1, [r4, #0x12]
	ldr r0, _08096ADC @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0xb
	bne _08096B06
	strb r1, [r4, #0x11]
	ldr r0, _08096AE0 @ =0x08633244
	str r0, [r4, #0x1c]
	ldr r0, _08096AE4 @ =0x0000011D
	bl SoundPlay
	movs r0, #2
	strb r0, [r4, #0x14]
	b _08096B06
	.align 2, 0
_08096ADC: .4byte gNonGameplayRam
_08096AE0: .4byte 0x08633244
_08096AE4: .4byte 0x0000011D
_08096AE8:
	cmp r5, #2
	bne _08096B06
	ldrb r0, [r6, #4]
	ldrb r1, [r4, #0x12]
	cmp r0, r1
	bne _08096B06
	ldrb r1, [r6, #0xc]
	cmp r1, #0
	bne _08096B06
	strb r1, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
_08096B06:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start EndingProcessAdamTextCursor
EndingProcessAdamTextCursor: @ 0x08096B0C
	push {r4, lr}
	adds r2, r0, #0
	ldr r3, _08096B28 @ =gNonGameplayRam
	ldr r0, [r3]
	ldrh r1, [r0]
	movs r0, #0xff
	lsls r0, r0, #8
	cmp r1, r0
	bne _08096B2C
	movs r0, #0x91
	lsls r0, r0, #1
	strh r0, [r2, #0xc]
	b _08096B8E
	.align 2, 0
_08096B28: .4byte gNonGameplayRam
_08096B2C:
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r1, r0
	beq _08096B70
	movs r0, #0xfd
	lsls r0, r0, #8
	cmp r1, r0
	bne _08096B54
	movs r0, #0
	movs r1, #0x91
	lsls r1, r1, #1
	strh r1, [r2, #0xc]
	strb r0, [r2, #0x12]
	strb r0, [r2, #0x11]
	ldr r0, _08096B50 @ =0x08633E8C
	str r0, [r2, #0x1c]
	b _08096B8E
	.align 2, 0
_08096B50: .4byte 0x08633E8C
_08096B54:
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _08096B70
	movs r0, #0x78
	strh r0, [r2, #0xc]
	movs r0, #0x9a
	strh r0, [r2, #0xe]
	ldr r0, _08096B6C @ =0x08633E64
	str r0, [r2, #0x1c]
	b _08096B8E
	.align 2, 0
_08096B6C: .4byte 0x08633E64
_08096B70:
	ldrh r0, [r3, #0xc]
	ldr r4, _08096B94 @ =0x00000212
	adds r1, r3, r4
	lsls r0, r0, #3
	ldrb r1, [r1]
	adds r0, r0, r1
	adds r0, #0xe
	movs r1, #0
	strh r0, [r2, #0xc]
	ldrh r0, [r3, #0xe]
	lsls r0, r0, #3
	adds r0, #0x84
	strh r0, [r2, #0xe]
	strb r1, [r2, #0x12]
	strb r1, [r2, #0x11]
_08096B8E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08096B94: .4byte 0x00000212

	thumb_func_start EndingProcessAdamPanel
EndingProcessAdamPanel: @ 0x08096B98
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _08096BD4
	strb r0, [r4, #0x12]
	strb r0, [r4, #0x11]
	ldrh r1, [r4, #0xe]
	movs r2, #0xe
	ldrsh r0, [r4, r2]
	cmp r0, #0x80
	ble _08096BB8
	adds r0, r1, #0
	subs r0, #8
	strh r0, [r4, #0xe]
	b _08096D34
_08096BB8:
	movs r0, #0x80
	strh r0, [r4, #0xe]
	ldrb r0, [r4, #0x10]
	cmp r0, #7
	bne _08096BC8
	ldr r0, _08096BD0 @ =0x0000020A
	bl SoundPlay
_08096BC8:
	movs r0, #1
	strb r0, [r4, #0x14]
	b _08096D34
	.align 2, 0
_08096BD0: .4byte 0x0000020A
_08096BD4:
	cmp r0, #1
	bne _08096C64
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	bne _08096C12
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _08096BF4
	strb r1, [r4, #0x12]
	movs r0, #2
	strb r0, [r4, #0x14]
_08096BF4:
	ldrb r0, [r4, #0x10]
	cmp r0, #7
	beq _08096BFC
	b _08096D34
_08096BFC:
	ldrb r0, [r4, #0x11]
	cmp r0, #0xa
	bne _08096C12
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r3, #0xe
	ldrsh r2, [r4, r3]
	movs r0, #8
	movs r3, #0
	bl EndingDialogueSetupOam
_08096C12:
	ldrb r0, [r4, #0x10]
	cmp r0, #7
	beq _08096C1A
	b _08096D34
_08096C1A:
	ldrb r0, [r4, #0x11]
	cmp r0, #0xb
	beq _08096C22
	b _08096D34
_08096C22:
	ldrb r0, [r4, #0x12]
	cmp r0, #0xf
	beq _08096C2A
	b _08096D34
_08096C2A:
	ldr r2, _08096C54 @ =gNonGameplayRam
	ldr r0, _08096C58 @ =0x00000212
	adds r1, r2, r0
	movs r0, #0
	strb r0, [r1]
	strh r0, [r2, #0xe]
	strh r0, [r2, #0xc]
	ldr r1, _08096C5C @ =0x0879C3AC
	ldr r0, _08096C60 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0xe0
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r2]
	b _08096D34
	.align 2, 0
_08096C54: .4byte gNonGameplayRam
_08096C58: .4byte 0x00000212
_08096C5C: .4byte 0x0879C3AC
_08096C60: .4byte 0x03000011
_08096C64:
	cmp r0, #2
	bne _08096C82
	movs r1, #0
	strb r1, [r4, #0x12]
	ldrb r0, [r4, #0x13]
	adds r0, #1
	strb r0, [r4, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08096D34
	strb r1, [r4, #0x13]
	movs r0, #3
	strb r0, [r4, #0x14]
	b _08096D34
_08096C82:
	cmp r0, #3
	bne _08096CCC
	movs r1, #0
	strb r1, [r4, #0x12]
	ldr r0, _08096CAC @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0xb
	bne _08096D34
	strb r1, [r4, #0x11]
	ldrb r0, [r4, #0x10]
	cmp r0, #7
	bne _08096CB8
	ldr r0, _08096CB0 @ =0x086332FC
	str r0, [r4, #0x1c]
	ldr r0, _08096CB4 @ =0x0000020B
	bl SoundPlay
	b _08096CC0
	.align 2, 0
_08096CAC: .4byte gNonGameplayRam
_08096CB0: .4byte 0x086332FC
_08096CB4: .4byte 0x0000020B
_08096CB8:
	cmp r0, #9
	bne _08096CC0
	ldr r0, _08096CC8 @ =0x086333CC
	str r0, [r4, #0x1c]
_08096CC0:
	movs r0, #4
	strb r0, [r4, #0x14]
	b _08096D34
	.align 2, 0
_08096CC8: .4byte 0x086333CC
_08096CCC:
	cmp r0, #4
	bne _08096CFC
	ldr r0, [r4, #0x10]
	ldr r1, _08096CF4 @ =0x00FFFF00
	ands r0, r1
	ldr r1, _08096CF8 @ =0x00030B00
	cmp r0, r1
	bne _08096D34
	ldrb r0, [r4, #0x10]
	cmp r0, #7
	bne _08096CE8
	movs r0, #8
	bl SpecialCutsceneDestroyOamOfType
_08096CE8:
	movs r0, #0
	strb r0, [r4, #0x12]
	movs r0, #5
	strb r0, [r4, #0x14]
	b _08096D34
	.align 2, 0
_08096CF4: .4byte 0x00FFFF00
_08096CF8: .4byte 0x00030B00
_08096CFC:
	cmp r0, #5
	bne _08096D34
	movs r2, #0
	strb r2, [r4, #0x12]
	ldrh r1, [r4, #0xe]
	movs r3, #0xe
	ldrsh r0, [r4, r3]
	cmp r0, #0xbf
	bgt _08096D16
	adds r0, r1, #0
	adds r0, #8
	strh r0, [r4, #0xe]
	b _08096D34
_08096D16:
	ldrb r0, [r4, #0x10]
	cmp r0, #7
	bne _08096D28
	ldr r0, _08096D3C @ =gNonGameplayRam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r0, r1
	movs r1, #0xc
	strb r1, [r0]
_08096D28:
	strb r2, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
_08096D34:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08096D3C: .4byte gNonGameplayRam

	thumb_func_start EndingProcessAdamIcon
EndingProcessAdamIcon: @ 0x08096D40
	push {r4, lr}
	adds r2, r0, #0
	ldrb r3, [r2, #0x11]
	lsls r1, r3, #3
	ldr r0, [r2, #0x1c]
	adds r4, r0, r1
	ldrb r1, [r2, #0x14]
	cmp r1, #0
	bne _08096D80
	cmp r3, #3
	bne _08096D62
	strb r1, [r2, #0x12]
	strb r1, [r2, #0x11]
	ldr r0, _08096D78 @ =0x086338A4
	str r0, [r2, #0x1c]
	movs r0, #1
	strb r0, [r2, #0x14]
_08096D62:
	ldr r0, _08096D7C @ =gNonGameplayRam
	movs r3, #0x85
	lsls r3, r3, #2
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0xb
	bne _08096DC0
	strb r1, [r2, #0x12]
	strb r1, [r2, #0x11]
	b _08096D98
	.align 2, 0
_08096D78: .4byte 0x086338A4
_08096D7C: .4byte gNonGameplayRam
_08096D80:
	cmp r1, #1
	bne _08096DAC
	ldr r0, _08096DA4 @ =gNonGameplayRam
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0xb
	bne _08096DC0
	movs r0, #0
	strb r0, [r2, #0x12]
	strb r0, [r2, #0x11]
_08096D98:
	ldr r0, _08096DA8 @ =0x0863345C
	str r0, [r2, #0x1c]
	movs r0, #2
	strb r0, [r2, #0x14]
	b _08096DC0
	.align 2, 0
_08096DA4: .4byte gNonGameplayRam
_08096DA8: .4byte 0x0863345C
_08096DAC:
	cmp r1, #2
	bne _08096DC0
	ldrb r0, [r4, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _08096DC0
	ldrb r0, [r4, #0xc]
	cmp r0, #0
	bne _08096DC0
	strb r0, [r2, #0x12]
_08096DC0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start EndingProcessAnimalsScrolling
EndingProcessAnimalsScrolling: @ 0x08096DC8
	push {r4, lr}
	sub sp, #4
	adds r2, r0, #0
	ldrb r0, [r2, #0x13]
	adds r1, r0, #1
	movs r3, #0
	strb r1, [r2, #0x13]
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _08096E48
	ldr r0, _08096E20 @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r2, #0xc]
	ldr r0, _08096E24 @ =0x0300122E
	ldrh r1, [r0]
	strh r1, [r2, #0xe]
	ldr r0, _08096E28 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r2]
	ldr r0, _08096E2C @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r2, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r0, #0x20
	rsbs r0, r0, #0
	cmp r1, r0
	bge _08096E3C
	movs r0, #0x80
	lsls r0, r0, #7
	strh r0, [r2, #0xa]
	str r3, [sp]
	ldr r1, _08096E30 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldrh r0, [r2, #0xa]
	ldr r3, _08096E34 @ =0x06008000
	adds r0, r0, r3
	str r0, [r1, #4]
	ldr r0, _08096E38 @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _08096E42
	.align 2, 0
_08096E20: .4byte 0x0300122C
_08096E24: .4byte 0x0300122E
_08096E28: .4byte 0x03001230
_08096E2C: .4byte 0x03001232
_08096E30: .4byte 0x040000D4
_08096E34: .4byte 0x06008000
_08096E38: .4byte 0x85000400
_08096E3C:
	movs r0, #0xa0
	lsls r0, r0, #7
	strh r0, [r2, #0xa]
_08096E42:
	movs r0, #0
	strb r0, [r2, #0x13]
	b _08096E56
_08096E48:
	cmp r0, #1
	bne _08096E5C
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xa
	bne _08096EF6
	strb r3, [r2, #0x13]
_08096E56:
	movs r0, #2
	strb r0, [r2, #0x14]
	b _08096EF6
_08096E5C:
	ldr r0, _08096ED8 @ =gNonGameplayRam
	movs r4, #0x85
	lsls r4, r4, #2
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0xe
	bne _08096EF4
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _08096EA6
	strb r3, [r2, #0x13]
	ldrh r3, [r2, #0xe]
	movs r0, #0xe
	ldrsh r1, [r2, r0]
	movs r0, #0xa0
	rsbs r0, r0, #0
	cmp r1, r0
	ble _08096E8C
	subs r0, r3, #1
	strh r0, [r2, #0xe]
	ldrh r0, [r2, #8]
	adds r0, #1
	strh r0, [r2, #8]
_08096E8C:
	ldrh r1, [r2, #2]
	movs r3, #2
	ldrsh r0, [r2, r3]
	cmp r0, #0
	ble _08096E9A
	subs r0, r1, #1
	strh r0, [r2, #2]
_08096E9A:
	ldr r1, _08096EDC @ =0x0300122E
	ldrh r0, [r2, #0xe]
	strh r0, [r1]
	ldr r1, _08096EE0 @ =0x03001232
	ldrh r0, [r2, #2]
	strh r0, [r1]
_08096EA6:
	movs r4, #8
	ldrsh r0, [r2, r4]
	cmp r0, #9
	bne _08096EF6
	movs r1, #0
	strh r1, [r2, #8]
	ldrh r0, [r2, #0xa]
	cmp r0, #0
	beq _08096EF6
	ldr r3, _08096EE4 @ =0xFFFFFC00
	adds r0, r0, r3
	strh r0, [r2, #0xa]
	str r1, [sp]
	ldr r1, _08096EE8 @ =0x040000D4
	mov r4, sp
	str r4, [r1]
	ldrh r0, [r2, #0xa]
	ldr r2, _08096EEC @ =0x06008000
	adds r0, r0, r2
	str r0, [r1, #4]
	ldr r0, _08096EF0 @ =0x85000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _08096EF6
	.align 2, 0
_08096ED8: .4byte gNonGameplayRam
_08096EDC: .4byte 0x0300122E
_08096EE0: .4byte 0x03001232
_08096EE4: .4byte 0xFFFFFC00
_08096EE8: .4byte 0x040000D4
_08096EEC: .4byte 0x06008000
_08096EF0: .4byte 0x85000100
_08096EF4:
	strb r3, [r2, #0x13]
_08096EF6:
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_96f00
unk_96f00: @ 0x08096F00
	movs r1, #0
	strb r1, [r0, #0x10]
	bx lr
	.align 2, 0

	thumb_func_start EndingDialogueSetupOam
EndingDialogueSetupOam: @ 0x08096F08
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r3, r3, #0x18
	cmp r3, #0
	bne _08096F68
	movs r2, #0
	ldr r0, _08096F64 @ =gNonGameplayRam
	movs r3, #0x8b
	lsls r3, r3, #2
	adds r1, r0, r3
	ldrb r1, [r1]
	mov ip, r0
	cmp r1, #0
	beq _08096F58
	mov r4, ip
_08096F38:
	lsls r0, r2, #0x18
	movs r1, #0x80
	lsls r1, r1, #0x11
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x13
	bgt _08096FA8
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08096F38
_08096F58:
	lsls r0, r2, #0x18
	asrs r1, r0, #0x18
	adds r7, r0, #0
	cmp r1, #0x13
	ble _08096FB0
	b _08096FA8
	.align 2, 0
_08096F64: .4byte gNonGameplayRam
_08096F68:
	movs r2, #0x13
	ldr r0, _08096FAC @ =gNonGameplayRam
	movs r3, #0x9b
	lsls r3, r3, #3
	adds r1, r0, r3
	ldrb r1, [r1]
	mov ip, r0
	cmp r1, #0
	beq _08096FA0
	mov r4, ip
	movs r3, #0x8b
	lsls r3, r3, #2
_08096F80:
	lsls r0, r2, #0x18
	movs r1, #0xff
	lsls r1, r1, #0x18
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0
	blt _08096FA8
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08096F80
_08096FA0:
	lsls r0, r2, #0x18
	adds r7, r0, #0
	cmp r7, #0
	bge _08096FB0
_08096FA8:
	movs r0, #0x14
	b _08097272
	.align 2, 0
_08096FAC: .4byte gNonGameplayRam
_08096FB0:
	movs r0, #0
	str r0, [sp]
	ldr r2, _08097014 @ =0x040000D4
	mov r3, sp
	str r3, [r2]
	asrs r1, r7, #0x18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r4, r0, #2
	ldr r3, _08097018 @ =0x030016A0
	adds r0, r4, r3
	str r0, [r2, #4]
	ldr r0, _0809701C @ =0x85000009
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	ldr r1, _08097020 @ =0xFFFFFDE4
	adds r0, r3, r1
	adds r2, r4, r0
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r2, r1
	strh r6, [r0]
	adds r1, #2
	adds r0, r2, r1
	mov r1, r8
	strh r1, [r0]
	movs r1, #0x8b
	lsls r1, r1, #2
	adds r0, r2, r1
	strb r5, [r0]
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r6, r2, r0
	ldrb r1, [r6]
	movs r0, #1
	orrs r1, r0
	strb r1, [r6]
	cmp r5, #1
	bne _0809702C
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08097024 @ =0x08633E64
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08097028 @ =EndingProcessMonologueCursor
	str r1, [r0]
	b _08097270
	.align 2, 0
_08097014: .4byte 0x040000D4
_08097018: .4byte 0x030016A0
_0809701C: .4byte 0x85000009
_08097020: .4byte 0xFFFFFDE4
_08097024: .4byte 0x08633E64
_08097028: .4byte EndingProcessMonologueCursor
_0809702C:
	cmp r5, #2
	bne _08097064
	ldr r1, _08097058 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _0809705C @ =0x086338D4
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08097060 @ =unk_969e0
	str r1, [r0]
	b _08097270
	.align 2, 0
_08097058: .4byte 0x00000236
_0809705C: .4byte 0x086338D4
_08097060: .4byte unk_969e0
_08097064:
	cmp r5, #3
	bne _0809709C
	ldr r0, _08097090 @ =0x00000236
	adds r2, r2, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08097094 @ =0x086339D4
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08097098 @ =EndingProcessSr388RadarView
	str r1, [r0]
	b _08097270
	.align 2, 0
_08097090: .4byte 0x00000236
_08097094: .4byte 0x086339D4
_08097098: .4byte EndingProcessSr388RadarView
_0809709C:
	cmp r5, #4
	bne _080970D4
	ldr r1, _080970C8 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _080970CC @ =0x08633C4C
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _080970D0 @ =EndingProcessSamusViewRadarView
	str r1, [r0]
	b _08097270
	.align 2, 0
_080970C8: .4byte 0x00000236
_080970CC: .4byte 0x08633C4C
_080970D0: .4byte EndingProcessSamusViewRadarView
_080970D4:
	cmp r5, #5
	bne _0809710C
	ldr r0, _08097100 @ =0x00000236
	adds r2, r2, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08097104 @ =0x086331EC
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _08097108 @ =unk_96a70
	str r1, [r0]
	b _08097270
	.align 2, 0
_08097100: .4byte 0x00000236
_08097104: .4byte 0x086331EC
_08097108: .4byte unk_96a70
_0809710C:
	cmp r5, #6
	bne _08097130
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08097128 @ =0x08633E8C
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _0809712C @ =EndingProcessAdamTextCursor
	str r1, [r0]
	b _08097270
	.align 2, 0
_08097128: .4byte 0x08633E8C
_0809712C: .4byte EndingProcessAdamTextCursor
_08097130:
	cmp r5, #7
	bne _08097158
	ldr r1, _08097150 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08097154 @ =0x08633294
	b _080971AE
	.align 2, 0
_08097150: .4byte 0x00000236
_08097154: .4byte 0x08633294
_08097158:
	cmp r5, #8
	bne _08097190
	ldr r0, _08097184 @ =0x00000236
	adds r2, r2, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _08097188 @ =0x08633434
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _0809718C @ =EndingProcessAdamIcon
	str r1, [r0]
	b _08097270
	.align 2, 0
_08097184: .4byte 0x00000236
_08097188: .4byte 0x08633434
_0809718C: .4byte EndingProcessAdamIcon
_08097190:
	cmp r5, #9
	bne _080971C8
	ldr r1, _080971BC @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _080971C0 @ =0x08633364
_080971AE:
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _080971C4 @ =EndingProcessAdamPanel
	str r1, [r0]
	b _08097270
	.align 2, 0
_080971BC: .4byte 0x00000236
_080971C0: .4byte 0x08633364
_080971C4: .4byte EndingProcessAdamPanel
_080971C8:
	cmp r5, #0x14
	bne _080971E4
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r6]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _080971E0 @ =EndingProcessAnimalsScrolling
	str r1, [r0]
	b _08097270
	.align 2, 0
_080971E0: .4byte EndingProcessAnimalsScrolling
_080971E4:
	cmp r5, #0x1e
	bne _08097238
	ldr r0, _08097224 @ =0x0000012D
	bl SoundPlay
	ldr r4, _08097228 @ =gNonGameplayRam
	asrs r0, r7, #0x18
	lsls r2, r0, #3
	adds r2, r2, r0
	lsls r2, r2, #2
	adds r3, r2, r4
	ldr r0, _0809722C @ =0x00000236
	adds r3, r3, r0
	ldrb r1, [r3]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r3]
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r4, r1
	adds r0, r2, r0
	ldr r1, _08097230 @ =0x08633F24
	str r1, [r0]
	movs r3, #0x8f
	lsls r3, r3, #2
	adds r4, r4, r3
	adds r2, r2, r4
	ldr r0, _08097234 @ =unk_97418
	b _0809726E
	.align 2, 0
_08097224: .4byte 0x0000012D
_08097228: .4byte gNonGameplayRam
_0809722C: .4byte 0x00000236
_08097230: .4byte 0x08633F24
_08097234: .4byte unk_97418
_08097238:
	cmp r5, #0xff
	bne _08097270
	asrs r0, r7, #0x18
	lsls r2, r0, #3
	adds r2, r2, r0
	lsls r2, r2, #2
	mov r0, ip
	adds r1, r2, r0
	movs r3, #0x8d
	lsls r3, r3, #2
	adds r1, r1, r3
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	movs r0, #0x8e
	lsls r0, r0, #2
	add r0, ip
	adds r0, r2, r0
	ldr r1, _08097280 @ =0x086331EC
	str r1, [r0]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, ip
	adds r2, r2, r0
	ldr r0, _08097284 @ =unk_96f00
_0809726E:
	str r0, [r2]
_08097270:
	lsrs r0, r7, #0x18
_08097272:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08097280: .4byte 0x086331EC
_08097284: .4byte unk_96f00

	thumb_func_start EndingMonologueVblank
EndingMonologueVblank: @ 0x08097288
	push {lr}
	ldr r1, _080972EC @ =0x040000D4
	ldr r0, _080972F0 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _080972F4 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _080972F8 @ =0x04000052
	ldr r0, _080972FC @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08097300 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08097304 @ =0x04000054
	ldr r0, _08097308 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x40
	ldr r0, _0809730C @ =gBg1XPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097310 @ =gBg1YPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097314 @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097318 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0809731C @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097320 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	bl unk_98158
	pop {r0}
	bx r0
	.align 2, 0
_080972EC: .4byte 0x040000D4
_080972F0: .4byte gOamData
_080972F4: .4byte 0x84000100
_080972F8: .4byte 0x04000052
_080972FC: .4byte 0x03001222
_08097300: .4byte 0x03001220
_08097304: .4byte 0x04000054
_08097308: .4byte gWrittenToBldy
_0809730C: .4byte gBg1XPosition
_08097310: .4byte gBg1YPosition
_08097314: .4byte 0x0300122C
_08097318: .4byte 0x0300122E
_0809731C: .4byte 0x03001230
_08097320: .4byte 0x03001232

	thumb_func_start EndingConversationAndAnimalsVblank
EndingConversationAndAnimalsVblank: @ 0x08097324
	ldr r1, _08097380 @ =0x040000D4
	ldr r0, _08097384 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08097388 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _0809738C @ =0x04000052
	ldr r0, _08097390 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08097394 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08097398 @ =0x04000054
	ldr r0, _0809739C @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x40
	ldr r0, _080973A0 @ =gBg1XPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080973A4 @ =gBg1YPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080973A8 @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080973AC @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080973B0 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080973B4 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_08097380: .4byte 0x040000D4
_08097384: .4byte gOamData
_08097388: .4byte 0x84000100
_0809738C: .4byte 0x04000052
_08097390: .4byte 0x03001222
_08097394: .4byte 0x03001220
_08097398: .4byte 0x04000054
_0809739C: .4byte gWrittenToBldy
_080973A0: .4byte gBg1XPosition
_080973A4: .4byte gBg1YPosition
_080973A8: .4byte 0x0300122C
_080973AC: .4byte 0x0300122E
_080973B0: .4byte 0x03001230
_080973B4: .4byte 0x03001232

	thumb_func_start EndingGetPositionAndSlotOfOamByType_2
EndingGetPositionAndSlotOfOamByType_2: @ 0x080973B8
	push {r4, r5, r6, r7, lr}
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r1, #0
	ldr r7, _080973F0 @ =gNonGameplayRam
	movs r6, #0x8b
	lsls r6, r6, #2
_080973C8:
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r7
	adds r0, r3, r6
	ldrb r0, [r0]
	cmp r0, r5
	bne _080973F8
	movs r5, #0x8a
	lsls r5, r5, #2
	adds r0, r3, r5
	ldrh r0, [r0]
	strh r0, [r4]
	ldr r4, _080973F4 @ =0x0000022A
	adds r0, r3, r4
	ldrh r0, [r0]
	strh r0, [r2]
	adds r0, r1, #0
	b _08097410
	.align 2, 0
_080973F0: .4byte gNonGameplayRam
_080973F4: .4byte 0x0000022A
_080973F8:
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x13
	bls _080973C8
	movs r5, #0x96
	lsls r5, r5, #1
	adds r0, r5, #0
	strh r0, [r4]
	movs r0, #0xc8
	strh r0, [r2]
	movs r0, #0x14
_08097410:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start unk_97418
unk_97418: @ 0x08097418
	bx lr
	.align 2, 0

	thumb_func_start DiedFromSr388CollisionSubroutine
DiedFromSr388CollisionSubroutine: @ 0x0809741C
	push {r4, r5, lr}
	sub sp, #4
	movs r5, #0
	ldr r4, _08097438 @ =gSubGameMode1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08097468
	cmp r0, #1
	bgt _0809743C
	cmp r0, #0
	beq _08097442
	b _080974B8
	.align 2, 0
_08097438: .4byte gSubGameMode1
_0809743C:
	cmp r0, #2
	beq _08097488
	b _080974B8
_08097442:
	str r5, [sp]
	ldr r1, _0809745C @ =0x040000D4
	mov r2, sp
	str r2, [r1]
	ldr r0, _08097460 @ =gNonGameplayRam
	str r0, [r1, #4]
	ldr r0, _08097464 @ =0x85000150
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r0, #1
	strh r0, [r4]
	b _080974B8
	.align 2, 0
_0809745C: .4byte 0x040000D4
_08097460: .4byte gNonGameplayRam
_08097464: .4byte 0x85000150
_08097468:
	bl DiedOnSr388Collision
	cmp r0, #0
	beq _080974B8
	ldr r0, _08097480 @ =gNonGameplayRam
	ldr r1, _08097484 @ =0x0000020E
	adds r0, r0, r1
	strh r5, [r0]
	movs r0, #2
	strh r0, [r4]
	b _080974B8
	.align 2, 0
_08097480: .4byte gNonGameplayRam
_08097484: .4byte 0x0000020E
_08097488:
	ldr r0, _080974A0 @ =gNonGameplayRam
	ldr r2, _080974A4 @ =0x0000020E
	adds r1, r0, r2
	ldrh r0, [r1]
	cmp r0, #0
	bne _080974B0
	ldr r1, _080974A8 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _080974AC
	adds r0, #1
	b _080974B2
	.align 2, 0
_080974A0: .4byte gNonGameplayRam
_080974A4: .4byte 0x0000020E
_080974A8: .4byte gWrittenToBldy
_080974AC:
	movs r5, #1
	b _080974B4
_080974B0:
	subs r0, #1
_080974B2:
	strh r0, [r1]
_080974B4:
	bl SpecialCutsceneDrawAllOam
_080974B8:
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start DiedOnSr388CollisionInit
DiedOnSr388CollisionInit: @ 0x080974C4
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	ldr r3, _08097618 @ =0x04000208
	movs r0, #0
	strh r0, [r3]
	ldr r2, _0809761C @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _08097620 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08097624 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _08097628 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0809762C @ =unk_99940
	bl CallbackSetVBlank
	movs r5, #0
	str r5, [sp]
	ldr r4, _08097630 @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r1, _08097634 @ =gNonGameplayRam
	mov r8, r1
	str r1, [r4, #4]
	ldr r0, _08097638 @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809763C @ =0x086238F4
	ldr r1, _08097640 @ =0x06010000
	bl LZ77UncompVram
	ldr r0, _08097644 @ =0x08636C38
	str r0, [r4]
	ldr r0, _08097648 @ =0x05000200
	str r0, [r4, #4]
	ldr r6, _0809764C @ =0x84000080
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08097650 @ =0x0862B5F4
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _08097654 @ =0x08638C14
	ldr r1, _08097658 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _0809765C @ =0x08639BC4
	ldr r1, _08097660 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _08097664 @ =0x08637038
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08097668 @ =gBg1XPosition
	strh r5, [r0]
	ldr r0, _0809766C @ =gBg1YPosition
	movs r2, #8
	strh r2, [r0]
	ldr r0, _08097670 @ =0x0300122C
	strh r5, [r0]
	ldr r0, _08097674 @ =0x0300122E
	strh r5, [r0]
	ldr r0, _08097678 @ =0x03001230
	strh r5, [r0]
	ldr r0, _0809767C @ =0x03001232
	strh r5, [r0]
	ldr r0, _08097680 @ =0x04000010
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r2, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	ldr r1, _08097684 @ =0x04000008
	ldr r3, _08097688 @ =0x00001C08
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #2
	ldr r3, _0809768C @ =0x00001E01
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #4
	ldr r3, _08097690 @ =0x00001F03
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #0x42
	movs r0, #0xbf
	strh r0, [r1]
	ldr r0, _08097694 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _08097698 @ =0x04000054
	strh r1, [r0]
	ldr r0, _0809769C @ =0x03001220
	strh r2, [r0]
	ldr r1, _080976A0 @ =0x03001222
	movs r0, #0xe
	strh r0, [r1]
	ldr r0, _080976A4 @ =0x0000024D
	bl unk_3b1c
	movs r0, #2
	movs r1, #0xa4
	movs r2, #0x28
	movs r3, #1
	bl DiedOnSr388CollisionSetupOam
	movs r0, #1
	movs r1, #0xa4
	movs r2, #0x28
	movs r3, #1
	bl DiedOnSr388CollisionSetupOam
	movs r0, #3
	movs r1, #0x86
	movs r2, #0x3c
	movs r3, #1
	bl DiedOnSr388CollisionSetupOam
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r0, _080976A8 @ =0x0863A19C
	mov r1, r8
	str r0, [r1]
	str r5, [sp]
	mov r2, sp
	str r2, [r4]
	ldr r0, _080976AC @ =0x0600D000
	str r0, [r4, #4]
	ldr r0, _080976B0 @ =0x85000400
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r3, #0xc0
	lsls r3, r3, #5
	adds r0, r3, #0
	strh r0, [r1]
	ldr r0, _080976B4 @ =DiedOnSr388CollisionVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08097618: .4byte 0x04000208
_0809761C: .4byte 0x04000004
_08097620: .4byte 0x0000FFEF
_08097624: .4byte 0x04000200
_08097628: .4byte 0x0000FFFD
_0809762C: .4byte unk_99940
_08097630: .4byte 0x040000D4
_08097634: .4byte gNonGameplayRam
_08097638: .4byte 0x85000150
_0809763C: .4byte 0x086238F4
_08097640: .4byte 0x06010000
_08097644: .4byte 0x08636C38
_08097648: .4byte 0x05000200
_0809764C: .4byte 0x84000080
_08097650: .4byte 0x0862B5F4
_08097654: .4byte 0x08638C14
_08097658: .4byte 0x0600F000
_0809765C: .4byte 0x08639BC4
_08097660: .4byte 0x0600F800
_08097664: .4byte 0x08637038
_08097668: .4byte gBg1XPosition
_0809766C: .4byte gBg1YPosition
_08097670: .4byte 0x0300122C
_08097674: .4byte 0x0300122E
_08097678: .4byte 0x03001230
_0809767C: .4byte 0x03001232
_08097680: .4byte 0x04000010
_08097684: .4byte 0x04000008
_08097688: .4byte 0x00001C08
_0809768C: .4byte 0x00001E01
_08097690: .4byte 0x00001F03
_08097694: .4byte gWrittenToBldy
_08097698: .4byte 0x04000054
_0809769C: .4byte 0x03001220
_080976A0: .4byte 0x03001222
_080976A4: .4byte 0x0000024D
_080976A8: .4byte 0x0863A19C
_080976AC: .4byte 0x0600D000
_080976B0: .4byte 0x85000400
_080976B4: .4byte DiedOnSr388CollisionVblank

	thumb_func_start DiedOnSr388CollisionProcess
DiedOnSr388CollisionProcess: @ 0x080976B8
	push {r4, r5, r6, lr}
	movs r5, #0
	ldr r2, _080976E4 @ =gNonGameplayRam
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r2, r1
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r4, #0x85
	lsls r4, r4, #2
	adds r0, r2, r4
	ldrb r0, [r0]
	adds r3, r2, #0
	cmp r0, #4
	bls _080976DA
	b _08097862
_080976DA:
	lsls r0, r0, #2
	ldr r1, _080976E8 @ =_080976EC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080976E4: .4byte gNonGameplayRam
_080976E8: .4byte _080976EC
_080976EC: @ jump table
	.4byte _08097700 @ case 0
	.4byte _08097734 @ case 1
	.4byte _08097740 @ case 2
	.4byte _080977A8 @ case 3
	.4byte _08097808 @ case 4
_08097700:
	ldr r1, _08097710 @ =gWrittenToBldy
	ldrh r0, [r1]
	adds r2, r0, #0
	cmp r2, #0
	beq _08097714
	subs r0, #1
	strh r0, [r1]
	b _080977F8
	.align 2, 0
_08097710: .4byte gWrittenToBldy
_08097714:
	ldr r1, _08097730 @ =0x04000050
	movs r6, #0xc4
	lsls r6, r6, #4
	adds r0, r6, #0
	strh r0, [r1]
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r3, r1
	strh r2, [r0]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #1
	b _080977F6
	.align 2, 0
_08097730: .4byte 0x04000050
_08097734:
	movs r4, #0x84
	lsls r4, r4, #2
	adds r1, r3, r4
	movs r0, #0
	strh r0, [r1]
	b _080977F8
_08097740:
	movs r6, #0x84
	lsls r6, r6, #2
	adds r4, r3, r6
	ldrh r2, [r4]
	cmp r2, #1
	bne _08097774
	ldr r0, _08097768 @ =0x03001220
	movs r1, #0xa
	strh r1, [r0]
	ldr r0, _0809776C @ =0x03001222
	strh r1, [r0]
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r3, r1
	movs r1, #0
	strb r2, [r0]
	ldr r2, _08097770 @ =0x00000111
	adds r0, r3, r2
	strb r1, [r0]
	b _080977F8
	.align 2, 0
_08097768: .4byte 0x03001220
_0809776C: .4byte 0x03001222
_08097770: .4byte 0x00000111
_08097774:
	cmp r2, #2
	bne _080977F8
	ldr r1, _080977A0 @ =0x04000050
	ldr r6, _080977A4 @ =0x00000842
	adds r0, r6, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r6, #0x80
	lsls r6, r6, #2
	adds r1, r6, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	strh r0, [r4]
	movs r0, #0x85
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #3
	b _080977F6
	.align 2, 0
_080977A0: .4byte 0x04000050
_080977A4: .4byte 0x00000842
_080977A8:
	ldr r1, _080977D4 @ =0x00000111
	adds r4, r3, r1
	ldrb r2, [r4]
	cmp r2, #0xe
	bhi _080977D8
	movs r6, #0x84
	lsls r6, r6, #2
	adds r1, r3, r6
	ldrh r0, [r1]
	cmp r0, #4
	bne _080977F8
	movs r0, #0
	strh r0, [r1]
	movs r0, #0x88
	lsls r0, r0, #1
	adds r1, r3, r0
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #1
	strb r0, [r4]
	b _080977F8
	.align 2, 0
_080977D4: .4byte 0x00000111
_080977D8:
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r3, r2
	ldrh r0, [r1]
	cmp r0, #0xf
	bne _080977F8
	movs r0, #0
	strh r0, [r1]
	ldr r1, _08097804 @ =gWrittenToBldy
	movs r0, #0x10
	strh r0, [r1]
	movs r4, #0x85
	lsls r4, r4, #2
	adds r1, r3, r4
	movs r0, #4
_080977F6:
	strb r0, [r1]
_080977F8:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	b _08097862
	.align 2, 0
_08097804: .4byte gWrittenToBldy
_08097808:
	ldr r4, _08097830 @ =0x03001220
	ldrh r2, [r4]
	cmp r2, #0xf
	bhi _08097838
	movs r6, #0x84
	lsls r6, r6, #2
	adds r1, r3, r6
	ldrh r0, [r1]
	cmp r0, #6
	bne _0809785A
	movs r0, #0
	strh r0, [r1]
	adds r0, r2, #1
	strh r0, [r4]
	ldr r1, _08097834 @ =0x03001222
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0809785A
	.align 2, 0
_08097830: .4byte 0x03001220
_08097834: .4byte 0x03001222
_08097838:
	ldr r0, _0809786C @ =0x04000050
	movs r1, #0xbf
	strh r1, [r0]
	movs r0, #0x84
	lsls r0, r0, #2
	adds r2, r3, r0
	ldrh r0, [r2]
	cmp r0, #0xf
	bne _0809785A
	movs r0, #0
	movs r1, #0
	strh r1, [r2]
	movs r2, #0x85
	lsls r2, r2, #2
	adds r1, r3, r2
	strb r0, [r1]
	movs r5, #1
_0809785A:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_08097862:
	adds r0, r5, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0809786C: .4byte 0x04000050

	thumb_func_start DiedOnSr388Collision
DiedOnSr388Collision: @ 0x08097870
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _08097888 @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _0809789C
	cmp r0, #1
	bgt _0809788C
	cmp r0, #0
	beq _08097896
	b _080978F0
	.align 2, 0
_08097888: .4byte gNonGameplayRam
_0809788C:
	cmp r0, #2
	beq _080978B4
	cmp r0, #3
	beq _080978D0
	b _080978F0
_08097896:
	bl DiedOnSr388CollisionInit
	b _080978A8
_0809789C:
	bl SpecialCutsceneFadeIn
	ldr r0, _080978B0 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _080978F0
_080978A8:
	movs r0, #2
	strh r0, [r4, #8]
	b _080978F0
	.align 2, 0
_080978B0: .4byte gWrittenToBldy
_080978B4:
	bl DiedOnSr388CollisionProcess
	cmp r0, #0
	beq _080978F0
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r4, r1
	strb r5, [r0]
	subs r1, #1
	adds r0, r4, r1
	strb r5, [r0]
	movs r0, #3
	strh r0, [r4, #8]
	b _080978F0
_080978D0:
	ldr r1, _080978E0 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _080978E4
	adds r0, #1
	strh r0, [r1]
	b _080978E8
	.align 2, 0
_080978E0: .4byte gWrittenToBldy
_080978E4:
	strh r5, [r4, #8]
	movs r5, #1
_080978E8:
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
_080978F0:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start DiedOnSr388CollisionProcessFallingBsl
DiedOnSr388CollisionProcessFallingBsl: @ 0x080978F8
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #0xa]
	adds r0, #1
	movs r2, #0
	strh r0, [r4, #0xa]
	ldrb r1, [r4, #0x14]
	cmp r1, #0
	bne _0809791A
	ldrh r0, [r4, #0xc]
	strh r0, [r4]
	ldrh r0, [r4, #0xe]
	strh r0, [r4, #2]
	strh r1, [r4, #0xa]
	movs r0, #1
	strb r0, [r4, #0x14]
	b _080979CA
_0809791A:
	cmp r1, #1
	bne _08097978
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	bne _08097936
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _08097936
	strb r2, [r4, #0x12]
_08097936:
	ldrh r0, [r4, #0xa]
	movs r1, #5
	bl __udivsi3
	ldrh r1, [r4]
	subs r1, r1, r0
	strh r1, [r4, #0xc]
	ldrh r0, [r4, #0xa]
	movs r1, #5
	bl __udivsi3
	ldrh r1, [r4, #2]
	adds r1, r1, r0
	strh r1, [r4, #0xe]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, #0x50
	ble _08097962
	movs r0, #0
	strh r0, [r4, #0xa]
	movs r0, #2
	strb r0, [r4, #0x14]
_08097962:
	ldrb r0, [r4, #0x10]
	cmp r0, #1
	bne _08097970
	ldrh r0, [r4, #6]
	subs r0, #1
	strh r0, [r4, #6]
	b _080979CA
_08097970:
	ldrh r0, [r4, #6]
	subs r0, #2
	strh r0, [r4, #6]
	b _080979CA
_08097978:
	cmp r1, #2
	bne _080979A4
	movs r0, #3
	strb r0, [r4, #0x14]
	ldrb r0, [r4, #0x10]
	cmp r0, #1
	bne _080979BE
	ldr r0, _0809799C @ =0x086362B8
	str r0, [r4, #0x1c]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x11]
	ldr r0, _080979A0 @ =gNonGameplayRam
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r0, r2
	strb r1, [r0]
	b _080979CA
	.align 2, 0
_0809799C: .4byte 0x086362B8
_080979A0: .4byte gNonGameplayRam
_080979A4:
	cmp r1, #3
	bne _080979CA
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #0x12]
	cmp r0, r3
	bne _080979CA
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _080979CA
_080979BE:
	strb r2, [r4, #0x10]
	ldrb r1, [r4, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0x18]
_080979CA:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start unk_979d0
unk_979d0: @ 0x080979D0
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _080979FC
	ldrb r0, [r2, #0x11]
	lsls r0, r0, #3
	ldr r1, [r2, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _080979FC
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _080979FC
	strb r1, [r2, #0x10]
	ldrb r1, [r2, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x18]
_080979FC:
	pop {r0}
	bx r0

	thumb_func_start DiedOnSr388CollisionSetupOam
DiedOnSr388CollisionSetupOam: @ 0x08097A00
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sb, r2
	lsls r3, r3, #0x18
	cmp r3, #0
	bne _08097A64
	movs r2, #0
	ldr r1, _08097A60 @ =gNonGameplayRam
	movs r3, #0x8b
	lsls r3, r3, #2
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _08097A52
	adds r4, r1, #0
_08097A32:
	lsls r0, r2, #0x18
	movs r1, #0x80
	lsls r1, r1, #0x11
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x13
	bgt _08097AA2
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08097A32
_08097A52:
	lsls r0, r2, #0x18
	asrs r1, r0, #0x18
	mov ip, r0
	cmp r1, #0x13
	ble _08097AAC
	b _08097AA2
	.align 2, 0
_08097A60: .4byte gNonGameplayRam
_08097A64:
	movs r2, #0x13
	ldr r1, _08097AA8 @ =gNonGameplayRam
	movs r3, #0x9b
	lsls r3, r3, #3
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _08097A9A
	adds r4, r1, #0
	movs r3, #0x8b
	lsls r3, r3, #2
_08097A7A:
	lsls r0, r2, #0x18
	movs r1, #0xff
	lsls r1, r1, #0x18
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0
	blt _08097AA2
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08097A7A
_08097A9A:
	lsls r0, r2, #0x18
	mov ip, r0
	cmp r0, #0
	bge _08097AAC
_08097AA2:
	movs r0, #0x14
	b _08097BE6
	.align 2, 0
_08097AA8: .4byte gNonGameplayRam
_08097AAC:
	movs r0, #0
	str r0, [sp]
	ldr r2, _08097B3C @ =0x040000D4
	mov r3, sp
	str r3, [r2]
	mov r0, ip
	asrs r1, r0, #0x18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r5, r0, #2
	ldr r6, _08097B40 @ =0x030016A0
	adds r0, r5, r6
	str r0, [r2, #4]
	ldr r0, _08097B44 @ =0x85000009
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	ldr r1, _08097B48 @ =0xFFFFFDE4
	adds r0, r6, r1
	adds r2, r5, r0
	movs r3, #0x8a
	lsls r3, r3, #2
	adds r0, r2, r3
	mov r1, r8
	strh r1, [r0]
	adds r3, #2
	adds r0, r2, r3
	mov r1, sb
	strh r1, [r0]
	adds r3, #2
	adds r0, r2, r3
	strb r7, [r0]
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r4, r2, r0
	ldrb r0, [r4]
	movs r1, #1
	orrs r0, r1
	strb r0, [r4]
	cmp r7, #1
	bne _08097B58
	subs r3, #0xa
	adds r1, r2, r3
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	ldr r0, _08097B4C @ =0x00000236
	adds r2, r2, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	ldrb r1, [r4]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r4]
	adds r0, r6, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08097B50 @ =0x08636020
	str r1, [r0]
	adds r0, r6, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08097B54 @ =DiedOnSr388CollisionProcessFallingBsl
	b _08097BE0
	.align 2, 0
_08097B3C: .4byte 0x040000D4
_08097B40: .4byte 0x030016A0
_08097B44: .4byte 0x85000009
_08097B48: .4byte 0xFFFFFDE4
_08097B4C: .4byte 0x00000236
_08097B50: .4byte 0x08636020
_08097B54: .4byte DiedOnSr388CollisionProcessFallingBsl
_08097B58:
	cmp r7, #2
	bne _08097BB8
	ldr r3, _08097BA8 @ =0x00000222
	adds r1, r2, r3
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	ldrb r1, [r4]
	movs r0, #0x19
	rsbs r0, r0, #0
	ands r0, r1
	movs r3, #8
	orrs r0, r3
	strb r0, [r4]
	ldr r0, _08097BAC @ =0x00000236
	adds r2, r2, r0
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r3
	strb r0, [r2]
	ldrb r1, [r4]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r4]
	adds r0, r6, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08097BB0 @ =0x08636038
	str r1, [r0]
	adds r0, r6, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08097BB4 @ =DiedOnSr388CollisionProcessFallingBsl
	b _08097BE0
	.align 2, 0
_08097BA8: .4byte 0x00000222
_08097BAC: .4byte 0x00000236
_08097BB0: .4byte 0x08636038
_08097BB4: .4byte DiedOnSr388CollisionProcessFallingBsl
_08097BB8:
	cmp r7, #3
	bne _08097BE2
	ldr r1, _08097BF4 @ =0x00000236
	adds r2, r2, r1
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	adds r0, r6, #0
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _08097BF8 @ =0x08636050
	str r1, [r0]
	adds r0, r6, #0
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _08097BFC @ =unk_979d0
_08097BE0:
	str r1, [r0]
_08097BE2:
	mov r3, ip
	lsrs r0, r3, #0x18
_08097BE6:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08097BF4: .4byte 0x00000236
_08097BF8: .4byte 0x08636050
_08097BFC: .4byte unk_979d0

	thumb_func_start DiedOnSr388CollisionVblank
DiedOnSr388CollisionVblank: @ 0x08097C00
	push {lr}
	ldr r3, _08097C8C @ =0x040000D4
	ldr r0, _08097C90 @ =gOamData
	str r0, [r3]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r3, #4]
	ldr r0, _08097C94 @ =0x84000100
	str r0, [r3, #8]
	ldr r0, [r3, #8]
	ldr r2, _08097C98 @ =0x04000052
	ldr r0, _08097C9C @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08097CA0 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08097CA4 @ =0x04000054
	ldr r0, _08097CA8 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x40
	ldr r0, _08097CAC @ =gBg1XPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097CB0 @ =gBg1YPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097CB4 @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097CB8 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097CBC @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097CC0 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _08097CC4 @ =gNonGameplayRam
	movs r0, #0x88
	lsls r0, r0, #1
	adds r2, r1, r0
	ldrb r0, [r2]
	cmp r0, #1
	bne _08097C86
	movs r0, #0
	strb r0, [r2]
	ldr r2, _08097CC8 @ =0x00000111
	adds r0, r1, r2
	ldrb r0, [r0]
	lsls r0, r0, #5
	ldr r1, _08097CCC @ =0x08636A38
	adds r0, r0, r1
	str r0, [r3]
	ldr r0, _08097CD0 @ =0x05000120
	str r0, [r3, #4]
	ldr r0, _08097CD4 @ =0x84000008
	str r0, [r3, #8]
	ldr r0, [r3, #8]
_08097C86:
	pop {r0}
	bx r0
	.align 2, 0
_08097C8C: .4byte 0x040000D4
_08097C90: .4byte gOamData
_08097C94: .4byte 0x84000100
_08097C98: .4byte 0x04000052
_08097C9C: .4byte 0x03001222
_08097CA0: .4byte 0x03001220
_08097CA4: .4byte 0x04000054
_08097CA8: .4byte gWrittenToBldy
_08097CAC: .4byte gBg1XPosition
_08097CB0: .4byte gBg1YPosition
_08097CB4: .4byte 0x0300122C
_08097CB8: .4byte 0x0300122E
_08097CBC: .4byte 0x03001230
_08097CC0: .4byte 0x03001232
_08097CC4: .4byte gNonGameplayRam
_08097CC8: .4byte 0x00000111
_08097CCC: .4byte 0x08636A38
_08097CD0: .4byte 0x05000120
_08097CD4: .4byte 0x84000008

	thumb_func_start DiedOnSr388CollisionVblank_Unused
DiedOnSr388CollisionVblank_Unused: @ 0x08097CD8
	ldr r1, _08097D34 @ =0x040000D4
	ldr r0, _08097D38 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08097D3C @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _08097D40 @ =0x04000052
	ldr r0, _08097D44 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08097D48 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08097D4C @ =0x04000054
	ldr r0, _08097D50 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x40
	ldr r0, _08097D54 @ =gBg1XPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097D58 @ =gBg1YPosition
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097D5C @ =0x0300122C
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097D60 @ =0x0300122E
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097D64 @ =0x03001230
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldr r0, _08097D68 @ =0x03001232
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_08097D34: .4byte 0x040000D4
_08097D38: .4byte gOamData
_08097D3C: .4byte 0x84000100
_08097D40: .4byte 0x04000052
_08097D44: .4byte 0x03001222
_08097D48: .4byte 0x03001220
_08097D4C: .4byte 0x04000054
_08097D50: .4byte gWrittenToBldy
_08097D54: .4byte gBg1XPosition
_08097D58: .4byte gBg1YPosition
_08097D5C: .4byte 0x0300122C
_08097D60: .4byte 0x0300122E
_08097D64: .4byte 0x03001230
_08097D68: .4byte 0x03001232

	thumb_func_start DiedOnSr388CollisionGetPositionAndSlotOfOamByType
DiedOnSr388CollisionGetPositionAndSlotOfOamByType: @ 0x08097D6C
	push {r4, r5, r6, r7, lr}
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r1, #0
	ldr r7, _08097DA4 @ =gNonGameplayRam
	movs r6, #0x8b
	lsls r6, r6, #2
_08097D7C:
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r7
	adds r0, r3, r6
	ldrb r0, [r0]
	cmp r0, r5
	bne _08097DAC
	movs r5, #0x8a
	lsls r5, r5, #2
	adds r0, r3, r5
	ldrh r0, [r0]
	strh r0, [r4]
	ldr r4, _08097DA8 @ =0x0000022A
	adds r0, r3, r4
	ldrh r0, [r0]
	strh r0, [r2]
	adds r0, r1, #0
	b _08097DC4
	.align 2, 0
_08097DA4: .4byte gNonGameplayRam
_08097DA8: .4byte 0x0000022A
_08097DAC:
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x13
	bls _08097D7C
	movs r5, #0x96
	lsls r5, r5, #1
	adds r0, r5, #0
	strh r0, [r4]
	movs r0, #0xc8
	strh r0, [r2]
	movs r0, #0x14
_08097DC4:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start unk_97dcc
unk_97dcc: @ 0x08097DCC
	bx lr
	.align 2, 0

	thumb_func_start NewFileIntroCheckMonologueEnded
NewFileIntroCheckMonologueEnded: @ 0x08097DD0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	movs r0, #0
	mov r8, r0
	ldr r6, _08097E0C @ =gNonGameplayRam
	movs r0, #0x83
	lsls r0, r0, #2
	adds r7, r6, r0
	ldrh r0, [r7]
	adds r4, r0, #1
	strh r4, [r7]
	ldr r3, [r6]
	ldrh r2, [r3]
	adds r5, r2, #0
	movs r0, #0xff
	lsls r0, r0, #8
	mov ip, r0
	cmp r5, ip
	bne _08097E14
	mov r0, r8
	strh r0, [r7]
	ldr r7, _08097E10 @ =0x00000213
	adds r1, r6, r7
	movs r0, #0x64
	strb r0, [r1]
	movs r0, #1
	mov r8, r0
	b _08097E96
	.align 2, 0
_08097E0C: .4byte gNonGameplayRam
_08097E10: .4byte 0x00000213
_08097E14:
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r5, r0
	bne _08097E68
	mov r0, r8
	strh r0, [r7]
	movs r7, #0x86
	lsls r7, r7, #2
	adds r4, r6, r7
	ldrb r1, [r4]
	cmp r1, #1
	bne _08097E96
	adds r2, r3, #2
	str r2, [r6]
	subs r7, #5
	adds r0, r6, r7
	strb r1, [r0]
	ldrh r1, [r3, #2]
	movs r0, #0xfd
	lsls r0, r0, #8
	cmp r1, r0
	bne _08097E46
	movs r0, #2
	strb r0, [r4]
	b _08097E96
_08097E46:
	cmp r1, ip
	beq _08097E5C
	cmp r1, r5
	bne _08097E62
	movs r0, #4
	strb r0, [r4]
	adds r0, r2, #2
	str r0, [r6]
	ldrh r0, [r2, #2]
	cmp r0, ip
	bne _08097E96
_08097E5C:
	movs r0, #3
	strb r0, [r4]
	b _08097E96
_08097E62:
	movs r0, #0
	strb r0, [r4]
	b _08097E96
_08097E68:
	mov r0, ip
	ands r0, r2
	movs r1, #0xe1
	lsls r1, r1, #8
	cmp r0, r1
	bne _08097E82
	movs r1, #0xff
	ands r1, r2
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	cmp r1, r0
	bhi _08097E96
	b _08097E8A
_08097E82:
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bls _08097E96
_08097E8A:
	ldr r0, _08097EA4 @ =0x00000213
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	mov r0, r8
	strh r0, [r7]
_08097E96:
	mov r0, r8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08097EA4: .4byte 0x00000213

	thumb_func_start EndingCheckMonologueEnded
EndingCheckMonologueEnded: @ 0x08097EA8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	movs r0, #0
	mov r8, r0
	ldr r6, _08097EE4 @ =gNonGameplayRam
	movs r0, #0x83
	lsls r0, r0, #2
	adds r7, r6, r0
	ldrh r0, [r7]
	adds r4, r0, #1
	strh r4, [r7]
	ldr r3, [r6]
	ldrh r2, [r3]
	adds r5, r2, #0
	movs r0, #0xff
	lsls r0, r0, #8
	mov ip, r0
	cmp r5, ip
	bne _08097EEC
	mov r0, r8
	strh r0, [r7]
	ldr r7, _08097EE8 @ =0x00000213
	adds r1, r6, r7
	movs r0, #0x64
	strb r0, [r1]
	movs r0, #1
	mov r8, r0
	b _08097F6E
	.align 2, 0
_08097EE4: .4byte gNonGameplayRam
_08097EE8: .4byte 0x00000213
_08097EEC:
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r5, r0
	bne _08097F40
	mov r0, r8
	strh r0, [r7]
	movs r7, #0x86
	lsls r7, r7, #2
	adds r4, r6, r7
	ldrb r1, [r4]
	cmp r1, #1
	bne _08097F6E
	adds r2, r3, #2
	str r2, [r6]
	subs r7, #5
	adds r0, r6, r7
	strb r1, [r0]
	ldrh r1, [r3, #2]
	movs r0, #0xfd
	lsls r0, r0, #8
	cmp r1, r0
	bne _08097F1E
	movs r0, #2
	strb r0, [r4]
	b _08097F6E
_08097F1E:
	cmp r1, ip
	beq _08097F34
	cmp r1, r5
	bne _08097F3A
	movs r0, #4
	strb r0, [r4]
	adds r0, r2, #2
	str r0, [r6]
	ldrh r0, [r2, #2]
	cmp r0, ip
	bne _08097F6E
_08097F34:
	movs r0, #3
	strb r0, [r4]
	b _08097F6E
_08097F3A:
	movs r0, #0
	strb r0, [r4]
	b _08097F6E
_08097F40:
	mov r0, ip
	ands r0, r2
	movs r1, #0xe1
	lsls r1, r1, #8
	cmp r0, r1
	bne _08097F5A
	movs r1, #0xff
	ands r1, r2
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	cmp r1, r0
	bhi _08097F6E
	b _08097F62
_08097F5A:
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bls _08097F6E
_08097F62:
	ldr r0, _08097F7C @ =0x00000213
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	mov r0, r8
	strh r0, [r7]
_08097F6E:
	mov r0, r8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08097F7C: .4byte 0x00000213

	thumb_func_start SpecialCutsceneProcessMonologue
SpecialCutsceneProcessMonologue: @ 0x08097F80
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	ldr r5, _08097FF0 @ =gNonGameplayRam
	ldr r2, [r5]
	ldrh r3, [r2]
	adds r1, r3, #0
	movs r6, #0xff
	lsls r6, r6, #8
	adds r4, r5, #0
	cmp r1, r6
	bne _08097F9C
	b _08098142
_08097F9C:
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r1, r0
	bne _08097FF8
	ldrh r0, [r4, #0xc]
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x1b
	bhi _08097FD4
	adds r6, r4, #0
	adds r5, #0x14
	movs r3, #0xff
_08097FB6:
	ldrh r1, [r6, #0xe]
	lsrs r1, r1, #1
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r0, r2, r0
	adds r0, r0, r5
	ldrb r1, [r0]
	orrs r1, r3
	strb r1, [r0]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x1b
	bls _08097FB6
_08097FD4:
	movs r1, #0
	movs r0, #0
	strh r0, [r4, #0xc]
	ldrh r0, [r4, #0xe]
	adds r0, #2
	strh r0, [r4, #0xe]
	ldr r0, [r4]
	adds r0, #2
	str r0, [r4]
	ldr r2, _08097FF4 @ =0x00000212
	adds r0, r4, r2
	strb r1, [r0]
	b _08098142
	.align 2, 0
_08097FF0: .4byte gNonGameplayRam
_08097FF4: .4byte 0x00000212
_08097FF8:
	movs r0, #0xfd
	lsls r0, r0, #8
	cmp r1, r0
	bne _0809807C
	movs r2, #0
	str r2, [sp, #4]
	ldr r1, _08098064 @ =0x040000D4
	add r5, sp, #4
	str r5, [r1]
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08098068 @ =0x85001200
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r3, #0
	strh r2, [r4, #0x12]
	strh r2, [r4, #0x10]
	strh r2, [r4, #0xe]
	strh r2, [r4, #0xc]
	ldr r0, [r4]
	adds r0, #2
	str r0, [r4]
	ldr r5, _0809806C @ =0x00000212
	adds r0, r4, r5
	strb r3, [r0]
	str r2, [sp, #4]
	add r0, sp, #4
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0x14
	str r0, [r1, #4]
	ldr r3, _08098070 @ =0x8500003F
	str r3, [r1, #8]
	ldr r0, [r1, #8]
	str r2, [sp, #4]
	add r2, sp, #4
	str r2, [r1]
	movs r5, #0x88
	lsls r5, r5, #1
	adds r0, r4, r5
	str r0, [r1, #4]
	str r3, [r1, #8]
	ldr r0, [r1, #8]
	movs r0, #0x80
	lsls r0, r0, #0x12
	str r0, [r1]
	ldr r0, _08098074 @ =0x06004800
	str r0, [r1, #4]
	ldr r0, _08098078 @ =0x84000200
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _08098142
	.align 2, 0
_08098064: .4byte 0x040000D4
_08098068: .4byte 0x85001200
_0809806C: .4byte 0x00000212
_08098070: .4byte 0x8500003F
_08098074: .4byte 0x06004800
_08098078: .4byte 0x84000200
_0809807C:
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _0809808C
	ldrh r0, [r4, #0xc]
	adds r0, #1
	strh r0, [r4, #0xc]
	b _08098142
_0809808C:
	adds r0, r6, #0
	ands r0, r3
	movs r1, #0xe1
	lsls r1, r1, #8
	cmp r0, r1
	bne _0809809E
	adds r0, r2, #2
	str r0, [r4]
	b _08098142
_0809809E:
	ldrh r4, [r5, #0xc]
	lsls r4, r4, #5
	ldrh r0, [r5, #0xe]
	lsls r0, r0, #0xa
	adds r4, r4, r0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r4, r4, r0
	ldrh r0, [r2]
	bl GetCharacterWidth
	mov r8, r0
	ldr r0, [r5]
	ldrh r0, [r0]
	mov r1, r8
	lsls r2, r1, #0x18
	lsrs r2, r2, #0x18
	ldr r1, _08098150 @ =0x00000212
	adds r6, r5, r1
	ldrb r3, [r6]
	movs r1, #0
	str r1, [sp]
	adds r1, r4, #0
	bl DrawCharacter
	ldrh r0, [r5, #0xc]
	cmp r0, #0x1b
	bhi _0809813A
	ldrh r1, [r5, #0xe]
	lsrs r1, r1, #1
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	ldrh r2, [r5, #0xc]
	adds r0, r0, r2
	adds r7, r5, #0
	adds r7, #0x14
	adds r0, r0, r7
	movs r1, #4
	strb r1, [r0]
	ldrb r0, [r6]
	add r0, r8
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r5, #0
	cmp r0, #7
	bls _0809813A
	adds r2, r4, #0
	adds r3, r6, #0
	adds r4, r7, #0
_08098104:
	ldrb r0, [r3]
	adds r1, r0, #0
	subs r1, #8
	strb r1, [r3]
	ldrh r0, [r2, #0xc]
	adds r0, #1
	strh r0, [r2, #0xc]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1b
	bhi _0809813A
	lsls r0, r1, #0x18
	cmp r0, #0
	beq _08098134
	ldrh r0, [r2, #0xe]
	lsrs r0, r0, #1
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	ldrh r5, [r2, #0xc]
	adds r1, r1, r5
	adds r1, r1, r4
	movs r0, #4
	strb r0, [r1]
_08098134:
	ldrb r0, [r3]
	cmp r0, #7
	bhi _08098104
_0809813A:
	ldr r1, _08098154 @ =gNonGameplayRam
	ldr r0, [r1]
	adds r0, #2
	str r0, [r1]
_08098142:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098150: .4byte 0x00000212
_08098154: .4byte gNonGameplayRam

	thumb_func_start unk_98158
unk_98158: @ 0x08098158
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	ldr r1, _08098198 @ =gNonGameplayRam
	ldrh r6, [r1, #0x10]
	ldrh r0, [r1, #0x12]
	lsrs r7, r0, #1
	ldrh r0, [r1, #0xe]
	lsrs r0, r0, #1
	str r1, [sp, #8]
	cmp r7, r0
	bls _08098178
	b _0809827C
_08098178:
	str r1, [sp]
_0809817A:
	ldr r2, [sp]
	ldr r0, [r2]
	ldrh r0, [r0]
	movs r3, #0xfc
	lsls r3, r3, #8
	cmp r0, r3
	bne _0809819C
	ldrh r0, [r1, #0xc]
	cmp r0, #0x1b
	bhi _080981B6
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov ip, r0
	b _080981BA
	.align 2, 0
_08098198: .4byte gNonGameplayRam
_0809819C:
	ldrh r0, [r1, #0xe]
	lsrs r0, r0, #1
	cmp r7, r0
	bne _080981B6
	ldr r1, [sp]
	ldrh r0, [r1, #0xc]
	movs r2, #0x1c
	mov ip, r2
	cmp r0, #0x1b
	bhi _080981BA
	adds r3, r0, #0
	mov ip, r3
	b _080981BA
_080981B6:
	movs r5, #0x1c
	mov ip, r5
_080981BA:
	adds r0, r7, #1
	str r0, [sp, #4]
	cmp r6, ip
	bhs _08098268
	ldr r1, _08098230 @ =gNonGameplayRam
	mov r8, r1
	lsls r0, r7, #3
	subs r0, r0, r7
	lsls r0, r0, #2
	mov sl, r0
	ldr r2, _08098234 @ =0x00000FFF
	mov sb, r2
_080981D2:
	mov r3, sl
	adds r2, r6, r3
	ldr r5, _08098238 @ =0x03001594
	adds r1, r2, r5
	ldrb r0, [r1]
	cmp r0, #5
	bne _0809825A
	movs r0, #0
	strb r0, [r1]
	ldr r0, [sp, #8]
	adds r0, #0x14
	adds r2, r2, r0
	ldrb r0, [r2]
	subs r1, r0, #1
	strb r1, [r2]
	lsls r0, r1, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _08098244
	lsls r2, r6, #1
	lsls r0, r7, #7
	adds r2, r2, r0
	ldr r0, _0809823C @ =0x06004842
	adds r0, r2, r0
	str r0, [sp, #0xc]
	ldr r1, _08098240 @ =0x06004882
	adds r2, r2, r1
	ldrh r3, [r0]
	ldrh r4, [r2]
	lsrs r0, r3, #0xc
	lsrs r1, r4, #0xc
	subs r0, #1
	lsls r0, r0, #0x10
	subs r1, #1
	lsls r1, r1, #0x10
	lsrs r0, r0, #4
	mov r5, sb
	ands r3, r5
	orrs r0, r3
	ldr r3, [sp, #0xc]
	strh r0, [r3]
	lsrs r1, r1, #4
	ands r4, r5
	orrs r1, r4
	strh r1, [r2]
	b _0809825E
	.align 2, 0
_08098230: .4byte gNonGameplayRam
_08098234: .4byte 0x00000FFF
_08098238: .4byte 0x03001594
_0809823C: .4byte 0x06004842
_08098240: .4byte 0x06004882
_08098244:
	cmp r0, #0
	bne _08098252
	mov r5, r8
	strh r6, [r5, #0x10]
	lsls r0, r7, #1
	strh r0, [r5, #0x12]
	b _0809825E
_08098252:
	movs r0, #0xff
	orrs r1, r0
	strb r1, [r2]
	b _08098268
_0809825A:
	adds r0, #1
	strb r0, [r1]
_0809825E:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, ip
	blo _080981D2
_08098268:
	movs r6, #0
	ldr r1, [sp, #4]
	lsls r0, r1, #0x10
	lsrs r7, r0, #0x10
	ldr r1, [sp, #8]
	ldrh r0, [r1, #0xe]
	lsrs r0, r0, #1
	cmp r7, r0
	bhi _0809827C
	b _0809817A
_0809827C:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start EndingProcessAdamText
EndingProcessAdamText: @ 0x0809828C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	movs r7, #0
	ldr r5, _080982E8 @ =gNonGameplayRam
	movs r0, #0x83
	lsls r0, r0, #2
	adds r6, r5, r0
	ldrh r0, [r6]
	adds r2, r0, #1
	movs r1, #0
	mov sb, r1
	strh r2, [r6]
	ldr r3, [r5]
	ldrh r4, [r3]
	adds r1, r4, #0
	movs r0, #0xff
	lsls r0, r0, #8
	mov ip, r0
	cmp r1, ip
	bne _080982FC
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xf
	bhi _080982C4
	b _08098492
_080982C4:
	strh r7, [r6]
	str r7, [sp, #4]
	ldr r1, _080982EC @ =0x040000D4
	add r0, sp, #4
	str r0, [r1]
	ldr r0, _080982F0 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _080982F4 @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	strh r7, [r5, #0xe]
	strh r7, [r5, #0xc]
	ldr r1, _080982F8 @ =0x00000212
	adds r0, r5, r1
	mov r1, sb
	strb r1, [r0]
	movs r7, #1
	b _08098492
	.align 2, 0
_080982E8: .4byte gNonGameplayRam
_080982EC: .4byte 0x040000D4
_080982F0: .4byte 0x0600D000
_080982F4: .4byte 0x85000400
_080982F8: .4byte 0x00000212
_080982FC:
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r1, r0
	bne _0809836C
	ldrh r0, [r5, #0xe]
	cmp r0, #1
	bhi _0809832C
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bhi _08098314
	b _08098492
_08098314:
	strh r7, [r6]
	movs r0, #2
	strh r0, [r5, #0xe]
	strh r7, [r5, #0xc]
	ldr r1, _08098328 @ =0x00000212
	adds r0, r5, r1
	mov r1, sb
	strb r1, [r0]
	b _08098408
	.align 2, 0
_08098328: .4byte 0x00000212
_0809832C:
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x7d
	bhi _08098336
	b _08098492
_08098336:
	strh r7, [r6]
	strh r7, [r5, #0xe]
	strh r7, [r5, #0xc]
	ldr r1, _0809835C @ =0x00000212
	adds r0, r5, r1
	mov r1, sb
	strb r1, [r0]
	adds r0, r3, #2
	str r0, [r5]
	str r7, [sp, #4]
	ldr r1, _08098360 @ =0x040000D4
	add r0, sp, #4
	str r0, [r1]
	ldr r0, _08098364 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _08098368 @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _08098492
	.align 2, 0
_0809835C: .4byte 0x00000212
_08098360: .4byte 0x040000D4
_08098364: .4byte 0x0600D000
_08098368: .4byte 0x85000400
_0809836C:
	movs r0, #0xfd
	lsls r0, r0, #8
	mov r8, r0
	cmp r1, r8
	bne _080983B8
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xf
	bhi _08098380
	b _08098492
_08098380:
	strh r7, [r6]
	str r7, [sp, #4]
	ldr r1, _080983A8 @ =0x040000D4
	add r0, sp, #4
	str r0, [r1]
	ldr r0, _080983AC @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _080983B0 @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	strh r7, [r5, #0xe]
	strh r7, [r5, #0xc]
	adds r0, r3, #2
	str r0, [r5]
	ldr r1, _080983B4 @ =0x00000212
	adds r0, r5, r1
	mov r1, sb
	strb r1, [r0]
	b _08098492
	.align 2, 0
_080983A8: .4byte 0x040000D4
_080983AC: .4byte 0x0600D000
_080983B0: .4byte 0x85000400
_080983B4: .4byte 0x00000212
_080983B8:
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _080983EE
	strh r7, [r6]
	movs r0, #0x86
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #1
	bne _08098492
	adds r0, r3, #2
	str r0, [r5]
	ldrh r0, [r3, #2]
	cmp r0, r8
	bne _080983DE
	movs r0, #2
	strb r0, [r1]
	b _08098492
_080983DE:
	cmp r0, ip
	bne _080983E8
	movs r0, #3
	strb r0, [r1]
	b _08098492
_080983E8:
	mov r0, sb
	strb r0, [r1]
	b _08098492
_080983EE:
	mov r0, ip
	ands r0, r4
	movs r1, #0xe1
	lsls r1, r1, #8
	cmp r0, r1
	bne _0809840E
	movs r1, #0xff
	ands r1, r4
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r1, r0
	bhi _08098492
	strh r7, [r6]
_08098408:
	adds r0, r3, #2
	str r0, [r5]
	b _08098492
_0809840E:
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bls _08098492
	strh r7, [r6]
	ldrh r4, [r5, #0xc]
	lsls r4, r4, #5
	ldrh r0, [r5, #0xe]
	lsls r0, r0, #0xa
	adds r4, r4, r0
	ldr r1, _080984A4 @ =0x0600D000
	adds r4, r4, r1
	ldrh r0, [r3]
	bl GetCharacterWidth
	mov r8, r0
	ldr r0, [r5]
	ldrh r0, [r0]
	mov r1, r8
	lsls r2, r1, #0x18
	lsrs r2, r2, #0x18
	ldr r1, _080984A8 @ =0x00000212
	adds r6, r5, r1
	ldrb r3, [r6]
	str r7, [sp]
	adds r1, r4, #0
	bl DrawCharacter
	ldr r1, [r5]
	ldrh r0, [r1]
	cmp r0, #0x40
	beq _08098454
	movs r1, #1
	bl PlayCharacterAppearingSound
_08098454:
	ldrh r0, [r5, #0xc]
	adds r4, r5, #0
	cmp r0, #0x1f
	bhi _0809848C
	ldrb r0, [r6]
	add r0, r8
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _0809848C
	adds r3, r4, #0
	adds r2, r6, #0
_0809846E:
	ldrb r0, [r2]
	adds r1, r0, #0
	subs r1, #8
	strb r1, [r2]
	ldrh r0, [r3, #0xc]
	adds r0, #1
	strh r0, [r3, #0xc]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1f
	bhi _0809848C
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bhi _0809846E
_0809848C:
	ldr r0, [r4]
	adds r0, #2
	str r0, [r4]
_08098492:
	adds r0, r7, #0
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080984A4: .4byte 0x0600D000
_080984A8: .4byte 0x00000212

	thumb_func_start IntroProcessText
IntroProcessText: @ 0x080984AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	movs r0, #0
	mov r8, r0
	ldr r5, _08098514 @ =gNonGameplayRam
	movs r1, #0x83
	lsls r1, r1, #2
	adds r7, r5, r1
	ldrh r0, [r7]
	adds r2, r0, #1
	movs r0, #0
	mov sl, r0
	strh r2, [r7]
	ldr r6, [r5]
	ldrh r4, [r6]
	adds r3, r4, #0
	movs r1, #0xff
	lsls r1, r1, #8
	mov ip, r1
	cmp r3, ip
	bne _08098528
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xc
	bhi _080984E8
	b _080986D2
_080984E8:
	mov r0, r8
	strh r0, [r7]
	mov r1, r8
	str r1, [sp, #4]
	ldr r1, _08098518 @ =0x040000D4
	add r0, sp, #4
	str r0, [r1]
	ldr r0, _0809851C @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _08098520 @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	mov r1, r8
	strh r1, [r5, #0xe]
	strh r1, [r5, #0xc]
	ldr r1, _08098524 @ =0x00000212
	adds r0, r5, r1
	mov r1, sl
	strb r1, [r0]
	movs r0, #1
	mov r8, r0
	b _080986D2
	.align 2, 0
_08098514: .4byte gNonGameplayRam
_08098518: .4byte 0x040000D4
_0809851C: .4byte 0x0600D000
_08098520: .4byte 0x85000400
_08098524: .4byte 0x00000212
_08098528:
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r3, r0
	bne _0809859C
	ldrh r0, [r5, #0xe]
	cmp r0, #1
	bhi _08098558
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _08098540
	b _080986D2
_08098540:
	mov r1, r8
	strh r1, [r7]
	movs r0, #2
	strh r0, [r5, #0xe]
	strh r1, [r5, #0xc]
	ldr r1, _08098554 @ =0x00000212
	adds r0, r5, r1
	mov r1, sl
	strb r1, [r0]
	b _08098654
	.align 2, 0
_08098554: .4byte 0x00000212
_08098558:
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x7a
	bhi _08098562
	b _080986D2
_08098562:
	mov r0, r8
	strh r0, [r7]
	strh r0, [r5, #0xe]
	strh r0, [r5, #0xc]
	ldr r1, _0809858C @ =0x00000212
	adds r0, r5, r1
	mov r1, sl
	strb r1, [r0]
	adds r0, r6, #2
	str r0, [r5]
	mov r0, r8
	str r0, [sp, #4]
	ldr r1, _08098590 @ =0x040000D4
	add r0, sp, #4
	str r0, [r1]
	ldr r0, _08098594 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _08098598 @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _080986D2
	.align 2, 0
_0809858C: .4byte 0x00000212
_08098590: .4byte 0x040000D4
_08098594: .4byte 0x0600D000
_08098598: .4byte 0x85000400
_0809859C:
	movs r1, #0xfd
	lsls r1, r1, #8
	mov sb, r1
	cmp r3, sb
	bne _080985EC
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xc
	bhi _080985B0
	b _080986D2
_080985B0:
	mov r0, r8
	strh r0, [r7]
	mov r1, r8
	str r1, [sp, #4]
	ldr r1, _080985DC @ =0x040000D4
	add r0, sp, #4
	str r0, [r1]
	ldr r0, _080985E0 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _080985E4 @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	mov r1, r8
	strh r1, [r5, #0xe]
	strh r1, [r5, #0xc]
	adds r0, r6, #2
	str r0, [r5]
	ldr r1, _080985E8 @ =0x00000212
	adds r0, r5, r1
	mov r1, sl
	strb r1, [r0]
	b _080986D2
	.align 2, 0
_080985DC: .4byte 0x040000D4
_080985E0: .4byte 0x0600D000
_080985E4: .4byte 0x85000400
_080985E8: .4byte 0x00000212
_080985EC:
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r3, r0
	bne _08098638
	mov r0, r8
	strh r0, [r7]
	movs r1, #0x86
	lsls r1, r1, #2
	adds r2, r5, r1
	ldrb r0, [r2]
	cmp r0, #1
	bne _080986D2
	adds r1, r6, #2
	str r1, [r5]
	ldrh r0, [r6, #2]
	cmp r0, sb
	bne _08098614
	movs r0, #2
	strb r0, [r2]
	b _080986D2
_08098614:
	cmp r0, ip
	beq _08098626
	cmp r0, r3
	bne _08098632
	adds r0, r1, #2
	str r0, [r5]
	ldrh r0, [r1, #2]
	cmp r0, ip
	bne _0809862C
_08098626:
	movs r0, #3
	strb r0, [r2]
	b _080986D2
_0809862C:
	movs r0, #4
	strb r0, [r2]
	b _080986D2
_08098632:
	mov r0, sl
	strb r0, [r2]
	b _080986D2
_08098638:
	mov r0, ip
	ands r0, r4
	movs r1, #0xe1
	lsls r1, r1, #8
	cmp r0, r1
	bne _0809865A
	movs r1, #0xff
	ands r1, r4
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r1, r0
	bhi _080986D2
	mov r1, r8
	strh r1, [r7]
_08098654:
	adds r0, r6, #2
	str r0, [r5]
	b _080986D2
_0809865A:
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bls _080986D2
	mov r0, r8
	strh r0, [r7]
	ldrh r4, [r5, #0xc]
	lsls r4, r4, #5
	ldrh r0, [r5, #0xe]
	lsls r0, r0, #0xa
	adds r4, r4, r0
	ldr r1, _080986E4 @ =0x0600D000
	adds r4, r4, r1
	ldrh r0, [r6]
	bl GetCharacterWidth
	adds r7, r0, #0
	ldr r0, [r5]
	ldrh r0, [r0]
	lsls r2, r7, #0x18
	lsrs r2, r2, #0x18
	ldr r1, _080986E8 @ =0x00000212
	adds r6, r5, r1
	ldrb r3, [r6]
	mov r1, r8
	str r1, [sp]
	adds r1, r4, #0
	bl DrawCharacter
	ldrh r0, [r5, #0xc]
	cmp r0, #0x1f
	bhi _080986CA
	ldrb r0, [r6]
	adds r0, r0, r7
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _080986CA
	adds r3, r5, #0
	adds r2, r6, #0
_080986AC:
	ldrb r0, [r2]
	adds r1, r0, #0
	subs r1, #8
	strb r1, [r2]
	ldrh r0, [r3, #0xc]
	adds r0, #1
	strh r0, [r3, #0xc]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1f
	bhi _080986CA
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bhi _080986AC
_080986CA:
	ldr r1, _080986EC @ =gNonGameplayRam
	ldr r0, [r1]
	adds r0, #2
	str r0, [r1]
_080986D2:
	mov r0, r8
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080986E4: .4byte 0x0600D000
_080986E8: .4byte 0x00000212
_080986EC: .4byte gNonGameplayRam

	thumb_func_start NewFileIntroProcessAdamText
NewFileIntroProcessAdamText: @ 0x080986F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	movs r0, #0
	mov r8, r0
	ldr r5, _08098758 @ =gNonGameplayRam
	movs r1, #0x83
	lsls r1, r1, #2
	adds r7, r5, r1
	ldrh r0, [r7]
	adds r2, r0, #1
	movs r0, #0
	mov sl, r0
	strh r2, [r7]
	ldr r6, [r5]
	ldrh r4, [r6]
	adds r3, r4, #0
	movs r1, #0xff
	lsls r1, r1, #8
	mov ip, r1
	cmp r3, ip
	bne _0809876C
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xc
	bhi _0809872C
	b _08098924
_0809872C:
	mov r0, r8
	strh r0, [r7]
	mov r1, r8
	str r1, [sp, #4]
	ldr r1, _0809875C @ =0x040000D4
	add r0, sp, #4
	str r0, [r1]
	ldr r0, _08098760 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _08098764 @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	mov r1, r8
	strh r1, [r5, #0xe]
	strh r1, [r5, #0xc]
	ldr r1, _08098768 @ =0x00000212
	adds r0, r5, r1
	mov r1, sl
	strb r1, [r0]
	movs r0, #1
	mov r8, r0
	b _08098924
	.align 2, 0
_08098758: .4byte gNonGameplayRam
_0809875C: .4byte 0x040000D4
_08098760: .4byte 0x0600D000
_08098764: .4byte 0x85000400
_08098768: .4byte 0x00000212
_0809876C:
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r3, r0
	bne _080987E0
	ldrh r0, [r5, #0xe]
	cmp r0, #1
	bhi _0809879C
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _08098784
	b _08098924
_08098784:
	mov r1, r8
	strh r1, [r7]
	movs r0, #2
	strh r0, [r5, #0xe]
	strh r1, [r5, #0xc]
	ldr r1, _08098798 @ =0x00000212
	adds r0, r5, r1
	mov r1, sl
	strb r1, [r0]
	b _08098898
	.align 2, 0
_08098798: .4byte 0x00000212
_0809879C:
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x7a
	bhi _080987A6
	b _08098924
_080987A6:
	mov r0, r8
	strh r0, [r7]
	strh r0, [r5, #0xe]
	strh r0, [r5, #0xc]
	ldr r1, _080987D0 @ =0x00000212
	adds r0, r5, r1
	mov r1, sl
	strb r1, [r0]
	adds r0, r6, #2
	str r0, [r5]
	mov r0, r8
	str r0, [sp, #4]
	ldr r1, _080987D4 @ =0x040000D4
	add r0, sp, #4
	str r0, [r1]
	ldr r0, _080987D8 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _080987DC @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _08098924
	.align 2, 0
_080987D0: .4byte 0x00000212
_080987D4: .4byte 0x040000D4
_080987D8: .4byte 0x0600D000
_080987DC: .4byte 0x85000400
_080987E0:
	movs r1, #0xfd
	lsls r1, r1, #8
	mov sb, r1
	cmp r3, sb
	bne _08098830
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xc
	bhi _080987F4
	b _08098924
_080987F4:
	mov r0, r8
	strh r0, [r7]
	mov r1, r8
	str r1, [sp, #4]
	ldr r1, _08098820 @ =0x040000D4
	add r0, sp, #4
	str r0, [r1]
	ldr r0, _08098824 @ =0x0600D000
	str r0, [r1, #4]
	ldr r0, _08098828 @ =0x85000400
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	mov r1, r8
	strh r1, [r5, #0xe]
	strh r1, [r5, #0xc]
	adds r0, r6, #2
	str r0, [r5]
	ldr r1, _0809882C @ =0x00000212
	adds r0, r5, r1
	mov r1, sl
	strb r1, [r0]
	b _08098924
	.align 2, 0
_08098820: .4byte 0x040000D4
_08098824: .4byte 0x0600D000
_08098828: .4byte 0x85000400
_0809882C: .4byte 0x00000212
_08098830:
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r3, r0
	bne _0809887C
	mov r0, r8
	strh r0, [r7]
	movs r1, #0x86
	lsls r1, r1, #2
	adds r2, r5, r1
	ldrb r0, [r2]
	cmp r0, #1
	bne _08098924
	adds r1, r6, #2
	str r1, [r5]
	ldrh r0, [r6, #2]
	cmp r0, sb
	bne _08098858
	movs r0, #2
	strb r0, [r2]
	b _08098924
_08098858:
	cmp r0, ip
	beq _0809886A
	cmp r0, r3
	bne _08098876
	adds r0, r1, #2
	str r0, [r5]
	ldrh r0, [r1, #2]
	cmp r0, ip
	bne _08098870
_0809886A:
	movs r0, #3
	strb r0, [r2]
	b _08098924
_08098870:
	movs r0, #4
	strb r0, [r2]
	b _08098924
_08098876:
	mov r0, sl
	strb r0, [r2]
	b _08098924
_0809887C:
	mov r0, ip
	ands r0, r4
	movs r1, #0xe1
	lsls r1, r1, #8
	cmp r0, r1
	bne _0809889E
	movs r1, #0xff
	ands r1, r4
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r1, r0
	bhi _08098924
	mov r1, r8
	strh r1, [r7]
_08098898:
	adds r0, r6, #2
	str r0, [r5]
	b _08098924
_0809889E:
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bls _08098924
	mov r0, r8
	strh r0, [r7]
	ldrh r4, [r5, #0xc]
	lsls r4, r4, #5
	ldrh r0, [r5, #0xe]
	lsls r0, r0, #0xa
	adds r4, r4, r0
	ldr r1, _08098938 @ =0x0600D000
	adds r4, r4, r1
	ldrh r0, [r6]
	bl GetCharacterWidth
	adds r7, r0, #0
	ldr r0, [r5]
	ldrh r0, [r0]
	lsls r2, r7, #0x18
	lsrs r2, r2, #0x18
	ldr r1, _0809893C @ =0x00000212
	adds r6, r5, r1
	ldrb r3, [r6]
	mov r1, r8
	str r1, [sp]
	adds r1, r4, #0
	bl DrawCharacter
	ldr r1, [r5]
	ldrh r0, [r1]
	cmp r0, #0x40
	beq _080988E6
	movs r1, #1
	bl PlayCharacterAppearingSound
_080988E6:
	ldrh r0, [r5, #0xc]
	adds r4, r5, #0
	cmp r0, #0x1f
	bhi _0809891E
	ldrb r0, [r6]
	adds r0, r0, r7
	strb r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _0809891E
	adds r3, r4, #0
	adds r2, r6, #0
_08098900:
	ldrb r0, [r2]
	adds r1, r0, #0
	subs r1, #8
	strb r1, [r2]
	ldrh r0, [r3, #0xc]
	adds r0, #1
	strh r0, [r3, #0xc]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1f
	bhi _0809891E
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bhi _08098900
_0809891E:
	ldr r0, [r4]
	adds r0, #2
	str r0, [r4]
_08098924:
	mov r0, r8
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08098938: .4byte 0x0600D000
_0809893C: .4byte 0x00000212

	thumb_func_start Dma3Transfer_Unused1
Dma3Transfer_Unused1: @ 0x08098940
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r3, r3, #0x10
	lsrs r7, r3, #0x10
	lsls r2, r2, #0x15
	movs r3, #0
	cmp r3, r7
	bhs _08098976
	ldr r1, _0809897C @ =0x040000D4
	lsrs r2, r2, #0x12
	movs r0, #0x84
	lsls r0, r0, #0x18
	orrs r2, r0
	movs r6, #0x80
	lsls r6, r6, #3
_08098960:
	str r5, [r1]
	str r4, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	adds r5, r5, r6
	adds r4, r4, r6
	adds r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, r7
	blo _08098960
_08098976:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809897C: .4byte 0x040000D4

	thumb_func_start Dma3Transfer_Unused2
Dma3Transfer_Unused2: @ 0x08098980
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r3, r3, #0x10
	lsrs r6, r3, #0x10
	lsls r2, r2, #0x11
	movs r3, #0
	cmp r3, r6
	bhs _080989B2
	ldr r1, _080989B8 @ =0x040000D4
	lsrs r2, r2, #0x11
	movs r0, #0x80
	lsls r0, r0, #0x18
	orrs r2, r0
_0809899C:
	str r5, [r1]
	str r4, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	adds r5, #0x40
	adds r4, #0x40
	adds r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, r6
	blo _0809899C
_080989B2:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080989B8: .4byte 0x040000D4

	thumb_func_start Dma3Clear_Unused
Dma3Clear_Unused: @ 0x080989BC
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r4, r0, #0
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	lsls r1, r1, #0x15
	movs r2, #0
	cmp r2, r5
	bhs _080989F6
	movs r7, #0
	ldr r3, _08098A00 @ =0x040000D4
	lsrs r1, r1, #0x12
	movs r0, #0x85
	lsls r0, r0, #0x18
	orrs r1, r0
	movs r6, #0x80
	lsls r6, r6, #3
_080989DE:
	str r7, [sp]
	mov r0, sp
	str r0, [r3]
	str r4, [r3, #4]
	str r1, [r3, #8]
	ldr r0, [r3, #8]
	adds r4, r4, r6
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, r5
	blo _080989DE
_080989F6:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098A00: .4byte 0x040000D4

	thumb_func_start unk_98a04
unk_98a04: @ 0x08098A04
	push {r4, r5, r6, r7, lr}
	movs r3, #0
	ldr r0, _08098A48 @ =gNonGameplayRam
	mov ip, r0
	movs r7, #0x88
	lsls r7, r7, #1
	add r7, ip
	movs r6, #0x96
	lsls r6, r6, #1
	add r6, ip
	movs r5, #0xb2
	lsls r5, r5, #1
	add r5, ip
	movs r4, #0xa4
	lsls r4, r4, #1
	add r4, ip
_08098A24:
	adds r0, r3, r7
	adds r1, r3, r6
	ldrb r2, [r1]
	ldrb r0, [r0]
	cmp r0, r2
	bhi _08098A50
	movs r2, #0
	strb r2, [r1]
	adds r1, r3, r5
	movs r0, #1
	strb r0, [r1]
	adds r1, r3, r4
	ldrb r0, [r1]
	cmp r0, #0x25
	bhi _08098A4C
	adds r0, #1
	b _08098A52
	.align 2, 0
_08098A48: .4byte gNonGameplayRam
_08098A4C:
	strb r2, [r1]
	b _08098A54
_08098A50:
	adds r0, r2, #1
_08098A52:
	strb r0, [r1]
_08098A54:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #3
	bls _08098A24
	movs r0, #0x8d
	lsls r0, r0, #1
	add r0, ip
	movs r2, #0x9b
	lsls r2, r2, #1
	add r2, ip
	ldrb r1, [r2]
	ldrb r0, [r0]
	cmp r0, r1
	bhi _08098A96
	movs r3, #0
	strb r3, [r2]
	movs r1, #0xb7
	lsls r1, r1, #1
	add r1, ip
	movs r0, #1
	strb r0, [r1]
	movs r1, #0xa9
	lsls r1, r1, #1
	add r1, ip
	ldrb r0, [r1]
	cmp r0, #0xe
	bhi _08098A92
	adds r0, #1
	strb r0, [r1]
	b _08098A9A
_08098A92:
	strb r3, [r1]
	b _08098A9A
_08098A96:
	adds r0, r1, #1
	strb r0, [r2]
_08098A9A:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start NewFileIntroSamusGettingCuredSetupWindow
NewFileIntroSamusGettingCuredSetupWindow: @ 0x08098AA0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r1, _08098AE4 @ =0x040000D4
	ldr r0, _08098AE8 @ =0x02001000
	str r0, [r1]
	ldr r0, _08098AEC @ =0x02002000
	str r0, [r1, #4]
	ldr r0, _08098AF0 @ =0x84000058
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r1, _08098AF4 @ =gNonGameplayRam
	ldr r2, _08098AF8 @ =0x000001F5
	adds r0, r1, r2
	ldrb r2, [r0]
	ldr r3, _08098AFC @ =0x000001F3
	adds r0, r1, r3
	ldrb r3, [r0]
	subs r0, r2, r3
	lsls r0, r0, #0x10
	adds r7, r2, r3
	lsrs r2, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _08098B00
	rsbs r0, r0, #0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	lsls r0, r3, #1
	movs r2, #0
	cmp r5, r0
	ble _08098B02
	movs r2, #0xa1
	b _08098B02
	.align 2, 0
_08098AE4: .4byte 0x040000D4
_08098AE8: .4byte 0x02001000
_08098AEC: .4byte 0x02002000
_08098AF0: .4byte 0x84000058
_08098AF4: .4byte gNonGameplayRam
_08098AF8: .4byte 0x000001F5
_08098AFC: .4byte 0x000001F3
_08098B00:
	movs r5, #0
_08098B02:
	cmp r7, #0x9f
	ble _08098B08
	movs r7, #0xa0
_08098B08:
	ldr r0, _08098BBC @ =0x083E3294
	ldr r6, _08098BC0 @ =0x000001F3
	adds r1, r1, r6
	ldrb r1, [r1]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r1, [r1]
	mov ip, r1
	ldr r4, _08098BC4 @ =0x02001000
	movs r6, #0
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	lsls r1, r7, #0x10
	cmp r6, r0
	bge _08098B3E
	movs r2, #0
	adds r3, r0, #0
_08098B2A:
	strh r2, [r4]
	adds r4, #2
	lsls r0, r6, #0x10
	movs r6, #0x80
	lsls r6, r6, #9
	adds r0, r0, r6
	lsrs r6, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r3
	blt _08098B2A
_08098B3E:
	lsls r0, r6, #0x10
	asrs r3, r1, #0x10
	cmp r0, r1
	bgt _08098B98
	ldr r0, _08098BC8 @ =0x03001678
	mov r8, r0
	adds r7, r3, #0
_08098B4C:
	mov r1, r8
	ldrb r2, [r1]
	lsls r0, r5, #2
	add r0, ip
	ldrh r1, [r0, #2]
	adds r1, r2, r1
	lsls r1, r1, #0x10
	ldrh r0, [r0]
	adds r2, r2, r0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	lsrs r3, r1, #0x10
	cmp r1, #0
	bge _08098B6A
	movs r3, #0
_08098B6A:
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf0
	ble _08098B74
	movs r2, #0xf0
_08098B74:
	lsls r1, r3, #0x10
	asrs r1, r1, #8
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	orrs r0, r1
	strh r0, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	lsls r0, r6, #0x10
	movs r2, #0x80
	lsls r2, r2, #9
	adds r0, r0, r2
	lsrs r6, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r7
	ble _08098B4C
_08098B98:
	lsls r1, r6, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0x9f
	bgt _08098BB2
	movs r2, #0
_08098BA2:
	strh r2, [r4]
	adds r4, #2
	movs r3, #0x80
	lsls r3, r3, #9
	adds r1, r1, r3
	asrs r0, r1, #0x10
	cmp r0, #0x9f
	ble _08098BA2
_08098BB2:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098BBC: .4byte 0x083E3294
_08098BC0: .4byte 0x000001F3
_08098BC4: .4byte 0x02001000
_08098BC8: .4byte 0x03001678

	thumb_func_start SpecialCutsceneFadeIn
SpecialCutsceneFadeIn: @ 0x08098BCC
	push {lr}
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r1, _08098BE8 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _08098BE2
	subs r0, #1
	strh r0, [r1]
_08098BE2:
	pop {r0}
	bx r0
	.align 2, 0
_08098BE8: .4byte gWrittenToBldy

	thumb_func_start SpecialCutsceneFadOut
SpecialCutsceneFadOut: @ 0x08098BEC
	push {lr}
	bl SpecialCutsceneProcessOam
	bl SpecialCutsceneDrawAllOam
	ldr r1, _08098C08 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _08098C02
	adds r0, #1
	strh r0, [r1]
_08098C02:
	pop {r0}
	bx r0
	.align 2, 0
_08098C08: .4byte gWrittenToBldy

	thumb_func_start NewFileIntroProcessTextCursor
NewFileIntroProcessTextCursor: @ 0x08098C0C
	push {lr}
	adds r2, r0, #0
	ldr r0, _08098C28 @ =gNonGameplayRam
	ldr r0, [r0]
	ldrh r1, [r0]
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _08098C2C
	movs r0, #0xeb
	strh r0, [r2, #0xc]
	movs r0, #0x98
	strh r0, [r2, #0xe]
	b _08098C32
	.align 2, 0
_08098C28: .4byte gNonGameplayRam
_08098C2C:
	movs r0, #0x82
	lsls r0, r0, #1
	strh r0, [r2, #0xc]
_08098C32:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start SpecialCutsceneClearOam
SpecialCutsceneClearOam: @ 0x08098C38
	push {r4, r5, r6, lr}
	movs r3, #0
	ldr r6, _08098C68 @ =gNonGameplayRam
	movs r4, #0x8d
	lsls r4, r4, #2
	movs r5, #2
	rsbs r5, r5, #0
_08098C46:
	lsls r1, r3, #3
	adds r1, r1, r3
	lsls r1, r1, #2
	adds r1, r1, r6
	adds r1, r1, r4
	ldrb r2, [r1]
	adds r0, r5, #0
	ands r0, r2
	strb r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x13
	bls _08098C46
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08098C68: .4byte gNonGameplayRam

	thumb_func_start SpecialCutsceneEnableOam
SpecialCutsceneEnableOam: @ 0x08098C6C
	push {r4, r5, r6, lr}
	movs r2, #0
	ldr r6, _08098CA4 @ =gNonGameplayRam
	movs r5, #0x8b
	lsls r5, r5, #2
	movs r4, #0x8d
	lsls r4, r4, #2
	movs r3, #1
_08098C7C:
	lsls r0, r2, #3
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r1, r0, r6
	adds r0, r1, r5
	ldrb r0, [r0]
	cmp r0, #0
	beq _08098C94
	adds r1, r1, r4
	ldrb r0, [r1]
	orrs r0, r3
	strb r0, [r1]
_08098C94:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0x13
	bls _08098C7C
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08098CA4: .4byte gNonGameplayRam

	thumb_func_start SpecialCutsceneDestroyOamOfType
SpecialCutsceneDestroyOamOfType: @ 0x08098CA8
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r3, #0
	ldr r6, _08098CE0 @ =gNonGameplayRam
	movs r7, #2
	rsbs r7, r7, #0
	movs r5, #0x8b
	lsls r5, r5, #2
_08098CBA:
	lsls r0, r3, #3
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r2, r0, r6
	adds r1, r2, r5
	ldrb r0, [r1]
	cmp r0, r4
	bne _08098CE4
	movs r0, #0
	strb r0, [r1]
	movs r0, #0x8d
	lsls r0, r0, #2
	adds r2, r2, r0
	ldrb r1, [r2]
	adds r0, r7, #0
	ands r0, r1
	strb r0, [r2]
	b _08098CEE
	.align 2, 0
_08098CE0: .4byte gNonGameplayRam
_08098CE4:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x13
	bls _08098CBA
_08098CEE:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start SpecialCutsceneProcessOam
SpecialCutsceneProcessOam: @ 0x08098CF4
	push {r4, r5, r6, lr}
	ldr r0, _08098D44 @ =gNonGameplayRam
	ldr r1, _08098D48 @ =0x00000215
	adds r2, r0, r1
	movs r1, #0
	strb r1, [r2]
	movs r4, #0
	adds r5, r0, #0
	adds r6, r2, #0
_08098D06:
	lsls r0, r4, #3
	adds r0, r0, r4
	lsls r2, r0, #2
	adds r0, r2, r5
	movs r3, #0x8b
	lsls r3, r3, #2
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _08098D34
	movs r0, #0x8f
	lsls r0, r0, #2
	adds r1, r5, r0
	adds r1, r2, r1
	subs r3, #0x10
	adds r0, r5, r3
	adds r0, r2, r0
	ldr r1, [r1]
	bl _call_via_r1
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
_08098D34:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x13
	bls _08098D06
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08098D44: .4byte gNonGameplayRam
_08098D48: .4byte 0x00000215

	thumb_func_start SpecialCutsceneDrawAllOam
SpecialCutsceneDrawAllOam: @ 0x08098D4C
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r5, _08098D94 @ =gNonGameplayRam
	movs r0, #0x87
	lsls r0, r0, #2
	adds r6, r5, r0
_08098D58:
	lsls r0, r4, #3
	adds r0, r0, r4
	lsls r1, r0, #2
	adds r0, r1, r5
	movs r2, #0x8d
	lsls r2, r2, #2
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1f
	cmp r0, #0
	beq _08098D74
	adds r0, r1, r6
	bl SpecialCutsceneDrawOam
_08098D74:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x13
	bls _08098D58
	bl ResetFreeOam
	ldr r0, _08098D98 @ =gNextOamSlot
	movs r1, #0
	strb r1, [r0]
	ldr r0, _08098D9C @ =0x03001238
	strb r1, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08098D94: .4byte gNonGameplayRam
_08098D98: .4byte gNextOamSlot
_08098D9C: .4byte 0x03001238

	thumb_func_start SpecialCutsceneDrawOam
SpecialCutsceneDrawOam: @ 0x08098DA0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	mov sb, r0
	ldr r3, _08098E9C @ =gNextOamSlot
	ldrb r0, [r3]
	lsls r0, r0, #3
	ldr r2, _08098EA0 @ =gOamData
	adds r0, r0, r2
	mov ip, r0
	mov r0, sb
	ldrb r5, [r0, #0x11]
	lsls r1, r5, #3
	ldr r0, [r0, #0x1c]
	adds r4, r0, r1
	ldrb r0, [r4, #4]
	mov r1, sb
	ldrb r1, [r1, #0x12]
	cmp r0, r1
	bne _08098DDA
	adds r0, r5, #1
	movs r1, #0
	mov r2, sb
	strb r0, [r2, #0x11]
	strb r1, [r2, #0x12]
	adds r4, #8
_08098DDA:
	ldrb r1, [r4, #4]
	cmp r1, #0
	bne _08098DEA
	mov r3, sb
	ldrb r0, [r3, #0x11]
	lsls r0, r0, #3
	subs r4, r4, r0
	strb r1, [r3, #0x11]
_08098DEA:
	ldr r4, [r4]
	mov sl, r4
	ldrh r4, [r4]
	str r4, [sp, #0x20]
	movs r5, #2
	add sl, r5
	mov r0, sb
	ldrb r1, [r0, #0x18]
	lsls r0, r1, #0x1d
	lsrs r0, r0, #0x1e
	cmp r0, #0
	beq _08098E04
	b _08098F78
_08098E04:
	movs r1, #0
	str r1, [sp, #0x1c]
	cmp r1, r4
	blt _08098E10
	bl _0809975A
_08098E10:
	ldr r2, _08098EA4 @ =0x000001FF
	adds r7, r2, #0
	movs r3, #3
	mov r8, r3
_08098E18:
	mov r4, sl
	ldrh r6, [r4]
	movs r5, #2
	add sl, r5
	mov r0, sl
	ldrh r5, [r0]
	movs r1, #2
	add sl, r1
	mov r2, ip
	strh r6, [r2]
	add ip, r1
	mov r3, ip
	strh r5, [r3]
	add ip, r1
	mov r4, sl
	ldrh r0, [r4]
	mov r1, ip
	strh r0, [r1]
	movs r2, #2
	add sl, r2
	add ip, r2
	ldr r3, _08098E9C @ =gNextOamSlot
	ldrb r0, [r3]
	ldr r4, [sp, #0x1c]
	adds r3, r0, r4
	mov r1, sb
	ldrb r0, [r1, #0x18]
	lsls r0, r0, #0x19
	lsrs r1, r0, #0x1f
	cmp r1, #1
	bne _08098EAC
	lsls r4, r3, #3
	ldr r3, _08098EA0 @ =gOamData
	adds r2, r4, r3
	ldrb r3, [r2, #3]
	lsls r0, r3, #0x1b
	lsrs r0, r0, #0x1f
	eors r0, r1
	lsls r0, r0, #4
	movs r1, #0x11
	rsbs r1, r1, #0
	ands r1, r3
	orrs r1, r0
	strb r1, [r2, #3]
	lsrs r1, r1, #6
	ldrb r0, [r2, #1]
	lsrs r0, r0, #6
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r0, _08098EA8 @ =0x0863A184
	adds r1, r1, r0
	ldrb r0, [r1]
	lsls r0, r0, #3
	adds r0, r5, r0
	mov r2, sb
	ldrh r1, [r2, #0xc]
	subs r0, r1, r0
	ands r0, r7
	str r0, [sp]
	ldrh r0, [r2, #0xe]
	adds r6, r6, r0
	movs r0, #0xff
	ands r6, r0
	str r6, [sp, #4]
	b _08098EC2
	.align 2, 0
_08098E9C: .4byte gNextOamSlot
_08098EA0: .4byte gOamData
_08098EA4: .4byte 0x000001FF
_08098EA8: .4byte 0x0863A184
_08098EAC:
	mov r4, sb
	ldrh r0, [r4, #0xe]
	adds r6, r6, r0
	movs r0, #0xff
	ands r6, r0
	str r6, [sp, #4]
	ldrh r0, [r4, #0xc]
	adds r5, r5, r0
	ands r5, r7
	str r5, [sp]
	lsls r4, r3, #3
_08098EC2:
	ldr r5, _08098F68 @ =gOamData
	adds r3, r4, r5
	mov r0, sp
	ldrb r0, [r0, #4]
	strb r0, [r3]
	ldr r1, [sp]
	ands r1, r7
	str r1, [sp]
	ldrh r1, [r3, #2]
	ldr r0, _08098F6C @ =0xFFFFFE00
	ands r0, r1
	ldr r2, [sp]
	orrs r0, r2
	strh r0, [r3, #2]
	mov r4, sb
	ldrb r0, [r4, #0x1a]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1e
	mov r5, r8
	ands r0, r5
	lsls r0, r0, #2
	ldrb r2, [r3, #5]
	movs r1, #0xd
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r3, #5]
	lsrs r2, r1, #4
	ldrb r0, [r4, #0x1a]
	lsrs r0, r0, #4
	adds r2, r2, r0
	lsls r2, r2, #4
	movs r0, #0xf
	ands r1, r0
	orrs r1, r2
	strb r1, [r3, #5]
	ldrh r2, [r3, #4]
	lsls r1, r2, #0x16
	lsrs r1, r1, #0x16
	ldr r0, [r4, #0x18]
	lsls r0, r0, #0xe
	lsrs r0, r0, #0x16
	adds r1, r1, r0
	ldr r4, _08098F70 @ =0x000003FF
	adds r0, r4, #0
	ands r1, r0
	ldr r0, _08098F74 @ =0xFFFFFC00
	ands r0, r2
	orrs r0, r1
	strh r0, [r3, #4]
	mov r5, sb
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	mov r1, r8
	ands r0, r1
	lsls r0, r0, #2
	ldrb r2, [r3, #1]
	movs r1, #0xd
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r3, #1]
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	lsls r0, r0, #4
	movs r2, #0x11
	rsbs r2, r2, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r3, #1]
	movs r3, #2
	add ip, r3
	ldr r4, [sp, #0x1c]
	adds r4, #1
	str r4, [sp, #0x1c]
	ldr r5, [sp, #0x20]
	cmp r4, r5
	bge _08098F64
	b _08098E18
_08098F64:
	b _0809975A
	.align 2, 0
_08098F68: .4byte gOamData
_08098F6C: .4byte 0xFFFFFE00
_08098F70: .4byte 0x000003FF
_08098F74: .4byte 0xFFFFFC00
_08098F78:
	cmp r0, #1
	beq _08098F7E
	b _08099400
_08098F7E:
	mov r2, sb
	ldrh r0, [r2, #0xc]
	adds r0, #0x40
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldrh r0, [r2, #0xe]
	adds r0, #0x40
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	lsls r0, r1, #0x19
	cmp r0, #0
	blt _08098FA0
	ldrh r3, [r2, #6]
	str r3, [sp, #0x14]
	b _08098FAC
_08098FA0:
	mov r4, sb
	ldrh r0, [r4, #6]
	rsbs r0, r0, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x14]
_08098FAC:
	lsls r0, r1, #0x18
	cmp r0, #0
	blt _08098FBA
	mov r5, sb
	ldrh r5, [r5, #6]
	str r5, [sp, #0x18]
	b _08098FC6
_08098FBA:
	mov r1, sb
	ldrh r0, [r1, #6]
	rsbs r0, r0, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x18]
_08098FC6:
	movs r2, #0
	str r2, [sp, #0x28]
	movs r3, #0
	str r3, [sp, #0x1c]
	ldr r4, [sp, #0x14]
	lsls r4, r4, #0x10
	str r4, [sp, #0x34]
	ldr r5, [sp, #0x20]
	cmp r3, r5
	blt _08098FDC
	b _0809925C
_08098FDC:
	mov r0, sl
	ldrh r6, [r0]
	movs r1, #2
	add sl, r1
	mov r2, sl
	ldrh r5, [r2]
	add sl, r1
	mov r3, ip
	strh r6, [r3]
	add ip, r1
	mov r4, ip
	strh r5, [r4]
	add ip, r1
	mov r1, sl
	ldrh r0, [r1]
	mov r2, ip
	strh r0, [r2]
	movs r3, #2
	add sl, r3
	add ip, r3
	ldr r4, _08099098 @ =gNextOamSlot
	ldrb r0, [r4]
	ldr r1, [sp, #0x1c]
	adds r3, r0, r1
	lsls r0, r3, #3
	ldr r2, _0809909C @ =gOamData
	adds r0, r0, r2
	mov r8, r0
	ldrb r7, [r0, #3]
	lsrs r1, r7, #6
	ldrb r0, [r0, #1]
	lsrs r0, r0, #6
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r4, _080990A0 @ =0x0863A184
	adds r0, r1, r4
	ldrb r0, [r0]
	lsls r0, r0, #2
	str r0, [sp, #8]
	ldr r0, _080990A4 @ =0x0863A190
	adds r1, r1, r0
	ldrb r0, [r1]
	lsls r0, r0, #2
	str r0, [sp, #0xc]
	ldr r1, [sp, #4]
	adds r6, r6, r1
	movs r0, #0xff
	ands r6, r0
	ldr r2, [sp]
	adds r4, r5, r2
	ldr r5, _080990A8 @ =0x000001FF
	adds r0, r5, #0
	ands r4, r0
	subs r1, r4, r2
	ldr r0, [sp, #8]
	adds r1, r0, r1
	ldr r5, [sp, #4]
	subs r2, r6, r5
	ldr r0, [sp, #0xc]
	adds r2, r0, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r5, [sp, #0x34]
	asrs r0, r5, #0x10
	muls r0, r1, r0
	asrs r0, r0, #8
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x10]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldr r1, [sp, #0x18]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	muls r0, r2, r0
	asrs r0, r0, #8
	subs r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	lsls r0, r7, #0x1b
	cmp r0, #0
	bge _080990AC
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r7
	mov r5, r8
	strb r0, [r5, #3]
	movs r0, #1
	str r0, [sp, #0x28]
	movs r1, #1
	str r1, [sp, #0x24]
	b _080990B0
	.align 2, 0
_08099098: .4byte gNextOamSlot
_0809909C: .4byte gOamData
_080990A0: .4byte 0x0863A184
_080990A4: .4byte 0x0863A190
_080990A8: .4byte 0x000001FF
_080990AC:
	movs r5, #0
	str r5, [sp, #0x24]
_080990B0:
	lsls r0, r3, #3
	ldr r1, _080993E4 @ =gOamData
	adds r7, r0, r1
	ldrb r1, [r7, #3]
	lsls r0, r1, #0x1a
	cmp r0, #0
	bge _080990D0
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r7, #3]
	ldr r3, [sp, #0x18]
	lsls r0, r3, #0x10
	rsbs r0, r0, #0
	lsrs r0, r0, #0x10
	str r0, [sp, #0x18]
_080990D0:
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	ldr r4, [sp, #0x10]
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	ldr r5, [sp]
	subs r4, r4, r5
	ldr r0, [sp, #8]
	mov r8, r0
	add r4, r8
	ldr r1, [sp, #4]
	subs r3, r6, r1
	ldr r6, [sp, #0xc]
	adds r3, r6, r3
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r2, sb
	ldrb r1, [r2, #0x15]
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #1
	ldr r5, _080993E8 @ =0x080A4FA4
	adds r0, r0, r5
	movs r2, #0
	ldrsh r5, [r0, r2]
	adds r2, r4, #0
	muls r2, r5, r2
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	lsls r1, r1, #1
	ldr r0, _080993E8 @ =0x080A4FA4
	adds r1, r1, r0
	movs r0, #0
	ldrsh r1, [r1, r0]
	adds r0, r3, #0
	muls r0, r1, r0
	subs r2, r2, r0
	lsls r2, r2, #8
	adds r0, r4, #0
	muls r0, r1, r0
	adds r1, r3, #0
	muls r1, r5, r1
	adds r0, r0, r1
	lsls r0, r0, #8
	asrs r2, r2, #0x10
	mov r1, r8
	subs r2, r2, r1
	asrs r0, r0, #0x10
	subs r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r3, [sp, #4]
	adds r0, r6, r3
	subs r0, #0x40
	strb r0, [r7]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldr r4, [sp]
	adds r2, r2, r4
	subs r2, #0x40
	ldr r4, _080993EC @ =0x000001FF
	ands r2, r4
	ldrh r0, [r7, #2]
	ldr r1, _080993F0 @ =0xFFFFFE00
	adds r3, r1, #0
	ands r3, r0
	orrs r3, r2
	strh r3, [r7, #2]
	ldr r5, [sp, #0x24]
	cmp r5, #1
	bne _08099180
	lsls r0, r3, #0x17
	lsrs r0, r0, #0x17
	subs r0, #1
	ands r0, r4
	ands r3, r1
	orrs r3, r0
	strh r3, [r7, #2]
_08099180:
	ldrb r1, [r7, #1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r1
	movs r3, #1
	orrs r0, r3
	strb r0, [r7, #1]
	ldr r1, _080993F4 @ =0x03001238
	ldrb r0, [r1]
	ldr r2, [sp, #0x24]
	adds r0, r0, r2
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080991A6
	ldrb r0, [r7, #3]
	movs r1, #0x20
	orrs r0, r1
	strb r0, [r7, #3]
_080991A6:
	ldr r4, _080993F4 @ =0x03001238
	ldrb r0, [r4]
	ldr r5, [sp, #0x24]
	adds r0, r0, r5
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _080991BE
	ldrb r0, [r7, #3]
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r7, #3]
_080991BE:
	ldr r0, _080993F4 @ =0x03001238
	ldrb r1, [r0]
	ldr r2, [sp, #0x24]
	adds r1, r1, r2
	movs r0, #7
	ands r1, r0
	lsls r1, r1, #1
	ldrb r2, [r7, #3]
	subs r0, #0x16
	ands r0, r2
	orrs r0, r1
	strb r0, [r7, #3]
	mov r4, sb
	ldrb r0, [r4, #0x1a]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1e
	movs r5, #3
	ands r0, r5
	lsls r0, r0, #2
	ldrb r2, [r7, #5]
	movs r1, #0xd
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r7, #5]
	lsrs r2, r1, #4
	ldrb r0, [r4, #0x1a]
	lsrs r0, r0, #4
	adds r2, r2, r0
	lsls r2, r2, #4
	movs r0, #0xf
	ands r1, r0
	orrs r1, r2
	strb r1, [r7, #5]
	ldrh r2, [r7, #4]
	lsls r1, r2, #0x16
	lsrs r1, r1, #0x16
	ldr r0, [r4, #0x18]
	lsls r0, r0, #0xe
	lsrs r0, r0, #0x16
	adds r1, r1, r0
	ldr r4, _080993F8 @ =0x000003FF
	adds r0, r4, #0
	ands r1, r0
	ldr r0, _080993FC @ =0xFFFFFC00
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #4]
	mov r5, sb
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	movs r1, #3
	ands r0, r1
	lsls r0, r0, #2
	ldrb r2, [r7, #1]
	subs r1, #0x10
	ands r1, r2
	orrs r1, r0
	strb r1, [r7, #1]
	ldrb r0, [r5, #0x18]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	ands r0, r3
	lsls r0, r0, #4
	movs r2, #0x11
	rsbs r2, r2, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r7, #1]
	movs r3, #2
	add ip, r3
	ldr r4, [sp, #0x1c]
	adds r4, #1
	str r4, [sp, #0x1c]
	ldr r5, [sp, #0x20]
	cmp r4, r5
	bge _0809925C
	b _08098FDC
_0809925C:
	ldr r1, _080993F4 @ =0x03001238
	ldrb r0, [r1]
	lsls r0, r0, #0x1a
	lsrs r7, r0, #0x18
	mov r2, sb
	ldrb r0, [r2, #0x15]
	adds r0, #0x40
	lsls r0, r0, #1
	ldr r3, _080993E8 @ =0x080A4FA4
	adds r0, r0, r3
	movs r5, #0
	ldrsh r4, [r0, r5]
	ldr r0, [sp, #0x34]
	asrs r0, r0, #0x10
	mov sl, r0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl FixedMultiplication
	ldr r1, _080993E4 @ =gOamData
	mov r8, r1
	lsls r1, r7, #3
	add r1, r8
	strh r0, [r1, #6]
	mov r2, sb
	ldrb r0, [r2, #0x15]
	lsls r0, r0, #1
	ldr r3, _080993E8 @ =0x080A4FA4
	adds r0, r0, r3
	movs r5, #0
	ldrsh r4, [r0, r5]
	mov r0, sl
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl FixedMultiplication
	adds r1, r7, #1
	lsls r1, r1, #3
	add r1, r8
	strh r0, [r1, #6]
	mov r1, sb
	ldrb r0, [r1, #0x15]
	lsls r0, r0, #1
	ldr r2, _080993E8 @ =0x080A4FA4
	adds r0, r0, r2
	ldrh r4, [r0]
	rsbs r4, r4, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	ldr r3, [sp, #0x18]
	lsls r0, r3, #0x10
	asrs r6, r0, #0x10
	adds r0, r6, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl FixedMultiplication
	adds r1, r7, #2
	lsls r1, r1, #3
	add r1, r8
	strh r0, [r1, #6]
	mov r4, sb
	ldrb r0, [r4, #0x15]
	adds r0, #0x40
	lsls r0, r0, #1
	ldr r5, _080993E8 @ =0x080A4FA4
	adds r0, r0, r5
	movs r1, #0
	ldrsh r4, [r0, r1]
	adds r0, r6, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl FixedMultiplication
	adds r1, r7, #3
	lsls r1, r1, #3
	add r1, r8
	strh r0, [r1, #6]
	ldr r2, _080993F4 @ =0x03001238
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldr r3, [sp, #0x28]
	cmp r3, #1
	beq _08099328
	b _0809975A
_08099328:
	ldrb r0, [r2]
	lsls r0, r0, #0x1a
	lsrs r7, r0, #0x18
	mov r4, sb
	ldrb r0, [r4, #0x15]
	adds r0, #0x40
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r1, #0
	ldrsh r5, [r0, r1]
	mov r2, sl
	rsbs r4, r2, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r0, r4, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r5, #0
	bl FixedMultiplication
	lsls r1, r7, #3
	add r1, r8
	strh r0, [r1, #6]
	mov r3, sb
	ldrb r0, [r3, #0x15]
	lsls r0, r0, #1
	ldr r5, _080993E8 @ =0x080A4FA4
	adds r0, r0, r5
	movs r1, #0
	ldrsh r5, [r0, r1]
	adds r0, r4, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r5, #0
	bl FixedMultiplication
	adds r1, r7, #1
	lsls r1, r1, #3
	add r1, r8
	strh r0, [r1, #6]
	mov r2, sb
	ldrb r0, [r2, #0x15]
	lsls r0, r0, #1
	ldr r3, _080993E8 @ =0x080A4FA4
	adds r0, r0, r3
	ldrh r4, [r0]
	rsbs r4, r4, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r0, r6, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl FixedMultiplication
	adds r1, r7, #2
	lsls r1, r1, #3
	add r1, r8
	strh r0, [r1, #6]
	mov r4, sb
	ldrb r0, [r4, #0x15]
	adds r0, #0x40
	lsls r0, r0, #1
	ldr r5, _080993E8 @ =0x080A4FA4
	adds r0, r0, r5
	movs r1, #0
	ldrsh r4, [r0, r1]
	adds r0, r6, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl FixedMultiplication
	adds r1, r7, #3
	lsls r1, r1, #3
	add r1, r8
	strh r0, [r1, #6]
	ldr r2, _080993F4 @ =0x03001238
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	b _0809975A
	.align 2, 0
_080993E4: .4byte gOamData
_080993E8: .4byte 0x080A4FA4
_080993EC: .4byte 0x000001FF
_080993F0: .4byte 0xFFFFFE00
_080993F4: .4byte 0x03001238
_080993F8: .4byte 0x000003FF
_080993FC: .4byte 0xFFFFFC00
_08099400:
	cmp r0, #3
	beq _08099406
	b _0809975A
_08099406:
	mov r3, sb
	ldrh r0, [r3, #0xc]
	adds r0, #0x40
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldrh r0, [r3, #0xe]
	adds r0, #0x40
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	lsls r0, r1, #0x19
	cmp r0, #0
	blt _08099428
	ldrh r4, [r3, #6]
	str r4, [sp, #0x14]
	b _08099434
_08099428:
	mov r5, sb
	ldrh r0, [r5, #6]
	rsbs r0, r0, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x14]
_08099434:
	lsls r0, r1, #0x18
	cmp r0, #0
	blt _08099440
	mov r0, sb
	ldrh r0, [r0, #6]
	b _0809944A
_08099440:
	mov r1, sb
	ldrh r0, [r1, #6]
	rsbs r0, r0, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
_0809944A:
	str r0, [sp, #0x18]
	movs r2, #0
	str r2, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	cmp r2, r3
	blt _08099458
	b _08099696
_08099458:
	mov r4, sl
	ldrh r6, [r4]
	movs r5, #2
	add sl, r5
	mov r0, sl
	ldrh r5, [r0]
	movs r1, #2
	add sl, r1
	mov r2, ip
	strh r6, [r2]
	add ip, r1
	mov r3, ip
	strh r5, [r3]
	add ip, r1
	mov r4, sl
	ldrh r0, [r4]
	mov r1, ip
	strh r0, [r1]
	movs r2, #2
	add sl, r2
	add ip, r2
	ldr r3, _0809977C @ =gNextOamSlot
	ldrb r0, [r3]
	ldr r4, [sp, #0x1c]
	adds r3, r0, r4
	lsls r0, r3, #3
	ldr r1, _08099780 @ =gOamData
	adds r7, r0, r1
	ldrb r2, [r7, #3]
	mov r8, r2
	mov r3, r8
	lsrs r1, r3, #6
	ldrb r0, [r7, #1]
	lsrs r0, r0, #6
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r4, _08099784 @ =0x0863A184
	adds r0, r1, r4
	ldrb r2, [r0]
	ldr r0, _08099788 @ =0x0863A190
	adds r1, r1, r0
	ldrb r3, [r1]
	ldr r1, [sp, #4]
	adds r6, r6, r1
	movs r0, #0xff
	ands r6, r0
	ldr r0, [sp]
	adds r4, r5, r0
	ldr r1, _0809978C @ =0x000001FF
	adds r0, r1, #0
	ands r4, r0
	ldr r5, [sp]
	subs r1, r4, r5
	lsls r2, r2, #2
	str r2, [sp, #0x2c]
	adds r1, r2, r1
	ldr r0, [sp, #4]
	subs r2, r6, r0
	lsls r3, r3, #2
	str r3, [sp, #0x30]
	adds r2, r3, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r3, [sp, #0x14]
	lsls r0, r3, #0x10
	asrs r3, r0, #0x10
	adds r0, r1, #0
	muls r0, r3, r0
	asrs r0, r0, #8
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x10]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldr r5, [sp, #0x18]
	lsls r0, r5, #0x10
	asrs r5, r0, #0x10
	adds r0, r2, #0
	muls r0, r5, r0
	asrs r0, r0, #8
	subs r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	mov r1, r8
	lsls r0, r1, #0x1b
	cmp r0, #0
	bge _08099518
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r7, #3]
	rsbs r0, r3, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x14]
_08099518:
	ldrb r1, [r7, #3]
	lsls r0, r1, #0x1a
	cmp r0, #0
	bge _08099530
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r7, #3]
	rsbs r0, r5, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x18]
_08099530:
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	ldr r3, [sp, #0x10]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	ldr r5, [sp]
	subs r4, r4, r5
	ldr r0, [sp, #0x2c]
	adds r4, r0, r4
	ldr r1, [sp, #4]
	subs r3, r6, r1
	ldr r2, [sp, #0x30]
	adds r3, r2, r3
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r5, sb
	ldrb r1, [r5, #0x15]
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #1
	ldr r2, _08099790 @ =0x080A4FA4
	adds r0, r0, r2
	movs r2, #0
	ldrsh r5, [r0, r2]
	adds r2, r4, #0
	muls r2, r5, r2
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	lsls r1, r1, #1
	ldr r0, _08099790 @ =0x080A4FA4
	adds r1, r1, r0
	movs r0, #0
	ldrsh r1, [r1, r0]
	adds r0, r3, #0
	muls r0, r1, r0
	subs r2, r2, r0
	lsls r2, r2, #8
	adds r0, r4, #0
	muls r0, r1, r0
	adds r1, r3, #0
	muls r1, r5, r1
	adds r0, r0, r1
	lsls r0, r0, #8
	ldr r3, [sp, #0x2c]
	lsls r1, r3, #1
	asrs r2, r2, #0x10
	subs r2, r2, r1
	ldr r4, [sp, #0x30]
	lsls r1, r4, #1
	asrs r0, r0, #0x10
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r5, [sp, #4]
	adds r0, r6, r5
	subs r0, #0x40
	strb r0, [r7]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldr r0, [sp]
	adds r2, r2, r0
	subs r2, #0x40
	ldr r0, _0809978C @ =0x000001FF
	ands r2, r0
	ldrh r1, [r7, #2]
	ldr r0, _08099794 @ =0xFFFFFE00
	ands r0, r1
	orrs r0, r2
	strh r0, [r7, #2]
	ldrb r0, [r7, #1]
	movs r3, #3
	orrs r0, r3
	strb r0, [r7, #1]
	ldr r2, _08099798 @ =0x03001238
	ldrb r1, [r2]
	movs r2, #0x10
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080995EC
	ldrb r0, [r7, #3]
	movs r1, #0x20
	orrs r0, r1
	strb r0, [r7, #3]
_080995EC:
	ldr r4, _08099798 @ =0x03001238
	ldrb r1, [r4]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080995FE
	ldrb r0, [r7, #3]
	orrs r0, r2
	strb r0, [r7, #3]
_080995FE:
	ldr r5, _08099798 @ =0x03001238
	ldrb r0, [r5]
	movs r1, #7
	ands r1, r0
	lsls r1, r1, #1
	ldrb r2, [r7, #3]
	movs r0, #0xf
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r7, #3]
	mov r1, sb
	ldrb r0, [r1, #0x1a]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1e
	ands r0, r3
	lsls r0, r0, #2
	ldrb r2, [r7, #5]
	movs r1, #0xd
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r7, #5]
	lsrs r2, r1, #4
	mov r4, sb
	ldrb r0, [r4, #0x1a]
	lsrs r0, r0, #4
	adds r2, r2, r0
	lsls r2, r2, #4
	movs r0, #0xf
	ands r1, r0
	orrs r1, r2
	strb r1, [r7, #5]
	ldrh r2, [r7, #4]
	lsls r1, r2, #0x16
	lsrs r1, r1, #0x16
	ldr r0, [r4, #0x18]
	lsls r0, r0, #0xe
	lsrs r0, r0, #0x16
	adds r1, r1, r0
	ldr r5, _0809979C @ =0x000003FF
	adds r0, r5, #0
	ands r1, r0
	ldr r0, _080997A0 @ =0xFFFFFC00
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #4]
	ldrb r0, [r4, #0x18]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	ands r0, r3
	lsls r0, r0, #2
	ldrb r2, [r7, #1]
	movs r1, #0xd
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r7, #1]
	ldrb r0, [r4, #0x18]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	lsls r0, r0, #4
	movs r2, #0x11
	rsbs r2, r2, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r7, #1]
	movs r3, #2
	add ip, r3
	ldr r4, [sp, #0x1c]
	adds r4, #1
	str r4, [sp, #0x1c]
	ldr r5, [sp, #0x20]
	cmp r4, r5
	bge _08099696
	b _08099458
_08099696:
	ldr r1, _08099798 @ =0x03001238
	ldrb r0, [r1]
	lsls r0, r0, #0x1a
	lsrs r7, r0, #0x18
	mov r2, sb
	ldrb r0, [r2, #0x15]
	adds r0, #0x40
	lsls r0, r0, #1
	ldr r3, _08099790 @ =0x080A4FA4
	adds r0, r0, r3
	movs r4, #0
	ldrsh r5, [r0, r4]
	ldr r0, [sp, #0x14]
	lsls r4, r0, #0x10
	asrs r4, r4, #0x10
	adds r0, r4, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r5, #0
	bl FixedMultiplication
	ldr r6, _08099780 @ =gOamData
	lsls r1, r7, #3
	adds r1, r1, r6
	strh r0, [r1, #6]
	mov r1, sb
	ldrb r0, [r1, #0x15]
	lsls r0, r0, #1
	ldr r2, _08099790 @ =0x080A4FA4
	adds r0, r0, r2
	movs r3, #0
	ldrsh r5, [r0, r3]
	adds r0, r4, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r5, #0
	bl FixedMultiplication
	adds r1, r7, #1
	lsls r1, r1, #3
	adds r1, r1, r6
	strh r0, [r1, #6]
	mov r4, sb
	ldrb r0, [r4, #0x15]
	lsls r0, r0, #1
	ldr r5, _08099790 @ =0x080A4FA4
	adds r0, r0, r5
	ldrh r4, [r0]
	rsbs r4, r4, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	ldr r0, [sp, #0x18]
	lsls r5, r0, #0x10
	asrs r5, r5, #0x10
	adds r0, r5, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl FixedMultiplication
	adds r1, r7, #2
	lsls r1, r1, #3
	adds r1, r1, r6
	strh r0, [r1, #6]
	mov r1, sb
	ldrb r0, [r1, #0x15]
	adds r0, #0x40
	lsls r0, r0, #1
	ldr r2, _08099790 @ =0x080A4FA4
	adds r0, r0, r2
	movs r3, #0
	ldrsh r4, [r0, r3]
	adds r0, r5, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl FixedMultiplication
	adds r1, r7, #3
	lsls r1, r1, #3
	adds r1, r1, r6
	strh r0, [r1, #6]
	ldr r4, _08099798 @ =0x03001238
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
_0809975A:
	ldr r0, _0809977C @ =gNextOamSlot
	ldrb r1, [r0]
	ldr r5, [sp, #0x20]
	adds r1, r1, r5
	strb r1, [r0]
	mov r1, sb
	ldrb r0, [r1, #0x12]
	adds r0, #1
	strb r0, [r1, #0x12]
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809977C: .4byte gNextOamSlot
_08099780: .4byte gOamData
_08099784: .4byte 0x0863A184
_08099788: .4byte 0x0863A190
_0809978C: .4byte 0x000001FF
_08099790: .4byte 0x080A4FA4
_08099794: .4byte 0xFFFFFE00
_08099798: .4byte 0x03001238
_0809979C: .4byte 0x000003FF
_080997A0: .4byte 0xFFFFFC00

	thumb_func_start NewFileIntroInit
NewFileIntroInit: @ 0x080997A4
	push {r4, lr}
	sub sp, #4
	ldr r3, _08099864 @ =0x04000208
	movs r4, #0
	strh r4, [r3]
	ldr r2, _08099868 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _0809986C @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08099870 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _08099874 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _08099878 @ =unk_99940
	bl CallbackSetVBlank
	ldr r1, _0809987C @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _08099880 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _08099884 @ =0x04000054
	strh r1, [r0]
	ldr r0, _08099888 @ =gNextOamSlot
	strb r4, [r0]
	bl ResetFreeOam
	movs r2, #0
	str r2, [sp]
	ldr r1, _0809988C @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r0, _08099890 @ =gNonGameplayRam
	str r0, [r1, #4]
	ldr r0, _08099894 @ =0x85000150
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _08099898 @ =0x00007FFF
	str r0, [sp]
	mov r0, sp
	str r0, [r1]
	movs r3, #0xa0
	lsls r3, r3, #0x13
	str r3, [r1, #4]
	ldr r0, _0809989C @ =0x85000080
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	strh r2, [r3]
	str r2, [sp]
	mov r0, sp
	str r0, [r1]
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _080998A0 @ =0x85004000
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _080998A4 @ =0x0400000E
	strh r2, [r0]
	subs r0, #2
	strh r2, [r0]
	subs r0, #2
	strh r2, [r0]
	subs r0, #2
	strh r2, [r0]
	adds r0, #8
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	subs r0, #0x1e
	strh r2, [r0]
	ldr r0, _080998A8 @ =NewFileIntroVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08099864: .4byte 0x04000208
_08099868: .4byte 0x04000004
_0809986C: .4byte 0x0000FFEF
_08099870: .4byte 0x04000200
_08099874: .4byte 0x0000FFFD
_08099878: .4byte unk_99940
_0809987C: .4byte 0x04000050
_08099880: .4byte gWrittenToBldy
_08099884: .4byte 0x04000054
_08099888: .4byte gNextOamSlot
_0809988C: .4byte 0x040000D4
_08099890: .4byte gNonGameplayRam
_08099894: .4byte 0x85000150
_08099898: .4byte 0x00007FFF
_0809989C: .4byte 0x85000080
_080998A0: .4byte 0x85004000
_080998A4: .4byte 0x0400000E
_080998A8: .4byte NewFileIntroVblank

	thumb_func_start SpecialCutsceneGetRandomNumber
SpecialCutsceneGetRandomNumber: @ 0x080998AC
	push {r4, lr}
	ldr r3, _080998E0 @ =0x03005404
	ldrh r1, [r3]
	lsls r0, r1, #2
	adds r1, r1, r0
	ldr r2, _080998E4 @ =gFrameCounter8Bit
	ldr r4, _080998E8 @ =0x00003573
	adds r0, r4, #0
	ldrb r2, [r2]
	adds r0, r0, r2
	adds r1, r1, r0
	strh r1, [r3]
	ldr r2, _080998EC @ =sRandomNumberTable
	ldr r0, _080998F0 @ =gFrameCounter16Bit
	ldrh r1, [r0]
	movs r0, #0x1f
	ands r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	ldrb r1, [r3, #1]
	adds r0, r0, r1
	strb r0, [r3, #1]
	ldrb r0, [r3, #1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080998E0: .4byte 0x03005404
_080998E4: .4byte gFrameCounter8Bit
_080998E8: .4byte 0x00003573
_080998EC: .4byte sRandomNumberTable
_080998F0: .4byte gFrameCounter16Bit

	thumb_func_start NewFileIntroVblank
NewFileIntroVblank: @ 0x080998F4
	ldr r1, _08099920 @ =0x040000D4
	ldr r0, _08099924 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _08099928 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r2, _0809992C @ =0x04000052
	ldr r0, _08099930 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _08099934 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08099938 @ =0x04000054
	ldr r0, _0809993C @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_08099920: .4byte 0x040000D4
_08099924: .4byte gOamData
_08099928: .4byte 0x84000100
_0809992C: .4byte 0x04000052
_08099930: .4byte 0x03001222
_08099934: .4byte 0x03001220
_08099938: .4byte 0x04000054
_0809993C: .4byte gWrittenToBldy

	thumb_func_start unk_99940
unk_99940: @ 0x08099940
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CutsceneSubroutine
CutsceneSubroutine: @ 0x0809994C
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _08099964 @ =gSubGameMode1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0809997A
	cmp r0, #1
	bgt _08099968
	cmp r0, #0
	beq _08099972
	b _080999BA
	.align 2, 0
_08099964: .4byte gSubGameMode1
_08099968:
	cmp r0, #2
	beq _08099992
	cmp r0, #3
	beq _080999A0
	b _080999BA
_08099972:
	bl CutsceneInit
	movs r0, #2
	b _080999B8
_0809997A:
	ldr r1, _08099988 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _0809998C
	subs r0, #1
	strh r0, [r1]
	b _080999BA
	.align 2, 0
_08099988: .4byte gWrittenToBldy
_0809998C:
	ldrh r0, [r4]
	adds r0, #1
	b _080999B8
_08099992:
	bl CutsceneProcess
	cmp r0, #0
	beq _080999BA
	ldrh r0, [r4]
	adds r0, #1
	b _080999B8
_080999A0:
	ldr r1, _080999B0 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _080999B4
	adds r0, #1
	strh r0, [r1]
	b _080999BA
	.align 2, 0
_080999B0: .4byte gWrittenToBldy
_080999B4:
	movs r5, #1
	movs r0, #0
_080999B8:
	strh r0, [r4]
_080999BA:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start CutsceneInit
CutsceneInit: @ 0x080999C4
	push {r4, r5, lr}
	sub sp, #4
	ldr r3, _08099A90 @ =0x04000208
	movs r5, #0
	strh r5, [r3]
	ldr r2, _08099A94 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _08099A98 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08099A9C @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _08099AA0 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _08099AA4 @ =unk_99af8
	bl CallbackSetVBlank
	ldr r1, _08099AA8 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _08099AAC @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _08099AB0 @ =0x04000054
	strh r1, [r0]
	ldr r4, _08099AB4 @ =0x040000D4
	ldr r0, _08099AB8 @ =0x06010000
	str r0, [r4]
	ldr r0, _08099ABC @ =0x0201C000
	str r0, [r4, #4]
	ldr r0, _08099AC0 @ =0x84002000
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08099AC4 @ =gNextOamSlot
	strb r5, [r0]
	bl ResetFreeOam
	movs r1, #0
	str r1, [sp]
	mov r0, sp
	str r0, [r4]
	ldr r0, _08099AC8 @ =gNonGameplayRam
	str r0, [r4, #4]
	ldr r0, _08099ACC @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08099AD0 @ =0x00007FFF
	str r0, [sp]
	mov r0, sp
	str r0, [r4]
	movs r2, #0xa0
	lsls r2, r2, #0x13
	str r2, [r4, #4]
	ldr r0, _08099AD4 @ =0x85000080
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	strh r1, [r2]
	str r1, [sp]
	mov r0, sp
	str r0, [r4]
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _08099AD8 @ =0x85004000
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08099ADC @ =0x0400000E
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	adds r0, #8
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	subs r0, #0x1e
	strh r1, [r0]
	ldr r0, _08099AE0 @ =CutsceneVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08099A90: .4byte 0x04000208
_08099A94: .4byte 0x04000004
_08099A98: .4byte 0x0000FFEF
_08099A9C: .4byte 0x04000200
_08099AA0: .4byte 0x0000FFFD
_08099AA4: .4byte unk_99af8
_08099AA8: .4byte 0x04000050
_08099AAC: .4byte gWrittenToBldy
_08099AB0: .4byte 0x04000054
_08099AB4: .4byte 0x040000D4
_08099AB8: .4byte 0x06010000
_08099ABC: .4byte 0x0201C000
_08099AC0: .4byte 0x84002000
_08099AC4: .4byte gNextOamSlot
_08099AC8: .4byte gNonGameplayRam
_08099ACC: .4byte 0x85000150
_08099AD0: .4byte 0x00007FFF
_08099AD4: .4byte 0x85000080
_08099AD8: .4byte 0x85004000
_08099ADC: .4byte 0x0400000E
_08099AE0: .4byte CutsceneVblank

	thumb_func_start CutsceneVblank
CutsceneVblank: @ 0x08099AE4
	ldr r0, _08099AF0 @ =0x04000054
	ldr r1, _08099AF4 @ =gWrittenToBldy
	ldrh r1, [r1]
	strh r1, [r0]
	bx lr
	.align 2, 0
_08099AF0: .4byte 0x04000054
_08099AF4: .4byte gWrittenToBldy

	thumb_func_start unk_99af8
unk_99af8: @ 0x08099AF8
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CutsceneProcess
CutsceneProcess: @ 0x08099B04
	push {r4, lr}
	movs r4, #0
	ldr r0, _08099B1C @ =gCurrentCutscene
	ldrb r0, [r0]
	subs r0, #1
	cmp r0, #0xb
	bhi _08099BA0
	lsls r0, r0, #2
	ldr r1, _08099B20 @ =_08099B24
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08099B1C: .4byte gCurrentCutscene
_08099B20: .4byte _08099B24
_08099B24: @ jump table
	.4byte _08099B54 @ case 0
	.4byte _08099B5C @ case 1
	.4byte _08099B64 @ case 2
	.4byte _08099B6C @ case 3
	.4byte _08099B74 @ case 4
	.4byte _08099B7C @ case 5
	.4byte _08099B84 @ case 6
	.4byte _08099B54 @ case 7
	.4byte _08099B8C @ case 8
	.4byte _08099B92 @ case 9
	.4byte _08099B92 @ case 10
	.4byte _08099B98 @ case 11
_08099B54:
	movs r0, #0
	bl CutsceneInternalMonologue
	b _08099B9C
_08099B5C:
	movs r0, #0
	bl CutsceneElevatorMonologue
	b _08099B9C
_08099B64:
	movs r0, #0
	bl CutsceneElevatorMonologue
	b _08099B9C
_08099B6C:
	movs r0, #0
	bl CutsceneElevatorMonologue
	b _08099B9C
_08099B74:
	movs r0, #1
	bl CutsceneElevatorMonologue
	b _08099B9C
_08099B7C:
	movs r0, #0
	bl CutsceneElevatorMonologue
	b _08099B9C
_08099B84:
	movs r0, #0
	bl CutsceneFederationMonologue
	b _08099B9C
_08099B8C:
	bl CutsceneSecretConversation
	b _08099B9C
_08099B92:
	bl CutsceneRestrictedLabDetaching
	b _08099B9C
_08099B98:
	bl CutsceneBslExploding
_08099B9C:
	cmp r0, #0
	beq _08099BA2
_08099BA0:
	movs r4, #1
_08099BA2:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start CutsceneElevatorMonologue
CutsceneElevatorMonologue: @ 0x08099BAC
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r5, #0
	ldr r4, _08099BC8 @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _08099BE2
	cmp r0, #1
	bgt _08099BCC
	cmp r0, #0
	beq _08099BD6
	b _08099C2A
	.align 2, 0
_08099BC8: .4byte gNonGameplayRam
_08099BCC:
	cmp r0, #2
	beq _08099BFC
	cmp r0, #3
	beq _08099C1C
	b _08099C2A
_08099BD6:
	movs r0, #1
	strh r0, [r4, #8]
	adds r0, r1, #0
	bl CutsceneElevatorMonologueInit
	b _08099C2A
_08099BE2:
	bl CutsceneMonologueFadeIn
	ldr r0, _08099BF8 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _08099C2A
	ldrh r0, [r4, #8]
	adds r0, #1
	strh r0, [r4, #8]
	b _08099C2A
	.align 2, 0
_08099BF8: .4byte gWrittenToBldy
_08099BFC:
	bl CutsceneElevatorMonologueProcess
	cmp r0, #0
	beq _08099C2A
	movs r0, #3
	strh r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xa8
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x50
	movs r0, #0xff
	strh r0, [r1]
	b _08099C2A
_08099C1C:
	bl CutsceneMonologueFadeOut
	ldr r0, _08099C34 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0x10
	bne _08099C2A
	movs r5, #1
_08099C2A:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08099C34: .4byte gWrittenToBldy

	thumb_func_start CutsceneElevatorMonologueInit
CutsceneElevatorMonologueInit: @ 0x08099C38
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	mov r8, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r3, _08099D84 @ =0x04000208
	movs r4, #0
	strh r4, [r3]
	ldr r2, _08099D88 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _08099D8C @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _08099D90 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _08099D94 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _08099D98 @ =unk_9a31c
	bl CallbackSetVBlank
	movs r1, #0x80
	lsls r1, r1, #0x13
	mov sb, r1
	strh r4, [r1]
	ldr r1, _08099D9C @ =0x0879C514
	ldr r6, _08099DA0 @ =gCurrentCutscene
	ldrb r0, [r6]
	subs r0, #1
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r1, _08099DA4 @ =0x06012000
	bl LZ77UncompVram
	ldr r0, _08099DA8 @ =0x0865FB5C
	ldr r1, _08099DAC @ =0x06017C00
	bl LZ77UncompVram
	ldr r4, _08099DB0 @ =0x040000D4
	ldr r0, _08099DB4 @ =0x086638A0
	str r0, [r4]
	ldr r0, _08099DB8 @ =0x050003E0
	str r0, [r4, #4]
	ldr r0, _08099DBC @ =0x84000008
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r1, _08099DC0 @ =0x0879C4CC
	ldrb r0, [r6]
	subs r0, #1
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r4]
	ldr r0, _08099DC4 @ =0x05000200
	str r0, [r4, #4]
	ldr r0, _08099DC8 @ =0x84000030
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r1, _08099DCC @ =0x0879C4F0
	ldrb r0, [r6]
	subs r0, #1
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r1, _08099DD0 @ =0x0879C538
	ldrb r0, [r6]
	subs r0, #1
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r1, _08099DD4 @ =0x0600D000
	bl LZ77UncompVram
	ldr r0, _08099DD8 @ =0x08662804
	movs r5, #0x80
	lsls r5, r5, #0x12
	adds r1, r5, #0
	bl LZ77UncompWram
	ldr r0, _08099DDC @ =0x08663598
	ldr r1, _08099DE0 @ =0x0600D800
	bl LZ77UncompVram
	str r5, [r4]
	ldr r0, _08099DE4 @ =0x0600C800
	str r0, [r4, #4]
	ldr r0, _08099DE8 @ =0x84000200
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _08099DEC @ =0x086636A0
	str r0, [r4]
	movs r2, #0xa0
	lsls r2, r2, #0x13
	str r2, [r4, #4]
	ldr r0, _08099DF0 @ =0x84000080
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r1, _08099DF4 @ =0x0879C4A8
	ldrb r0, [r6]
	subs r0, #1
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r4]
	str r2, [r4, #4]
	ldr r0, _08099DF8 @ =0x84000058
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r1, _08099DFC @ =0x04000012
	movs r0, #4
	strh r0, [r1]
	subs r1, #0xa
	ldr r2, _08099E00 @ =0x00001908
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _08099E04 @ =0x00001B01
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	subs r2, #0xfe
	adds r0, r2, #0
	strh r0, [r1]
	movs r1, #0xa8
	lsls r1, r1, #5
	adds r0, r1, #0
	mov r2, sb
	strh r0, [r2]
	ldr r1, _08099E08 @ =gWrittenToBldy
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	movs r0, #1
	movs r1, #0xc
	movs r2, #0x10
	bl CutsceneElevatorMonologueSetupOam
	movs r0, #2
	movs r1, #0x78
	movs r2, #0x78
	bl CutsceneElevatorMonologueSetupOam
	movs r0, #3
	movs r1, #0x78
	movs r2, #0x78
	bl CutsceneElevatorMonologueSetupOam
	mov r0, r8
	cmp r0, #0
	bne _08099E0C
	movs r0, #4
	movs r1, #0x78
	movs r2, #0x68
	bl CutsceneElevatorMonologueSetupOam
	b _08099E16
	.align 2, 0
_08099D84: .4byte 0x04000208
_08099D88: .4byte 0x04000004
_08099D8C: .4byte 0x0000FFEF
_08099D90: .4byte 0x04000200
_08099D94: .4byte 0x0000FFFD
_08099D98: .4byte unk_9a31c
_08099D9C: .4byte 0x0879C514
_08099DA0: .4byte gCurrentCutscene
_08099DA4: .4byte 0x06012000
_08099DA8: .4byte 0x0865FB5C
_08099DAC: .4byte 0x06017C00
_08099DB0: .4byte 0x040000D4
_08099DB4: .4byte 0x086638A0
_08099DB8: .4byte 0x050003E0
_08099DBC: .4byte 0x84000008
_08099DC0: .4byte 0x0879C4CC
_08099DC4: .4byte 0x05000200
_08099DC8: .4byte 0x84000030
_08099DCC: .4byte 0x0879C4F0
_08099DD0: .4byte 0x0879C538
_08099DD4: .4byte 0x0600D000
_08099DD8: .4byte 0x08662804
_08099DDC: .4byte 0x08663598
_08099DE0: .4byte 0x0600D800
_08099DE4: .4byte 0x0600C800
_08099DE8: .4byte 0x84000200
_08099DEC: .4byte 0x086636A0
_08099DF0: .4byte 0x84000080
_08099DF4: .4byte 0x0879C4A8
_08099DF8: .4byte 0x84000058
_08099DFC: .4byte 0x04000012
_08099E00: .4byte 0x00001908
_08099E04: .4byte 0x00001B01
_08099E08: .4byte gWrittenToBldy
_08099E0C:
	movs r0, #5
	movs r1, #0x78
	movs r2, #0x68
	bl CutsceneElevatorMonologueSetupOam
_08099E16:
	ldr r2, _08099E50 @ =gNonGameplayRam
	ldr r0, _08099E54 @ =gCurrentCutscene
	ldrb r0, [r0]
	subs r0, #1
	strh r0, [r2, #0xa]
	ldr r1, _08099E58 @ =0x0879C5A4
	ldr r0, _08099E5C @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r1, [r2, #0xa]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1]
	str r0, [r2, #0xc]
	bl CutsceneMonologueDrawAllOam
	ldr r0, _08099E60 @ =CutsceneElevatorMonologueVblank
	bl CallbackSetVBlank
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08099E50: .4byte gNonGameplayRam
_08099E54: .4byte gCurrentCutscene
_08099E58: .4byte 0x0879C5A4
_08099E5C: .4byte 0x03000011
_08099E60: .4byte CutsceneElevatorMonologueVblank

	thumb_func_start CutsceneElevatorMonologueProcess
CutsceneElevatorMonologueProcess: @ 0x08099E64
	push {r4, lr}
	bl CutsceneMonologueProcessSpecialTextCharacters
	adds r4, r0, #0
	ldr r1, _08099E7C @ =gNonGameplayRam
	ldrb r0, [r1, #0x17]
	cmp r0, #0
	beq _08099E80
	cmp r0, #1
	beq _08099E86
	b _08099E8E
	.align 2, 0
_08099E7C: .4byte gNonGameplayRam
_08099E80:
	movs r0, #0x64
	strb r0, [r1, #0x17]
	b _08099E8E
_08099E86:
	movs r0, #0x64
	strb r0, [r1, #0x17]
	bl CutsceneMonologueProcessText
_08099E8E:
	bl CutsceneMonologueProcessOam
	bl CutsceneMonologueDrawAllOam
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start CutsceneElevatorMonologueSetupOam
CutsceneElevatorMonologueSetupOam: @ 0x08099EA0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	movs r6, #0
	ldr r1, _08099EEC @ =gNonGameplayRam
	movs r2, #0x86
	lsls r2, r2, #2
	adds r0, r1, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _08099EE2
	adds r3, r1, #0
	adds r1, r2, #0
_08099EC8:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #4
	bhi _08099EE6
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #3
	adds r0, r0, r3
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08099EC8
_08099EE2:
	cmp r6, #4
	bls _08099EF0
_08099EE6:
	movs r0, #5
	b _0809A06C
	.align 2, 0
_08099EEC: .4byte gNonGameplayRam
_08099EF0:
	adds r0, r6, #0
	bl CutsceneMonologueResetOam
	ldr r3, _08099F50 @ =gNonGameplayRam
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r5, r0, #3
	adds r2, r5, r3
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r2, r1
	strh r7, [r0]
	adds r1, #2
	adds r0, r2, r1
	mov r1, r8
	strh r1, [r0]
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r2, r1
	strb r4, [r0]
	ldr r0, _08099F54 @ =0x00000219
	adds r1, r2, r0
	movs r0, #1
	strb r0, [r1]
	cmp r4, #1
	bne _08099F68
	ldr r0, _08099F58 @ =0x00000221
	adds r1, r2, r0
	movs r0, #0xf
	strb r0, [r1]
	ldr r0, _08099F5C @ =0x00000222
	adds r1, r2, r0
	movs r0, #0xf8
	lsls r0, r0, #2
	strh r0, [r1]
	movs r1, #0x89
	lsls r1, r1, #2
	adds r0, r3, r1
	adds r0, r5, r0
	ldr r1, _08099F60 @ =0x08663E5C
	str r1, [r0]
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r3, r1
	adds r0, r5, r0
	ldr r1, _08099F64 @ =CutsceneMonologueProcessCursor
	b _0809A068
	.align 2, 0
_08099F50: .4byte gNonGameplayRam
_08099F54: .4byte 0x00000219
_08099F58: .4byte 0x00000221
_08099F5C: .4byte 0x00000222
_08099F60: .4byte 0x08663E5C
_08099F64: .4byte CutsceneMonologueProcessCursor
_08099F68:
	cmp r4, #2
	bne _08099FA8
	ldr r0, _08099F98 @ =0x0000021F
	adds r1, r2, r0
	movs r0, #3
	strb r0, [r1]
	movs r0, #0x89
	lsls r0, r0, #2
	adds r1, r3, r0
	adds r1, r5, r1
	ldr r2, _08099F9C @ =0x0879C55C
	ldr r0, _08099FA0 @ =gCurrentCutscene
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r1]
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r3, r1
	adds r0, r5, r0
	ldr r1, _08099FA4 @ =unk_9d09c
	b _0809A068
	.align 2, 0
_08099F98: .4byte 0x0000021F
_08099F9C: .4byte 0x0879C55C
_08099FA0: .4byte gCurrentCutscene
_08099FA4: .4byte unk_9d09c
_08099FA8:
	cmp r4, #3
	bne _08099FF4
	ldr r0, _08099FE0 @ =0x0000021E
	adds r1, r2, r0
	movs r0, #2
	strb r0, [r1]
	ldr r1, _08099FE4 @ =0x0000021F
	adds r0, r2, r1
	strb r4, [r0]
	movs r0, #0x89
	lsls r0, r0, #2
	adds r1, r3, r0
	adds r1, r5, r1
	ldr r2, _08099FE8 @ =0x0879C55C
	ldr r0, _08099FEC @ =gCurrentCutscene
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r1]
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r3, r1
	adds r0, r5, r0
	ldr r1, _08099FF0 @ =unk_9d09c
	b _0809A068
	.align 2, 0
_08099FE0: .4byte 0x0000021E
_08099FE4: .4byte 0x0000021F
_08099FE8: .4byte 0x0879C55C
_08099FEC: .4byte gCurrentCutscene
_08099FF0: .4byte unk_9d09c
_08099FF4:
	cmp r4, #4
	bne _0809A038
	ldr r0, _0809A028 @ =0x0000021F
	adds r1, r2, r0
	movs r0, #3
	strb r0, [r1]
	movs r1, #0x89
	lsls r1, r1, #2
	adds r2, r3, r1
	adds r2, r5, r2
	ldr r1, _0809A02C @ =0x0879C55C
	ldr r0, _0809A030 @ =gCurrentCutscene
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #3
	adds r1, #4
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r2]
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r3, r1
	adds r0, r5, r0
	ldr r1, _0809A034 @ =CutsceneProcessElevatorScrolling
	b _0809A068
	.align 2, 0
_0809A028: .4byte 0x0000021F
_0809A02C: .4byte 0x0879C55C
_0809A030: .4byte gCurrentCutscene
_0809A034: .4byte CutsceneProcessElevatorScrolling
_0809A038:
	cmp r4, #5
	bne _0809A06A
	ldr r0, _0809A078 @ =0x0000021F
	adds r1, r2, r0
	movs r0, #3
	strb r0, [r1]
	movs r1, #0x89
	lsls r1, r1, #2
	adds r2, r3, r1
	adds r2, r5, r2
	ldr r1, _0809A07C @ =0x0879C55C
	ldr r0, _0809A080 @ =gCurrentCutscene
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #3
	adds r1, #4
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r2]
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r3, r1
	adds r0, r5, r0
	ldr r1, _0809A084 @ =unk_9a1a8
_0809A068:
	str r1, [r0]
_0809A06A:
	adds r0, r6, #0
_0809A06C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809A078: .4byte 0x0000021F
_0809A07C: .4byte 0x0879C55C
_0809A080: .4byte gCurrentCutscene
_0809A084: .4byte unk_9a1a8

	thumb_func_start CutsceneProcessElevatorScrolling
CutsceneProcessElevatorScrolling: @ 0x0809A088
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #2]
	adds r0, #2
	movs r5, #0
	strh r0, [r4, #2]
	ldr r3, _0809A0F8 @ =0x0400001A
	ldr r2, _0809A0FC @ =gNonGameplayRam
	ldrh r0, [r2, #0x12]
	subs r0, #1
	strh r0, [r2, #0x12]
	ldr r6, _0809A100 @ =0x0000FFFF
	adds r1, r6, #0
	ands r0, r1
	strh r0, [r3]
	ldrb r3, [r4, #9]
	adds r6, r2, #0
	cmp r3, #0
	bne _0809A124
	ldr r0, _0809A104 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _0809A19A
	ldr r0, _0809A108 @ =0x03001220
	strh r3, [r0]
	ldr r0, _0809A10C @ =0x03001222
	movs r2, #0x10
	strh r2, [r0]
	ldr r0, _0809A110 @ =0x04000048
	strh r3, [r0]
	ldr r1, _0809A114 @ =0x0400004A
	ldr r5, _0809A118 @ =0x0000331D
	adds r0, r5, #0
	strh r0, [r1]
	ldr r0, _0809A11C @ =0x04000016
	strh r3, [r6, #0x14]
	strh r3, [r0]
	adds r0, #0x3c
	lsls r2, r2, #8
	strh r2, [r0]
	adds r1, #6
	ldr r6, _0809A120 @ =0x00001042
	adds r0, r6, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r3, #0x82
	lsls r3, r3, #8
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #1
	strb r0, [r4, #9]
	b _0809A19A
	.align 2, 0
_0809A0F8: .4byte 0x0400001A
_0809A0FC: .4byte gNonGameplayRam
_0809A100: .4byte 0x0000FFFF
_0809A104: .4byte gWrittenToBldy
_0809A108: .4byte 0x03001220
_0809A10C: .4byte 0x03001222
_0809A110: .4byte 0x04000048
_0809A114: .4byte 0x0400004A
_0809A118: .4byte 0x0000331D
_0809A11C: .4byte 0x04000016
_0809A120: .4byte 0x00001042
_0809A124:
	cmp r3, #1
	bne _0809A164
	ldr r2, _0809A138 @ =0x03001220
	ldrh r1, [r2]
	cmp r1, #0xa
	bne _0809A13C
	movs r0, #2
	strb r0, [r4, #9]
	strb r5, [r4, #8]
	b _0809A14E
	.align 2, 0
_0809A138: .4byte 0x03001220
_0809A13C:
	ldrb r0, [r4, #8]
	cmp r0, #3
	bls _0809A14A
	strb r5, [r4, #8]
	adds r0, r1, #1
	strh r0, [r2]
	b _0809A14E
_0809A14A:
	adds r0, #1
	strb r0, [r4, #8]
_0809A14E:
	ldr r0, _0809A15C @ =0x04000016
	ldrh r1, [r6, #0x14]
	subs r1, #3
	strh r1, [r6, #0x14]
	ldr r5, _0809A160 @ =0x0000FFFF
	adds r2, r5, #0
	b _0809A196
	.align 2, 0
_0809A15C: .4byte 0x04000016
_0809A160: .4byte 0x0000FFFF
_0809A164:
	ldr r2, _0809A174 @ =0x03001220
	ldrh r1, [r2]
	cmp r1, #4
	bne _0809A178
	movs r0, #1
	strb r0, [r4, #9]
	strb r5, [r4, #8]
	b _0809A18A
	.align 2, 0
_0809A174: .4byte 0x03001220
_0809A178:
	ldrb r0, [r4, #8]
	cmp r0, #3
	bls _0809A186
	strb r5, [r4, #8]
	subs r0, r1, #1
	strh r0, [r2]
	b _0809A18A
_0809A186:
	adds r0, #1
	strb r0, [r4, #8]
_0809A18A:
	ldr r0, _0809A1A0 @ =0x04000016
	ldrh r1, [r6, #0x14]
	subs r1, #3
	strh r1, [r6, #0x14]
	ldr r6, _0809A1A4 @ =0x0000FFFF
	adds r2, r6, #0
_0809A196:
	ands r1, r2
	strh r1, [r0]
_0809A19A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809A1A0: .4byte 0x04000016
_0809A1A4: .4byte 0x0000FFFF

	thumb_func_start unk_9a1a8
unk_9a1a8: @ 0x0809A1A8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #2]
	subs r0, #2
	movs r5, #0
	strh r0, [r4, #2]
	ldr r3, _0809A218 @ =0x0400001A
	ldr r2, _0809A21C @ =gNonGameplayRam
	ldrh r0, [r2, #0x12]
	adds r0, #1
	strh r0, [r2, #0x12]
	ldr r6, _0809A220 @ =0x0000FFFF
	adds r1, r6, #0
	ands r0, r1
	strh r0, [r3]
	ldrb r3, [r4, #9]
	adds r6, r2, #0
	cmp r3, #0
	bne _0809A244
	ldr r0, _0809A224 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _0809A2BA
	ldr r0, _0809A228 @ =0x03001220
	strh r3, [r0]
	ldr r0, _0809A22C @ =0x03001222
	movs r2, #0x10
	strh r2, [r0]
	ldr r0, _0809A230 @ =0x04000048
	strh r3, [r0]
	ldr r1, _0809A234 @ =0x0400004A
	ldr r5, _0809A238 @ =0x0000331D
	adds r0, r5, #0
	strh r0, [r1]
	ldr r0, _0809A23C @ =0x04000016
	strh r3, [r6, #0x14]
	strh r3, [r0]
	adds r0, #0x3c
	lsls r2, r2, #8
	strh r2, [r0]
	adds r1, #6
	ldr r6, _0809A240 @ =0x00001042
	adds r0, r6, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r3, #0x82
	lsls r3, r3, #8
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #1
	strb r0, [r4, #9]
	b _0809A2BA
	.align 2, 0
_0809A218: .4byte 0x0400001A
_0809A21C: .4byte gNonGameplayRam
_0809A220: .4byte 0x0000FFFF
_0809A224: .4byte gWrittenToBldy
_0809A228: .4byte 0x03001220
_0809A22C: .4byte 0x03001222
_0809A230: .4byte 0x04000048
_0809A234: .4byte 0x0400004A
_0809A238: .4byte 0x0000331D
_0809A23C: .4byte 0x04000016
_0809A240: .4byte 0x00001042
_0809A244:
	cmp r3, #1
	bne _0809A284
	ldr r2, _0809A258 @ =0x03001220
	ldrh r1, [r2]
	cmp r1, #0xa
	bne _0809A25C
	movs r0, #2
	strb r0, [r4, #9]
	strb r5, [r4, #8]
	b _0809A26E
	.align 2, 0
_0809A258: .4byte 0x03001220
_0809A25C:
	ldrb r0, [r4, #8]
	cmp r0, #3
	bls _0809A26A
	strb r5, [r4, #8]
	adds r0, r1, #1
	strh r0, [r2]
	b _0809A26E
_0809A26A:
	adds r0, #1
	strb r0, [r4, #8]
_0809A26E:
	ldr r0, _0809A27C @ =0x04000016
	ldrh r1, [r6, #0x14]
	adds r1, #3
	strh r1, [r6, #0x14]
	ldr r5, _0809A280 @ =0x0000FFFF
	adds r2, r5, #0
	b _0809A2B6
	.align 2, 0
_0809A27C: .4byte 0x04000016
_0809A280: .4byte 0x0000FFFF
_0809A284:
	ldr r2, _0809A294 @ =0x03001220
	ldrh r1, [r2]
	cmp r1, #4
	bne _0809A298
	movs r0, #1
	strb r0, [r4, #9]
	strb r5, [r4, #8]
	b _0809A2AA
	.align 2, 0
_0809A294: .4byte 0x03001220
_0809A298:
	ldrb r0, [r4, #8]
	cmp r0, #3
	bls _0809A2A6
	strb r5, [r4, #8]
	subs r0, r1, #1
	strh r0, [r2]
	b _0809A2AA
_0809A2A6:
	adds r0, #1
	strb r0, [r4, #8]
_0809A2AA:
	ldr r0, _0809A2C0 @ =0x04000016
	ldrh r1, [r6, #0x14]
	adds r1, #3
	strh r1, [r6, #0x14]
	ldr r6, _0809A2C4 @ =0x0000FFFF
	adds r2, r6, #0
_0809A2B6:
	ands r1, r2
	strh r1, [r0]
_0809A2BA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809A2C0: .4byte 0x04000016
_0809A2C4: .4byte 0x0000FFFF

	thumb_func_start CutsceneElevatorMonologueVblank
CutsceneElevatorMonologueVblank: @ 0x0809A2C8
	push {lr}
	ldr r1, _0809A2FC @ =0x040000D4
	ldr r0, _0809A300 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _0809A304 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	bl unk_9cc4c
	ldr r2, _0809A308 @ =0x04000052
	ldr r0, _0809A30C @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0809A310 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0809A314 @ =0x04000054
	ldr r0, _0809A318 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0809A2FC: .4byte 0x040000D4
_0809A300: .4byte gOamData
_0809A304: .4byte 0x84000100
_0809A308: .4byte 0x04000052
_0809A30C: .4byte 0x03001222
_0809A310: .4byte 0x03001220
_0809A314: .4byte 0x04000054
_0809A318: .4byte gWrittenToBldy

	thumb_func_start unk_9a31c
unk_9a31c: @ 0x0809A31C
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CutsceneInternalMonologue
CutsceneInternalMonologue: @ 0x0809A328
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r5, #0
	ldr r4, _0809A344 @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _0809A35E
	cmp r0, #1
	bgt _0809A348
	cmp r0, #0
	beq _0809A352
	b _0809A39E
	.align 2, 0
_0809A344: .4byte gNonGameplayRam
_0809A348:
	cmp r0, #2
	beq _0809A378
	cmp r0, #3
	beq _0809A390
	b _0809A39E
_0809A352:
	movs r0, #1
	strh r0, [r4, #8]
	adds r0, r1, #0
	bl CutsceneInternalMonologueInit
	b _0809A39E
_0809A35E:
	bl CutsceneMonologueFadeIn
	ldr r0, _0809A374 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _0809A39E
	ldrh r0, [r4, #8]
	adds r0, #1
	strh r0, [r4, #8]
	b _0809A39E
	.align 2, 0
_0809A374: .4byte gWrittenToBldy
_0809A378:
	bl CutsceneInternalMonologueProcess
	cmp r0, #0
	beq _0809A39E
	movs r0, #3
	strh r0, [r4, #8]
	ldr r1, _0809A38C @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	b _0809A39E
	.align 2, 0
_0809A38C: .4byte 0x04000050
_0809A390:
	bl CutsceneMonologueFadeOut
	ldr r0, _0809A3A8 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0x10
	bne _0809A39E
	movs r5, #1
_0809A39E:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0809A3A8: .4byte gWrittenToBldy

	thumb_func_start CutsceneInternalMonologueInit
CutsceneInternalMonologueInit: @ 0x0809A3AC
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	ldr r3, _0809A484 @ =0x04000208
	movs r6, #0
	strh r6, [r3]
	ldr r2, _0809A488 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _0809A48C @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0809A490 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0809A494 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0809A498 @ =unk_9a63c
	bl CallbackSetVBlank
	movs r0, #0x80
	lsls r0, r0, #0x13
	mov r8, r0
	strh r6, [r0]
	ldr r0, _0809A49C @ =0x0865FB5C
	ldr r1, _0809A4A0 @ =0x06017C00
	bl LZ77UncompVram
	ldr r4, _0809A4A4 @ =0x040000D4
	ldr r0, _0809A4A8 @ =0x086638A0
	str r0, [r4]
	ldr r0, _0809A4AC @ =0x050003E0
	str r0, [r4, #4]
	ldr r0, _0809A4B0 @ =0x84000008
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809A4B4 @ =0x08662804
	movs r5, #0x80
	lsls r5, r5, #0x12
	adds r1, r5, #0
	bl LZ77UncompWram
	str r5, [r4]
	ldr r0, _0809A4B8 @ =0x0600C800
	str r0, [r4, #4]
	ldr r0, _0809A4BC @ =0x84000200
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809A4C0 @ =0x086636A0
	str r0, [r4]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	str r1, [r4, #4]
	ldr r0, _0809A4C4 @ =0x84000080
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	strh r6, [r1]
	ldr r1, _0809A4C8 @ =0x04000012
	movs r0, #4
	strh r0, [r1]
	subs r1, #0xa
	ldr r2, _0809A4CC @ =0x00001908
	adds r0, r2, #0
	strh r0, [r1]
	movs r1, #0x88
	lsls r1, r1, #5
	adds r0, r1, #0
	mov r2, r8
	strh r0, [r2]
	ldr r1, _0809A4D0 @ =gWrittenToBldy
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	movs r0, #1
	movs r1, #0xc
	movs r2, #0x10
	bl CutsceneInternalMonologueSetupOam
	ldr r2, _0809A4D4 @ =gNonGameplayRam
	ldr r0, _0809A4D8 @ =gCurrentCutscene
	ldrb r0, [r0]
	subs r0, #1
	strh r0, [r2, #0xa]
	ldr r1, _0809A4DC @ =0x0879C5A4
	ldr r0, _0809A4E0 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r1, [r2, #0xa]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1]
	str r0, [r2, #0xc]
	bl CutsceneMonologueDrawAllOam
	ldr r0, _0809A4E4 @ =CutsceneInternalMonologueVblank
	bl CallbackSetVBlank
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809A484: .4byte 0x04000208
_0809A488: .4byte 0x04000004
_0809A48C: .4byte 0x0000FFEF
_0809A490: .4byte 0x04000200
_0809A494: .4byte 0x0000FFFD
_0809A498: .4byte unk_9a63c
_0809A49C: .4byte 0x0865FB5C
_0809A4A0: .4byte 0x06017C00
_0809A4A4: .4byte 0x040000D4
_0809A4A8: .4byte 0x086638A0
_0809A4AC: .4byte 0x050003E0
_0809A4B0: .4byte 0x84000008
_0809A4B4: .4byte 0x08662804
_0809A4B8: .4byte 0x0600C800
_0809A4BC: .4byte 0x84000200
_0809A4C0: .4byte 0x086636A0
_0809A4C4: .4byte 0x84000080
_0809A4C8: .4byte 0x04000012
_0809A4CC: .4byte 0x00001908
_0809A4D0: .4byte gWrittenToBldy
_0809A4D4: .4byte gNonGameplayRam
_0809A4D8: .4byte gCurrentCutscene
_0809A4DC: .4byte 0x0879C5A4
_0809A4E0: .4byte 0x03000011
_0809A4E4: .4byte CutsceneInternalMonologueVblank

	thumb_func_start CutsceneInternalMonologueProcess
CutsceneInternalMonologueProcess: @ 0x0809A4E8
	push {r4, lr}
	bl CutsceneMonologueProcessSpecialTextCharacters
	adds r4, r0, #0
	ldr r1, _0809A500 @ =gNonGameplayRam
	ldrb r0, [r1, #0x17]
	cmp r0, #0
	beq _0809A504
	cmp r0, #1
	beq _0809A50A
	b _0809A512
	.align 2, 0
_0809A500: .4byte gNonGameplayRam
_0809A504:
	movs r0, #0x64
	strb r0, [r1, #0x17]
	b _0809A512
_0809A50A:
	movs r0, #0x64
	strb r0, [r1, #0x17]
	bl CutsceneMonologueProcessText
_0809A512:
	bl CutsceneMonologueProcessOam
	bl CutsceneMonologueDrawAllOam
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start CutsceneInternalMonologueSetupOam
CutsceneInternalMonologueSetupOam: @ 0x0809A524
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	movs r4, #0
	ldr r1, _0809A570 @ =gNonGameplayRam
	movs r2, #0x86
	lsls r2, r2, #2
	adds r0, r1, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _0809A566
	adds r3, r1, #0
	adds r1, r2, #0
_0809A54C:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	bhi _0809A56A
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r3
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0809A54C
_0809A566:
	cmp r4, #4
	bls _0809A574
_0809A56A:
	movs r0, #5
	b _0809A5DC
	.align 2, 0
_0809A570: .4byte gNonGameplayRam
_0809A574:
	adds r0, r4, #0
	bl CutsceneMonologueResetOam
	ldr r5, _0809A5E8 @ =gNonGameplayRam
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r3, r0, #3
	adds r2, r3, r5
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r2, r1
	strh r7, [r0]
	adds r1, #2
	adds r0, r2, r1
	mov r1, r8
	strh r1, [r0]
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r2, r1
	strb r6, [r0]
	ldr r0, _0809A5EC @ =0x00000219
	adds r1, r2, r0
	movs r0, #1
	strb r0, [r1]
	cmp r6, #1
	bne _0809A5DA
	ldr r0, _0809A5F0 @ =0x0000021F
	adds r1, r2, r0
	movs r0, #2
	strb r0, [r1]
	ldr r0, _0809A5F4 @ =0x00000221
	adds r1, r2, r0
	movs r0, #0xf
	strb r0, [r1]
	ldr r0, _0809A5F8 @ =0x00000222
	adds r1, r2, r0
	movs r0, #0xf8
	lsls r0, r0, #2
	strh r0, [r1]
	movs r1, #0x89
	lsls r1, r1, #2
	adds r0, r5, r1
	adds r0, r3, r0
	ldr r1, _0809A5FC @ =0x08663E5C
	str r1, [r0]
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r5, r1
	adds r0, r3, r0
	ldr r1, _0809A600 @ =CutsceneMonologueProcessCursor
	str r1, [r0]
_0809A5DA:
	adds r0, r4, #0
_0809A5DC:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809A5E8: .4byte gNonGameplayRam
_0809A5EC: .4byte 0x00000219
_0809A5F0: .4byte 0x0000021F
_0809A5F4: .4byte 0x00000221
_0809A5F8: .4byte 0x00000222
_0809A5FC: .4byte 0x08663E5C
_0809A600: .4byte CutsceneMonologueProcessCursor

	thumb_func_start CutsceneInternalMonologueVblank
CutsceneInternalMonologueVblank: @ 0x0809A604
	push {lr}
	ldr r1, _0809A628 @ =0x040000D4
	ldr r0, _0809A62C @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _0809A630 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	bl unk_9cc4c
	ldr r1, _0809A634 @ =0x04000054
	ldr r0, _0809A638 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0809A628: .4byte 0x040000D4
_0809A62C: .4byte gOamData
_0809A630: .4byte 0x84000100
_0809A634: .4byte 0x04000054
_0809A638: .4byte gWrittenToBldy

	thumb_func_start unk_9a63c
unk_9a63c: @ 0x0809A63C
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CutsceneFederationMonologue
CutsceneFederationMonologue: @ 0x0809A648
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r5, #0
	ldr r4, _0809A664 @ =gNonGameplayRam
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _0809A67E
	cmp r0, #1
	bgt _0809A668
	cmp r0, #0
	beq _0809A672
	b _0809A6BE
	.align 2, 0
_0809A664: .4byte gNonGameplayRam
_0809A668:
	cmp r0, #2
	beq _0809A698
	cmp r0, #3
	beq _0809A6B0
	b _0809A6BE
_0809A672:
	movs r0, #1
	strh r0, [r4, #8]
	adds r0, r1, #0
	bl CutsceneFederationMonologueInit
	b _0809A6BE
_0809A67E:
	bl CutsceneMonologueFadeIn
	ldr r0, _0809A694 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0
	bne _0809A6BE
	ldrh r0, [r4, #8]
	adds r0, #1
	strh r0, [r4, #8]
	b _0809A6BE
	.align 2, 0
_0809A694: .4byte gWrittenToBldy
_0809A698:
	bl CutsceneFederationMonologueProcess
	cmp r0, #0
	beq _0809A6BE
	movs r0, #3
	strh r0, [r4, #8]
	ldr r1, _0809A6AC @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	b _0809A6BE
	.align 2, 0
_0809A6AC: .4byte 0x04000050
_0809A6B0:
	bl CutsceneMonologueFadeOut
	ldr r0, _0809A6C8 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0x10
	bne _0809A6BE
	movs r5, #1
_0809A6BE:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0809A6C8: .4byte gWrittenToBldy

	thumb_func_start CutsceneFederationMonologueInit
CutsceneFederationMonologueInit: @ 0x0809A6CC
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	ldr r3, _0809A7CC @ =0x04000208
	movs r6, #0
	strh r6, [r3]
	ldr r2, _0809A7D0 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _0809A7D4 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0809A7D8 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0809A7DC @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0809A7E0 @ =unk_9a99c
	bl CallbackSetVBlank
	movs r0, #0x80
	lsls r0, r0, #0x13
	mov r8, r0
	strh r6, [r0]
	ldr r0, _0809A7E4 @ =0x0865FB5C
	ldr r1, _0809A7E8 @ =0x06017C00
	bl LZ77UncompVram
	ldr r4, _0809A7EC @ =0x040000D4
	ldr r0, _0809A7F0 @ =0x086638A0
	str r0, [r4]
	ldr r0, _0809A7F4 @ =0x050003E0
	str r0, [r4, #4]
	ldr r0, _0809A7F8 @ =0x84000008
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809A7FC @ =0x086724C0
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _0809A800 @ =0x08674AD8
	ldr r1, _0809A804 @ =0x0600D000
	bl LZ77UncompVram
	ldr r0, _0809A808 @ =0x08662804
	movs r5, #0x80
	lsls r5, r5, #0x12
	adds r1, r5, #0
	bl LZ77UncompWram
	str r5, [r4]
	ldr r0, _0809A80C @ =0x0600C800
	str r0, [r4, #4]
	ldr r0, _0809A810 @ =0x84000200
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809A814 @ =0x08674958
	str r0, [r4]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	str r1, [r4, #4]
	ldr r0, _0809A818 @ =0x84000060
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809A81C @ =0x08663820
	str r0, [r4]
	ldr r0, _0809A820 @ =0x05000180
	str r0, [r4, #4]
	ldr r0, _0809A824 @ =0x84000020
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	strh r6, [r1]
	ldr r1, _0809A828 @ =0x04000012
	movs r0, #4
	strh r0, [r1]
	subs r1, #0xa
	ldr r2, _0809A82C @ =0x00001908
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	adds r2, #0xfb
	adds r0, r2, #0
	strh r0, [r1]
	movs r1, #0xa8
	lsls r1, r1, #5
	adds r0, r1, #0
	mov r2, r8
	strh r0, [r2]
	ldr r1, _0809A830 @ =gWrittenToBldy
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	movs r0, #1
	movs r1, #0xc
	movs r2, #0x10
	bl CutsceneFederationMonologueSetupOam
	ldr r2, _0809A834 @ =gNonGameplayRam
	ldr r0, _0809A838 @ =gCurrentCutscene
	ldrb r0, [r0]
	subs r0, #1
	strh r0, [r2, #0xa]
	ldr r1, _0809A83C @ =0x0879C5A4
	ldr r0, _0809A840 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r1, [r2, #0xa]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1]
	str r0, [r2, #0xc]
	bl CutsceneMonologueDrawAllOam
	ldr r0, _0809A844 @ =CutsceneFederationMonologueVblank
	bl CallbackSetVBlank
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809A7CC: .4byte 0x04000208
_0809A7D0: .4byte 0x04000004
_0809A7D4: .4byte 0x0000FFEF
_0809A7D8: .4byte 0x04000200
_0809A7DC: .4byte 0x0000FFFD
_0809A7E0: .4byte unk_9a99c
_0809A7E4: .4byte 0x0865FB5C
_0809A7E8: .4byte 0x06017C00
_0809A7EC: .4byte 0x040000D4
_0809A7F0: .4byte 0x086638A0
_0809A7F4: .4byte 0x050003E0
_0809A7F8: .4byte 0x84000008
_0809A7FC: .4byte 0x086724C0
_0809A800: .4byte 0x08674AD8
_0809A804: .4byte 0x0600D000
_0809A808: .4byte 0x08662804
_0809A80C: .4byte 0x0600C800
_0809A810: .4byte 0x84000200
_0809A814: .4byte 0x08674958
_0809A818: .4byte 0x84000060
_0809A81C: .4byte 0x08663820
_0809A820: .4byte 0x05000180
_0809A824: .4byte 0x84000020
_0809A828: .4byte 0x04000012
_0809A82C: .4byte 0x00001908
_0809A830: .4byte gWrittenToBldy
_0809A834: .4byte gNonGameplayRam
_0809A838: .4byte gCurrentCutscene
_0809A83C: .4byte 0x0879C5A4
_0809A840: .4byte 0x03000011
_0809A844: .4byte CutsceneFederationMonologueVblank

	thumb_func_start CutsceneFederationMonologueProcess
CutsceneFederationMonologueProcess: @ 0x0809A848
	push {r4, lr}
	bl CutsceneMonologueProcessSpecialTextCharacters
	adds r4, r0, #0
	ldr r1, _0809A860 @ =gNonGameplayRam
	ldrb r0, [r1, #0x17]
	cmp r0, #0
	beq _0809A864
	cmp r0, #1
	beq _0809A86A
	b _0809A872
	.align 2, 0
_0809A860: .4byte gNonGameplayRam
_0809A864:
	movs r0, #0x64
	strb r0, [r1, #0x17]
	b _0809A872
_0809A86A:
	movs r0, #0x64
	strb r0, [r1, #0x17]
	bl CutsceneMonologueProcessText
_0809A872:
	bl CutsceneMonologueProcessOam
	bl CutsceneMonologueDrawAllOam
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start CutsceneFederationMonologueSetupOam
CutsceneFederationMonologueSetupOam: @ 0x0809A884
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	movs r4, #0
	ldr r1, _0809A8D0 @ =gNonGameplayRam
	movs r2, #0x86
	lsls r2, r2, #2
	adds r0, r1, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _0809A8C6
	adds r3, r1, #0
	adds r1, r2, #0
_0809A8AC:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	bhi _0809A8CA
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r3
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0809A8AC
_0809A8C6:
	cmp r4, #4
	bls _0809A8D4
_0809A8CA:
	movs r0, #5
	b _0809A93C
	.align 2, 0
_0809A8D0: .4byte gNonGameplayRam
_0809A8D4:
	adds r0, r4, #0
	bl CutsceneMonologueResetOam
	ldr r5, _0809A948 @ =gNonGameplayRam
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r3, r0, #3
	adds r2, r3, r5
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r2, r1
	strh r7, [r0]
	adds r1, #2
	adds r0, r2, r1
	mov r1, r8
	strh r1, [r0]
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r2, r1
	strb r6, [r0]
	ldr r0, _0809A94C @ =0x00000219
	adds r1, r2, r0
	movs r0, #1
	strb r0, [r1]
	cmp r6, #1
	bne _0809A93A
	ldr r0, _0809A950 @ =0x0000021F
	adds r1, r2, r0
	movs r0, #0
	strb r0, [r1]
	ldr r0, _0809A954 @ =0x00000221
	adds r1, r2, r0
	movs r0, #0xf
	strb r0, [r1]
	ldr r0, _0809A958 @ =0x00000222
	adds r1, r2, r0
	movs r0, #0xf8
	lsls r0, r0, #2
	strh r0, [r1]
	movs r1, #0x89
	lsls r1, r1, #2
	adds r0, r5, r1
	adds r0, r3, r0
	ldr r1, _0809A95C @ =0x08663E5C
	str r1, [r0]
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r5, r1
	adds r0, r3, r0
	ldr r1, _0809A960 @ =CutsceneMonologueProcessCursor
	str r1, [r0]
_0809A93A:
	adds r0, r4, #0
_0809A93C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809A948: .4byte gNonGameplayRam
_0809A94C: .4byte 0x00000219
_0809A950: .4byte 0x0000021F
_0809A954: .4byte 0x00000221
_0809A958: .4byte 0x00000222
_0809A95C: .4byte 0x08663E5C
_0809A960: .4byte CutsceneMonologueProcessCursor

	thumb_func_start CutsceneFederationMonologueVblank
CutsceneFederationMonologueVblank: @ 0x0809A964
	push {lr}
	ldr r1, _0809A988 @ =0x040000D4
	ldr r0, _0809A98C @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _0809A990 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	bl unk_9cc4c
	ldr r1, _0809A994 @ =0x04000054
	ldr r0, _0809A998 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0809A988: .4byte 0x040000D4
_0809A98C: .4byte gOamData
_0809A990: .4byte 0x84000100
_0809A994: .4byte 0x04000054
_0809A998: .4byte gWrittenToBldy

	thumb_func_start unk_9a99c
unk_9a99c: @ 0x0809A99C
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CutsceneSecretConversation
CutsceneSecretConversation: @ 0x0809A9A8
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _0809A9C0 @ =gNonGameplayRam
	ldrh r0, [r4]
	cmp r0, #1
	beq _0809A9D8
	cmp r0, #1
	bgt _0809A9C4
	cmp r0, #0
	beq _0809A9CE
	b _0809AA20
	.align 2, 0
_0809A9C0: .4byte gNonGameplayRam
_0809A9C4:
	cmp r0, #2
	beq _0809A9F2
	cmp r0, #3
	beq _0809AA12
	b _0809AA20
_0809A9CE:
	movs r0, #1
	strh r0, [r4]
	bl CutsceneSecretConversationInit
	b _0809AA20
_0809A9D8:
	ldr r1, _0809A9E8 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _0809A9EC
	subs r0, #1
	strh r0, [r1]
	b _0809AA20
	.align 2, 0
_0809A9E8: .4byte gWrittenToBldy
_0809A9EC:
	movs r0, #2
	strh r0, [r4]
	b _0809AA20
_0809A9F2:
	bl CutsceneSecretConversationProcess
	cmp r0, #0
	beq _0809AA20
	movs r0, #3
	strh r0, [r4]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xb0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x50
	movs r0, #0xff
	strh r0, [r1]
	b _0809AA20
_0809AA12:
	bl CutsceneFadeOut
	ldr r0, _0809AA28 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0x10
	bne _0809AA20
	movs r5, #1
_0809AA20:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0809AA28: .4byte gWrittenToBldy

	thumb_func_start CutsceneSecretConversationInit
CutsceneSecretConversationInit: @ 0x0809AA2C
	push {r4, r5, lr}
	ldr r3, _0809AAF4 @ =0x04000208
	movs r4, #0
	strh r4, [r3]
	ldr r2, _0809AAF8 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _0809AAFC @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0809AB00 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0809AB04 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0809AB08 @ =unk_9ae0c
	bl CallbackSetVBlank
	movs r5, #0x80
	lsls r5, r5, #0x13
	strh r4, [r5]
	ldr r0, _0809AB0C @ =0x0867815C
	ldr r1, _0809AB10 @ =0x06014000
	bl LZ77UncompVram
	ldr r4, _0809AB14 @ =0x040000D4
	ldr r0, _0809AB18 @ =0x086788A8
	str r0, [r4]
	ldr r0, _0809AB1C @ =0x05000300
	str r0, [r4, #4]
	ldr r0, _0809AB20 @ =0x84000010
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809AB24 @ =0x08675098
	ldr r1, _0809AB28 @ =0x06000800
	bl LZ77UncompVram
	ldr r0, _0809AB2C @ =0x08677914
	ldr r1, _0809AB30 @ =0x0600C000
	bl LZ77UncompVram
	ldr r0, _0809AB34 @ =0x08677C90
	ldr r1, _0809AB38 @ =0x0600C800
	bl LZ77UncompVram
	ldr r0, _0809AB3C @ =0x08677874
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _0809AB40 @ =0x84000028
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809AB44 @ =0x08677C10
	str r0, [r4]
	ldr r0, _0809AB48 @ =0x050001E0
	str r0, [r4, #4]
	ldr r0, _0809AB4C @ =0x84000008
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	movs r0, #1
	movs r1, #0x78
	movs r2, #0x80
	bl CutsceneSecretConversationSetupOam
	movs r0, #2
	movs r1, #0x78
	movs r2, #0x80
	bl CutsceneSecretConversationSetupOam
	movs r0, #3
	movs r1, #0x78
	movs r2, #0x80
	bl CutsceneSecretConversationSetupOam
	ldr r1, _0809AB50 @ =0x0400000A
	ldr r2, _0809AB54 @ =0x00001802
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _0809AB58 @ =0x00001903
	adds r0, r2, #0
	strh r0, [r1]
	movs r1, #0xb0
	lsls r1, r1, #5
	adds r0, r1, #0
	strh r0, [r5]
	ldr r1, _0809AB5C @ =gWrittenToBldy
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	bl CutsceneDrawAllOam
	ldr r0, _0809AB60 @ =CutsceneSecretConversationVblank
	bl CallbackSetVBlank
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809AAF4: .4byte 0x04000208
_0809AAF8: .4byte 0x04000004
_0809AAFC: .4byte 0x0000FFEF
_0809AB00: .4byte 0x04000200
_0809AB04: .4byte 0x0000FFFD
_0809AB08: .4byte unk_9ae0c
_0809AB0C: .4byte 0x0867815C
_0809AB10: .4byte 0x06014000
_0809AB14: .4byte 0x040000D4
_0809AB18: .4byte 0x086788A8
_0809AB1C: .4byte 0x05000300
_0809AB20: .4byte 0x84000010
_0809AB24: .4byte 0x08675098
_0809AB28: .4byte 0x06000800
_0809AB2C: .4byte 0x08677914
_0809AB30: .4byte 0x0600C000
_0809AB34: .4byte 0x08677C90
_0809AB38: .4byte 0x0600C800
_0809AB3C: .4byte 0x08677874
_0809AB40: .4byte 0x84000028
_0809AB44: .4byte 0x08677C10
_0809AB48: .4byte 0x050001E0
_0809AB4C: .4byte 0x84000008
_0809AB50: .4byte 0x0400000A
_0809AB54: .4byte 0x00001802
_0809AB58: .4byte 0x00001903
_0809AB5C: .4byte gWrittenToBldy
_0809AB60: .4byte CutsceneSecretConversationVblank

	thumb_func_start CutsceneSecretConversationProcess
CutsceneSecretConversationProcess: @ 0x0809AB64
	push {r4, lr}
	movs r4, #0
	ldr r1, _0809AB7C @ =gNonGameplayRam
	ldrb r0, [r1, #0x10]
	cmp r0, #1
	beq _0809ABAA
	cmp r0, #1
	bgt _0809AB80
	cmp r0, #0
	beq _0809AB86
	b _0809ABBE
	.align 2, 0
_0809AB7C: .4byte gNonGameplayRam
_0809AB80:
	cmp r0, #2
	beq _0809ABB4
	b _0809ABBE
_0809AB86:
	ldrh r0, [r1, #8]
	adds r0, #1
	strh r0, [r1, #8]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1d
	bls _0809ABAE
	movs r0, #1
	strb r0, [r1, #0x10]
	strh r4, [r1, #8]
	movs r0, #4
	movs r1, #0x78
	movs r2, #0x44
	bl CutsceneSecretConversationSetupOam
	bl CutsceneProcessOam
	b _0809ABAE
_0809ABAA:
	bl CutsceneProcessOam
_0809ABAE:
	bl CutsceneDrawAllOam
	b _0809ABBE
_0809ABB4:
	bl CutsceneProcessOam
	bl CutsceneDrawAllOam
	movs r4, #1
_0809ABBE:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start CutsceneSecretConversationSetupOam
CutsceneSecretConversationSetupOam: @ 0x0809ABC8
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r5, #0
	ldr r1, _0809ABE0 @ =gNonGameplayRam
	adds r0, r1, #0
	b _0809ABF6
	.align 2, 0
_0809ABE0: .4byte gNonGameplayRam
_0809ABE4:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xf
	bhi _0809AC02
	lsls r0, r5, #3
	adds r0, r0, r5
	lsls r0, r0, #2
	adds r0, r0, r1
_0809ABF6:
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #0
	bne _0809ABE4
	cmp r5, #0xf
	bls _0809AC06
_0809AC02:
	movs r0, #0x10
	b _0809ACC2
_0809AC06:
	movs r0, #0
	str r0, [sp]
	ldr r1, _0809AC54 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	lsls r0, r5, #3
	adds r0, r0, r5
	lsls r4, r0, #2
	ldr r3, _0809AC58 @ =0x0300149C
	adds r0, r4, r3
	str r0, [r1, #4]
	ldr r0, _0809AC5C @ =0x85000009
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	adds r0, r3, #0
	subs r0, #0x18
	adds r0, r4, r0
	strh r7, [r0, #0x18]
	strh r2, [r0, #0x1a]
	adds r1, r0, #0
	adds r1, #0x28
	strb r6, [r1]
	adds r0, #0x2e
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	strb r1, [r0]
	cmp r6, #1
	bne _0809AC68
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _0809AC60 @ =0x086793B0
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _0809AC64 @ =unk_9db70
	b _0809ACBE
	.align 2, 0
_0809AC54: .4byte 0x040000D4
_0809AC58: .4byte 0x0300149C
_0809AC5C: .4byte 0x85000009
_0809AC60: .4byte 0x086793B0
_0809AC64: .4byte unk_9db70
_0809AC68:
	cmp r6, #2
	bne _0809AC88
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _0809AC80 @ =0x08679280
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _0809AC84 @ =CutsceneSecretConversationProcessNavigationPanel
	b _0809ACBE
	.align 2, 0
_0809AC80: .4byte 0x08679280
_0809AC84: .4byte CutsceneSecretConversationProcessNavigationPanel
_0809AC88:
	cmp r6, #3
	bne _0809ACA8
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _0809ACA0 @ =0x086793A0
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _0809ACA4 @ =unk_9db70
	b _0809ACBE
	.align 2, 0
_0809ACA0: .4byte 0x086793A0
_0809ACA4: .4byte unk_9db70
_0809ACA8:
	cmp r6, #4
	bne _0809ACC0
	adds r0, r3, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _0809ACCC @ =0x086792D0
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _0809ACD0 @ =CutsceneSecretConversationProcessIncomingDispatch
_0809ACBE:
	str r1, [r0]
_0809ACC0:
	adds r0, r5, #0
_0809ACC2:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809ACCC: .4byte 0x086792D0
_0809ACD0: .4byte CutsceneSecretConversationProcessIncomingDispatch

	thumb_func_start CutsceneSecretConversationProcessNavigationPanel
CutsceneSecretConversationProcessNavigationPanel: @ 0x0809ACD4
	push {lr}
	adds r2, r0, #0
	ldrb r1, [r2, #0x14]
	cmp r1, #0
	bne _0809ACEA
	movs r0, #1
	strb r0, [r2, #0x14]
	strb r1, [r2, #0x12]
	strb r1, [r2, #0x11]
	ldr r0, _0809ACF0 @ =0x086792A8
	str r0, [r2, #0x1c]
_0809ACEA:
	pop {r0}
	bx r0
	.align 2, 0
_0809ACF0: .4byte 0x086792A8

	thumb_func_start CutsceneSecretConversationProcessIncomingDispatch
CutsceneSecretConversationProcessIncomingDispatch: @ 0x0809ACF4
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldrb r5, [r4, #0x14]
	cmp r5, #0
	bne _0809AD3C
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #3
	ldr r1, [r4, #0x1c]
	adds r6, r1, r0
	ldrb r0, [r4, #0x13]
	cmp r0, #0
	bne _0809AD16
	ldr r0, _0809AD34 @ =0x0000022F
	bl SoundPlay
	movs r0, #1
	strb r0, [r4, #0x13]
_0809AD16:
	ldrb r0, [r6, #4]
	ldrb r1, [r4, #0x12]
	cmp r0, r1
	bne _0809AD5A
	ldrb r0, [r6, #0xc]
	cmp r0, #0
	bne _0809AD5A
	movs r0, #1
	strb r0, [r4, #0x14]
	strb r5, [r4, #0x13]
	strb r5, [r4, #0x12]
	strb r5, [r4, #0x11]
	ldr r0, _0809AD38 @ =0x08679350
	str r0, [r4, #0x1c]
	b _0809AD5A
	.align 2, 0
_0809AD34: .4byte 0x0000022F
_0809AD38: .4byte 0x08679350
_0809AD3C:
	cmp r5, #1
	bne _0809AD5A
	ldrb r0, [r4, #0x13]
	adds r0, #1
	strb r0, [r4, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bne _0809AD5A
	movs r0, #2
	strb r0, [r4, #0x14]
	movs r1, #0
	strb r1, [r4, #0x13]
	ldr r1, _0809AD60 @ =gNonGameplayRam
	strb r0, [r1, #0x10]
_0809AD5A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809AD60: .4byte gNonGameplayRam

	thumb_func_start CutsceneSecretConversationVblank
CutsceneSecretConversationVblank: @ 0x0809AD64
	push {lr}
	ldr r2, _0809AD98 @ =0x040000D4
	ldr r0, _0809AD9C @ =gOamData
	str r0, [r2]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r2, #4]
	ldr r0, _0809ADA0 @ =0x84000100
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	ldr r1, _0809ADA4 @ =0x04000054
	ldr r0, _0809ADA8 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _0809ADAC @ =gNonGameplayRam
	ldrb r0, [r1, #0x11]
	adds r0, #1
	strb r0, [r1, #0x11]
	ldrb r0, [r1, #0x11]
	cmp r0, #0xe
	beq _0809ADC4
	cmp r0, #0xe
	bgt _0809ADB0
	cmp r0, #7
	beq _0809ADBA
	b _0809ADFA
	.align 2, 0
_0809AD98: .4byte 0x040000D4
_0809AD9C: .4byte gOamData
_0809ADA0: .4byte 0x84000100
_0809ADA4: .4byte 0x04000054
_0809ADA8: .4byte gWrittenToBldy
_0809ADAC: .4byte gNonGameplayRam
_0809ADB0:
	cmp r0, #0x15
	beq _0809ADCC
	cmp r0, #0x1c
	beq _0809ADE8
	b _0809ADFA
_0809ADBA:
	ldr r0, _0809ADC0 @ =0x08677C30
	b _0809ADCE
	.align 2, 0
_0809ADC0: .4byte 0x08677C30
_0809ADC4:
	ldr r0, _0809ADC8 @ =0x08677C50
	b _0809ADCE
	.align 2, 0
_0809ADC8: .4byte 0x08677C50
_0809ADCC:
	ldr r0, _0809ADDC @ =0x08677C70
_0809ADCE:
	str r0, [r2]
	ldr r0, _0809ADE0 @ =0x050001E0
	str r0, [r2, #4]
	ldr r0, _0809ADE4 @ =0x84000008
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	b _0809ADFA
	.align 2, 0
_0809ADDC: .4byte 0x08677C70
_0809ADE0: .4byte 0x050001E0
_0809ADE4: .4byte 0x84000008
_0809ADE8:
	ldr r0, _0809AE00 @ =0x08677C10
	str r0, [r2]
	ldr r0, _0809AE04 @ =0x050001E0
	str r0, [r2, #4]
	ldr r0, _0809AE08 @ =0x84000008
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	movs r0, #0
	strb r0, [r1, #0x11]
_0809ADFA:
	pop {r0}
	bx r0
	.align 2, 0
_0809AE00: .4byte 0x08677C10
_0809AE04: .4byte 0x050001E0
_0809AE08: .4byte 0x84000008

	thumb_func_start unk_9ae0c
unk_9ae0c: @ 0x0809AE0C
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CutsceneRestrictedLabDetaching
CutsceneRestrictedLabDetaching: @ 0x0809AE18
	push {r4, r5, r6, lr}
	movs r6, #0
	ldr r4, _0809AE30 @ =gNonGameplayRam
	ldrh r0, [r4]
	cmp r0, #1
	beq _0809AE48
	cmp r0, #1
	bgt _0809AE34
	cmp r0, #0
	beq _0809AE3E
	b _0809AE96
	.align 2, 0
_0809AE30: .4byte gNonGameplayRam
_0809AE34:
	cmp r0, #2
	beq _0809AE70
	cmp r0, #3
	beq _0809AE88
	b _0809AE96
_0809AE3E:
	movs r0, #1
	strh r0, [r4]
	bl CutsceneRestrictedLabDetachingInit
	b _0809AE96
_0809AE48:
	ldr r5, _0809AE6C @ =gWrittenToBldy
	ldrh r0, [r5]
	cmp r0, #0x10
	bne _0809AE58
	movs r0, #0x92
	lsls r0, r0, #2
	bl unk_3b1c
_0809AE58:
	bl CutsceneFadeIn
	ldrh r0, [r5]
	cmp r0, #0
	bne _0809AE96
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _0809AE96
	.align 2, 0
_0809AE6C: .4byte gWrittenToBldy
_0809AE70:
	bl CutsceneRestrictedLabDetachingProcess
	cmp r0, #0
	beq _0809AE96
	movs r0, #3
	strh r0, [r4]
	ldr r1, _0809AE84 @ =0x04000050
	movs r0, #0xbf
	strh r0, [r1]
	b _0809AE96
	.align 2, 0
_0809AE84: .4byte 0x04000050
_0809AE88:
	bl CutsceneFadeOut
	ldr r0, _0809AEA0 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0x10
	bne _0809AE96
	movs r6, #1
_0809AE96:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0809AEA0: .4byte gWrittenToBldy

	thumb_func_start CutsceneRestrictedLabDetachingInit
CutsceneRestrictedLabDetachingInit: @ 0x0809AEA4
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	ldr r3, _0809AF9C @ =0x04000208
	movs r5, #0
	strh r5, [r3]
	ldr r2, _0809AFA0 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _0809AFA4 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0809AFA8 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0809AFAC @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0809AFB0 @ =unk_9c1bc
	bl CallbackSetVBlank
	bl unk_36c4
	movs r0, #0x80
	lsls r0, r0, #0x13
	mov r8, r0
	strh r5, [r0]
	ldr r0, _0809AFB4 @ =0x0867D7CC
	ldr r1, _0809AFB8 @ =0x06010000
	bl LZ77UncompVram
	ldr r4, _0809AFBC @ =0x040000D4
	ldr r0, _0809AFC0 @ =0x0868121C
	str r0, [r4]
	ldr r0, _0809AFC4 @ =0x05000200
	str r0, [r4, #4]
	ldr r6, _0809AFC8 @ =0x84000080
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809AFCC @ =0x08679420
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _0809AFD0 @ =0x086820A4
	ldr r1, _0809AFD4 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _0809AFD8 @ =0x08681A1C
	ldr r1, _0809AFDC @ =0x0600E800
	bl LZ77UncompVram
	ldr r0, _0809AFE0 @ =0x0868259C
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	str r6, [r4, #8]
	ldr r1, [r4, #8]
	strh r5, [r0]
	ldr r1, _0809AFE4 @ =0x0400000A
	movs r2, #0xe8
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #4
	subs r2, #0xfd
	adds r0, r2, #0
	strh r0, [r1]
	movs r1, #0xc0
	lsls r1, r1, #5
	adds r0, r1, #0
	mov r2, r8
	strh r0, [r2]
	ldr r1, _0809AFE8 @ =gWrittenToBldy
	movs r0, #0x10
	strh r0, [r1]
	movs r0, #1
	movs r1, #0x96
	movs r2, #0x5a
	bl CutsceneRestrictedLabDetachingSetupOam
	movs r0, #3
	movs r1, #0x96
	movs r2, #0x5a
	bl CutsceneRestrictedLabDetachingSetupOam
	movs r0, #2
	movs r1, #0x96
	movs r2, #0x5a
	bl CutsceneRestrictedLabDetachingSetupOam
	movs r0, #4
	movs r1, #0x78
	movs r2, #0
	bl CutsceneRestrictedLabDetachingSetupOam
	bl CutsceneProcessOam
	bl CutsceneDrawAllOam
	ldr r0, _0809AFEC @ =gNonGameplayRam
	movs r1, #0
	strh r1, [r0, #0xa]
	strh r1, [r0, #0xc]
	movs r1, #0xc
	ldrsh r0, [r0, r1]
	lsls r0, r0, #5
	ldr r1, _0809AFF0 @ =0x0868101C
	adds r0, r0, r1
	str r0, [r4]
	ldr r0, _0809AFF4 @ =0x05000120
	str r0, [r4, #4]
	ldr r0, _0809AFF8 @ =0x84000008
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809AFFC @ =CutsceneRestrictedLabDetachingVblank
	bl CallbackSetVBlank
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809AF9C: .4byte 0x04000208
_0809AFA0: .4byte 0x04000004
_0809AFA4: .4byte 0x0000FFEF
_0809AFA8: .4byte 0x04000200
_0809AFAC: .4byte 0x0000FFFD
_0809AFB0: .4byte unk_9c1bc
_0809AFB4: .4byte 0x0867D7CC
_0809AFB8: .4byte 0x06010000
_0809AFBC: .4byte 0x040000D4
_0809AFC0: .4byte 0x0868121C
_0809AFC4: .4byte 0x05000200
_0809AFC8: .4byte 0x84000080
_0809AFCC: .4byte 0x08679420
_0809AFD0: .4byte 0x086820A4
_0809AFD4: .4byte 0x0600E000
_0809AFD8: .4byte 0x08681A1C
_0809AFDC: .4byte 0x0600E800
_0809AFE0: .4byte 0x0868259C
_0809AFE4: .4byte 0x0400000A
_0809AFE8: .4byte gWrittenToBldy
_0809AFEC: .4byte gNonGameplayRam
_0809AFF0: .4byte 0x0868101C
_0809AFF4: .4byte 0x05000120
_0809AFF8: .4byte 0x84000008
_0809AFFC: .4byte CutsceneRestrictedLabDetachingVblank

	thumb_func_start CutsceneRestrictedLabDetachingProcess
CutsceneRestrictedLabDetachingProcess: @ 0x0809B000
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	movs r7, #0
	ldr r0, _0809B01C @ =gNonGameplayRam
	ldrb r1, [r0, #0x10]
	adds r5, r0, #0
	cmp r1, #0xa
	bls _0809B012
	b _0809B356
_0809B012:
	lsls r0, r1, #2
	ldr r1, _0809B020 @ =_0809B024
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809B01C: .4byte gNonGameplayRam
_0809B020: .4byte _0809B024
_0809B024: @ jump table
	.4byte _0809B050 @ case 0
	.4byte _0809B068 @ case 1
	.4byte _0809B178 @ case 2
	.4byte _0809B356 @ case 3
	.4byte _0809B356 @ case 4
	.4byte _0809B1B0 @ case 5
	.4byte _0809B218 @ case 6
	.4byte _0809B236 @ case 7
	.4byte _0809B268 @ case 8
	.4byte _0809B2C8 @ case 9
	.4byte _0809B308 @ case 10
_0809B050:
	ldrh r0, [r5, #8]
	adds r0, #1
	strh r0, [r5, #8]
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #1
	beq _0809B060
	b _0809B356
_0809B060:
	movs r0, #0
	strh r0, [r5, #8]
	strb r1, [r5, #0x10]
	b _0809B356
_0809B068:
	ldrh r0, [r5, #8]
	adds r0, #1
	movs r1, #0
	strh r0, [r5, #8]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0809B0C0
	mov r4, sp
	adds r4, #6
	movs r0, #2
	add r1, sp, #4
	adds r2, r4, #0
	bl CutsceneRestrictedLabDetachingGetPositionOfOamByType
	add r0, sp, #4
	ldrh r1, [r0]
	subs r1, #0x14
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4]
	subs r2, #0x14
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #2
	rsbs r3, r3, #0
	movs r0, #6
	str r0, [sp]
	movs r0, #0x11
	bl unk_9c0b4
	add r0, sp, #4
	ldrh r1, [r0]
	subs r1, #0x46
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4]
	subs r2, #0x1a
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #1
	rsbs r3, r3, #0
	movs r0, #4
	b _0809B156
_0809B0C0:
	cmp r0, #0x10
	bne _0809B10C
	mov r4, sp
	adds r4, #6
	movs r0, #2
	add r1, sp, #4
	adds r2, r4, #0
	bl CutsceneRestrictedLabDetachingGetPositionOfOamByType
	add r0, sp, #4
	ldrh r1, [r0]
	subs r1, #0x1e
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4]
	subs r2, #0x1e
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #2
	rsbs r3, r3, #0
	movs r5, #8
	str r5, [sp]
	movs r0, #0x11
	bl unk_9c0b4
	add r0, sp, #4
	ldrh r1, [r0]
	subs r1, #0x32
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4]
	subs r2, #8
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #1
	rsbs r3, r3, #0
	str r5, [sp]
	b _0809B158
_0809B10C:
	cmp r0, #0x14
	bne _0809B160
	mov r4, sp
	adds r4, #6
	movs r0, #2
	add r1, sp, #4
	adds r2, r4, #0
	bl CutsceneRestrictedLabDetachingGetPositionOfOamByType
	add r0, sp, #4
	ldrh r1, [r0]
	subs r1, #0x50
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4]
	subs r2, #0xe
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #3
	rsbs r3, r3, #0
	movs r0, #6
	str r0, [sp]
	movs r0, #0x11
	bl unk_9c0b4
	add r0, sp, #4
	ldrh r1, [r0]
	subs r1, #0xa
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r4]
	subs r2, #0x12
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #2
	rsbs r3, r3, #0
	movs r0, #2
_0809B156:
	str r0, [sp]
_0809B158:
	movs r0, #0x11
	bl unk_9c0b4
	b _0809B356
_0809B160:
	cmp r0, #0xaa
	beq _0809B166
	b _0809B356
_0809B166:
	strh r1, [r5, #8]
	movs r0, #2
	strb r0, [r5, #0x10]
	ldr r0, _0809B174 @ =gWrittenToBldy
	strh r1, [r0]
	b _0809B356
	.align 2, 0
_0809B174: .4byte gWrittenToBldy
_0809B178:
	ldr r1, _0809B1A0 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bls _0809B1B8
	movs r0, #0x10
	strh r0, [r1]
	movs r0, #0
	str r0, [sp, #8]
	ldr r1, _0809B1A4 @ =0x040000D4
	add r0, sp, #8
	str r0, [r1]
	ldr r2, _0809B1A8 @ =0x0300149C
	str r2, [r1, #4]
	ldr r0, _0809B1AC @ =0x85000090
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	subs r2, #0x18
	movs r0, #5
	strb r0, [r2, #0x10]
	b _0809B356
	.align 2, 0
_0809B1A0: .4byte gWrittenToBldy
_0809B1A4: .4byte 0x040000D4
_0809B1A8: .4byte 0x0300149C
_0809B1AC: .4byte 0x85000090
_0809B1B0:
	ldr r1, _0809B1C0 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0809B1C4
_0809B1B8:
	adds r0, #2
	strh r0, [r1]
	b _0809B356
	.align 2, 0
_0809B1C0: .4byte gWrittenToBldy
_0809B1C4:
	movs r5, #0
	str r5, [sp, #8]
	ldr r1, _0809B208 @ =0x040000D4
	add r0, sp, #8
	str r0, [r1]
	ldr r4, _0809B20C @ =0x0300149C
	str r4, [r1, #4]
	ldr r0, _0809B210 @ =0x85000090
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	subs r4, #0x18
	strh r5, [r4, #8]
	movs r0, #4
	movs r1, #0
	movs r2, #0
	bl CutsceneRestrictedLabDetachingSetupOam
	movs r0, #0x1e
	movs r1, #0xcd
	movs r2, #0xa
	bl CutsceneRestrictedLabDetachingSetupOam
	movs r0, #0xc
	movs r1, #0x8c
	movs r2, #0x50
	bl CutsceneRestrictedLabDetachingSetupOam
	ldr r0, _0809B214 @ =0x04000018
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	movs r0, #6
	strb r0, [r4, #0x10]
	b _0809B356
	.align 2, 0
_0809B208: .4byte 0x040000D4
_0809B20C: .4byte 0x0300149C
_0809B210: .4byte 0x85000090
_0809B214: .4byte 0x04000018
_0809B218:
	ldr r2, _0809B228 @ =gWrittenToBldy
	ldrh r0, [r2]
	adds r1, r0, #0
	cmp r1, #0
	beq _0809B22C
	subs r0, #2
	strh r0, [r2]
	b _0809B356
	.align 2, 0
_0809B228: .4byte gWrittenToBldy
_0809B22C:
	strh r1, [r2]
	strh r1, [r5, #8]
	movs r0, #7
	strb r0, [r5, #0x10]
	b _0809B356
_0809B236:
	ldrh r0, [r5, #8]
	adds r0, #1
	strh r0, [r5, #8]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x95
	bne _0809B258
	ldr r0, _0809B250 @ =0x03001220
	movs r1, #0xa
	strh r1, [r0]
	ldr r0, _0809B254 @ =0x03001222
	strh r1, [r0]
	b _0809B356
	.align 2, 0
_0809B250: .4byte 0x03001220
_0809B254: .4byte 0x03001222
_0809B258:
	cmp r0, #0x96
	beq _0809B25E
	b _0809B356
_0809B25E:
	movs r0, #0
	strh r0, [r5, #8]
	movs r0, #8
	strb r0, [r5, #0x10]
	b _0809B356
_0809B268:
	ldrh r0, [r5, #8]
	adds r0, #1
	movs r6, #0
	strh r0, [r5, #8]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0809B356
	ldr r1, _0809B2C0 @ =0x04000050
	ldr r2, _0809B2C4 @ =0x00001C42
	adds r0, r2, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #2
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	mov r4, sp
	adds r4, #6
	movs r0, #0xc
	add r1, sp, #4
	adds r2, r4, #0
	bl CutsceneRestrictedLabDetachingGetPositionOfOamByType
	movs r0, #0xc
	bl CutsceneDestroyOamOfType
	add r0, sp, #4
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r3, #0
	ldrsh r2, [r4, r3]
	str r6, [sp]
	movs r0, #0x10
	movs r3, #0
	bl unk_9c0b4
	strh r6, [r5, #8]
	movs r0, #9
	strb r0, [r5, #0x10]
	b _0809B356
	.align 2, 0
_0809B2C0: .4byte 0x04000050
_0809B2C4: .4byte 0x00001C42
_0809B2C8:
	ldrh r0, [r5, #8]
	adds r1, r0, #1
	movs r3, #0
	strh r1, [r5, #8]
	ldrh r2, [r5, #0xc]
	movs r4, #0xc
	ldrsh r0, [r5, r4]
	cmp r0, #0xe
	bgt _0809B2EE
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bne _0809B356
	strh r3, [r5, #8]
	movs r0, #1
	strh r0, [r5, #0xa]
	adds r0, r2, #1
	strh r0, [r5, #0xc]
	b _0809B356
_0809B2EE:
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xf
	bne _0809B356
	strh r3, [r5, #8]
	ldr r0, _0809B304 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	movs r0, #0xa
	strb r0, [r5, #0x10]
	b _0809B356
	.align 2, 0
_0809B304: .4byte gWrittenToBldy
_0809B308:
	adds r3, r5, #0
	ldrh r0, [r3, #8]
	adds r2, r0, #1
	movs r4, #0
	strh r2, [r3, #8]
	ldr r6, _0809B32C @ =0x03001220
	ldrh r1, [r6]
	cmp r1, #0xf
	bhi _0809B330
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #6
	bne _0809B356
	strh r4, [r3, #8]
	adds r0, r1, #1
	strh r0, [r6]
	b _0809B356
	.align 2, 0
_0809B32C: .4byte 0x03001220
_0809B330:
	ldr r1, _0809B368 @ =0x04000050
	movs r0, #0xbf
	strh r0, [r1]
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x10
	bne _0809B356
	strh r4, [r5, #8]
	str r4, [sp, #8]
	adds r1, #0x84
	add r0, sp, #8
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0x18
	str r0, [r1, #4]
	ldr r0, _0809B36C @ =0x85000090
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r7, #1
_0809B356:
	bl CutsceneProcessOam
	bl CutsceneDrawAllOam
	adds r0, r7, #0
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809B368: .4byte 0x04000050
_0809B36C: .4byte 0x85000090

	thumb_func_start CutsceneRestrictedLabDetachingProcessFallingLab
CutsceneRestrictedLabDetachingProcessFallingLab: @ 0x0809B370
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _0809B388
	ldrh r0, [r2]
	strh r0, [r2, #6]
	ldrh r0, [r2, #2]
	strh r0, [r2, #8]
	movs r0, #1
	strb r0, [r2, #0x14]
	b _0809B3A4
_0809B388:
	cmp r0, #1
	bne _0809B3A4
	ldrh r0, [r2, #0xe]
	adds r0, #1
	strh r0, [r2, #0xe]
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x11
	ldrh r3, [r2, #6]
	adds r1, r1, r3
	strh r1, [r2]
	lsrs r0, r0, #0x12
	ldrh r1, [r2, #8]
	subs r1, r1, r0
	strh r1, [r2, #2]
_0809B3A4:
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xa
	bne _0809B3E8
	movs r0, #0
	strb r0, [r2, #0x13]
	ldrh r1, [r2, #0xe]
	cmp r1, #0xdb
	bhi _0809B3C2
	ldrh r0, [r2, #4]
	adds r0, #2
	b _0809B3D8
_0809B3C2:
	ldr r0, _0809B3D0 @ =0x000001B7
	cmp r1, r0
	bhi _0809B3D4
	ldrh r0, [r2, #4]
	adds r0, #4
	b _0809B3D8
	.align 2, 0
_0809B3D0: .4byte 0x000001B7
_0809B3D4:
	ldrh r0, [r2, #4]
	adds r0, #6
_0809B3D8:
	strh r0, [r2, #4]
	movs r0, #4
	ldrsh r1, [r2, r0]
	ldr r0, _0809B438 @ =0x000001FF
	cmp r1, r0
	ble _0809B3E8
	adds r0, #1
	strh r0, [r2, #4]
_0809B3E8:
	ldrh r0, [r2, #0xa]
	adds r0, #1
	movs r1, #0
	strh r0, [r2, #0xa]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #6
	bne _0809B40A
	strh r1, [r2, #0xa]
	ldrh r0, [r2, #0xc]
	adds r0, #1
	strh r0, [r2, #0xc]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	ble _0809B40A
	strh r1, [r2, #0xc]
_0809B40A:
	ldrh r0, [r2]
	adds r0, #0x10
	lsls r0, r0, #0x10
	movs r1, #0x99
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0809B428
	movs r3, #2
	ldrsh r1, [r2, r3]
	movs r0, #0x32
	rsbs r0, r0, #0
	cmp r1, r0
	blt _0809B428
	cmp r1, #0xb0
	ble _0809B434
_0809B428:
	movs r0, #0
	strb r0, [r2, #0x10]
	ldrb r1, [r2, #0x16]
	subs r0, #2
	ands r0, r1
	strb r0, [r2, #0x16]
_0809B434:
	pop {r0}
	bx r0
	.align 2, 0
_0809B438: .4byte 0x000001FF

	thumb_func_start CutsceneRestrictedLabDetachingSetupOam
CutsceneRestrictedLabDetachingSetupOam: @ 0x0809B43C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	movs r0, #0
	mov r8, r0
	ldr r1, _0809B490 @ =gNonGameplayRam
	adds r0, r1, #0
	adds r0, #0x28
	ldrb r0, [r0]
	adds r7, r1, #0
	cmp r0, #0
	beq _0809B484
_0809B466:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #0xf
	bhi _0809B48A
	lsls r0, r0, #3
	add r0, r8
	lsls r0, r0, #2
	adds r0, r0, r1
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #0
	bne _0809B466
_0809B484:
	mov r2, r8
	cmp r2, #0xf
	bls _0809B494
_0809B48A:
	movs r0, #0x10
	b _0809B896
	.align 2, 0
_0809B490: .4byte gNonGameplayRam
_0809B494:
	movs r0, #0
	str r0, [sp]
	ldr r1, _0809B500 @ =0x040000D4
	mov r3, sp
	str r3, [r1]
	mov r0, r8
	lsls r2, r0, #3
	adds r0, r2, r0
	lsls r5, r0, #2
	ldr r3, _0809B504 @ =0x0300149C
	mov ip, r3
	adds r0, r5, r3
	str r0, [r1, #4]
	ldr r0, _0809B508 @ =0x85000009
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	mov r0, ip
	subs r0, #0x18
	adds r3, r5, r0
	mov r0, sb
	strh r0, [r3, #0x18]
	strh r6, [r3, #0x1a]
	adds r0, r3, #0
	adds r0, #0x28
	strb r4, [r0]
	adds r6, r3, #0
	adds r6, #0x2e
	ldrb r1, [r6]
	movs r0, #1
	orrs r1, r0
	strb r1, [r6]
	cmp r4, #1
	bne _0809B510
	adds r2, r3, #0
	adds r2, #0x30
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r3, #0x1c]
	ldrb r0, [r6]
	movs r1, #6
	orrs r0, r1
	strb r0, [r6]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0809B50C @ =0x08680D54
	b _0809B570
	.align 2, 0
_0809B500: .4byte 0x040000D4
_0809B504: .4byte 0x0300149C
_0809B508: .4byte 0x85000009
_0809B50C: .4byte 0x08680D54
_0809B510:
	cmp r4, #2
	bne _0809B544
	adds r2, r3, #0
	adds r2, #0x30
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r3, #0x1c]
	ldrb r0, [r6]
	movs r1, #6
	orrs r0, r1
	strb r0, [r6]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0809B540 @ =0x08680D64
	b _0809B570
	.align 2, 0
_0809B540: .4byte 0x08680D64
_0809B544:
	cmp r4, #3
	bne _0809B588
	adds r2, r3, #0
	adds r2, #0x30
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r3, #0x1c]
	ldrb r0, [r6]
	movs r1, #6
	orrs r0, r1
	strb r0, [r6]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0809B580 @ =0x08680D74
_0809B570:
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0809B584 @ =CutsceneRestrictedLabDetachingProcessBslPart
	str r1, [r0]
	b _0809B894
	.align 2, 0
_0809B580: .4byte 0x08680D74
_0809B584: .4byte CutsceneRestrictedLabDetachingProcessBslPart
_0809B588:
	cmp r4, #4
	bne _0809B5A4
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r6]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0809B5A0 @ =CutsceneRestrictedLabDetachingProcessScrolling
	str r1, [r0]
	b _0809B894
	.align 2, 0
_0809B5A0: .4byte CutsceneRestrictedLabDetachingProcessScrolling
_0809B5A4:
	cmp r4, #5
	bne _0809B5B8
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0809B5B4 @ =0x08680E2C
	b _0809B5D6
	.align 2, 0
_0809B5B4: .4byte 0x08680E2C
_0809B5B8:
	cmp r4, #6
	bne _0809B5EC
	adds r2, r3, #0
	adds r2, #0x30
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0809B5E4 @ =0x08680E3C
_0809B5D6:
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0809B5E8 @ =unk_9ba50
	str r1, [r0]
	b _0809B894
	.align 2, 0
_0809B5E4: .4byte 0x08680E3C
_0809B5E8: .4byte unk_9ba50
_0809B5EC:
	cmp r4, #7
	bne _0809B620
	adds r2, r3, #0
	adds r2, #0x30
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0809B618 @ =0x08680DA4
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0809B61C @ =unk_9bac0
	str r1, [r0]
	b _0809B894
	.align 2, 0
_0809B618: .4byte 0x08680DA4
_0809B61C: .4byte unk_9bac0
_0809B620:
	cmp r4, #8
	bne _0809B654
	adds r2, r3, #0
	adds r2, #0x30
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0809B64C @ =0x08680D94
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0809B650 @ =unk_9bb30
	str r1, [r0]
	b _0809B894
	.align 2, 0
_0809B64C: .4byte 0x08680D94
_0809B650: .4byte unk_9bb30
_0809B654:
	cmp r4, #9
	bne _0809B69C
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r3, #0x1c]
	adds r2, r3, #0
	adds r2, #0x30
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
	ldrb r1, [r6]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r6]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r5, r0
	ldr r1, _0809B694 @ =0x08680D84
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0809B698 @ =unk_9bc04
	str r1, [r0]
	b _0809B894
	.align 2, 0
_0809B694: .4byte 0x08680D84
_0809B698: .4byte unk_9bc04
_0809B69C:
	cmp r4, #0xa
	bne _0809B6B8
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r6]
	mov r0, ip
	adds r0, #0x20
	adds r0, r5, r0
	ldr r1, _0809B6B4 @ =unk_9bcdc
	str r1, [r0]
	b _0809B894
	.align 2, 0
_0809B6B4: .4byte unk_9bcdc
_0809B6B8:
	cmp r4, #0xb
	bne _0809B6DC
	add r2, r8
	lsls r2, r2, #2
	adds r0, r7, #0
	adds r0, #0x34
	adds r0, r2, r0
	ldr r1, _0809B6D4 @ =0x08680DCC
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0x38
	adds r2, r2, r0
	ldr r0, _0809B6D8 @ =unk_9bac0
	b _0809B892
	.align 2, 0
_0809B6D4: .4byte 0x08680DCC
_0809B6D8: .4byte unk_9bac0
_0809B6DC:
	cmp r4, #0xc
	bne _0809B72C
	add r2, r8
	lsls r2, r2, #2
	adds r3, r2, r7
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r3, #0x1c]
	adds r4, r3, #0
	adds r4, #0x30
	ldrb r1, [r4]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r4]
	adds r3, #0x2e
	ldrb r1, [r3]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r3]
	adds r0, r7, #0
	adds r0, #0x34
	adds r0, r2, r0
	ldr r1, _0809B724 @ =0x08680FEC
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0x38
	adds r2, r2, r0
	ldr r0, _0809B728 @ =unk_9bd24
	b _0809B892
	.align 2, 0
_0809B724: .4byte 0x08680FEC
_0809B728: .4byte unk_9bd24
_0809B72C:
	cmp r4, #0xd
	bne _0809B77C
	add r2, r8
	lsls r2, r2, #2
	adds r3, r2, r7
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r3, #0x1c]
	adds r4, r3, #0
	adds r4, #0x30
	ldrb r1, [r4]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r4]
	adds r3, #0x2e
	ldrb r1, [r3]
	movs r0, #7
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r3]
	adds r0, r7, #0
	adds r0, #0x34
	adds r0, r2, r0
	ldr r1, _0809B774 @ =0x08680FC4
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0x38
	adds r2, r2, r0
	ldr r0, _0809B778 @ =unk_9bdf8
	b _0809B892
	.align 2, 0
_0809B774: .4byte 0x08680FC4
_0809B778: .4byte unk_9bdf8
_0809B77C:
	cmp r4, #0xe
	bne _0809B7A0
	add r2, r8
	lsls r2, r2, #2
	adds r1, r2, r7
	adds r1, #0x2e
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x38
	adds r2, r2, r0
	ldr r0, _0809B79C @ =unk_9be8c
	b _0809B892
	.align 2, 0
_0809B79C: .4byte unk_9be8c
_0809B7A0:
	cmp r4, #0xf
	bne _0809B7C4
	add r2, r8
	lsls r2, r2, #2
	adds r1, r2, r7
	adds r1, #0x2e
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x38
	adds r2, r2, r0
	ldr r0, _0809B7C0 @ =unk_9bf54
	b _0809B892
	.align 2, 0
_0809B7C0: .4byte unk_9bf54
_0809B7C4:
	cmp r4, #0x10
	bne _0809B80C
	add r2, r8
	lsls r2, r2, #2
	adds r3, r2, r7
	adds r4, r3, #0
	adds r4, #0x2e
	ldrb r1, [r4]
	movs r0, #0x19
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r4]
	adds r3, #0x30
	ldrb r1, [r3]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r3]
	adds r0, r7, #0
	adds r0, #0x34
	adds r0, r2, r0
	ldr r1, _0809B804 @ =0x08680F9C
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0x38
	adds r2, r2, r0
	ldr r0, _0809B808 @ =unk_9bfb8
	b _0809B892
	.align 2, 0
_0809B804: .4byte 0x08680F9C
_0809B808: .4byte unk_9bfb8
_0809B80C:
	cmp r4, #0x11
	bne _0809B830
	add r2, r8
	lsls r2, r2, #2
	adds r0, r7, #0
	adds r0, #0x34
	adds r0, r2, r0
	ldr r1, _0809B828 @ =0x08680F74
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0x38
	adds r2, r2, r0
	ldr r0, _0809B82C @ =unk_9bfb8
	b _0809B892
	.align 2, 0
_0809B828: .4byte 0x08680F74
_0809B82C: .4byte unk_9bfb8
_0809B830:
	cmp r4, #0x12
	bne _0809B854
	add r2, r8
	lsls r2, r2, #2
	adds r1, r2, r7
	adds r1, #0x2e
	ldrb r3, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r3
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x38
	adds r2, r2, r0
	ldr r0, _0809B850 @ =unk_9c04c
	b _0809B892
	.align 2, 0
_0809B850: .4byte unk_9c04c
_0809B854:
	cmp r4, #0x1e
	bne _0809B894
	add r2, r8
	lsls r2, r2, #2
	adds r3, r2, r7
	movs r0, #0xd0
	lsls r0, r0, #1
	strh r0, [r3, #0x1c]
	adds r4, r3, #0
	adds r4, #0x30
	ldrb r1, [r4]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strb r0, [r4]
	adds r3, #0x2e
	ldrb r0, [r3]
	movs r1, #6
	orrs r0, r1
	strb r0, [r3]
	adds r0, r7, #0
	adds r0, #0x34
	adds r0, r2, r0
	ldr r1, _0809B8A4 @ =0x08680F2C
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0x38
	adds r2, r2, r0
	ldr r0, _0809B8A8 @ =CutsceneRestrictedLabDetachingProcessFallingLab
_0809B892:
	str r0, [r2]
_0809B894:
	mov r0, r8
_0809B896:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809B8A4: .4byte 0x08680F2C
_0809B8A8: .4byte CutsceneRestrictedLabDetachingProcessFallingLab

	thumb_func_start CutsceneRestrictedLabDetachingProcessBslPart
CutsceneRestrictedLabDetachingProcessBslPart: @ 0x0809B8AC
	push {r4, lr}
	adds r2, r0, #0
	ldrb r3, [r2, #0x14]
	cmp r3, #0
	bne _0809B98C
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #9
	bne _0809B8CC
	strb r3, [r2, #0x13]
	ldrh r0, [r2]
	subs r0, #1
	strh r0, [r2]
_0809B8CC:
	ldrh r0, [r2, #0xe]
	adds r0, #1
	strh r0, [r2, #0xe]
	movs r4, #6
	ldrsh r1, [r2, r4]
	cmp r1, #1
	beq _0809B90C
	cmp r1, #1
	bgt _0809B8E4
	cmp r1, #0
	beq _0809B8EA
	b _0809B954
_0809B8E4:
	cmp r1, #2
	beq _0809B930
	b _0809B954
_0809B8EA:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bne _0809B964
	strh r3, [r2, #0xe]
	ldrh r0, [r2, #4]
	adds r0, #2
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	ldr r1, _0809B908 @ =0x017F0000
	cmp r0, r1
	ble _0809B964
	movs r0, #1
	strh r0, [r2, #6]
	b _0809B964
	.align 2, 0
_0809B908: .4byte 0x017F0000
_0809B90C:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bne _0809B964
	strh r3, [r2, #0xe]
	ldrh r0, [r2, #4]
	adds r0, #2
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	ldr r1, _0809B92C @ =0x019F0000
	cmp r0, r1
	ble _0809B964
	movs r0, #2
	strh r0, [r2, #6]
	b _0809B964
	.align 2, 0
_0809B92C: .4byte 0x019F0000
_0809B930:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #6
	bne _0809B964
	strh r3, [r2, #0xe]
	ldrh r0, [r2, #4]
	adds r0, #2
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	ldr r1, _0809B950 @ =0x01BF0000
	cmp r0, r1
	ble _0809B964
	movs r0, #3
	strh r0, [r2, #6]
	b _0809B964
	.align 2, 0
_0809B950: .4byte 0x01BF0000
_0809B954:
	ldrh r0, [r2, #0xe]
	cmp r0, #7
	bne _0809B964
	movs r0, #0
	strh r0, [r2, #0xe]
	ldrh r0, [r2, #4]
	adds r0, #2
	strh r0, [r2, #4]
_0809B964:
	movs r1, #4
	ldrsh r0, [r2, r1]
	movs r1, #0x80
	lsls r1, r1, #2
	cmp r0, r1
	ble _0809B972
	strh r1, [r2, #4]
_0809B972:
	ldr r0, _0809B988 @ =gNonGameplayRam
	ldrb r1, [r0, #0x10]
	cmp r1, #1
	bne _0809BA1C
	movs r0, #0
	strb r1, [r2, #0x14]
	strb r0, [r2, #0x13]
	strh r0, [r2, #6]
	strh r0, [r2, #0xe]
	b _0809BA1C
	.align 2, 0
_0809B988: .4byte gNonGameplayRam
_0809B98C:
	cmp r3, #1
	bne _0809B9C0
	ldrb r0, [r2, #0x13]
	adds r0, #1
	movs r1, #0
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #9
	bne _0809B9A8
	strb r1, [r2, #0x13]
	ldrh r0, [r2]
	subs r0, #1
	strh r0, [r2]
_0809B9A8:
	ldrb r0, [r2, #0x10]
	cmp r0, #3
	bne _0809B9B6
	ldrh r0, [r2, #2]
	adds r0, #6
	strh r0, [r2, #2]
	strh r0, [r2, #8]
_0809B9B6:
	strh r1, [r2, #0xe]
	strh r1, [r2, #0xa]
	movs r0, #2
	strb r0, [r2, #0x14]
	b _0809BA1C
_0809B9C0:
	cmp r3, #2
	bne _0809BA1C
	ldrb r0, [r2, #0x13]
	adds r0, #1
	movs r1, #0
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #9
	bne _0809B9DC
	strb r1, [r2, #0x13]
	ldrh r0, [r2]
	subs r0, #1
	strh r0, [r2]
_0809B9DC:
	ldrh r0, [r2, #0xa]
	adds r0, #1
	strh r0, [r2, #0xa]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	bne _0809BA00
	strh r1, [r2, #0xa]
	ldrh r0, [r2, #4]
	adds r0, #2
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #2
	cmp r0, r1
	ble _0809BA00
	strh r1, [r2, #4]
_0809BA00:
	ldrh r0, [r2, #0xe]
	adds r0, #1
	strh r0, [r2, #0xe]
	ldrb r0, [r2, #0x10]
	cmp r0, #3
	bne _0809BA1C
	ldrh r0, [r2, #0xe]
	adds r4, r0, #0
	muls r4, r0, r4
	adds r0, r4, #0
	asrs r0, r0, #0xa
	ldrh r1, [r2, #8]
	adds r0, r0, r1
	strh r0, [r2, #2]
_0809BA1C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CutsceneRestrictedLabDetachingProcessScrolling
CutsceneRestrictedLabDetachingProcessScrolling: @ 0x0809BA24
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	bne _0809BA40
	movs r0, #0
	strb r0, [r2, #0x13]
	ldrh r0, [r2]
	subs r0, #1
	strh r0, [r2]
_0809BA40:
	ldr r1, _0809BA4C @ =0x0400001C
	ldrh r0, [r2]
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0809BA4C: .4byte 0x0400001C

	thumb_func_start unk_9ba50
unk_9ba50: @ 0x0809BA50
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _0809BA68
	ldrh r0, [r2]
	strh r0, [r2, #6]
	ldrh r0, [r2, #2]
	strh r0, [r2, #8]
	movs r0, #1
	strb r0, [r2, #0x14]
	b _0809BA92
_0809BA68:
	cmp r0, #1
	bne _0809BA92
	ldrh r0, [r2, #0xe]
	adds r0, #1
	strh r0, [r2, #0xe]
	movs r0, #0xc
	ldrsh r1, [r2, r0]
	ldrh r0, [r2, #0xe]
	muls r0, r1, r0
	asrs r0, r0, #6
	ldrh r1, [r2, #6]
	adds r0, r0, r1
	strh r0, [r2]
	movs r0, #0xa
	ldrsh r1, [r2, r0]
	ldrh r0, [r2, #0xe]
	muls r0, r1, r0
	asrs r0, r0, #6
	ldrh r1, [r2, #8]
	adds r0, r0, r1
	strh r0, [r2, #2]
_0809BA92:
	ldrh r0, [r2]
	adds r0, #0x10
	lsls r0, r0, #0x10
	movs r1, #0x88
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0809BAB0
	movs r0, #2
	ldrsh r1, [r2, r0]
	movs r0, #0x10
	rsbs r0, r0, #0
	cmp r1, r0
	blt _0809BAB0
	cmp r1, #0xb0
	ble _0809BABC
_0809BAB0:
	movs r0, #0
	strb r0, [r2, #0x10]
	ldrb r1, [r2, #0x16]
	subs r0, #2
	ands r0, r1
	strb r0, [r2, #0x16]
_0809BABC:
	pop {r0}
	bx r0

	thumb_func_start unk_9bac0
unk_9bac0: @ 0x0809BAC0
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _0809BAD8
	ldrh r0, [r2]
	strh r0, [r2, #6]
	ldrh r0, [r2, #2]
	strh r0, [r2, #8]
	movs r0, #1
	strb r0, [r2, #0x14]
	b _0809BB02
_0809BAD8:
	cmp r0, #1
	bne _0809BB02
	ldrh r0, [r2, #0xe]
	adds r0, #1
	strh r0, [r2, #0xe]
	movs r0, #0xc
	ldrsh r1, [r2, r0]
	ldrh r0, [r2, #0xe]
	muls r0, r1, r0
	asrs r0, r0, #6
	ldrh r1, [r2, #6]
	adds r0, r0, r1
	strh r0, [r2]
	movs r0, #0xa
	ldrsh r1, [r2, r0]
	ldrh r0, [r2, #0xe]
	muls r0, r1, r0
	asrs r0, r0, #6
	ldrh r1, [r2, #8]
	adds r0, r0, r1
	strh r0, [r2, #2]
_0809BB02:
	ldrh r0, [r2]
	adds r0, #0x10
	lsls r0, r0, #0x10
	movs r1, #0x88
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0809BB20
	movs r0, #2
	ldrsh r1, [r2, r0]
	movs r0, #0x10
	rsbs r0, r0, #0
	cmp r1, r0
	blt _0809BB20
	cmp r1, #0xb0
	ble _0809BB2C
_0809BB20:
	movs r0, #0
	strb r0, [r2, #0x10]
	ldrb r1, [r2, #0x16]
	subs r0, #2
	ands r0, r1
	strb r0, [r2, #0x16]
_0809BB2C:
	pop {r0}
	bx r0

	thumb_func_start unk_9bb30
unk_9bb30: @ 0x0809BB30
	push {lr}
	adds r3, r0, #0
	ldrb r0, [r3, #0x14]
	cmp r0, #0
	bne _0809BB48
	ldrh r0, [r3]
	strh r0, [r3, #6]
	ldrh r0, [r3, #2]
	strh r0, [r3, #8]
	movs r0, #1
	strb r0, [r3, #0x14]
	b _0809BB6A
_0809BB48:
	cmp r0, #1
	bne _0809BB6A
	ldrh r0, [r3, #0xe]
	adds r0, #1
	strh r0, [r3, #0xe]
	ldrh r0, [r3, #0xe]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsrs r1, r1, #4
	ldrh r0, [r3, #6]
	subs r0, r0, r1
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	lsrs r0, r0, #3
	ldrh r1, [r3, #8]
	adds r0, r0, r1
	strh r0, [r3, #2]
_0809BB6A:
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xc
	bne _0809BB8C
	movs r0, #0
	strb r0, [r3, #0x13]
	ldrh r0, [r3, #4]
	subs r0, #2
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _0809BB8C
	movs r0, #2
	strh r0, [r3, #4]
_0809BB8C:
	ldrh r0, [r3, #0xa]
	adds r0, #1
	movs r1, #0
	strh r0, [r3, #0xa]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x10
	bne _0809BBC6
	strh r1, [r3, #0xa]
	ldrh r0, [r3, #0xc]
	adds r0, #1
	strh r0, [r3, #0xc]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #3
	ble _0809BBAE
	strh r1, [r3, #0xc]
_0809BBAE:
	ldr r2, _0809BBF4 @ =0x040000D4
	movs r1, #0xc
	ldrsh r0, [r3, r1]
	lsls r0, r0, #5
	ldr r1, _0809BBF8 @ =0x0868161C
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, _0809BBFC @ =0x05000220
	str r0, [r2, #4]
	ldr r0, _0809BC00 @ =0x84000008
	str r0, [r2, #8]
	ldr r0, [r2, #8]
_0809BBC6:
	ldrh r0, [r3]
	adds r0, #0x10
	lsls r0, r0, #0x10
	movs r1, #0x88
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0809BBE4
	movs r0, #2
	ldrsh r1, [r3, r0]
	movs r0, #0x10
	rsbs r0, r0, #0
	cmp r1, r0
	blt _0809BBE4
	cmp r1, #0xb0
	ble _0809BBF0
_0809BBE4:
	movs r0, #0
	strb r0, [r3, #0x10]
	ldrb r1, [r3, #0x16]
	subs r0, #2
	ands r0, r1
	strb r0, [r3, #0x16]
_0809BBF0:
	pop {r0}
	bx r0
	.align 2, 0
_0809BBF4: .4byte 0x040000D4
_0809BBF8: .4byte 0x0868161C
_0809BBFC: .4byte 0x05000220
_0809BC00: .4byte 0x84000008

	thumb_func_start unk_9bc04
unk_9bc04: @ 0x0809BC04
	push {lr}
	adds r3, r0, #0
	ldrb r0, [r3, #0x14]
	cmp r0, #0
	bne _0809BC1C
	ldrh r0, [r3]
	strh r0, [r3, #6]
	ldrh r0, [r3, #2]
	strh r0, [r3, #8]
	movs r0, #1
	strb r0, [r3, #0x14]
	b _0809BC42
_0809BC1C:
	cmp r0, #1
	bne _0809BC42
	ldrh r0, [r3, #0xe]
	adds r0, #1
	strh r0, [r3, #0xe]
	ldrh r1, [r3, #0xe]
	movs r0, #0xb
	muls r0, r1, r0
	lsrs r0, r0, #6
	ldrh r1, [r3, #6]
	adds r0, r0, r1
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	lsls r1, r0, #3
	adds r1, r1, r0
	asrs r1, r1, #6
	ldrh r0, [r3, #8]
	subs r0, r0, r1
	strh r0, [r3, #2]
_0809BC42:
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xc
	bne _0809BC64
	movs r0, #0
	strb r0, [r3, #0x13]
	ldrh r0, [r3, #4]
	subs r0, #2
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _0809BC64
	movs r0, #2
	strh r0, [r3, #4]
_0809BC64:
	ldrh r0, [r3, #0xa]
	adds r0, #1
	movs r1, #0
	strh r0, [r3, #0xa]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #6
	bne _0809BC9E
	strh r1, [r3, #0xa]
	ldrh r0, [r3, #0xc]
	adds r0, #1
	strh r0, [r3, #0xc]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #3
	ble _0809BC86
	strh r1, [r3, #0xc]
_0809BC86:
	ldr r2, _0809BCCC @ =0x040000D4
	movs r1, #0xc
	ldrsh r0, [r3, r1]
	lsls r0, r0, #5
	ldr r1, _0809BCD0 @ =0x0868141C
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, _0809BCD4 @ =0x05000200
	str r0, [r2, #4]
	ldr r0, _0809BCD8 @ =0x84000008
	str r0, [r2, #8]
	ldr r0, [r2, #8]
_0809BC9E:
	ldrh r0, [r3]
	adds r0, #0x10
	lsls r0, r0, #0x10
	movs r1, #0x88
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0809BCBC
	movs r0, #2
	ldrsh r1, [r3, r0]
	movs r0, #0x10
	rsbs r0, r0, #0
	cmp r1, r0
	blt _0809BCBC
	cmp r1, #0xb0
	ble _0809BCC8
_0809BCBC:
	movs r0, #0
	strb r0, [r3, #0x10]
	ldrb r1, [r3, #0x16]
	subs r0, #2
	ands r0, r1
	strb r0, [r3, #0x16]
_0809BCC8:
	pop {r0}
	bx r0
	.align 2, 0
_0809BCCC: .4byte 0x040000D4
_0809BCD0: .4byte 0x0868141C
_0809BCD4: .4byte 0x05000200
_0809BCD8: .4byte 0x84000008

	thumb_func_start unk_9bcdc
unk_9bcdc: @ 0x0809BCDC
	push {lr}
	adds r3, r0, #0
	ldrb r0, [r3, #0x14]
	cmp r0, #0
	bne _0809BD00
	ldr r1, _0809BCFC @ =0x04000018
	ldrh r0, [r3]
	strh r0, [r1]
	ldrh r0, [r3]
	strh r0, [r3, #6]
	ldrh r0, [r3, #2]
	strh r0, [r3, #8]
	movs r0, #1
	strb r0, [r3, #0x14]
	b _0809BD1C
	.align 2, 0
_0809BCFC: .4byte 0x04000018
_0809BD00:
	cmp r0, #1
	bne _0809BD1C
	ldrh r0, [r3, #0xe]
	adds r0, #1
	strh r0, [r3, #0xe]
	ldr r2, _0809BD20 @ =0x04000018
	movs r0, #0xc
	ldrsh r1, [r3, r0]
	ldrh r0, [r3, #0xe]
	muls r0, r1, r0
	asrs r0, r0, #7
	ldrh r3, [r3]
	adds r0, r0, r3
	strh r0, [r2]
_0809BD1C:
	pop {r0}
	bx r0
	.align 2, 0
_0809BD20: .4byte 0x04000018

	thumb_func_start unk_9bd24
unk_9bd24: @ 0x0809BD24
	push {lr}
	adds r3, r0, #0
	ldrb r0, [r3, #0x14]
	cmp r0, #0
	bne _0809BD3C
	ldrh r0, [r3]
	strh r0, [r3, #6]
	ldrh r0, [r3, #2]
	strh r0, [r3, #8]
	movs r0, #1
	strb r0, [r3, #0x14]
	b _0809BD5A
_0809BD3C:
	cmp r0, #1
	bne _0809BD5A
	ldrh r0, [r3, #0xe]
	adds r0, #1
	strh r0, [r3, #0xe]
	ldrh r1, [r3, #0xe]
	lsrs r1, r1, #3
	ldrh r0, [r3, #6]
	subs r0, r0, r1
	strh r0, [r3]
	ldrh r0, [r3, #0xe]
	lsrs r0, r0, #4
	ldrh r1, [r3, #8]
	adds r0, r0, r1
	strh r0, [r3, #2]
_0809BD5A:
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0809BD7E
	movs r0, #0
	strb r0, [r3, #0x13]
	ldrh r0, [r3, #4]
	subs r0, #4
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	bgt _0809BD7E
	movs r0, #2
	strh r0, [r3, #4]
_0809BD7E:
	ldrh r0, [r3, #0xa]
	adds r0, #1
	movs r1, #0
	strh r0, [r3, #0xa]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	bne _0809BDB8
	strh r1, [r3, #0xa]
	ldrh r0, [r3, #0xc]
	adds r0, #1
	strh r0, [r3, #0xc]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #3
	ble _0809BDA0
	strh r1, [r3, #0xc]
_0809BDA0:
	ldr r2, _0809BDE8 @ =0x040000D4
	movs r1, #0xc
	ldrsh r0, [r3, r1]
	lsls r0, r0, #5
	ldr r1, _0809BDEC @ =0x0868181C
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, _0809BDF0 @ =0x05000260
	str r0, [r2, #4]
	ldr r0, _0809BDF4 @ =0x84000008
	str r0, [r2, #8]
	ldr r0, [r2, #8]
_0809BDB8:
	ldrh r0, [r3]
	adds r0, #0x10
	lsls r0, r0, #0x10
	movs r1, #0x88
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0809BDD6
	movs r0, #2
	ldrsh r1, [r3, r0]
	movs r0, #0x10
	rsbs r0, r0, #0
	cmp r1, r0
	blt _0809BDD6
	cmp r1, #0xb0
	ble _0809BDE2
_0809BDD6:
	movs r0, #0
	strb r0, [r3, #0x10]
	ldrb r1, [r3, #0x16]
	subs r0, #2
	ands r0, r1
	strb r0, [r3, #0x16]
_0809BDE2:
	pop {r0}
	bx r0
	.align 2, 0
_0809BDE8: .4byte 0x040000D4
_0809BDEC: .4byte 0x0868181C
_0809BDF0: .4byte 0x05000260
_0809BDF4: .4byte 0x84000008

	thumb_func_start unk_9bdf8
unk_9bdf8: @ 0x0809BDF8
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _0809BE10
	ldrh r0, [r2]
	strh r0, [r2, #6]
	ldrh r0, [r2, #2]
	strh r0, [r2, #8]
	movs r0, #1
	strb r0, [r2, #0x14]
	b _0809BE3A
_0809BE10:
	cmp r0, #1
	bne _0809BE3A
	ldrh r0, [r2, #0xe]
	adds r0, #1
	strh r0, [r2, #0xe]
	movs r0, #0xc
	ldrsh r1, [r2, r0]
	ldrh r0, [r2, #0xe]
	muls r0, r1, r0
	asrs r0, r0, #6
	ldrh r1, [r2, #6]
	adds r0, r0, r1
	strh r0, [r2]
	movs r0, #0xa
	ldrsh r1, [r2, r0]
	ldrh r0, [r2, #0xe]
	muls r0, r1, r0
	asrs r0, r0, #6
	ldrh r1, [r2, #8]
	adds r0, r0, r1
	strh r0, [r2, #2]
_0809BE3A:
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #5
	bne _0809BE5E
	movs r0, #0
	strb r0, [r2, #0x13]
	ldrh r0, [r2, #4]
	subs r0, #4
	strh r0, [r2, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	bgt _0809BE5E
	movs r0, #2
	strh r0, [r2, #4]
_0809BE5E:
	ldrh r0, [r2]
	adds r0, #0x10
	lsls r0, r0, #0x10
	movs r1, #0x88
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0809BE7C
	movs r0, #2
	ldrsh r1, [r2, r0]
	movs r0, #0x10
	rsbs r0, r0, #0
	cmp r1, r0
	blt _0809BE7C
	cmp r1, #0xb0
	ble _0809BE88
_0809BE7C:
	movs r0, #0
	strb r0, [r2, #0x10]
	ldrb r1, [r2, #0x16]
	subs r0, #2
	ands r0, r1
	strb r0, [r2, #0x16]
_0809BE88:
	pop {r0}
	bx r0

	thumb_func_start unk_9be8c
unk_9be8c: @ 0x0809BE8C
	push {lr}
	adds r3, r0, #0
	ldrb r0, [r3, #0x14]
	cmp r0, #0
	bne _0809BEBC
	ldr r1, _0809BEAC @ =0x040000D4
	ldr r0, _0809BEB0 @ =0x0868101C
	str r0, [r1]
	ldr r0, _0809BEB4 @ =0x05000120
	str r0, [r1, #4]
	ldr r0, _0809BEB8 @ =0x84000008
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r0, #1
	strb r0, [r3, #0x14]
	b _0809BF46
	.align 2, 0
_0809BEAC: .4byte 0x040000D4
_0809BEB0: .4byte 0x0868101C
_0809BEB4: .4byte 0x05000120
_0809BEB8: .4byte 0x84000008
_0809BEBC:
	cmp r0, #1
	bne _0809BF14
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	bne _0809BF46
	movs r0, #0
	strb r0, [r3, #0x13]
	ldrh r0, [r3, #0xc]
	adds r0, #1
	strh r0, [r3, #0xc]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe
	ble _0809BEE8
	movs r0, #0xf
	strh r0, [r3, #0xc]
	movs r0, #2
	strb r0, [r3, #0x14]
_0809BEE8:
	ldr r2, _0809BF04 @ =0x040000D4
	movs r1, #0xc
	ldrsh r0, [r3, r1]
	lsls r0, r0, #5
	ldr r1, _0809BF08 @ =0x0868101C
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, _0809BF0C @ =0x05000120
	str r0, [r2, #4]
	ldr r0, _0809BF10 @ =0x84000008
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	b _0809BF46
	.align 2, 0
_0809BF04: .4byte 0x040000D4
_0809BF08: .4byte 0x0868101C
_0809BF0C: .4byte 0x05000120
_0809BF10: .4byte 0x84000008
_0809BF14:
	cmp r0, #2
	bne _0809BF46
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #6
	bne _0809BF46
	movs r0, #0
	strb r0, [r3, #0x13]
	ldr r1, _0809BF4C @ =0x03001220
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0809BF46
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xf
	bhi _0809BF46
	ldr r1, _0809BF50 @ =0x03001222
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_0809BF46:
	pop {r0}
	bx r0
	.align 2, 0
_0809BF4C: .4byte 0x03001220
_0809BF50: .4byte 0x03001222

	thumb_func_start unk_9bf54
unk_9bf54: @ 0x0809BF54
	push {lr}
	adds r3, r0, #0
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809BF7E
	movs r0, #0
	strb r0, [r3, #0x13]
	ldr r1, _0809BFAC @ =gNonGameplayRam
	ldrh r0, [r1, #0xa]
	adds r0, #2
	strh r0, [r1, #0xa]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xa0
	ble _0809BF7E
	movs r0, #0xa0
	strh r0, [r1, #0xa]
_0809BF7E:
	ldrb r0, [r3, #0x12]
	adds r0, #1
	strb r0, [r3, #0x12]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x20
	bne _0809BF90
	movs r0, #0
	strb r0, [r3, #0x12]
_0809BF90:
	ldr r1, _0809BFB0 @ =0x04000014
	ldr r2, _0809BFB4 @ =sRandomNumberTable
	ldrb r0, [r3, #0x12]
	adds r0, r0, r2
	ldrb r0, [r0]
	strh r0, [r1]
	adds r1, #2
	ldrb r0, [r3, #0x12]
	adds r0, r0, r2
	ldrb r0, [r0]
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0809BFAC: .4byte gNonGameplayRam
_0809BFB0: .4byte 0x04000014
_0809BFB4: .4byte sRandomNumberTable

	thumb_func_start unk_9bfb8
unk_9bfb8: @ 0x0809BFB8
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _0809BFD0
	ldrh r0, [r2]
	strh r0, [r2, #6]
	ldrh r0, [r2, #2]
	strh r0, [r2, #8]
	movs r0, #1
	strb r0, [r2, #0x14]
	b _0809BFFA
_0809BFD0:
	cmp r0, #1
	bne _0809BFFA
	ldrh r0, [r2, #0xe]
	adds r0, #1
	strh r0, [r2, #0xe]
	movs r0, #0xc
	ldrsh r1, [r2, r0]
	ldrh r0, [r2, #0xe]
	muls r0, r1, r0
	asrs r0, r0, #6
	ldrh r1, [r2, #6]
	adds r0, r0, r1
	strh r0, [r2]
	movs r3, #0xa
	ldrsh r1, [r2, r3]
	ldrh r0, [r2, #0xe]
	muls r0, r1, r0
	asrs r0, r0, #6
	ldrh r1, [r2, #8]
	adds r0, r0, r1
	strh r0, [r2, #2]
_0809BFFA:
	ldrh r0, [r2]
	adds r0, #0x10
	lsls r0, r0, #0x10
	movs r1, #0x88
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0809C018
	movs r3, #2
	ldrsh r1, [r2, r3]
	movs r0, #0x10
	rsbs r0, r0, #0
	cmp r1, r0
	blt _0809C018
	cmp r1, #0xb0
	ble _0809C024
_0809C018:
	movs r0, #0
	strb r0, [r2, #0x10]
	ldrb r1, [r2, #0x16]
	subs r0, #2
	ands r0, r1
	strb r0, [r2, #0x16]
_0809C024:
	ldrb r0, [r2, #0x11]
	lsls r0, r0, #3
	ldr r1, [r2, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _0809C046
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0809C046
	strb r1, [r2, #0x10]
	ldrb r1, [r2, #0x16]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x16]
_0809C046:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_9c04c
unk_9c04c: @ 0x0809C04C
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x28
	bne _0809C070
	movs r0, #0
	strb r0, [r2, #0x13]
	ldrh r1, [r2]
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0
	ble _0809C070
	subs r0, r1, #1
	strh r0, [r2]
_0809C070:
	ldr r1, _0809C07C @ =0x04000018
	ldrh r0, [r2]
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0809C07C: .4byte 0x04000018

	thumb_func_start unk_9c080
unk_9c080: @ 0x0809C080
	push {r4, lr}
	adds r4, r3, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl CutsceneRestrictedLabDetachingSetupOam
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0809C0B0 @ =gNonGameplayRam
	lsls r1, r0, #3
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	strh r4, [r1, #0x24]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0809C0B0: .4byte gNonGameplayRam

	thumb_func_start unk_9c0b4
unk_9c0b4: @ 0x0809C0B4
	push {r4, r5, lr}
	adds r5, r3, #0
	ldr r4, [sp, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl CutsceneRestrictedLabDetachingSetupOam
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0809C0EC @ =gNonGameplayRam
	lsls r1, r0, #3
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	strh r4, [r1, #0x22]
	strh r5, [r1, #0x24]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0809C0EC: .4byte gNonGameplayRam

	thumb_func_start CutsceneRestrictedLabDetachingGetPositionOfOamByType
CutsceneRestrictedLabDetachingGetPositionOfOamByType: @ 0x0809C0F0
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r1, #0
	ldr r6, _0809C118 @ =gNonGameplayRam
_0809C0FC:
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r6
	adds r0, r3, #0
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, r5
	bne _0809C11C
	ldrh r0, [r3, #0x18]
	strh r0, [r4]
	ldrh r0, [r3, #0x1a]
	b _0809C130
	.align 2, 0
_0809C118: .4byte gNonGameplayRam
_0809C11C:
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0xf
	bls _0809C0FC
	movs r1, #0x96
	lsls r1, r1, #1
	adds r0, r1, #0
	strh r0, [r4]
	movs r0, #0xc8
_0809C130:
	strh r0, [r2]
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start CutsceneRestrictedLabDetachingVblank
CutsceneRestrictedLabDetachingVblank: @ 0x0809C138
	push {lr}
	ldr r3, _0809C18C @ =0x040000D4
	ldr r0, _0809C190 @ =gOamData
	str r0, [r3]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r3, #4]
	ldr r0, _0809C194 @ =0x84000100
	str r0, [r3, #8]
	ldr r0, [r3, #8]
	ldr r2, _0809C198 @ =0x04000052
	ldr r0, _0809C19C @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0809C1A0 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0809C1A4 @ =0x04000054
	ldr r0, _0809C1A8 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _0809C1AC @ =gNonGameplayRam
	movs r2, #0xa
	ldrsh r0, [r1, r2]
	cmp r0, #1
	bne _0809C188
	movs r0, #0
	strh r0, [r1, #0xa]
	movs r2, #0xc
	ldrsh r0, [r1, r2]
	lsls r0, r0, #5
	ldr r1, _0809C1B0 @ =0x0868101C
	adds r0, r0, r1
	str r0, [r3]
	ldr r0, _0809C1B4 @ =0x05000120
	str r0, [r3, #4]
	ldr r0, _0809C1B8 @ =0x84000008
	str r0, [r3, #8]
	ldr r0, [r3, #8]
_0809C188:
	pop {r0}
	bx r0
	.align 2, 0
_0809C18C: .4byte 0x040000D4
_0809C190: .4byte gOamData
_0809C194: .4byte 0x84000100
_0809C198: .4byte 0x04000052
_0809C19C: .4byte 0x03001222
_0809C1A0: .4byte 0x03001220
_0809C1A4: .4byte 0x04000054
_0809C1A8: .4byte gWrittenToBldy
_0809C1AC: .4byte gNonGameplayRam
_0809C1B0: .4byte 0x0868101C
_0809C1B4: .4byte 0x05000120
_0809C1B8: .4byte 0x84000008

	thumb_func_start unk_9c1bc
unk_9c1bc: @ 0x0809C1BC
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CutsceneBslExploding
CutsceneBslExploding: @ 0x0809C1C8
	push {r4, r5, r6, lr}
	movs r6, #0
	ldr r4, _0809C1E0 @ =gNonGameplayRam
	ldrh r0, [r4]
	cmp r0, #1
	beq _0809C1F8
	cmp r0, #1
	bgt _0809C1E4
	cmp r0, #0
	beq _0809C1EE
	b _0809C246
	.align 2, 0
_0809C1E0: .4byte gNonGameplayRam
_0809C1E4:
	cmp r0, #2
	beq _0809C220
	cmp r0, #3
	beq _0809C238
	b _0809C246
_0809C1EE:
	movs r0, #1
	strh r0, [r4]
	bl CutsceneBslExplodingInit
	b _0809C246
_0809C1F8:
	ldr r5, _0809C218 @ =gWrittenToBldy
	ldrh r0, [r5]
	cmp r0, #0x10
	bne _0809C206
	ldr r0, _0809C21C @ =0x00000247
	bl unk_3b1c
_0809C206:
	bl CutsceneFadeIn
	ldrh r0, [r5]
	cmp r0, #0
	bne _0809C246
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _0809C246
	.align 2, 0
_0809C218: .4byte gWrittenToBldy
_0809C21C: .4byte 0x00000247
_0809C220:
	bl CutsceneBslExplodingProcess
	cmp r0, #0
	beq _0809C246
	movs r0, #3
	strh r0, [r4]
	ldr r1, _0809C234 @ =0x04000050
	movs r0, #0xbf
	strh r0, [r1]
	b _0809C246
	.align 2, 0
_0809C234: .4byte 0x04000050
_0809C238:
	bl CutsceneFadeOut
	ldr r0, _0809C250 @ =gWrittenToBldy
	ldrh r0, [r0]
	cmp r0, #0x10
	bne _0809C246
	movs r6, #1
_0809C246:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0809C250: .4byte gWrittenToBldy

	thumb_func_start CutsceneBslExplodingInit
CutsceneBslExplodingInit: @ 0x0809C254
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	ldr r3, _0809C360 @ =0x04000208
	movs r5, #0
	strh r5, [r3]
	ldr r2, _0809C364 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _0809C368 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0809C36C @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0809C370 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0809C374 @ =unk_9c92c
	bl CallbackSetVBlank
	movs r0, #0x80
	lsls r0, r0, #0x13
	mov r8, r0
	strh r5, [r0]
	ldr r0, _0809C378 @ =0x0867D7CC
	ldr r1, _0809C37C @ =0x06010000
	bl LZ77UncompVram
	ldr r4, _0809C380 @ =0x040000D4
	ldr r0, _0809C384 @ =0x0868121C
	str r0, [r4]
	ldr r0, _0809C388 @ =0x05000200
	str r0, [r4, #4]
	ldr r6, _0809C38C @ =0x84000080
	str r6, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809C390 @ =0x08679420
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _0809C394 @ =0x08681A1C
	ldr r1, _0809C398 @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _0809C39C @ =0x086820A4
	ldr r1, _0809C3A0 @ =0x0600E800
	bl LZ77UncompVram
	ldr r0, _0809C3A4 @ =0x086827A8
	ldr r1, _0809C3A8 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _0809C3AC @ =0x08682BFC
	ldr r1, _0809C3B0 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _0809C3B4 @ =0x0868259C
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	str r6, [r4, #8]
	ldr r1, [r4, #8]
	strh r5, [r0]
	ldr r1, _0809C3B8 @ =0x04000008
	movs r2, #0xe0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _0809C3BC @ =0x00001D03
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	adds r2, #0xfd
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _0809C3C0 @ =0x00001F03
	adds r0, r2, #0
	strh r0, [r1]
	movs r1, #0xc0
	lsls r1, r1, #5
	adds r0, r1, #0
	mov r2, r8
	strh r0, [r2]
	ldr r0, _0809C3C4 @ =gWrittenToBldy
	movs r2, #0x10
	strh r2, [r0]
	ldr r1, _0809C3C8 @ =0x03001220
	movs r0, #8
	strh r0, [r1]
	ldr r0, _0809C3CC @ =0x03001222
	strh r2, [r0]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl CutsceneBslExplodingSetupOam
	movs r0, #0x14
	movs r1, #0x70
	movs r2, #0x58
	movs r3, #0
	bl CutsceneBslExplodingSetupOam
	ldr r0, _0809C3D0 @ =gNonGameplayRam
	movs r1, #0
	strh r1, [r0, #0xa]
	strh r1, [r0, #0xc]
	movs r1, #0xc
	ldrsh r0, [r0, r1]
	lsls r0, r0, #5
	ldr r1, _0809C3D4 @ =0x0868101C
	adds r0, r0, r1
	str r0, [r4]
	ldr r0, _0809C3D8 @ =0x05000120
	str r0, [r4, #4]
	ldr r0, _0809C3DC @ =0x84000008
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	bl CutsceneDrawAllOam
	ldr r0, _0809C3E0 @ =CutsceneBslExplodingVblank
	bl CallbackSetVBlank
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809C360: .4byte 0x04000208
_0809C364: .4byte 0x04000004
_0809C368: .4byte 0x0000FFEF
_0809C36C: .4byte 0x04000200
_0809C370: .4byte 0x0000FFFD
_0809C374: .4byte unk_9c92c
_0809C378: .4byte 0x0867D7CC
_0809C37C: .4byte 0x06010000
_0809C380: .4byte 0x040000D4
_0809C384: .4byte 0x0868121C
_0809C388: .4byte 0x05000200
_0809C38C: .4byte 0x84000080
_0809C390: .4byte 0x08679420
_0809C394: .4byte 0x08681A1C
_0809C398: .4byte 0x0600E000
_0809C39C: .4byte 0x086820A4
_0809C3A0: .4byte 0x0600E800
_0809C3A4: .4byte 0x086827A8
_0809C3A8: .4byte 0x0600F000
_0809C3AC: .4byte 0x08682BFC
_0809C3B0: .4byte 0x0600F800
_0809C3B4: .4byte 0x0868259C
_0809C3B8: .4byte 0x04000008
_0809C3BC: .4byte 0x00001D03
_0809C3C0: .4byte 0x00001F03
_0809C3C4: .4byte gWrittenToBldy
_0809C3C8: .4byte 0x03001220
_0809C3CC: .4byte 0x03001222
_0809C3D0: .4byte gNonGameplayRam
_0809C3D4: .4byte 0x0868101C
_0809C3D8: .4byte 0x05000120
_0809C3DC: .4byte 0x84000008
_0809C3E0: .4byte CutsceneBslExplodingVblank

	thumb_func_start CutsceneBslExplodingProcess
CutsceneBslExplodingProcess: @ 0x0809C3E4
	push {r4, r5, lr}
	movs r5, #0
	ldr r1, _0809C404 @ =gNonGameplayRam
	ldrh r0, [r1, #8]
	adds r0, #1
	strh r0, [r1, #8]
	ldrb r0, [r1, #0x10]
	adds r4, r1, #0
	cmp r0, #6
	bls _0809C3FA
	b _0809C5E2
_0809C3FA:
	lsls r0, r0, #2
	ldr r1, _0809C408 @ =_0809C40C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809C404: .4byte gNonGameplayRam
_0809C408: .4byte _0809C40C
_0809C40C: @ jump table
	.4byte _0809C428 @ case 0
	.4byte _0809C432 @ case 1
	.4byte _0809C464 @ case 2
	.4byte _0809C4CC @ case 3
	.4byte _0809C4FC @ case 4
	.4byte _0809C52C @ case 5
	.4byte _0809C5B4 @ case 6
_0809C428:
	movs r0, #0
	strh r0, [r4, #8]
	movs r0, #1
	strb r0, [r4, #0x10]
	b _0809C5E2
_0809C432:
	ldrh r0, [r4, #8]
	cmp r0, #0xf
	beq _0809C43A
	b _0809C5E2
_0809C43A:
	ldr r1, _0809C45C @ =0x04000050
	ldr r2, _0809C460 @ =0x00001C44
	adds r0, r2, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	strh r0, [r4, #8]
	movs r0, #2
	strb r0, [r4, #0x10]
	b _0809C5E2
	.align 2, 0
_0809C45C: .4byte 0x04000050
_0809C460: .4byte 0x00001C44
_0809C464:
	ldr r2, _0809C484 @ =0x03001220
	ldrh r1, [r2]
	cmp r1, #0xf
	bhi _0809C48C
	ldrh r0, [r4, #8]
	cmp r0, #1
	bne _0809C47A
	movs r0, #0
	strh r0, [r4, #8]
	adds r0, r1, #2
	strh r0, [r2]
_0809C47A:
	ldr r1, _0809C488 @ =gWrittenToBldy
	movs r0, #0x10
	strh r0, [r1]
	b _0809C5E2
	.align 2, 0
_0809C484: .4byte 0x03001220
_0809C488: .4byte gWrittenToBldy
_0809C48C:
	ldrh r0, [r4, #8]
	cmp r0, #0x28
	beq _0809C494
	b _0809C5E2
_0809C494:
	ldr r1, _0809C4C8 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	subs r1, #0x50
	movs r2, #0x90
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	movs r0, #1
	bl CutsceneDestroyOamOfType
	movs r0, #0x14
	bl CutsceneDestroyOamOfType
	movs r0, #0x15
	movs r1, #0x78
	movs r2, #0x5a
	movs r3, #1
	bl CutsceneBslExplodingSetupOam
	movs r0, #0
	strh r0, [r4, #8]
	movs r0, #3
	strb r0, [r4, #0x10]
	b _0809C5E2
	.align 2, 0
_0809C4C8: .4byte 0x04000050
_0809C4CC:
	ldrh r0, [r4, #8]
	cmp r0, #1
	beq _0809C4D4
	b _0809C5E2
_0809C4D4:
	ldr r1, _0809C4F0 @ =gWrittenToBldy
	movs r0, #0
	strh r0, [r1]
	ldr r0, _0809C4F4 @ =0x03001220
	movs r1, #0xa
	strh r1, [r0]
	ldr r0, _0809C4F8 @ =0x03001222
	strh r1, [r0]
	movs r0, #0
	strh r0, [r4, #8]
	movs r0, #4
	strb r0, [r4, #0x10]
	b _0809C5E2
	.align 2, 0
_0809C4F0: .4byte gWrittenToBldy
_0809C4F4: .4byte 0x03001220
_0809C4F8: .4byte 0x03001222
_0809C4FC:
	ldrh r0, [r4, #8]
	cmp r0, #0x3c
	bne _0809C5E2
	ldr r1, _0809C524 @ =0x04000050
	ldr r3, _0809C528 @ =0x00001E41
	adds r0, r3, #0
	strh r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	strh r0, [r4, #8]
	movs r0, #5
	strb r0, [r4, #0x10]
	b _0809C5E2
	.align 2, 0
_0809C524: .4byte 0x04000050
_0809C528: .4byte 0x00001E41
_0809C52C:
	ldrh r1, [r4, #0xc]
	movs r2, #0xc
	ldrsh r0, [r4, r2]
	cmp r0, #0xe
	bgt _0809C59A
	ldrh r0, [r4, #8]
	cmp r0, #4
	bne _0809C5E2
	movs r0, #0
	strh r0, [r4, #8]
	movs r0, #1
	strh r0, [r4, #0xa]
	adds r0, r1, #1
	strh r0, [r4, #0xc]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _0809C570
	movs r0, #0x16
	movs r1, #0x78
	movs r2, #0x60
	movs r3, #0
	bl CutsceneBslExplodingSetupOam
	movs r0, #0x16
	movs r1, #0x5f
	movs r2, #0x50
	movs r3, #0
	bl CutsceneBslExplodingSetupOam
	movs r0, #0x16
	movs r1, #0x8c
	movs r2, #0x69
	b _0809C592
_0809C570:
	cmp r0, #2
	bne _0809C588
	movs r0, #0x16
	movs r1, #0x78
	movs r2, #0x54
	movs r3, #0
	bl CutsceneBslExplodingSetupOam
	movs r0, #0x16
	movs r1, #0x91
	movs r2, #0x55
	b _0809C592
_0809C588:
	cmp r0, #3
	bne _0809C5E2
	movs r0, #0x16
	movs r1, #0x60
	movs r2, #0x6a
_0809C592:
	movs r3, #0
	bl CutsceneBslExplodingSetupOam
	b _0809C5E2
_0809C59A:
	ldrh r0, [r4, #8]
	cmp r0, #0xf
	bne _0809C5E2
	movs r0, #0
	strh r0, [r4, #8]
	ldr r1, _0809C5B0 @ =gWrittenToBldy
	movs r0, #0x10
	strh r0, [r1]
	movs r0, #6
	strb r0, [r4, #0x10]
	b _0809C5E2
	.align 2, 0
_0809C5B0: .4byte gWrittenToBldy
_0809C5B4:
	ldr r2, _0809C5CC @ =0x03001220
	ldrh r1, [r2]
	cmp r1, #0xf
	bhi _0809C5D0
	ldrh r0, [r4, #8]
	cmp r0, #6
	bne _0809C5E2
	movs r0, #0
	strh r0, [r4, #8]
	adds r0, r1, #1
	strh r0, [r2]
	b _0809C5E2
	.align 2, 0
_0809C5CC: .4byte 0x03001220
_0809C5D0:
	ldr r0, _0809C5F4 @ =0x04000050
	movs r1, #0xbf
	strh r1, [r0]
	ldrh r0, [r4, #8]
	cmp r0, #0x10
	bne _0809C5E2
	movs r0, #0
	strh r0, [r4, #8]
	movs r5, #1
_0809C5E2:
	bl CutsceneProcessOam
	bl CutsceneDrawAllOam
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0809C5F4: .4byte 0x04000050

	thumb_func_start CutsceneBslExplodingProcessScrolling
CutsceneBslExplodingProcessScrolling: @ 0x0809C5F8
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x13]
	adds r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	bne _0809C614
	movs r0, #0
	strb r0, [r2, #0x13]
	ldrh r0, [r2]
	subs r0, #1
	strh r0, [r2]
_0809C614:
	ldr r1, _0809C620 @ =0x0400001C
	ldrh r0, [r2]
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0809C620: .4byte 0x0400001C

	thumb_func_start CutsceneBslExplodingProcessBslFar
CutsceneBslExplodingProcessBslFar: @ 0x0809C624
	push {r4, lr}
	adds r2, r0, #0
	ldrb r1, [r2, #0x14]
	cmp r1, #0
	bne _0809C654
	ldr r3, _0809C64C @ =gNonGameplayRam
	ldrb r0, [r3, #0x10]
	cmp r0, #5
	bne _0809C67A
	movs r4, #0xc
	ldrsh r0, [r3, r4]
	cmp r0, #5
	bne _0809C67A
	strb r1, [r2, #0x12]
	strb r1, [r2, #0x11]
	ldr r0, _0809C650 @ =0x08680ECC
	str r0, [r2, #0x1c]
	movs r0, #1
	strb r0, [r2, #0x14]
	b _0809C67A
	.align 2, 0
_0809C64C: .4byte gNonGameplayRam
_0809C650: .4byte 0x08680ECC
_0809C654:
	cmp r1, #1
	bne _0809C67A
	ldrb r0, [r2, #0x11]
	lsls r0, r0, #3
	ldr r1, [r2, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _0809C67A
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0809C67A
	strb r1, [r2, #0x10]
	ldrb r1, [r2, #0x16]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x16]
_0809C67A:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start CutsceneBslExplodingProcessExplosions
CutsceneBslExplodingProcessExplosions: @ 0x0809C680
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0x11]
	lsls r0, r0, #3
	ldr r1, [r2, #0x1c]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r2, #0x12]
	cmp r0, r3
	bne _0809C6A6
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0809C6A6
	strb r1, [r2, #0x10]
	ldrb r1, [r2, #0x16]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x16]
_0809C6A6:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CutsceneBslExplodingSetupOam
CutsceneBslExplodingSetupOam: @ 0x0809C6AC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	lsls r3, r3, #0x18
	cmp r3, #0
	bne _0809C708
	movs r2, #0
	ldr r1, _0809C704 @ =gNonGameplayRam
	adds r0, r1, #0
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #0
	beq _0809C6F8
	adds r3, r1, #0
_0809C6D8:
	lsls r0, r2, #0x18
	movs r1, #0x80
	lsls r1, r1, #0x11
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0xf
	bgt _0809C742
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #0
	bne _0809C6D8
_0809C6F8:
	lsls r0, r2, #0x18
	asrs r1, r0, #0x18
	adds r6, r0, #0
	cmp r1, #0xf
	ble _0809C74C
	b _0809C742
	.align 2, 0
_0809C704: .4byte gNonGameplayRam
_0809C708:
	movs r2, #0xf
	ldr r1, _0809C748 @ =gNonGameplayRam
	movs r3, #0x91
	lsls r3, r3, #2
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _0809C73A
	adds r3, r1, #0
_0809C71A:
	lsls r0, r2, #0x18
	movs r1, #0xff
	lsls r1, r1, #0x18
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0
	blt _0809C742
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #0
	bne _0809C71A
_0809C73A:
	lsls r0, r2, #0x18
	adds r6, r0, #0
	cmp r6, #0
	bge _0809C74C
_0809C742:
	movs r0, #0x10
	b _0809C83A
	.align 2, 0
_0809C748: .4byte gNonGameplayRam
_0809C74C:
	movs r0, #0
	str r0, [sp]
	ldr r2, _0809C7A0 @ =0x040000D4
	mov r3, sp
	str r3, [r2]
	asrs r1, r6, #0x18
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r4, r0, #2
	ldr r0, _0809C7A4 @ =0x0300149C
	mov ip, r0
	adds r0, r4, r0
	str r0, [r2, #4]
	ldr r0, _0809C7A8 @ =0x85000009
	str r0, [r2, #8]
	ldr r0, [r2, #8]
	mov r0, ip
	subs r0, #0x18
	adds r2, r4, r0
	mov r1, r8
	strh r1, [r2, #0x18]
	strh r7, [r2, #0x1a]
	adds r0, r2, #0
	adds r0, #0x28
	strb r5, [r0]
	adds r3, r2, #0
	adds r3, #0x2e
	ldrb r1, [r3]
	movs r0, #1
	orrs r1, r0
	strb r1, [r3]
	cmp r5, #1
	bne _0809C7B0
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r3]
	mov r0, ip
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _0809C7AC @ =CutsceneBslExplodingProcessScrolling
	b _0809C836
	.align 2, 0
_0809C7A0: .4byte 0x040000D4
_0809C7A4: .4byte 0x0300149C
_0809C7A8: .4byte 0x85000009
_0809C7AC: .4byte CutsceneBslExplodingProcessScrolling
_0809C7B0:
	cmp r5, #0x14
	bne _0809C7E0
	adds r2, #0x30
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _0809C7D8 @ =0x08680FFC
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _0809C7DC @ =unk_9db70
	b _0809C836
	.align 2, 0
_0809C7D8: .4byte 0x08680FFC
_0809C7DC: .4byte unk_9db70
_0809C7E0:
	cmp r5, #0x15
	bne _0809C810
	adds r2, #0x30
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _0809C808 @ =0x0868100C
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _0809C80C @ =CutsceneBslExplodingProcessBslFar
	b _0809C836
	.align 2, 0
_0809C808: .4byte 0x0868100C
_0809C80C: .4byte CutsceneBslExplodingProcessBslFar
_0809C810:
	cmp r5, #0x16
	bne _0809C838
	adds r2, #0x30
	ldrb r1, [r2]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r4, r0
	ldr r1, _0809C848 @ =0x08680ECC
	str r1, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r4, r0
	ldr r1, _0809C84C @ =CutsceneBslExplodingProcessExplosions
_0809C836:
	str r1, [r0]
_0809C838:
	lsrs r0, r6, #0x18
_0809C83A:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809C848: .4byte 0x08680ECC
_0809C84C: .4byte CutsceneBslExplodingProcessExplosions

	thumb_func_start CutsceneBslExplodingGetOamInfoByType
CutsceneBslExplodingGetOamInfoByType: @ 0x0809C850
	push {r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	movs r2, #0
	ldr r7, _0809C880 @ =gNonGameplayRam
_0809C85E:
	lsls r0, r2, #3
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r1, r0, r7
	adds r0, r1, #0
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, r6
	bne _0809C884
	ldrh r0, [r1, #0x18]
	strh r0, [r4]
	ldrh r0, [r1, #0x1a]
	strh r0, [r5]
	ldrh r0, [r1, #0x1c]
	strh r0, [r3]
	adds r0, r2, #0
	b _0809C8A2
	.align 2, 0
_0809C880: .4byte gNonGameplayRam
_0809C884:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bls _0809C85E
	movs r1, #0x96
	lsls r1, r1, #1
	adds r0, r1, #0
	strh r0, [r4]
	movs r0, #0xc8
	strh r0, [r5]
	subs r1, #0x2c
	adds r0, r1, #0
	strh r0, [r3]
	movs r0, #0
_0809C8A2:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start CutsceneBslExplodingVblank
CutsceneBslExplodingVblank: @ 0x0809C8A8
	push {lr}
	ldr r3, _0809C8FC @ =0x040000D4
	ldr r0, _0809C900 @ =gOamData
	str r0, [r3]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r3, #4]
	ldr r0, _0809C904 @ =0x84000100
	str r0, [r3, #8]
	ldr r0, [r3, #8]
	ldr r2, _0809C908 @ =0x04000052
	ldr r0, _0809C90C @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0809C910 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0809C914 @ =0x04000054
	ldr r0, _0809C918 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _0809C91C @ =gNonGameplayRam
	movs r2, #0xa
	ldrsh r0, [r1, r2]
	cmp r0, #1
	bne _0809C8F8
	movs r0, #0
	strh r0, [r1, #0xa]
	movs r2, #0xc
	ldrsh r0, [r1, r2]
	lsls r0, r0, #5
	ldr r1, _0809C920 @ =0x0868101C
	adds r0, r0, r1
	str r0, [r3]
	ldr r0, _0809C924 @ =0x05000120
	str r0, [r3, #4]
	ldr r0, _0809C928 @ =0x84000008
	str r0, [r3, #8]
	ldr r0, [r3, #8]
_0809C8F8:
	pop {r0}
	bx r0
	.align 2, 0
_0809C8FC: .4byte 0x040000D4
_0809C900: .4byte gOamData
_0809C904: .4byte 0x84000100
_0809C908: .4byte 0x04000052
_0809C90C: .4byte 0x03001222
_0809C910: .4byte 0x03001220
_0809C914: .4byte 0x04000054
_0809C918: .4byte gWrittenToBldy
_0809C91C: .4byte gNonGameplayRam
_0809C920: .4byte 0x0868101C
_0809C924: .4byte 0x05000120
_0809C928: .4byte 0x84000008

	thumb_func_start unk_9c92c
unk_9c92c: @ 0x0809C92C
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CutsceneMonologueProcessCursor
CutsceneMonologueProcessCursor: @ 0x0809C938
	push {lr}
	adds r2, r0, #0
	ldr r3, _0809C954 @ =gNonGameplayRam
	ldr r0, [r3, #0xc]
	ldrh r1, [r0]
	movs r0, #0xff
	lsls r0, r0, #8
	cmp r1, r0
	bne _0809C958
	movs r0, #0
	strb r0, [r2, #4]
	strb r0, [r2, #5]
	b _0809C9F4
	.align 2, 0
_0809C954: .4byte gNonGameplayRam
_0809C958:
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r1, r0
	beq _0809C9E0
	movs r0, #0xfd
	lsls r0, r0, #8
	cmp r1, r0
	beq _0809C9C2
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _0809C9E0
	ldrb r1, [r2, #9]
	cmp r1, #0
	bne _0809C9B4
	ldr r0, _0809C990 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809C994
	movs r1, #0
	movs r0, #0x91
	lsls r0, r0, #1
	strh r0, [r2]
	strb r1, [r2, #7]
	strb r1, [r2, #6]
	b _0809C9F4
	.align 2, 0
_0809C990: .4byte gChangedInput
_0809C994:
	ldr r0, _0809C9B0 @ =0x08663E74
	str r0, [r2, #0x10]
	movs r1, #0
	movs r0, #0x76
	strh r0, [r2]
	ldrh r0, [r3, #2]
	lsls r0, r0, #3
	adds r0, #0x18
	strh r0, [r2, #2]
	strb r1, [r2, #7]
	strb r1, [r2, #6]
	movs r0, #1
	strb r0, [r2, #9]
	b _0809C9F4
	.align 2, 0
_0809C9B0: .4byte 0x08663E74
_0809C9B4:
	cmp r1, #1
	bne _0809C9F4
	ldr r0, _0809C9D8 @ =gChangedInput
	ldrh r0, [r0]
	ands r1, r0
	cmp r1, #0
	beq _0809C9F4
_0809C9C2:
	ldr r0, _0809C9DC @ =0x08663E5C
	str r0, [r2, #0x10]
	movs r1, #0
	movs r0, #0x91
	lsls r0, r0, #1
	strh r0, [r2]
	strb r1, [r2, #7]
	strb r1, [r2, #6]
	strb r1, [r2, #9]
	b _0809C9F4
	.align 2, 0
_0809C9D8: .4byte gChangedInput
_0809C9DC: .4byte 0x08663E5C
_0809C9E0:
	ldrh r0, [r3]
	lsls r0, r0, #3
	ldrb r1, [r3, #0x18]
	adds r1, #0xc
	adds r0, r0, r1
	strh r0, [r2]
	ldrh r0, [r3, #2]
	lsls r0, r0, #3
	adds r0, #0xc
	strh r0, [r2, #2]
_0809C9F4:
	pop {r0}
	bx r0

	thumb_func_start CutsceneMonologueProcessSpecialTextCharacters
CutsceneMonologueProcessSpecialTextCharacters: @ 0x0809C9F8
	push {r4, r5, r6, lr}
	movs r6, #0
	ldr r0, _0809CA10 @ =gButtonInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809CA18
	ldr r1, _0809CA14 @ =gNonGameplayRam
	ldrh r0, [r1, #0x10]
	adds r0, #2
	b _0809CA1E
	.align 2, 0
_0809CA10: .4byte gButtonInput
_0809CA14: .4byte gNonGameplayRam
_0809CA18:
	ldr r1, _0809CA40 @ =gNonGameplayRam
	ldrh r0, [r1, #0x10]
	adds r0, #1
_0809CA1E:
	strh r0, [r1, #0x10]
	adds r5, r1, #0
	adds r3, r5, #0
	ldr r0, [r3, #0xc]
	ldrh r2, [r0]
	adds r1, r2, #0
	movs r4, #0xff
	lsls r4, r4, #8
	cmp r1, r4
	bne _0809CA44
	movs r0, #0
	strh r0, [r3, #0x10]
	movs r0, #0x64
	strb r0, [r3, #0x17]
	movs r6, #1
	b _0809CA92
	.align 2, 0
_0809CA40: .4byte gNonGameplayRam
_0809CA44:
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	bne _0809CA64
	ldr r0, _0809CA60 @ =gChangedInput
	ldrh r0, [r0]
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _0809CA80
	movs r1, #0
	movs r0, #1
	b _0809CA7E
	.align 2, 0
_0809CA60: .4byte gChangedInput
_0809CA64:
	adds r0, r4, #0
	ands r0, r2
	movs r1, #0xe1
	lsls r1, r1, #8
	cmp r0, r1
	bne _0809CA84
	movs r0, #0xff
	ands r0, r2
	ldrh r1, [r3, #0x10]
	cmp r0, r1
	bhi _0809CA92
	movs r1, #0
	movs r0, #1
_0809CA7E:
	strb r0, [r3, #0x17]
_0809CA80:
	strh r1, [r3, #0x10]
	b _0809CA92
_0809CA84:
	ldrh r0, [r5, #0x10]
	cmp r0, #2
	bls _0809CA92
	movs r1, #0
	movs r0, #1
	strb r0, [r5, #0x17]
	strh r1, [r5, #0x10]
_0809CA92:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start CutsceneMonologueProcessText
CutsceneMonologueProcessText: @ 0x0809CA9C
	push {r4, r5, r6, lr}
	sub sp, #8
	ldr r5, _0809CB04 @ =gNonGameplayRam
	ldr r2, [r5, #0xc]
	ldrh r3, [r2]
	adds r1, r3, #0
	movs r6, #0xff
	lsls r6, r6, #8
	adds r4, r5, #0
	cmp r1, r6
	bne _0809CAB4
	b _0809CC3A
_0809CAB4:
	movs r0, #0xfe
	lsls r0, r0, #8
	cmp r1, r0
	bne _0809CB08
	ldrh r0, [r4]
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x1b
	bhi _0809CAEC
	adds r6, r4, #0
	adds r5, #0x1c
	movs r3, #0xff
_0809CACE:
	ldrh r1, [r6, #2]
	lsrs r1, r1, #1
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r0, r2, r0
	adds r0, r0, r5
	ldrb r1, [r0]
	orrs r1, r3
	strb r1, [r0]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x1b
	bls _0809CACE
_0809CAEC:
	movs r1, #0
	movs r0, #0
	strh r0, [r4]
	ldrh r0, [r4, #2]
	adds r0, #2
	strh r0, [r4, #2]
	ldr r0, [r4, #0xc]
	adds r0, #2
	str r0, [r4, #0xc]
	strb r1, [r4, #0x18]
	b _0809CC3A
	.align 2, 0
_0809CB04: .4byte gNonGameplayRam
_0809CB08:
	movs r0, #0xfd
	lsls r0, r0, #8
	cmp r1, r0
	bne _0809CB84
	movs r2, #0
	str r2, [sp, #4]
	ldr r1, _0809CB6C @ =0x040000D4
	add r0, sp, #4
	str r0, [r1]
	ldr r0, _0809CB70 @ =0x06008000
	str r0, [r1, #4]
	ldr r0, _0809CB74 @ =0x85001200
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r3, #0
	strh r2, [r4, #6]
	strh r2, [r4, #4]
	strh r2, [r4, #2]
	strh r2, [r4]
	ldr r0, [r4, #0xc]
	adds r0, #2
	str r0, [r4, #0xc]
	strb r3, [r4, #0x18]
	str r2, [sp, #4]
	add r0, sp, #4
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0x1c
	str r0, [r1, #4]
	ldr r3, _0809CB78 @ =0x8500003F
	str r3, [r1, #8]
	ldr r0, [r1, #8]
	str r2, [sp, #4]
	add r2, sp, #4
	str r2, [r1]
	movs r2, #0x8c
	lsls r2, r2, #1
	adds r0, r4, r2
	str r0, [r1, #4]
	str r3, [r1, #8]
	ldr r0, [r1, #8]
	movs r0, #0x80
	lsls r0, r0, #0x12
	str r0, [r1]
	ldr r0, _0809CB7C @ =0x0600C800
	str r0, [r1, #4]
	ldr r0, _0809CB80 @ =0x84000200
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _0809CC3A
	.align 2, 0
_0809CB6C: .4byte 0x040000D4
_0809CB70: .4byte 0x06008000
_0809CB74: .4byte 0x85001200
_0809CB78: .4byte 0x8500003F
_0809CB7C: .4byte 0x0600C800
_0809CB80: .4byte 0x84000200
_0809CB84:
	movs r0, #0xfc
	lsls r0, r0, #8
	cmp r1, r0
	beq _0809CB98
	adds r0, r6, #0
	ands r0, r3
	movs r1, #0xe1
	lsls r1, r1, #8
	cmp r0, r1
	bne _0809CB9E
_0809CB98:
	adds r0, r2, #2
	str r0, [r4, #0xc]
	b _0809CC3A
_0809CB9E:
	ldrh r4, [r5]
	lsls r4, r4, #5
	ldrh r0, [r5, #2]
	lsls r0, r0, #0xa
	adds r4, r4, r0
	ldr r0, _0809CC44 @ =0x06008000
	adds r4, r4, r0
	ldrh r0, [r2]
	bl GetCharacterWidth
	adds r6, r0, #0
	ldr r0, [r5, #0xc]
	ldrh r0, [r0]
	lsls r2, r6, #0x18
	lsrs r2, r2, #0x18
	ldrb r3, [r5, #0x18]
	movs r1, #0
	str r1, [sp]
	adds r1, r4, #0
	bl DrawCharacter
	ldrh r0, [r5]
	cmp r0, #0x1b
	bhi _0809CC32
	ldrh r1, [r5, #2]
	lsrs r1, r1, #1
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	ldrh r1, [r5]
	adds r0, r0, r1
	adds r1, r5, #0
	adds r1, #0x1c
	adds r0, r0, r1
	movs r1, #4
	strb r1, [r0]
	ldrb r0, [r5, #0x18]
	adds r0, r0, r6
	strb r0, [r5, #0x18]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r5, #0
	cmp r0, #7
	bls _0809CC32
	adds r2, r4, #0
_0809CBF8:
	ldrb r0, [r2, #0x18]
	adds r1, r0, #0
	subs r1, #8
	strb r1, [r2, #0x18]
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1b
	bhi _0809CC32
	lsls r0, r1, #0x18
	cmp r0, #0
	beq _0809CC2C
	ldrh r1, [r2, #2]
	lsrs r1, r1, #1
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	ldrh r1, [r2]
	adds r0, r0, r1
	adds r1, r2, #0
	adds r1, #0x1c
	adds r0, r0, r1
	movs r1, #4
	strb r1, [r0]
_0809CC2C:
	ldrb r0, [r2, #0x18]
	cmp r0, #7
	bhi _0809CBF8
_0809CC32:
	ldr r1, _0809CC48 @ =gNonGameplayRam
	ldr r0, [r1, #0xc]
	adds r0, #2
	str r0, [r1, #0xc]
_0809CC3A:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809CC44: .4byte 0x06008000
_0809CC48: .4byte gNonGameplayRam

	thumb_func_start unk_9cc4c
unk_9cc4c: @ 0x0809CC4C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	ldr r1, _0809CC8C @ =gNonGameplayRam
	ldrh r6, [r1, #4]
	ldrh r0, [r1, #6]
	lsrs r7, r0, #1
	ldrh r0, [r1, #2]
	lsrs r0, r0, #1
	str r1, [sp, #4]
	cmp r7, r0
	bls _0809CC6C
	b _0809CD70
_0809CC6C:
	str r1, [sp]
_0809CC6E:
	ldr r2, [sp]
	ldr r0, [r2, #0xc]
	ldrh r0, [r0]
	movs r3, #0xfc
	lsls r3, r3, #8
	cmp r0, r3
	bne _0809CC90
	ldrh r0, [r1]
	cmp r0, #0x1b
	bhi _0809CCAA
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov ip, r0
	b _0809CCAE
	.align 2, 0
_0809CC8C: .4byte gNonGameplayRam
_0809CC90:
	ldrh r0, [r1, #2]
	lsrs r0, r0, #1
	cmp r7, r0
	bne _0809CCAA
	ldr r1, [sp]
	ldrh r0, [r1]
	movs r2, #0x1c
	mov ip, r2
	cmp r0, #0x1b
	bhi _0809CCAE
	adds r3, r0, #0
	mov ip, r3
	b _0809CCAE
_0809CCAA:
	movs r5, #0x1c
	mov ip, r5
_0809CCAE:
	adds r0, r7, #1
	str r0, [sp, #8]
	cmp r6, ip
	bhs _0809CD5C
	ldr r1, _0809CD24 @ =gNonGameplayRam
	mov r8, r1
	lsls r0, r7, #3
	subs r0, r0, r7
	lsls r0, r0, #2
	mov sl, r0
	ldr r2, _0809CD28 @ =0x00000FFF
	mov sb, r2
_0809CCC6:
	mov r3, sl
	adds r2, r6, r3
	ldr r5, _0809CD2C @ =0x0300159C
	adds r1, r2, r5
	ldrb r0, [r1]
	cmp r0, #5
	bne _0809CD4E
	movs r0, #0
	strb r0, [r1]
	ldr r0, [sp, #4]
	adds r0, #0x1c
	adds r2, r2, r0
	ldrb r0, [r2]
	subs r1, r0, #1
	strb r1, [r2]
	lsls r0, r1, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _0809CD38
	lsls r2, r6, #1
	lsls r0, r7, #7
	adds r2, r2, r0
	ldr r0, _0809CD30 @ =0x0600C842
	adds r0, r2, r0
	str r0, [sp, #0xc]
	ldr r1, _0809CD34 @ =0x0600C882
	adds r2, r2, r1
	ldrh r3, [r0]
	ldrh r4, [r2]
	lsrs r0, r3, #0xc
	lsrs r1, r4, #0xc
	subs r0, #1
	lsls r0, r0, #0x10
	subs r1, #1
	lsls r1, r1, #0x10
	lsrs r0, r0, #4
	mov r5, sb
	ands r3, r5
	orrs r0, r3
	ldr r3, [sp, #0xc]
	strh r0, [r3]
	lsrs r1, r1, #4
	ands r4, r5
	orrs r1, r4
	strh r1, [r2]
	b _0809CD52
	.align 2, 0
_0809CD24: .4byte gNonGameplayRam
_0809CD28: .4byte 0x00000FFF
_0809CD2C: .4byte 0x0300159C
_0809CD30: .4byte 0x0600C842
_0809CD34: .4byte 0x0600C882
_0809CD38:
	cmp r0, #0
	bne _0809CD46
	lsls r0, r7, #1
	mov r5, r8
	strh r0, [r5, #6]
	strh r6, [r5, #4]
	b _0809CD52
_0809CD46:
	movs r0, #0xff
	orrs r1, r0
	strb r1, [r2]
	b _0809CD5C
_0809CD4E:
	adds r0, #1
	strb r0, [r1]
_0809CD52:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, ip
	blo _0809CCC6
_0809CD5C:
	movs r6, #0
	ldr r1, [sp, #8]
	lsls r0, r1, #0x10
	lsrs r7, r0, #0x10
	ldr r1, [sp, #4]
	ldrh r0, [r1, #2]
	lsrs r0, r0, #1
	cmp r7, r0
	bhi _0809CD70
	b _0809CC6E
_0809CD70:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start CutsceneMonologueFadeIn
CutsceneMonologueFadeIn: @ 0x0809CD80
	push {lr}
	bl CutsceneMonologueProcessOam
	bl CutsceneMonologueDrawAllOam
	ldr r3, _0809CDAC @ =gWrittenToBldy
	ldrh r2, [r3]
	adds r0, r2, #0
	cmp r0, #0
	beq _0809CDD0
	cmp r0, #0xb
	bls _0809CDB4
	ldr r1, _0809CDB0 @ =gNonGameplayRam
	ldrb r0, [r1, #0x16]
	adds r0, #1
	strb r0, [r1, #0x16]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0809CDD0
	b _0809CDC8
	.align 2, 0
_0809CDAC: .4byte gWrittenToBldy
_0809CDB0: .4byte gNonGameplayRam
_0809CDB4:
	cmp r0, #6
	bls _0809CDCC
	ldr r1, _0809CDD4 @ =gNonGameplayRam
	ldrb r0, [r1, #0x16]
	adds r0, #1
	strb r0, [r1, #0x16]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _0809CDD0
_0809CDC8:
	movs r0, #0
	strb r0, [r1, #0x16]
_0809CDCC:
	subs r0, r2, #1
	strh r0, [r3]
_0809CDD0:
	pop {r0}
	bx r0
	.align 2, 0
_0809CDD4: .4byte gNonGameplayRam

	thumb_func_start CutsceneMonologueFadeOut
CutsceneMonologueFadeOut: @ 0x0809CDD8
	push {lr}
	bl CutsceneMonologueProcessOam
	bl CutsceneMonologueDrawAllOam
	ldr r3, _0809CE04 @ =gWrittenToBldy
	ldrh r2, [r3]
	adds r0, r2, #0
	cmp r0, #0xf
	bhi _0809CE28
	cmp r0, #5
	bhi _0809CE0C
	ldr r1, _0809CE08 @ =gNonGameplayRam
	ldrb r0, [r1, #0x16]
	adds r0, #1
	strb r0, [r1, #0x16]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0809CE28
	b _0809CE20
	.align 2, 0
_0809CE04: .4byte gWrittenToBldy
_0809CE08: .4byte gNonGameplayRam
_0809CE0C:
	cmp r0, #0xa
	bhi _0809CE24
	ldr r1, _0809CE2C @ =gNonGameplayRam
	ldrb r0, [r1, #0x16]
	adds r0, #1
	strb r0, [r1, #0x16]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _0809CE28
_0809CE20:
	movs r0, #0
	strb r0, [r1, #0x16]
_0809CE24:
	adds r0, r2, #1
	strh r0, [r3]
_0809CE28:
	pop {r0}
	bx r0
	.align 2, 0
_0809CE2C: .4byte gNonGameplayRam

	thumb_func_start CutsceneMonologueProcessOam
CutsceneMonologueProcessOam: @ 0x0809CE30
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r5, _0809CE70 @ =gNonGameplayRam
	movs r0, #0x85
	lsls r0, r0, #2
	adds r6, r5, r0
_0809CE3C:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r2, r0, #3
	adds r0, r2, r5
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0809CE60
	movs r0, #0x8a
	lsls r0, r0, #2
	adds r1, r5, r0
	adds r1, r2, r1
	adds r0, r2, r6
	ldr r1, [r1]
	bl _call_via_r1
_0809CE60:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	bls _0809CE3C
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809CE70: .4byte gNonGameplayRam

	thumb_func_start CutsceneMonologueDrawAllOam
CutsceneMonologueDrawAllOam: @ 0x0809CE74
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r5, _0809CEB4 @ =gNonGameplayRam
	movs r0, #0x85
	lsls r0, r0, #2
	adds r6, r5, r0
_0809CE80:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r1, r0, #3
	adds r0, r1, r5
	ldr r2, _0809CEB8 @ =0x00000219
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _0809CE98
	adds r0, r1, r6
	bl CutsceneMnologueDrawOam
_0809CE98:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	bls _0809CE80
	bl ResetFreeOam
	ldr r1, _0809CEBC @ =gNextOamSlot
	movs r0, #0
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809CEB4: .4byte gNonGameplayRam
_0809CEB8: .4byte 0x00000219
_0809CEBC: .4byte gNextOamSlot

	thumb_func_start CutsceneMnologueDrawOam
CutsceneMnologueDrawOam: @ 0x0809CEC0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r2, _0809CF80 @ =gNextOamSlot
	ldrb r0, [r2]
	lsls r0, r0, #3
	ldr r1, _0809CF84 @ =gOamData
	adds r7, r0, r1
	ldrb r4, [r5, #6]
	lsls r1, r4, #3
	ldr r0, [r5, #0x10]
	adds r3, r0, r1
	ldrb r0, [r3, #4]
	ldrb r2, [r5, #7]
	cmp r0, r2
	bne _0809CEF0
	adds r0, r4, #1
	movs r1, #0
	strb r0, [r5, #6]
	strb r1, [r5, #7]
	adds r3, #8
_0809CEF0:
	ldrb r1, [r3, #4]
	cmp r1, #0
	bne _0809CEFE
	ldrb r0, [r5, #6]
	lsls r0, r0, #3
	subs r3, r3, r0
	strb r1, [r5, #6]
_0809CEFE:
	ldr r6, [r3]
	ldrh r3, [r6]
	mov sl, r3
	adds r6, #2
	movs r4, #0
	mov sb, r4
	cmp sb, sl
	blt _0809CF10
	b _0809D014
_0809CF10:
	ldrh r0, [r6]
	mov r8, r0
	adds r6, #2
	ldrh r1, [r6]
	mov ip, r1
	adds r6, #2
	strh r0, [r7]
	adds r7, #2
	strh r1, [r7]
	adds r7, #2
	ldrh r0, [r6]
	strh r0, [r7]
	adds r6, #2
	adds r7, #2
	ldr r2, _0809CF80 @ =gNextOamSlot
	ldrb r0, [r2]
	mov r4, sb
	adds r3, r0, r4
	ldrb r1, [r5, #0xc]
	cmp r1, #1
	bne _0809CF90
	lsls r4, r3, #3
	ldr r0, _0809CF84 @ =gOamData
	adds r2, r4, r0
	ldrb r3, [r2, #3]
	lsls r0, r3, #0x1b
	lsrs r0, r0, #0x1f
	eors r0, r1
	movs r1, #1
	ands r0, r1
	lsls r0, r0, #4
	movs r1, #0x11
	rsbs r1, r1, #0
	ands r1, r3
	orrs r1, r0
	strb r1, [r2, #3]
	lsrs r1, r1, #6
	ldrb r0, [r2, #1]
	lsrs r0, r0, #6
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r2, _0809CF88 @ =0x0868279C
	adds r1, r1, r2
	ldrb r0, [r1]
	lsls r0, r0, #3
	add r0, ip
	ldrh r1, [r5]
	subs r2, r1, r0
	ldr r3, _0809CF8C @ =0x000001FF
	ands r2, r3
	ldrh r0, [r5, #2]
	mov r3, r8
	adds r1, r3, r0
	movs r0, #0xff
	ands r1, r0
	b _0809CFA6
	.align 2, 0
_0809CF80: .4byte gNextOamSlot
_0809CF84: .4byte gOamData
_0809CF88: .4byte 0x0868279C
_0809CF8C: .4byte 0x000001FF
_0809CF90:
	ldrh r0, [r5, #2]
	mov r4, r8
	adds r1, r4, r0
	movs r0, #0xff
	ands r1, r0
	ldrh r0, [r5]
	mov r4, ip
	adds r2, r4, r0
	ldr r0, _0809D030 @ =0x000001FF
	ands r2, r0
	lsls r4, r3, #3
_0809CFA6:
	ldr r0, _0809D034 @ =gOamData
	adds r3, r4, r0
	strb r1, [r3]
	ldr r1, _0809D030 @ =0x000001FF
	ands r2, r1
	ldrh r1, [r3, #2]
	ldr r0, _0809D038 @ =0xFFFFFE00
	ands r0, r1
	orrs r0, r2
	strh r0, [r3, #2]
	ldrb r1, [r5, #0xb]
	movs r2, #3
	ands r1, r2
	lsls r1, r1, #2
	ldrb r2, [r3, #5]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3, #5]
	lsrs r2, r0, #4
	ldrb r4, [r5, #0xd]
	adds r2, r2, r4
	lsls r2, r2, #4
	movs r1, #0xf
	ands r0, r1
	orrs r0, r2
	strb r0, [r3, #5]
	ldrh r2, [r3, #4]
	lsls r1, r2, #0x16
	lsrs r1, r1, #0x16
	ldrh r0, [r5, #0xe]
	adds r1, r1, r0
	ldr r4, _0809D03C @ =0x000003FF
	adds r0, r4, #0
	ands r1, r0
	ldr r0, _0809D040 @ =0xFFFFFC00
	ands r0, r2
	orrs r0, r1
	strh r0, [r3, #4]
	ldrb r1, [r5, #0xa]
	movs r0, #3
	ands r1, r0
	lsls r1, r1, #2
	ldrb r2, [r3, #1]
	subs r0, #0x10
	ands r0, r2
	orrs r0, r1
	strb r0, [r3, #1]
	adds r7, #2
	movs r1, #1
	add sb, r1
	cmp sb, sl
	bge _0809D014
	b _0809CF10
_0809D014:
	ldr r2, _0809D044 @ =gNextOamSlot
	ldrb r0, [r2]
	add r0, sl
	strb r0, [r2]
	ldrb r0, [r5, #7]
	adds r0, #1
	strb r0, [r5, #7]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809D030: .4byte 0x000001FF
_0809D034: .4byte gOamData
_0809D038: .4byte 0xFFFFFE00
_0809D03C: .4byte 0x000003FF
_0809D040: .4byte 0xFFFFFC00
_0809D044: .4byte gNextOamSlot

	thumb_func_start CutsceneMonologueResetOam
CutsceneMonologueResetOam: @ 0x0809D048
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0809D08C @ =gNonGameplayRam
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #3
	adds r1, r1, r2
	ldr r2, _0809D090 @ =0x0000021A
	adds r0, r1, r2
	movs r2, #0
	strb r2, [r0]
	ldr r3, _0809D094 @ =0x0000021B
	adds r0, r1, r3
	strb r2, [r0]
	adds r3, #2
	adds r0, r1, r3
	strb r2, [r0]
	adds r3, #1
	adds r0, r1, r3
	strb r2, [r0]
	adds r3, #1
	adds r0, r1, r3
	strb r2, [r0]
	adds r3, #1
	adds r0, r1, r3
	strb r2, [r0]
	adds r3, #1
	adds r0, r1, r3
	strb r2, [r0]
	ldr r0, _0809D098 @ =0x00000222
	adds r1, r1, r0
	strh r2, [r1]
	bx lr
	.align 2, 0
_0809D08C: .4byte gNonGameplayRam
_0809D090: .4byte 0x0000021A
_0809D094: .4byte 0x0000021B
_0809D098: .4byte 0x00000222

	thumb_func_start unk_9d09c
unk_9d09c: @ 0x0809D09C
	bx lr
	.align 2, 0

	thumb_func_start unk_9d0a0
unk_9d0a0: @ 0x0809D0A0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r1, _0809D0E4 @ =0x040000D4
	ldr r0, _0809D0E8 @ =0x02001000
	str r0, [r1]
	ldr r0, _0809D0EC @ =0x02002000
	str r0, [r1, #4]
	ldr r0, _0809D0F0 @ =0x84000054
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r3, _0809D0F4 @ =gNonGameplayRam
	ldrh r0, [r3, #0xe]
	ldrh r2, [r3, #0xa]
	subs r1, r0, r2
	lsls r1, r1, #0x10
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	lsrs r2, r1, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0
	bge _0809D0F8
	rsbs r0, r0, #0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r1, #0xa
	ldrsh r0, [r3, r1]
	lsls r0, r0, #1
	movs r2, #0
	cmp r5, r0
	ble _0809D0FA
	movs r2, #0xa1
	b _0809D0FA
	.align 2, 0
_0809D0E4: .4byte 0x040000D4
_0809D0E8: .4byte 0x02001000
_0809D0EC: .4byte 0x02002000
_0809D0F0: .4byte 0x84000054
_0809D0F4: .4byte gNonGameplayRam
_0809D0F8:
	movs r5, #0
_0809D0FA:
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x9f
	ble _0809D104
	movs r7, #0xa0
_0809D104:
	ldr r0, _0809D1B8 @ =0x083E3294
	movs r4, #0xa
	ldrsh r1, [r3, r4]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r1, [r1]
	mov ip, r1
	ldr r4, _0809D1BC @ =0x02001000
	movs r6, #0
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	lsls r2, r7, #0x10
	cmp r6, r0
	bge _0809D138
	movs r7, #0
	adds r1, r0, #0
_0809D124:
	strh r7, [r4]
	adds r4, #2
	lsls r0, r6, #0x10
	movs r3, #0x80
	lsls r3, r3, #9
	adds r0, r0, r3
	lsrs r6, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r1
	blt _0809D124
_0809D138:
	lsls r0, r6, #0x10
	asrs r1, r2, #0x10
	cmp r0, r2
	bgt _0809D192
	ldr r0, _0809D1C0 @ =gNonGameplayRam
	mov r8, r0
	adds r7, r1, #0
_0809D146:
	lsls r0, r5, #2
	add r0, ip
	mov r2, r8
	ldrh r1, [r2, #0xc]
	ldrh r2, [r0, #2]
	adds r2, r1, r2
	lsls r2, r2, #0x10
	ldrh r0, [r0]
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	lsrs r1, r2, #0x10
	cmp r2, #0
	bge _0809D164
	movs r1, #0
_0809D164:
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf0
	ble _0809D16E
	movs r3, #0xf0
_0809D16E:
	lsls r1, r1, #0x10
	asrs r1, r1, #8
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	orrs r0, r1
	strh r0, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	lsls r0, r6, #0x10
	movs r3, #0x80
	lsls r3, r3, #9
	adds r0, r0, r3
	lsrs r6, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r7
	ble _0809D146
_0809D192:
	lsls r1, r6, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0x9f
	bgt _0809D1AC
	movs r2, #0
_0809D19C:
	strh r2, [r4]
	adds r4, #2
	movs r0, #0x80
	lsls r0, r0, #9
	adds r1, r1, r0
	asrs r0, r1, #0x10
	cmp r0, #0x9f
	ble _0809D19C
_0809D1AC:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809D1B8: .4byte 0x083E3294
_0809D1BC: .4byte 0x02001000
_0809D1C0: .4byte gNonGameplayRam

	thumb_func_start unk_9d1c4
unk_9d1c4: @ 0x0809D1C4
	ldr r0, _0809D1D8 @ =0x04000006
	ldrh r0, [r0]
	ldr r1, _0809D1DC @ =0x04000040
	lsls r0, r0, #0x10
	asrs r0, r0, #0xf
	ldr r2, _0809D1E0 @ =0x02002000
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_0809D1D8: .4byte 0x04000006
_0809D1DC: .4byte 0x04000040
_0809D1E0: .4byte 0x02002000

	thumb_func_start CutsceneMonologueDestroyOamOfType
CutsceneMonologueDestroyOamOfType: @ 0x0809D1E4
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r3, #0
	ldr r6, _0809D214 @ =gNonGameplayRam
	movs r7, #2
	rsbs r7, r7, #0
	movs r5, #0
_0809D1F4:
	lsls r0, r3, #3
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r2, r0, r6
	adds r1, r2, #0
	adds r1, #0x28
	ldrb r0, [r1]
	cmp r0, r4
	bne _0809D218
	strb r5, [r1]
	adds r2, #0x2e
	ldrb r1, [r2]
	adds r0, r7, #0
	ands r0, r1
	strb r0, [r2]
	b _0809D222
	.align 2, 0
_0809D214: .4byte gNonGameplayRam
_0809D218:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _0809D1F4
_0809D222:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start CutsceneFadeIn
CutsceneFadeIn: @ 0x0809D228
	push {lr}
	bl CutsceneProcessOam
	bl CutsceneDrawAllOam
	ldr r1, _0809D244 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _0809D23E
	subs r0, #1
	strh r0, [r1]
_0809D23E:
	pop {r0}
	bx r0
	.align 2, 0
_0809D244: .4byte gWrittenToBldy

	thumb_func_start CutsceneFadeOut
CutsceneFadeOut: @ 0x0809D248
	push {lr}
	bl CutsceneProcessOam
	bl CutsceneDrawAllOam
	ldr r1, _0809D264 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0809D25E
	adds r0, #1
	strh r0, [r1]
_0809D25E:
	pop {r0}
	bx r0
	.align 2, 0
_0809D264: .4byte gWrittenToBldy

	thumb_func_start CutsceneDestroyOamOfType
CutsceneDestroyOamOfType: @ 0x0809D268
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r3, #0
	ldr r6, _0809D298 @ =gNonGameplayRam
	movs r7, #2
	rsbs r7, r7, #0
	movs r5, #0
_0809D278:
	lsls r0, r3, #3
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r2, r0, r6
	adds r1, r2, #0
	adds r1, #0x28
	ldrb r0, [r1]
	cmp r0, r4
	bne _0809D29C
	strb r5, [r1]
	adds r2, #0x2e
	ldrb r1, [r2]
	adds r0, r7, #0
	ands r0, r1
	strb r0, [r2]
	b _0809D2A6
	.align 2, 0
_0809D298: .4byte gNonGameplayRam
_0809D29C:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _0809D278
_0809D2A6:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start CutsceneProcessOam
CutsceneProcessOam: @ 0x0809D2AC
	push {r4, r5, lr}
	ldr r1, _0809D2F0 @ =gNonGameplayRam
	movs r0, #0
	strb r0, [r1, #0x12]
	movs r5, #0
	adds r4, r1, #0
_0809D2B8:
	lsls r0, r5, #3
	adds r0, r0, r5
	lsls r2, r0, #2
	adds r0, r2, r4
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #0
	beq _0809D2E0
	adds r1, r4, #0
	adds r1, #0x38
	adds r1, r2, r1
	adds r0, r4, #0
	adds r0, #0x18
	adds r0, r2, r0
	ldr r1, [r1]
	bl _call_via_r1
	ldrb r0, [r4, #0x12]
	adds r0, #1
	strb r0, [r4, #0x12]
_0809D2E0:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xf
	bls _0809D2B8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809D2F0: .4byte gNonGameplayRam

	thumb_func_start CutsceneDrawAllOam
CutsceneDrawAllOam: @ 0x0809D2F4
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r5, _0809D334 @ =gNonGameplayRam
	adds r6, r5, #0
	adds r6, #0x18
_0809D2FE:
	lsls r0, r4, #3
	adds r0, r0, r4
	lsls r1, r0, #2
	adds r0, r1, r5
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r0, r0, #0x1f
	cmp r0, #0
	beq _0809D316
	adds r0, r1, r6
	bl CutsceneDrawOam
_0809D316:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xf
	bls _0809D2FE
	bl ResetFreeOam
	ldr r0, _0809D338 @ =gNextOamSlot
	movs r1, #0
	strb r1, [r0]
	ldr r0, _0809D33C @ =0x03001238
	strb r1, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809D334: .4byte gNonGameplayRam
_0809D338: .4byte gNextOamSlot
_0809D33C: .4byte 0x03001238

	thumb_func_start CutsceneDrawOam
CutsceneDrawOam: @ 0x0809D340
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	mov r8, r0
	ldr r3, _0809D438 @ =gNextOamSlot
	ldrb r0, [r3]
	lsls r0, r0, #3
	ldr r2, _0809D43C @ =gOamData
	adds r0, r0, r2
	mov ip, r0
	mov r0, r8
	ldrb r5, [r0, #0x11]
	lsls r1, r5, #3
	ldr r0, [r0, #0x1c]
	adds r4, r0, r1
	ldrb r0, [r4, #4]
	mov r1, r8
	ldrb r1, [r1, #0x12]
	cmp r0, r1
	bne _0809D37A
	adds r0, r5, #1
	movs r1, #0
	mov r2, r8
	strb r0, [r2, #0x11]
	strb r1, [r2, #0x12]
	adds r4, #8
_0809D37A:
	ldrb r1, [r4, #4]
	cmp r1, #0
	bne _0809D38A
	mov r3, r8
	ldrb r0, [r3, #0x11]
	lsls r0, r0, #3
	subs r4, r4, r0
	strb r1, [r3, #0x11]
_0809D38A:
	ldr r4, [r4]
	mov sl, r4
	ldrh r4, [r4]
	str r4, [sp, #0x18]
	movs r0, #2
	add sl, r0
	mov r2, r8
	ldrb r1, [r2, #0x16]
	lsls r0, r1, #0x1d
	lsrs r0, r0, #0x1e
	cmp r0, #0
	beq _0809D3A4
	b _0809D504
_0809D3A4:
	movs r3, #0
	str r3, [sp, #0x14]
	cmp r3, r4
	blt _0809D3AE
	b _0809DB26
_0809D3AE:
	ldr r4, _0809D440 @ =0x000001FF
	adds r6, r4, #0
	movs r0, #3
	mov sb, r0
_0809D3B6:
	mov r1, sl
	ldrh r5, [r1]
	movs r2, #2
	add sl, r2
	mov r3, sl
	ldrh r7, [r3]
	add sl, r2
	mov r4, ip
	strh r5, [r4]
	add ip, r2
	mov r0, ip
	strh r7, [r0]
	add ip, r2
	mov r1, sl
	ldrh r0, [r1]
	mov r2, ip
	strh r0, [r2]
	movs r3, #2
	add sl, r3
	add ip, r3
	ldr r4, _0809D438 @ =gNextOamSlot
	ldrb r0, [r4]
	ldr r1, [sp, #0x14]
	adds r3, r0, r1
	mov r2, r8
	ldrb r0, [r2, #0x16]
	lsls r0, r0, #0x19
	lsrs r1, r0, #0x1f
	cmp r1, #1
	bne _0809D448
	lsls r4, r3, #3
	ldr r3, _0809D43C @ =gOamData
	adds r2, r4, r3
	ldrb r3, [r2, #3]
	lsls r0, r3, #0x1b
	lsrs r0, r0, #0x1f
	eors r0, r1
	lsls r0, r0, #4
	movs r1, #0x11
	rsbs r1, r1, #0
	ands r1, r3
	orrs r1, r0
	strb r1, [r2, #3]
	lsrs r1, r1, #6
	ldrb r0, [r2, #1]
	lsrs r0, r0, #6
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r0, _0809D444 @ =0x0863A184
	adds r1, r1, r0
	ldrb r0, [r1]
	lsls r0, r0, #3
	adds r0, r7, r0
	mov r2, r8
	ldrh r1, [r2]
	subs r0, r1, r0
	ands r0, r6
	str r0, [sp]
	ldrh r0, [r2, #2]
	adds r5, r5, r0
	movs r0, #0xff
	ands r5, r0
	str r5, [sp, #4]
	b _0809D45E
	.align 2, 0
_0809D438: .4byte gNextOamSlot
_0809D43C: .4byte gOamData
_0809D440: .4byte 0x000001FF
_0809D444: .4byte 0x0863A184
_0809D448:
	mov r4, r8
	ldrh r0, [r4, #2]
	adds r5, r5, r0
	movs r0, #0xff
	ands r5, r0
	str r5, [sp, #4]
	ldrh r0, [r4]
	adds r0, r7, r0
	ands r0, r6
	str r0, [sp]
	lsls r4, r3, #3
_0809D45E:
	ldr r0, _0809D4F4 @ =gOamData
	adds r3, r4, r0
	mov r1, sp
	ldrb r1, [r1, #4]
	strb r1, [r3]
	ldr r2, [sp]
	ands r2, r6
	ldrh r1, [r3, #2]
	ldr r0, _0809D4F8 @ =0xFFFFFE00
	ands r0, r1
	orrs r0, r2
	strh r0, [r3, #2]
	mov r4, r8
	ldrb r0, [r4, #0x18]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1e
	mov r1, sb
	ands r0, r1
	lsls r0, r0, #2
	ldrb r2, [r3, #5]
	movs r1, #0xd
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r3, #5]
	lsrs r2, r1, #4
	ldrb r0, [r4, #0x18]
	lsrs r0, r0, #4
	adds r2, r2, r0
	lsls r2, r2, #4
	movs r0, #0xf
	ands r1, r0
	orrs r1, r2
	strb r1, [r3, #5]
	ldrh r5, [r3, #4]
	lsls r2, r5, #0x16
	lsrs r2, r2, #0x16
	ldrb r4, [r4, #0x17]
	mov r1, r8
	ldrb r0, [r1, #0x18]
	movs r1, #3
	ands r0, r1
	lsls r0, r0, #8
	orrs r0, r4
	adds r2, r2, r0
	ldr r4, _0809D4FC @ =0x000003FF
	adds r0, r4, #0
	ands r2, r0
	ldr r0, _0809D500 @ =0xFFFFFC00
	ands r0, r5
	orrs r0, r2
	strh r0, [r3, #4]
	mov r0, r8
	ldrb r1, [r0, #0x16]
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x1e
	mov r2, sb
	ands r1, r2
	lsls r1, r1, #2
	ldrb r2, [r3, #1]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3, #1]
	movs r3, #2
	add ip, r3
	ldr r4, [sp, #0x14]
	adds r4, #1
	str r4, [sp, #0x14]
	ldr r0, [sp, #0x18]
	cmp r4, r0
	bge _0809D4F2
	b _0809D3B6
_0809D4F2:
	b _0809DB26
	.align 2, 0
_0809D4F4: .4byte gOamData
_0809D4F8: .4byte 0xFFFFFE00
_0809D4FC: .4byte 0x000003FF
_0809D500: .4byte 0xFFFFFC00
_0809D504:
	cmp r0, #1
	beq _0809D50A
	b _0809D7D4
_0809D50A:
	mov r2, r8
	ldrh r0, [r2]
	adds r0, #0x40
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldrh r0, [r2, #2]
	adds r0, #0x40
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	lsls r0, r1, #0x19
	cmp r0, #0
	blt _0809D52C
	ldrh r3, [r2, #4]
	str r3, [sp, #0xc]
	b _0809D538
_0809D52C:
	mov r4, r8
	ldrh r0, [r4, #4]
	rsbs r0, r0, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
_0809D538:
	lsls r0, r1, #0x18
	cmp r0, #0
	blt _0809D544
	mov r0, r8
	ldrh r0, [r0, #4]
	b _0809D54E
_0809D544:
	mov r1, r8
	ldrh r0, [r1, #4]
	rsbs r0, r0, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
_0809D54E:
	str r0, [sp, #0x10]
	movs r2, #0
	b _0809D782
_0809D554:
	mov r4, sl
	ldrh r5, [r4]
	movs r0, #2
	add sl, r0
	mov r1, sl
	ldrh r7, [r1]
	add sl, r0
	mov r2, ip
	strh r5, [r2]
	add ip, r0
	mov r3, ip
	strh r7, [r3]
	add ip, r0
	mov r4, sl
	ldrh r0, [r4]
	mov r1, ip
	strh r0, [r1]
	movs r2, #2
	add sl, r2
	add ip, r2
	ldr r3, _0809D7AC @ =gNextOamSlot
	ldrb r0, [r3]
	ldr r4, [sp, #0x14]
	adds r3, r0, r4
	lsls r0, r3, #3
	ldr r1, _0809D7B0 @ =gOamData
	adds r6, r0, r1
	ldrb r2, [r6, #3]
	mov sb, r2
	mov r3, sb
	lsrs r1, r3, #6
	ldrb r0, [r6, #1]
	lsrs r0, r0, #6
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r4, _0809D7B4 @ =0x0863A184
	adds r0, r1, r4
	ldrb r2, [r0]
	ldr r0, _0809D7B8 @ =0x0863A190
	adds r1, r1, r0
	ldrb r3, [r1]
	ldr r1, [sp, #4]
	adds r5, r5, r1
	movs r0, #0xff
	ands r5, r0
	ldr r0, [sp]
	adds r4, r7, r0
	ldr r1, _0809D7BC @ =0x000001FF
	adds r0, r1, #0
	ands r4, r0
	ldr r0, [sp]
	subs r1, r4, r0
	lsls r2, r2, #2
	str r2, [sp, #0x1c]
	adds r1, r2, r1
	ldr r0, [sp, #4]
	subs r2, r5, r0
	lsls r3, r3, #2
	str r3, [sp, #0x20]
	adds r2, r3, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r3, [sp, #0xc]
	lsls r0, r3, #0x10
	asrs r3, r0, #0x10
	adds r0, r1, #0
	muls r0, r3, r0
	asrs r0, r0, #8
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldr r1, [sp, #0x10]
	lsls r0, r1, #0x10
	asrs r7, r0, #0x10
	adds r0, r2, #0
	muls r0, r7, r0
	asrs r0, r0, #8
	subs r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	mov r1, sb
	lsls r0, r1, #0x1b
	cmp r0, #0
	bge _0809D612
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r6, #3]
	rsbs r0, r3, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
_0809D612:
	ldrb r1, [r6, #3]
	lsls r0, r1, #0x1a
	cmp r0, #0
	bge _0809D62A
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r6, #3]
	rsbs r0, r7, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x10]
_0809D62A:
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	ldr r3, [sp, #8]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	ldr r0, [sp]
	subs r4, r4, r0
	ldr r1, [sp, #0x1c]
	adds r4, r1, r4
	ldr r2, [sp, #4]
	subs r3, r5, r2
	ldr r0, [sp, #0x20]
	adds r3, r0, r3
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r2, r8
	ldrb r1, [r2, #0x15]
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #1
	ldr r2, _0809D7C0 @ =0x080A4FA4
	adds r0, r0, r2
	movs r2, #0
	ldrsh r5, [r0, r2]
	adds r2, r4, #0
	muls r2, r5, r2
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	lsls r1, r1, #1
	ldr r0, _0809D7C0 @ =0x080A4FA4
	adds r1, r1, r0
	movs r0, #0
	ldrsh r1, [r1, r0]
	adds r0, r3, #0
	muls r0, r1, r0
	subs r2, r2, r0
	lsls r2, r2, #8
	adds r0, r4, #0
	muls r0, r1, r0
	adds r1, r3, #0
	muls r1, r5, r1
	adds r0, r0, r1
	lsls r0, r0, #8
	asrs r2, r2, #0x10
	ldr r1, [sp, #0x1c]
	subs r2, r2, r1
	asrs r0, r0, #0x10
	ldr r3, [sp, #0x20]
	subs r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r4, [sp, #4]
	adds r0, r5, r4
	subs r0, #0x40
	strb r0, [r6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldr r0, [sp]
	adds r2, r2, r0
	subs r2, #0x40
	ldr r0, _0809D7BC @ =0x000001FF
	ands r2, r0
	ldrh r1, [r6, #2]
	ldr r0, _0809D7C4 @ =0xFFFFFE00
	ands r0, r1
	orrs r0, r2
	strh r0, [r6, #2]
	ldrb r1, [r6, #1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #1
	orrs r0, r1
	strb r0, [r6, #1]
	ldr r2, _0809D7C8 @ =0x03001238
	ldrb r1, [r2]
	movs r2, #0x10
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0809D6E8
	ldrb r0, [r6, #3]
	movs r1, #0x20
	orrs r0, r1
	strb r0, [r6, #3]
_0809D6E8:
	ldr r3, _0809D7C8 @ =0x03001238
	ldrb r1, [r3]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0809D6FA
	ldrb r0, [r6, #3]
	orrs r0, r2
	strb r0, [r6, #3]
_0809D6FA:
	ldr r4, _0809D7C8 @ =0x03001238
	ldrb r0, [r4]
	movs r1, #7
	ands r1, r0
	lsls r1, r1, #1
	ldrb r2, [r6, #3]
	movs r0, #0xf
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r6, #3]
	mov r1, r8
	ldrb r0, [r1, #0x18]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1e
	movs r2, #3
	ands r0, r2
	lsls r0, r0, #2
	ldrb r2, [r6, #5]
	movs r1, #0xd
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r6, #5]
	lsrs r2, r1, #4
	mov r3, r8
	ldrb r0, [r3, #0x18]
	lsrs r0, r0, #4
	adds r2, r2, r0
	lsls r2, r2, #4
	movs r0, #0xf
	ands r1, r0
	orrs r1, r2
	strb r1, [r6, #5]
	ldrh r4, [r6, #4]
	lsls r2, r4, #0x16
	lsrs r2, r2, #0x16
	ldrb r3, [r3, #0x17]
	mov r1, r8
	ldrb r0, [r1, #0x18]
	movs r1, #3
	ands r0, r1
	lsls r0, r0, #8
	orrs r0, r3
	adds r2, r2, r0
	ldr r3, _0809D7CC @ =0x000003FF
	adds r0, r3, #0
	ands r2, r0
	ldr r0, _0809D7D0 @ =0xFFFFFC00
	ands r0, r4
	orrs r0, r2
	strh r0, [r6, #4]
	mov r4, r8
	ldrb r1, [r4, #0x16]
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x1e
	movs r0, #3
	ands r1, r0
	lsls r1, r1, #2
	ldrb r2, [r6, #1]
	subs r0, #0x10
	ands r0, r2
	orrs r0, r1
	strb r0, [r6, #1]
	movs r1, #2
	add ip, r1
	ldr r2, [sp, #0x14]
	adds r2, #1
_0809D782:
	str r2, [sp, #0x14]
	ldr r3, [sp, #0x18]
	cmp r2, r3
	bge _0809D78C
	b _0809D554
_0809D78C:
	ldr r4, _0809D7C8 @ =0x03001238
	ldrb r0, [r4]
	lsls r0, r0, #0x1a
	lsrs r7, r0, #0x18
	mov r1, r8
	ldrb r0, [r1, #0x15]
	adds r0, #0x40
	lsls r0, r0, #1
	ldr r2, _0809D7C0 @ =0x080A4FA4
	adds r0, r0, r2
	movs r3, #0
	ldrsh r5, [r0, r3]
	ldr r0, [sp, #0xc]
	lsls r4, r0, #0x10
	b _0809DA7E
	.align 2, 0
_0809D7AC: .4byte gNextOamSlot
_0809D7B0: .4byte gOamData
_0809D7B4: .4byte 0x0863A184
_0809D7B8: .4byte 0x0863A190
_0809D7BC: .4byte 0x000001FF
_0809D7C0: .4byte 0x080A4FA4
_0809D7C4: .4byte 0xFFFFFE00
_0809D7C8: .4byte 0x03001238
_0809D7CC: .4byte 0x000003FF
_0809D7D0: .4byte 0xFFFFFC00
_0809D7D4:
	cmp r0, #3
	beq _0809D7DA
	b _0809DB26
_0809D7DA:
	mov r3, r8
	ldrh r0, [r3]
	adds r0, #0x40
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldrh r0, [r3, #2]
	adds r0, #0x40
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	lsls r0, r1, #0x19
	cmp r0, #0
	blt _0809D7FC
	ldrh r4, [r3, #4]
	str r4, [sp, #0xc]
	b _0809D808
_0809D7FC:
	mov r2, r8
	ldrh r0, [r2, #4]
	rsbs r0, r0, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
_0809D808:
	lsls r0, r1, #0x18
	cmp r0, #0
	blt _0809D816
	mov r3, r8
	ldrh r3, [r3, #4]
	str r3, [sp, #0x10]
	b _0809D822
_0809D816:
	mov r4, r8
	ldrh r0, [r4, #4]
	rsbs r0, r0, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x10]
_0809D822:
	movs r0, #0
	str r0, [sp, #0x14]
	ldr r1, [sp, #0x18]
	cmp r0, r1
	blt _0809D82E
	b _0809DA62
_0809D82E:
	mov r2, sl
	ldrh r5, [r2]
	movs r3, #2
	add sl, r3
	mov r4, sl
	ldrh r7, [r4]
	add sl, r3
	mov r0, ip
	strh r5, [r0]
	add ip, r3
	mov r1, ip
	strh r7, [r1]
	add ip, r3
	mov r2, sl
	ldrh r0, [r2]
	mov r3, ip
	strh r0, [r3]
	movs r4, #2
	add sl, r4
	add ip, r4
	ldr r1, _0809DB48 @ =gNextOamSlot
	ldrb r0, [r1]
	ldr r2, [sp, #0x14]
	adds r3, r0, r2
	lsls r0, r3, #3
	ldr r3, _0809DB4C @ =gOamData
	adds r6, r0, r3
	ldrb r4, [r6, #3]
	mov sb, r4
	mov r0, sb
	lsrs r1, r0, #6
	ldrb r0, [r6, #1]
	lsrs r0, r0, #6
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r2, _0809DB50 @ =0x0863A184
	adds r0, r1, r2
	ldrb r2, [r0]
	ldr r3, _0809DB54 @ =0x0863A190
	adds r1, r1, r3
	ldrb r3, [r1]
	ldr r4, [sp, #4]
	adds r5, r5, r4
	movs r0, #0xff
	ands r5, r0
	ldr r0, [sp]
	adds r4, r7, r0
	ldr r1, _0809DB58 @ =0x000001FF
	adds r0, r1, #0
	ands r4, r0
	ldr r0, [sp]
	subs r1, r4, r0
	lsls r2, r2, #2
	str r2, [sp, #0x24]
	adds r1, r2, r1
	ldr r0, [sp, #4]
	subs r2, r5, r0
	lsls r3, r3, #2
	str r3, [sp, #0x28]
	adds r2, r3, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r3, [sp, #0xc]
	lsls r0, r3, #0x10
	asrs r3, r0, #0x10
	adds r0, r1, #0
	muls r0, r3, r0
	asrs r0, r0, #8
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldr r1, [sp, #0x10]
	lsls r0, r1, #0x10
	asrs r7, r0, #0x10
	adds r0, r2, #0
	muls r0, r7, r0
	asrs r0, r0, #8
	subs r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	mov r1, sb
	lsls r0, r1, #0x1b
	cmp r0, #0
	bge _0809D8EC
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r6, #3]
	rsbs r0, r3, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
_0809D8EC:
	ldrb r1, [r6, #3]
	lsls r0, r1, #0x1a
	cmp r0, #0
	bge _0809D904
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r6, #3]
	rsbs r0, r7, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x10]
_0809D904:
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	ldr r3, [sp, #8]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	ldr r0, [sp]
	subs r4, r4, r0
	ldr r1, [sp, #0x24]
	adds r4, r1, r4
	ldr r2, [sp, #4]
	subs r3, r5, r2
	ldr r0, [sp, #0x28]
	adds r3, r0, r3
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r2, r8
	ldrb r1, [r2, #0x15]
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #1
	ldr r2, _0809DB5C @ =0x080A4FA4
	adds r0, r0, r2
	movs r2, #0
	ldrsh r5, [r0, r2]
	adds r2, r4, #0
	muls r2, r5, r2
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	lsls r1, r1, #1
	ldr r0, _0809DB5C @ =0x080A4FA4
	adds r1, r1, r0
	movs r0, #0
	ldrsh r1, [r1, r0]
	adds r0, r3, #0
	muls r0, r1, r0
	subs r2, r2, r0
	lsls r2, r2, #8
	adds r0, r4, #0
	muls r0, r1, r0
	adds r1, r3, #0
	muls r1, r5, r1
	adds r0, r0, r1
	lsls r0, r0, #8
	ldr r3, [sp, #0x24]
	lsls r1, r3, #1
	asrs r2, r2, #0x10
	subs r2, r2, r1
	ldr r4, [sp, #0x28]
	lsls r1, r4, #1
	asrs r0, r0, #0x10
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r1, [sp, #4]
	adds r0, r5, r1
	subs r0, #0x40
	strb r0, [r6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldr r3, [sp]
	adds r2, r2, r3
	subs r2, #0x40
	ldr r0, _0809DB58 @ =0x000001FF
	ands r2, r0
	ldrh r1, [r6, #2]
	ldr r0, _0809DB60 @ =0xFFFFFE00
	ands r0, r1
	orrs r0, r2
	strh r0, [r6, #2]
	ldrb r0, [r6, #1]
	movs r5, #3
	orrs r0, r5
	strb r0, [r6, #1]
	ldr r4, _0809DB64 @ =0x03001238
	ldrb r1, [r4]
	movs r2, #0x10
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0809D9C0
	ldrb r0, [r6, #3]
	movs r1, #0x20
	orrs r0, r1
	strb r0, [r6, #3]
_0809D9C0:
	ldr r0, _0809DB64 @ =0x03001238
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0809D9D2
	ldrb r0, [r6, #3]
	orrs r0, r2
	strb r0, [r6, #3]
_0809D9D2:
	ldr r1, _0809DB64 @ =0x03001238
	ldrb r0, [r1]
	movs r1, #7
	ands r1, r0
	lsls r1, r1, #1
	ldrb r2, [r6, #3]
	movs r0, #0xf
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r6, #3]
	mov r2, r8
	ldrb r0, [r2, #0x18]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1e
	ands r0, r5
	lsls r0, r0, #2
	ldrb r2, [r6, #5]
	movs r1, #0xd
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r6, #5]
	lsrs r2, r1, #4
	mov r3, r8
	ldrb r0, [r3, #0x18]
	lsrs r0, r0, #4
	adds r2, r2, r0
	lsls r2, r2, #4
	movs r0, #0xf
	ands r1, r0
	orrs r1, r2
	strb r1, [r6, #5]
	ldrh r4, [r6, #4]
	lsls r2, r4, #0x16
	lsrs r2, r2, #0x16
	ldrb r3, [r3, #0x17]
	mov r1, r8
	ldrb r0, [r1, #0x18]
	movs r1, #3
	ands r0, r1
	lsls r0, r0, #8
	orrs r0, r3
	adds r2, r2, r0
	ldr r3, _0809DB68 @ =0x000003FF
	adds r0, r3, #0
	ands r2, r0
	ldr r0, _0809DB6C @ =0xFFFFFC00
	ands r0, r4
	orrs r0, r2
	strh r0, [r6, #4]
	mov r4, r8
	ldrb r1, [r4, #0x16]
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x1e
	ands r1, r5
	lsls r1, r1, #2
	ldrb r2, [r6, #1]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r6, #1]
	movs r0, #2
	add ip, r0
	ldr r1, [sp, #0x14]
	adds r1, #1
	str r1, [sp, #0x14]
	ldr r2, [sp, #0x18]
	cmp r1, r2
	bge _0809DA62
	b _0809D82E
_0809DA62:
	ldr r3, _0809DB64 @ =0x03001238
	ldrb r0, [r3]
	lsls r0, r0, #0x1a
	lsrs r7, r0, #0x18
	mov r4, r8
	ldrb r0, [r4, #0x15]
	adds r0, #0x40
	lsls r0, r0, #1
	ldr r1, _0809DB5C @ =0x080A4FA4
	adds r0, r0, r1
	movs r2, #0
	ldrsh r5, [r0, r2]
	ldr r3, [sp, #0xc]
	lsls r4, r3, #0x10
_0809DA7E:
	asrs r4, r4, #0x10
	adds r0, r4, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r5, #0
	bl FixedMultiplication
	ldr r6, _0809DB4C @ =gOamData
	lsls r1, r7, #3
	adds r1, r1, r6
	strh r0, [r1, #6]
	mov r1, r8
	ldrb r0, [r1, #0x15]
	lsls r0, r0, #1
	ldr r2, _0809DB5C @ =0x080A4FA4
	adds r0, r0, r2
	movs r3, #0
	ldrsh r5, [r0, r3]
	adds r0, r4, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r5, #0
	bl FixedMultiplication
	adds r1, r7, #1
	lsls r1, r1, #3
	adds r1, r1, r6
	strh r0, [r1, #6]
	mov r4, r8
	ldrb r0, [r4, #0x15]
	lsls r0, r0, #1
	ldr r1, _0809DB5C @ =0x080A4FA4
	adds r0, r0, r1
	ldrh r4, [r0]
	rsbs r4, r4, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	ldr r2, [sp, #0x10]
	lsls r5, r2, #0x10
	asrs r5, r5, #0x10
	adds r0, r5, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl FixedMultiplication
	adds r1, r7, #2
	lsls r1, r1, #3
	adds r1, r1, r6
	strh r0, [r1, #6]
	mov r3, r8
	ldrb r0, [r3, #0x15]
	adds r0, #0x40
	lsls r0, r0, #1
	ldr r4, _0809DB5C @ =0x080A4FA4
	adds r0, r0, r4
	movs r1, #0
	ldrsh r4, [r0, r1]
	adds r0, r5, #0
	bl FixedInverse
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl FixedMultiplication
	adds r1, r7, #3
	lsls r1, r1, #3
	adds r1, r1, r6
	strh r0, [r1, #6]
	ldr r2, _0809DB64 @ =0x03001238
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
_0809DB26:
	ldr r0, _0809DB48 @ =gNextOamSlot
	ldrb r1, [r0]
	ldr r3, [sp, #0x18]
	adds r1, r1, r3
	strb r1, [r0]
	mov r4, r8
	ldrb r0, [r4, #0x12]
	adds r0, #1
	strb r0, [r4, #0x12]
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809DB48: .4byte gNextOamSlot
_0809DB4C: .4byte gOamData
_0809DB50: .4byte 0x0863A184
_0809DB54: .4byte 0x0863A190
_0809DB58: .4byte 0x000001FF
_0809DB5C: .4byte 0x080A4FA4
_0809DB60: .4byte 0xFFFFFE00
_0809DB64: .4byte 0x03001238
_0809DB68: .4byte 0x000003FF
_0809DB6C: .4byte 0xFFFFFC00

	thumb_func_start unk_9db70
unk_9db70: @ 0x0809DB70
	bx lr
	.align 2, 0

	thumb_func_start SA_XCloseUpSubroutine
SA_XCloseUpSubroutine: @ 0x0809DB74
	push {r4, r5, lr}
	ldr r0, _0809DB90 @ =gNextOamSlot
	movs r2, #0
	strb r2, [r0]
	movs r5, #0
	ldr r4, _0809DB94 @ =0x03000B85
	ldrb r0, [r4]
	cmp r0, #1
	beq _0809DBA8
	cmp r0, #1
	bgt _0809DB98
	cmp r0, #0
	beq _0809DBA2
	b _0809DBDC
	.align 2, 0
_0809DB90: .4byte gNextOamSlot
_0809DB94: .4byte 0x03000B85
_0809DB98:
	cmp r0, #2
	beq _0809DBB4
	cmp r0, #3
	beq _0809DBC4
	b _0809DBDC
_0809DBA2:
	bl SA_XCloseUpInit
	b _0809DBBC
_0809DBA8:
	ldr r0, _0809DBB0 @ =gWrittenToBldy
	strh r5, [r0]
	b _0809DBBC
	.align 2, 0
_0809DBB0: .4byte gWrittenToBldy
_0809DBB4:
	bl SA_XCloseUp
	cmp r0, #0
	beq _0809DBDC
_0809DBBC:
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	b _0809DBDC
_0809DBC4:
	ldr r1, _0809DBD4 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0809DBD8
	movs r0, #0x10
	strh r0, [r1]
	b _0809DBDC
	.align 2, 0
_0809DBD4: .4byte gWrittenToBldy
_0809DBD8:
	movs r5, #1
	strb r2, [r4]
_0809DBDC:
	bl ResetFreeOam
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start SA_XCloseUpInit
SA_XCloseUpInit: @ 0x0809DBE8
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	ldr r3, _0809DCE8 @ =0x04000208
	movs r4, #0
	strh r4, [r3]
	ldr r2, _0809DCEC @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _0809DCF0 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0809DCF4 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0809DCF8 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0809DCFC @ =unk_9ddb0
	bl CallbackSetVBlank
	ldr r1, _0809DD00 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _0809DD04 @ =0x04000054
	ldr r7, _0809DD08 @ =gWrittenToBldy
	movs r6, #0x10
	strh r6, [r7]
	strh r6, [r0]
	subs r0, #0x54
	strh r4, [r0]
	movs r5, #0
	str r5, [sp]
	ldr r4, _0809DD0C @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r0, _0809DD10 @ =gNonGameplayRam
	str r0, [r4, #4]
	ldr r0, _0809DD14 @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809DD18 @ =gOamData
	str r0, [r4]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _0809DD1C @ =0x84000100
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809DD20 @ =0x06010000
	str r0, [r4]
	ldr r0, _0809DD24 @ =0x0201C000
	str r0, [r4, #4]
	ldr r0, _0809DD28 @ =0x80004000
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809DD2C @ =0x0872F2E0
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl CallLZ77UncompVram
	ldr r0, _0809DD30 @ =0x0872EEE0
	str r0, [r4]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	str r1, [r4, #4]
	ldr r0, _0809DD34 @ =0x80000100
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	strh r5, [r1]
	ldr r0, _0809DD38 @ =0x087338C0
	ldr r1, _0809DD3C @ =0x0600C000
	bl CallLZ77UncompVram
	ldr r0, _0809DD40 @ =0x08733D58
	ldr r1, _0809DD44 @ =0x0600D000
	bl CallLZ77UncompVram
	ldr r0, _0809DD48 @ =0x04000010
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	strh r6, [r7]
	ldr r0, _0809DD4C @ =gEventCounter
	ldrb r0, [r0]
	cmp r0, #0xc
	bne _0809DCAE
	strh r5, [r7]
_0809DCAE:
	ldr r0, _0809DD50 @ =0x03001220
	strh r6, [r0]
	ldr r0, _0809DD54 @ =0x03001222
	strh r5, [r0]
	ldr r1, _0809DD58 @ =0x04000008
	movs r2, #0xc0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _0809DD5C @ =0x00001A01
	adds r0, r2, #0
	strh r0, [r1]
	ldr r4, _0809DD60 @ =SA_XCloseUpVblank
	adds r0, r4, #0
	bl CallbackSetVBlank
	bl _call_via_r4
	ldr r1, _0809DD64 @ =gWrittenToDispcnt
	movs r2, #0xc0
	lsls r2, r2, #2
	adds r0, r2, #0
	strh r0, [r1]
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809DCE8: .4byte 0x04000208
_0809DCEC: .4byte 0x04000004
_0809DCF0: .4byte 0x0000FFEF
_0809DCF4: .4byte 0x04000200
_0809DCF8: .4byte 0x0000FFFD
_0809DCFC: .4byte unk_9ddb0
_0809DD00: .4byte 0x04000050
_0809DD04: .4byte 0x04000054
_0809DD08: .4byte gWrittenToBldy
_0809DD0C: .4byte 0x040000D4
_0809DD10: .4byte gNonGameplayRam
_0809DD14: .4byte 0x85000150
_0809DD18: .4byte gOamData
_0809DD1C: .4byte 0x84000100
_0809DD20: .4byte 0x06010000
_0809DD24: .4byte 0x0201C000
_0809DD28: .4byte 0x80004000
_0809DD2C: .4byte 0x0872F2E0
_0809DD30: .4byte 0x0872EEE0
_0809DD34: .4byte 0x80000100
_0809DD38: .4byte 0x087338C0
_0809DD3C: .4byte 0x0600C000
_0809DD40: .4byte 0x08733D58
_0809DD44: .4byte 0x0600D000
_0809DD48: .4byte 0x04000010
_0809DD4C: .4byte gEventCounter
_0809DD50: .4byte 0x03001220
_0809DD54: .4byte 0x03001222
_0809DD58: .4byte 0x04000008
_0809DD5C: .4byte 0x00001A01
_0809DD60: .4byte SA_XCloseUpVblank
_0809DD64: .4byte gWrittenToDispcnt

	thumb_func_start SA_XCloseUpVblank
SA_XCloseUpVblank: @ 0x0809DD68
	push {lr}
	ldr r1, _0809DD98 @ =0x04000054
	ldr r0, _0809DD9C @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r2, _0809DDA0 @ =0x04000052
	ldr r0, _0809DDA4 @ =0x03001222
	ldrh r0, [r0]
	lsls r0, r0, #8
	ldr r1, _0809DDA8 @ =0x03001220
	ldrh r1, [r1]
	orrs r0, r1
	strh r0, [r2]
	ldr r2, _0809DDAC @ =gWrittenToDispcnt
	ldrh r1, [r2]
	cmp r1, #0
	beq _0809DD94
	movs r0, #0x80
	lsls r0, r0, #0x13
	strh r1, [r0]
	movs r0, #0
	strh r0, [r2]
_0809DD94:
	pop {r0}
	bx r0
	.align 2, 0
_0809DD98: .4byte 0x04000054
_0809DD9C: .4byte gWrittenToBldy
_0809DDA0: .4byte 0x04000052
_0809DDA4: .4byte 0x03001222
_0809DDA8: .4byte 0x03001220
_0809DDAC: .4byte gWrittenToDispcnt

	thumb_func_start unk_9ddb0
unk_9ddb0: @ 0x0809DDB0
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start SA_XCloseUp
SA_XCloseUp: @ 0x0809DDBC
	push {lr}
	movs r2, #0
	ldr r0, _0809DDE0 @ =gNonGameplayRam
	ldrb r1, [r0, #2]
	adds r1, #1
	strb r1, [r0, #2]
	ldrb r0, [r0]
	cmp r0, #0
	bne _0809DDD8
	bl SA_XCloseUpProcess
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r2, r1, #0x1f
_0809DDD8:
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0
_0809DDE0: .4byte gNonGameplayRam

	thumb_func_start SA_XCloseUpProcess
SA_XCloseUpProcess: @ 0x0809DDE4
	push {r4, r5, r6, lr}
	movs r5, #0
	ldr r0, _0809DDFC @ =gNonGameplayRam
	ldrb r1, [r0, #1]
	adds r3, r0, #0
	cmp r1, #4
	bhi _0809DE90
	lsls r0, r1, #2
	ldr r1, _0809DE00 @ =_0809DE04
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809DDFC: .4byte gNonGameplayRam
_0809DE00: .4byte _0809DE04
_0809DE04: @ jump table
	.4byte _0809DE18 @ case 0
	.4byte _0809DE2C @ case 1
	.4byte _0809DE38 @ case 2
	.4byte _0809DE74 @ case 3
	.4byte _0809DE90 @ case 4
_0809DE18:
	ldr r1, _0809DE24 @ =0x04000050
	ldr r2, _0809DE28 @ =0x00003E41
	adds r0, r2, #0
	strh r0, [r1]
	b _0809DE7E
	.align 2, 0
_0809DE24: .4byte 0x04000050
_0809DE28: .4byte 0x00003E41
_0809DE2C:
	ldr r1, _0809DE34 @ =0x0873421C
	ldrb r0, [r3, #2]
	ldrb r1, [r1]
	b _0809DE7A
	.align 2, 0
_0809DE34: .4byte 0x0873421C
_0809DE38:
	ldr r1, _0809DE5C @ =0x03001220
	ldrh r0, [r1]
	adds r4, r0, #0
	cmp r4, #0
	bne _0809DE60
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r6, #0x80
	lsls r6, r6, #1
	adds r1, r6, #0
	eors r0, r1
	strh r0, [r2]
	ldrb r0, [r3, #1]
	adds r0, #1
	strb r0, [r3, #1]
	strb r4, [r3, #2]
	b _0809DEA4
	.align 2, 0
_0809DE5C: .4byte 0x03001220
_0809DE60:
	subs r0, #1
	strh r0, [r1]
	ldr r2, _0809DE70 @ =0x03001222
	movs r1, #0x10
	subs r1, r1, r0
	strh r1, [r2]
	b _0809DEA4
	.align 2, 0
_0809DE70: .4byte 0x03001222
_0809DE74:
	ldr r1, _0809DE8C @ =0x0873421C
	ldrb r0, [r3, #2]
	ldrb r1, [r1, #1]
_0809DE7A:
	cmp r0, r1
	bls _0809DEA4
_0809DE7E:
	ldrb r0, [r3, #1]
	adds r0, #1
	movs r1, #0
	strb r0, [r3, #1]
	strb r1, [r3, #2]
	b _0809DEA4
	.align 2, 0
_0809DE8C: .4byte 0x0873421C
_0809DE90:
	ldr r1, _0809DEAC @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	ldr r1, _0809DEB0 @ =gWrittenToBldy
	movs r0, #0x10
	strh r0, [r1]
	movs r0, #0
	strb r0, [r3, #1]
	strb r0, [r3, #2]
	movs r5, #1
_0809DEA4:
	adds r0, r5, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0809DEAC: .4byte 0x04000050
_0809DEB0: .4byte gWrittenToBldy

	thumb_func_start GameOverSubroutine
GameOverSubroutine: @ 0x0809DEB4
	push {r4, r5, lr}
	movs r5, #0
	ldr r4, _0809DECC @ =gSubGameMode1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0809DEE4
	cmp r0, #1
	bgt _0809DED0
	cmp r0, #0
	beq _0809DEDA
	b _0809DF4C
	.align 2, 0
_0809DECC: .4byte gSubGameMode1
_0809DED0:
	cmp r0, #2
	beq _0809DF02
	cmp r0, #3
	beq _0809DF1C
	b _0809DF4C
_0809DEDA:
	bl GameOverInit
	movs r0, #1
	strh r0, [r4]
	b _0809DF4C
_0809DEE4:
	bl GameOverDrawAllOam
	ldr r1, _0809DEF4 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _0809DEF8
	subs r0, #1
	b _0809DF4A
	.align 2, 0
_0809DEF4: .4byte gWrittenToBldy
_0809DEF8:
	movs r0, #3
	movs r1, #0
	bl PlayMusic
	b _0809DF10
_0809DF02:
	bl GameOverAfterOptionDelay
	cmp r0, #0
	beq _0809DF4C
	ldr r1, _0809DF18 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
_0809DF10:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _0809DF4C
	.align 2, 0
_0809DF18: .4byte 0x04000050
_0809DF1C:
	bl GameOverDrawAllOam
	ldr r1, _0809DF2C @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0809DF30
	adds r0, #1
	b _0809DF4A
	.align 2, 0
_0809DF2C: .4byte gWrittenToBldy
_0809DF30:
	ldr r0, _0809DF3C @ =gNonGameplayRam
	ldrb r0, [r0, #3]
	cmp r0, #1
	bne _0809DF40
	movs r5, #1
	b _0809DF46
	.align 2, 0
_0809DF3C: .4byte gNonGameplayRam
_0809DF40:
	cmp r0, #2
	bne _0809DF46
	movs r5, #2
_0809DF46:
	ldr r1, _0809DF54 @ =gSubGameMode1
	movs r0, #0
_0809DF4A:
	strh r0, [r1]
_0809DF4C:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0809DF54: .4byte gSubGameMode1

	thumb_func_start GameOverInit
GameOverInit: @ 0x0809DF58
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r3, _0809E0A0 @ =0x04000208
	movs r5, #0
	strh r5, [r3]
	ldr r2, _0809E0A4 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _0809E0A8 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0809E0AC @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0809E0B0 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0809E0B4 @ =unk_9e58c
	bl CallbackSetVBlank
	movs r0, #0x80
	lsls r0, r0, #0x13
	mov sl, r0
	strh r5, [r0]
	movs r4, #0
	str r4, [sp]
	ldr r7, _0809E0B8 @ =0x040000D4
	mov r1, sp
	str r1, [r7]
	ldr r0, _0809E0BC @ =gNonGameplayRam
	str r0, [r7, #4]
	ldr r0, _0809E0C0 @ =0x85000150
	str r0, [r7, #8]
	ldr r0, [r7, #8]
	ldr r1, _0809E0C4 @ =0x04000050
	movs r0, #0xbf
	strh r0, [r1]
	ldr r0, _0809E0C8 @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _0809E0CC @ =0x04000054
	strh r1, [r0]
	ldr r6, _0809E0D0 @ =0x06010000
	str r6, [r7]
	ldr r0, _0809E0D4 @ =0x0201C000
	str r0, [r7, #4]
	ldr r0, _0809E0D8 @ =0x84002000
	str r0, [r7, #8]
	ldr r0, [r7, #8]
	bl ClearGfxRam
	ldr r0, _0809E0DC @ =gNextOamSlot
	strb r5, [r0]
	bl ResetFreeOam
	ldr r0, _0809E0E0 @ =0x0400000E
	mov sb, r0
	strh r4, [r0]
	subs r0, #2
	strh r4, [r0]
	ldr r1, _0809E0E4 @ =0x0400000A
	mov r8, r1
	strh r4, [r1]
	subs r0, #4
	strh r4, [r0]
	adds r0, #8
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r0, _0809E0E8 @ =0x08739A78
	adds r1, r6, #0
	bl LZ77UncompVram
	ldr r0, _0809E0EC @ =0x0873C4E4
	str r0, [r7]
	ldr r0, _0809E0F0 @ =0x05000200
	str r0, [r7, #4]
	ldr r5, _0809E0F4 @ =0x84000080
	str r5, [r7, #8]
	ldr r0, [r7, #8]
	ldr r0, _0809E0F8 @ =0x0873422C
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r1, r4, #0
	bl LZ77UncompVram
	ldr r1, _0809E0FC @ =0x03000011
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #1
	ble _0809E042
	ldr r0, _0809E100 @ =0x0879E874
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1]
	adds r1, r4, #0
	bl LZ77UncompVram
_0809E042:
	ldr r0, _0809E104 @ =0x0873C6E4
	ldr r1, _0809E108 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _0809E10C @ =0x0873CCA8
	ldr r1, _0809E110 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _0809E114 @ =0x0873C2E4
	str r0, [r7]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r7, #4]
	str r5, [r7, #8]
	ldr r0, [r7, #8]
	ldr r1, _0809E118 @ =0x00001E02
	adds r0, r1, #0
	mov r1, r8
	strh r0, [r1]
	ldr r1, _0809E11C @ =0x00001F03
	adds r0, r1, #0
	mov r1, sb
	strh r0, [r1]
	movs r0, #1
	movs r1, #0x2b
	movs r2, #0x6f
	bl GameOverSetupOam
	bl GameOverDrawAllOam
	movs r1, #0xd0
	lsls r1, r1, #5
	adds r0, r1, #0
	mov r1, sl
	strh r0, [r1]
	ldr r0, _0809E120 @ =GameOverVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809E0A0: .4byte 0x04000208
_0809E0A4: .4byte 0x04000004
_0809E0A8: .4byte 0x0000FFEF
_0809E0AC: .4byte 0x04000200
_0809E0B0: .4byte 0x0000FFFD
_0809E0B4: .4byte unk_9e58c
_0809E0B8: .4byte 0x040000D4
_0809E0BC: .4byte gNonGameplayRam
_0809E0C0: .4byte 0x85000150
_0809E0C4: .4byte 0x04000050
_0809E0C8: .4byte gWrittenToBldy
_0809E0CC: .4byte 0x04000054
_0809E0D0: .4byte 0x06010000
_0809E0D4: .4byte 0x0201C000
_0809E0D8: .4byte 0x84002000
_0809E0DC: .4byte gNextOamSlot
_0809E0E0: .4byte 0x0400000E
_0809E0E4: .4byte 0x0400000A
_0809E0E8: .4byte 0x08739A78
_0809E0EC: .4byte 0x0873C4E4
_0809E0F0: .4byte 0x05000200
_0809E0F4: .4byte 0x84000080
_0809E0F8: .4byte 0x0873422C
_0809E0FC: .4byte 0x03000011
_0809E100: .4byte 0x0879E874
_0809E104: .4byte 0x0873C6E4
_0809E108: .4byte 0x0600F800
_0809E10C: .4byte 0x0873CCA8
_0809E110: .4byte 0x0600F000
_0809E114: .4byte 0x0873C2E4
_0809E118: .4byte 0x00001E02
_0809E11C: .4byte 0x00001F03
_0809E120: .4byte GameOverVblank

	thumb_func_start GameOverAfterOptionDelay
GameOverAfterOptionDelay: @ 0x0809E124
	push {r4, lr}
	movs r4, #0
	bl GameOverProcessOam
	bl GameOverDrawAllOam
	ldr r1, _0809E154 @ =gNonGameplayRam
	ldrb r0, [r1, #1]
	cmp r0, #1
	bne _0809E14A
	ldrb r0, [r1, #2]
	adds r0, #1
	strb r0, [r1, #2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	bne _0809E14A
	strb r4, [r1, #2]
	movs r4, #1
_0809E14A:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0809E154: .4byte gNonGameplayRam

	thumb_func_start GameOverSetupOam
GameOverSetupOam: @ 0x0809E158
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	movs r4, #0
	ldr r1, _0809E190 @ =gNonGameplayRam
	ldrb r0, [r1, #8]
	cmp r0, #0
	beq _0809E188
_0809E170:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bhi _0809E18C
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r1
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _0809E170
_0809E188:
	cmp r4, #2
	bls _0809E194
_0809E18C:
	movs r0, #3
	b _0809E1F6
	.align 2, 0
_0809E190: .4byte gNonGameplayRam
_0809E194:
	adds r0, r4, #0
	bl GameOverResetOam
	ldr r3, _0809E1CC @ =gNonGameplayRam
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r2, r0, #3
	adds r1, r2, r3
	strh r7, [r1, #4]
	strh r6, [r1, #6]
	strb r5, [r1, #8]
	movs r0, #1
	strb r0, [r1, #9]
	cmp r5, #1
	bne _0809E1D8
	movs r0, #3
	strb r0, [r1, #0xf]
	adds r0, r3, #0
	adds r0, #0x14
	adds r0, r2, r0
	ldr r1, _0809E1D0 @ =0x0879E868
	ldr r1, [r1]
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x18
	adds r0, r2, r0
	ldr r1, _0809E1D4 @ =GameOverProcessCursor
	b _0809E1F2
	.align 2, 0
_0809E1CC: .4byte gNonGameplayRam
_0809E1D0: .4byte 0x0879E868
_0809E1D4: .4byte GameOverProcessCursor
_0809E1D8:
	cmp r5, #2
	bne _0809E1F4
	movs r0, #3
	strb r0, [r1, #0xf]
	adds r0, r3, #0
	adds r0, #0x14
	adds r0, r2, r0
	ldr r1, _0809E1FC @ =0x0873C274
	str r1, [r0]
	adds r0, r3, #0
	adds r0, #0x18
	adds r0, r2, r0
	ldr r1, _0809E200 @ =unk_9e2cc
_0809E1F2:
	str r1, [r0]
_0809E1F4:
	adds r0, r4, #0
_0809E1F6:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809E1FC: .4byte 0x0873C274
_0809E200: .4byte unk_9e2cc

	thumb_func_start GameOverProcessCursor
GameOverProcessCursor: @ 0x0809E204
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #9]
	cmp r0, #0
	bne _0809E2BC
	ldr r0, _0809E230 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0809E238
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0x6f
	beq _0809E252
	movs r0, #0x6f
	strh r0, [r4, #2]
	ldr r0, _0809E234 @ =0x000001F9
	bl SoundPlay
	b _0809E252
	.align 2, 0
_0809E230: .4byte gChangedInput
_0809E234: .4byte 0x000001F9
_0809E238:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0809E252
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0x88
	beq _0809E252
	movs r0, #0x88
	strh r0, [r4, #2]
	ldr r0, _0809E280 @ =0x000001F9
	bl SoundPlay
_0809E252:
	ldr r0, _0809E284 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	beq _0809E2BC
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0x6f
	bne _0809E290
	movs r0, #0xff
	lsls r0, r0, #1
	bl SoundPlay
	movs r0, #0xa
	bl FadeMusic
	ldr r0, _0809E288 @ =0x0879E868
	ldr r0, [r0, #4]
	str r0, [r4, #0x10]
	ldr r1, _0809E28C @ =gNonGameplayRam
	movs r0, #1
	b _0809E2AC
	.align 2, 0
_0809E280: .4byte 0x000001F9
_0809E284: .4byte gChangedInput
_0809E288: .4byte 0x0879E868
_0809E28C: .4byte gNonGameplayRam
_0809E290:
	cmp r0, #0x88
	bne _0809E2AE
	movs r0, #0xff
	lsls r0, r0, #1
	bl SoundPlay
	movs r0, #0xa
	bl FadeMusic
	ldr r0, _0809E2C4 @ =0x0879E868
	ldr r0, [r0, #8]
	str r0, [r4, #0x10]
	ldr r1, _0809E2C8 @ =gNonGameplayRam
	movs r0, #2
_0809E2AC:
	strb r0, [r1, #3]
_0809E2AE:
	ldr r0, _0809E2C8 @ =gNonGameplayRam
	movs r1, #0
	movs r2, #1
	strb r2, [r0, #1]
	strb r1, [r4, #6]
	strb r1, [r4, #7]
	strb r2, [r4, #9]
_0809E2BC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809E2C4: .4byte 0x0879E868
_0809E2C8: .4byte gNonGameplayRam

	thumb_func_start unk_9e2cc
unk_9e2cc: @ 0x0809E2CC
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	mov r4, sp
	adds r4, #2
	movs r0, #1
	mov r1, sp
	adds r2, r4, #0
	bl GameOverGetPositionAndSlotOfOamByType
	mov r0, sp
	ldrh r0, [r0]
	strh r0, [r5]
	ldrh r0, [r4]
	strh r0, [r5, #2]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start GameOverResetOam
GameOverResetOam: @ 0x0809E2F4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0809E318 @ =gNonGameplayRam
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #3
	adds r1, r1, r2
	movs r0, #0
	strb r0, [r1, #0xa]
	strb r0, [r1, #0xb]
	strb r0, [r1, #0xc]
	strb r0, [r1, #0xd]
	strb r0, [r1, #0xe]
	strb r0, [r1, #0xf]
	strb r0, [r1, #0x10]
	strb r0, [r1, #0x11]
	strh r0, [r1, #0x12]
	bx lr
	.align 2, 0
_0809E318: .4byte gNonGameplayRam

	thumb_func_start GameOverProcessOam
GameOverProcessOam: @ 0x0809E31C
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r5, _0809E350 @ =gNonGameplayRam
	adds r6, r5, #4
_0809E324:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r2, r0, #3
	adds r0, r2, r5
	ldrb r0, [r0, #8]
	cmp r0, #0
	beq _0809E340
	adds r1, r5, #0
	adds r1, #0x18
	adds r1, r2, r1
	adds r0, r2, r6
	ldr r1, [r1]
	bl _call_via_r1
_0809E340:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _0809E324
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809E350: .4byte gNonGameplayRam

	thumb_func_start GameOverDrawAllOam
GameOverDrawAllOam: @ 0x0809E354
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r5, _0809E38C @ =gNonGameplayRam
	adds r6, r5, #4
_0809E35C:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r1, r0, #3
	adds r0, r1, r5
	ldrb r0, [r0, #9]
	cmp r0, #0
	beq _0809E370
	adds r0, r1, r6
	bl GameOverDrawOam
_0809E370:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _0809E35C
	bl ResetFreeOam
	ldr r1, _0809E390 @ =gNextOamSlot
	movs r0, #0
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809E38C: .4byte gNonGameplayRam
_0809E390: .4byte gNextOamSlot

	thumb_func_start GameOverDrawOam
GameOverDrawOam: @ 0x0809E394
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r2, _0809E454 @ =gNextOamSlot
	ldrb r0, [r2]
	lsls r0, r0, #3
	ldr r1, _0809E458 @ =gOamData
	adds r7, r0, r1
	ldrb r4, [r5, #6]
	lsls r1, r4, #3
	ldr r0, [r5, #0x10]
	adds r3, r0, r1
	ldrb r0, [r3, #4]
	ldrb r2, [r5, #7]
	cmp r0, r2
	bne _0809E3C4
	adds r0, r4, #1
	movs r1, #0
	strb r0, [r5, #6]
	strb r1, [r5, #7]
	adds r3, #8
_0809E3C4:
	ldrb r1, [r3, #4]
	cmp r1, #0
	bne _0809E3D2
	ldrb r0, [r5, #6]
	lsls r0, r0, #3
	subs r3, r3, r0
	strb r1, [r5, #6]
_0809E3D2:
	ldr r6, [r3]
	ldrh r3, [r6]
	mov sl, r3
	adds r6, #2
	movs r4, #0
	mov sb, r4
	cmp sb, sl
	blt _0809E3E4
	b _0809E4E8
_0809E3E4:
	ldrh r0, [r6]
	mov r8, r0
	adds r6, #2
	ldrh r1, [r6]
	mov ip, r1
	adds r6, #2
	strh r0, [r7]
	adds r7, #2
	strh r1, [r7]
	adds r7, #2
	ldrh r0, [r6]
	strh r0, [r7]
	adds r6, #2
	adds r7, #2
	ldr r2, _0809E454 @ =gNextOamSlot
	ldrb r0, [r2]
	mov r4, sb
	adds r3, r0, r4
	ldrb r1, [r5, #0xc]
	cmp r1, #1
	bne _0809E464
	lsls r4, r3, #3
	ldr r0, _0809E458 @ =gOamData
	adds r2, r4, r0
	ldrb r3, [r2, #3]
	lsls r0, r3, #0x1b
	lsrs r0, r0, #0x1f
	eors r0, r1
	movs r1, #1
	ands r0, r1
	lsls r0, r0, #4
	movs r1, #0x11
	rsbs r1, r1, #0
	ands r1, r3
	orrs r1, r0
	strb r1, [r2, #3]
	lsrs r1, r1, #6
	ldrb r0, [r2, #1]
	lsrs r0, r0, #6
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r2, _0809E45C @ =0x08734220
	adds r1, r1, r2
	ldrb r0, [r1]
	lsls r0, r0, #3
	add r0, ip
	ldrh r1, [r5]
	subs r2, r1, r0
	ldr r3, _0809E460 @ =0x000001FF
	ands r2, r3
	ldrh r0, [r5, #2]
	mov r3, r8
	adds r1, r3, r0
	movs r0, #0xff
	ands r1, r0
	b _0809E47A
	.align 2, 0
_0809E454: .4byte gNextOamSlot
_0809E458: .4byte gOamData
_0809E45C: .4byte 0x08734220
_0809E460: .4byte 0x000001FF
_0809E464:
	ldrh r0, [r5, #2]
	mov r4, r8
	adds r1, r4, r0
	movs r0, #0xff
	ands r1, r0
	ldrh r0, [r5]
	mov r4, ip
	adds r2, r4, r0
	ldr r0, _0809E504 @ =0x000001FF
	ands r2, r0
	lsls r4, r3, #3
_0809E47A:
	ldr r0, _0809E508 @ =gOamData
	adds r3, r4, r0
	strb r1, [r3]
	ldr r1, _0809E504 @ =0x000001FF
	ands r2, r1
	ldrh r1, [r3, #2]
	ldr r0, _0809E50C @ =0xFFFFFE00
	ands r0, r1
	orrs r0, r2
	strh r0, [r3, #2]
	ldrb r1, [r5, #0xb]
	movs r2, #3
	ands r1, r2
	lsls r1, r1, #2
	ldrb r2, [r3, #5]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3, #5]
	lsrs r2, r0, #4
	ldrb r4, [r5, #0xd]
	adds r2, r2, r4
	lsls r2, r2, #4
	movs r1, #0xf
	ands r0, r1
	orrs r0, r2
	strb r0, [r3, #5]
	ldrh r2, [r3, #4]
	lsls r1, r2, #0x16
	lsrs r1, r1, #0x16
	ldrh r0, [r5, #0xe]
	adds r1, r1, r0
	ldr r4, _0809E510 @ =0x000003FF
	adds r0, r4, #0
	ands r1, r0
	ldr r0, _0809E514 @ =0xFFFFFC00
	ands r0, r2
	orrs r0, r1
	strh r0, [r3, #4]
	ldrb r1, [r5, #0xa]
	movs r0, #3
	ands r1, r0
	lsls r1, r1, #2
	ldrb r2, [r3, #1]
	subs r0, #0x10
	ands r0, r2
	orrs r0, r1
	strb r0, [r3, #1]
	adds r7, #2
	movs r1, #1
	add sb, r1
	cmp sb, sl
	bge _0809E4E8
	b _0809E3E4
_0809E4E8:
	ldr r2, _0809E518 @ =gNextOamSlot
	ldrb r0, [r2]
	add r0, sl
	strb r0, [r2]
	ldrb r0, [r5, #7]
	adds r0, #1
	strb r0, [r5, #7]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809E504: .4byte 0x000001FF
_0809E508: .4byte gOamData
_0809E50C: .4byte 0xFFFFFE00
_0809E510: .4byte 0x000003FF
_0809E514: .4byte 0xFFFFFC00
_0809E518: .4byte gNextOamSlot

	thumb_func_start GameOverGetPositionAndSlotOfOamByType
GameOverGetPositionAndSlotOfOamByType: @ 0x0809E51C
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r1, #0
	ldr r6, _0809E540 @ =gNonGameplayRam
_0809E528:
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r3, r0, r6
	ldrb r0, [r3, #8]
	cmp r0, r5
	bne _0809E544
	ldrh r0, [r3, #4]
	strh r0, [r4]
	ldrh r0, [r3, #6]
	b _0809E558
	.align 2, 0
_0809E540: .4byte gNonGameplayRam
_0809E544:
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #2
	bls _0809E528
	movs r1, #0x96
	lsls r1, r1, #1
	adds r0, r1, #0
	strh r0, [r4]
	movs r0, #0xc8
_0809E558:
	strh r0, [r2]
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start GameOverVblank
GameOverVblank: @ 0x0809E560
	ldr r1, _0809E57C @ =0x040000D4
	ldr r0, _0809E580 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _0809E584 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	subs r1, #0x80
	ldr r0, _0809E588 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_0809E57C: .4byte 0x040000D4
_0809E580: .4byte gOamData
_0809E584: .4byte 0x84000100
_0809E588: .4byte gWrittenToBldy

	thumb_func_start unk_9e58c
unk_9e58c: @ 0x0809E58C
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start FileSelectSubroutine
FileSelectSubroutine: @ 0x0809E598
	push {r4, r5, lr}
	movs r5, #0
	ldr r0, _0809E5B4 @ =gSubGameMode1
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #5
	bls _0809E5AA
	b _0809E738
_0809E5AA:
	lsls r0, r1, #2
	ldr r1, _0809E5B8 @ =_0809E5BC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809E5B4: .4byte gSubGameMode1
_0809E5B8: .4byte _0809E5BC
_0809E5BC: @ jump table
	.4byte _0809E5D4 @ case 0
	.4byte _0809E644 @ case 1
	.4byte _0809E69C @ case 2
	.4byte _0809E6BC @ case 3
	.4byte _0809E6E4 @ case 4
	.4byte _0809E704 @ case 5
_0809E5D4:
	bl FileSelectInit
	ldr r1, _0809E614 @ =0x03000B94
	ldrb r0, [r1, #1]
	cmp r0, #0
	bne _0809E624
	ldrb r0, [r1, #0x15]
	cmp r0, #0
	bne _0809E624
	adds r0, r1, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0809E624
	ldr r0, _0809E618 @ =0x03000B8D
	ldrb r2, [r0]
	lsls r2, r2, #0x14
	movs r0, #0xc4
	lsls r0, r0, #0xe
	adds r2, r2, r0
	asrs r2, r2, #0x10
	movs r0, #1
	movs r1, #0xf
	movs r3, #0
	bl FileSelectSetupOam
	ldr r1, _0809E61C @ =0x04000014
	movs r0, #2
	strh r0, [r1]
	ldr r1, _0809E620 @ =gSubGameMode1
	movs r0, #1
	b _0809E736
	.align 2, 0
_0809E614: .4byte 0x03000B94
_0809E618: .4byte 0x03000B8D
_0809E61C: .4byte 0x04000014
_0809E620: .4byte gSubGameMode1
_0809E624:
	ldr r1, _0809E638 @ =0x04000014
	ldr r2, _0809E63C @ =0x0000FFD0
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	movs r0, #0x30
	strh r0, [r1]
	ldr r1, _0809E640 @ =gSubGameMode1
	movs r0, #5
	b _0809E736
	.align 2, 0
_0809E638: .4byte 0x04000014
_0809E63C: .4byte 0x0000FFD0
_0809E640: .4byte gSubGameMode1
_0809E644:
	ldr r4, _0809E65C @ =gNonGameplayRam
	ldrb r0, [r4, #0xc]
	adds r0, #1
	strb r0, [r4, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809E660
	movs r0, #1
	bl FileSelectDrawText
	b _0809E738
	.align 2, 0
_0809E65C: .4byte gNonGameplayRam
_0809E660:
	cmp r0, #2
	bne _0809E66C
	movs r0, #0
	bl FileSelectDrawFileInfo
	b _0809E738
_0809E66C:
	cmp r0, #3
	bne _0809E678
	movs r0, #1
	bl FileSelectDrawFileInfo
	b _0809E738
_0809E678:
	cmp r0, #4
	bne _0809E738
	movs r0, #2
	bl FileSelectDrawFileInfo
	movs r0, #0
	strb r0, [r4, #0xc]
	ldr r1, _0809E694 @ =gWrittenToBldy
	movs r0, #0xe
	strh r0, [r1]
	ldr r1, _0809E698 @ =gSubGameMode1
	movs r0, #2
	b _0809E736
	.align 2, 0
_0809E694: .4byte gWrittenToBldy
_0809E698: .4byte gSubGameMode1
_0809E69C:
	bl FileSelectDrawAllOam
	ldr r1, _0809E6AC @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _0809E6B0
	subs r0, #1
	b _0809E736
	.align 2, 0
_0809E6AC: .4byte gWrittenToBldy
_0809E6B0:
	ldr r1, _0809E6B8 @ =gSubGameMode1
	ldrh r0, [r1]
	adds r0, #1
	b _0809E736
	.align 2, 0
_0809E6B8: .4byte gSubGameMode1
_0809E6BC:
	bl FileSelectInput
	ldr r1, _0809E6DC @ =gNonGameplayRam
	strb r0, [r1, #0x12]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809E738
	ldr r1, _0809E6E0 @ =gSubGameMode1
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	movs r0, #0x14
	bl FadeMusic
	b _0809E738
	.align 2, 0
_0809E6DC: .4byte gNonGameplayRam
_0809E6E0: .4byte gSubGameMode1
_0809E6E4:
	ldr r1, _0809E6F0 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _0809E6F4
	adds r0, #1
	b _0809E736
	.align 2, 0
_0809E6F0: .4byte gWrittenToBldy
_0809E6F4:
	ldr r0, _0809E700 @ =gNonGameplayRam
	movs r5, #0x12
	ldrsb r5, [r0, r5]
	movs r0, #0
	strh r0, [r2]
	b _0809E738
	.align 2, 0
_0809E700: .4byte gNonGameplayRam
_0809E704:
	bl FileSelectProcessCorruptedFile
	cmp r0, #0
	beq _0809E738
	ldr r1, _0809E740 @ =0x04000014
	movs r0, #2
	strh r0, [r1]
	adds r1, #2
	ldr r2, _0809E744 @ =0x0000FFFA
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _0809E748 @ =0x03000B8D
	ldrb r2, [r0]
	lsls r2, r2, #0x14
	movs r0, #0xc4
	lsls r0, r0, #0xe
	adds r2, r2, r0
	asrs r2, r2, #0x10
	movs r0, #1
	movs r1, #0xf
	movs r3, #0
	bl FileSelectSetupOam
	ldr r1, _0809E74C @ =gSubGameMode1
	movs r0, #3
_0809E736:
	strh r0, [r1]
_0809E738:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0809E740: .4byte 0x04000014
_0809E744: .4byte 0x0000FFFA
_0809E748: .4byte 0x03000B8D
_0809E74C: .4byte gSubGameMode1

	thumb_func_start FileSelectInit
FileSelectInit: @ 0x0809E750
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	ldr r3, _0809E920 @ =0x04000208
	movs r4, #0
	strh r4, [r3]
	ldr r2, _0809E924 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _0809E928 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0809E92C @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _0809E930 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _0809E934 @ =unk_9eaa4
	bl CallbackSetVBlank
	movs r0, #0x80
	lsls r0, r0, #0x13
	strh r4, [r0]
	ldr r1, _0809E938 @ =0x04000050
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _0809E93C @ =gWrittenToBldy
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, _0809E940 @ =0x04000054
	strh r1, [r0]
	bl ClearGfxRam
	ldr r0, _0809E944 @ =gNextOamSlot
	strb r4, [r0]
	bl ResetFreeOam
	movs r6, #0
	str r6, [sp]
	ldr r4, _0809E948 @ =0x040000D4
	mov r0, sp
	str r0, [r4]
	ldr r0, _0809E94C @ =gNonGameplayRam
	str r0, [r4, #4]
	ldr r0, _0809E950 @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809E954 @ =0x0400000E
	strh r6, [r0]
	subs r0, #2
	strh r6, [r0]
	subs r0, #2
	strh r6, [r0]
	subs r0, #2
	strh r6, [r0]
	adds r0, #8
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	ldr r1, _0809E958 @ =0x04000016
	ldr r2, _0809E95C @ =0x0000FFFA
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _0809E960 @ =0x04000018
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	adds r0, #2
	strh r6, [r0]
	ldr r0, _0809E964 @ =0x08742FB4
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _0809E968 @ =0x087470E0
	ldr r1, _0809E96C @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _0809E970 @ =0x087476A0
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	mov r8, r0
	str r0, [r4, #4]
	ldr r0, _0809E974 @ =0x84000080
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809E978 @ =0x0873CFAC
	ldr r1, _0809E97C @ =0x0600E000
	bl LZ77UncompVram
	ldr r0, _0809E980 @ =0x0873D380
	movs r5, #0x80
	lsls r5, r5, #0x12
	adds r1, r5, #0
	bl LZ77UncompVram
	str r5, [r4]
	ldr r0, _0809E984 @ =0x0600E800
	str r0, [r4, #4]
	ldr r0, _0809E988 @ =0x84000200
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _0809E98C @ =0x0873D5EC
	ldr r1, _0809E990 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _0809E994 @ =0x0873DB84
	str r0, [r4]
	mov r2, r8
	str r2, [r4, #4]
	ldr r0, _0809E998 @ =0x84000008
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r1, _0809E99C @ =0x0873DAC4
	str r1, [r4]
	str r2, [r4, #4]
	ldr r0, _0809E9A0 @ =0x84000002
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	adds r1, #8
	str r1, [r4]
	ldr r0, _0809E9A4 @ =0x0500001C
	str r0, [r4, #4]
	ldr r0, _0809E9A8 @ =0x84000001
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	strh r6, [r2]
	movs r3, #0
	ldr r7, _0809E9AC @ =0x02000800
	ldr r5, _0809E9B0 @ =0x02000340
	ldr r6, _0809E9B4 @ =0x00000FFF
	movs r0, #0x80
	lsls r0, r0, #5
	adds r4, r0, #0
_0809E86A:
	adds r2, r3, r7
	adds r0, r3, r5
	ldrh r1, [r0]
	adds r0, r6, #0
	ands r0, r1
	orrs r0, r4
	strh r0, [r2]
	adds r3, #2
	cmp r3, #0xff
	bls _0809E86A
	ldr r0, _0809E9B8 @ =0x0873DC20
	ldr r1, _0809E9BC @ =0x06010000
	bl LZ77UncompVram
	ldr r1, _0809E948 @ =0x040000D4
	ldr r0, _0809E9C0 @ =0x08740D08
	str r0, [r1]
	ldr r0, _0809E9C4 @ =0x05000200
	str r0, [r1, #4]
	ldr r0, _0809E974 @ =0x84000080
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r4, _0809E94C @ =gNonGameplayRam
	movs r0, #0
	strh r0, [r4, #8]
	ldr r1, _0809E9C8 @ =0x0879EC68
	ldr r0, _0809E9CC @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0]
	str r0, [r4, #4]
	bl Sram_WriteFileInfo
	ldr r0, _0809E9D0 @ =0x03000B8D
	ldrb r0, [r0]
	strb r0, [r4, #0xd]
	movs r0, #9
	movs r1, #0x66
	movs r2, #0x74
	movs r3, #1
	bl FileSelectSetupOam
	movs r0, #6
	movs r1, #0x8e
	movs r2, #0x74
	movs r3, #1
	bl FileSelectSetupOam
	movs r0, #7
	movs r1, #0x84
	movs r2, #0x30
	movs r3, #1
	bl FileSelectSetupOam
	bl FileSelectDrawAllOam
	ldr r1, _0809E954 @ =0x0400000E
	ldr r2, _0809E9D4 @ =0x00001F03
	adds r0, r2, #0
	strh r0, [r1]
	subs r1, #2
	ldr r2, _0809E9D8 @ =0x00001C0A
	adds r0, r2, #0
	strh r0, [r1]
	subs r1, #2
	adds r2, #0xff
	adds r0, r2, #0
	strh r0, [r1]
	subs r1, #2
	adds r2, #0xff
	adds r0, r2, #0
	strh r0, [r1]
	subs r1, #8
	movs r2, #0xe0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _0809E9DC @ =FileSelectVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809E920: .4byte 0x04000208
_0809E924: .4byte 0x04000004
_0809E928: .4byte 0x0000FFEF
_0809E92C: .4byte 0x04000200
_0809E930: .4byte 0x0000FFFD
_0809E934: .4byte unk_9eaa4
_0809E938: .4byte 0x04000050
_0809E93C: .4byte gWrittenToBldy
_0809E940: .4byte 0x04000054
_0809E944: .4byte gNextOamSlot
_0809E948: .4byte 0x040000D4
_0809E94C: .4byte gNonGameplayRam
_0809E950: .4byte 0x85000150
_0809E954: .4byte 0x0400000E
_0809E958: .4byte 0x04000016
_0809E95C: .4byte 0x0000FFFA
_0809E960: .4byte 0x04000018
_0809E964: .4byte 0x08742FB4
_0809E968: .4byte 0x087470E0
_0809E96C: .4byte 0x0600F800
_0809E970: .4byte 0x087476A0
_0809E974: .4byte 0x84000080
_0809E978: .4byte 0x0873CFAC
_0809E97C: .4byte 0x0600E000
_0809E980: .4byte 0x0873D380
_0809E984: .4byte 0x0600E800
_0809E988: .4byte 0x84000200
_0809E98C: .4byte 0x0873D5EC
_0809E990: .4byte 0x0600F000
_0809E994: .4byte 0x0873DB84
_0809E998: .4byte 0x84000008
_0809E99C: .4byte 0x0873DAC4
_0809E9A0: .4byte 0x84000002
_0809E9A4: .4byte 0x0500001C
_0809E9A8: .4byte 0x84000001
_0809E9AC: .4byte 0x02000800
_0809E9B0: .4byte 0x02000340
_0809E9B4: .4byte 0x00000FFF
_0809E9B8: .4byte 0x0873DC20
_0809E9BC: .4byte 0x06010000
_0809E9C0: .4byte 0x08740D08
_0809E9C4: .4byte 0x05000200
_0809E9C8: .4byte 0x0879EC68
_0809E9CC: .4byte 0x03000011
_0809E9D0: .4byte 0x03000B8D
_0809E9D4: .4byte 0x00001F03
_0809E9D8: .4byte 0x00001C0A
_0809E9DC: .4byte FileSelectVblank

	thumb_func_start FileSelectVblank
FileSelectVblank: @ 0x0809E9E0
	push {r4, lr}
	ldr r1, _0809EA10 @ =0x040000D4
	ldr r0, _0809EA14 @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _0809EA18 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	subs r1, #0x80
	ldr r0, _0809EA1C @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r1, _0809EA20 @ =gNonGameplayRam
	ldrb r0, [r1, #0x11]
	adds r3, r1, #0
	cmp r0, #5
	bhi _0809EA98
	lsls r0, r0, #2
	ldr r1, _0809EA24 @ =_0809EA28
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809EA10: .4byte 0x040000D4
_0809EA14: .4byte gOamData
_0809EA18: .4byte 0x84000100
_0809EA1C: .4byte gWrittenToBldy
_0809EA20: .4byte gNonGameplayRam
_0809EA24: .4byte _0809EA28
_0809EA28: @ jump table
	.4byte _0809EA9C @ case 0
	.4byte _0809EA40 @ case 1
	.4byte _0809EA60 @ case 2
	.4byte _0809EA50 @ case 3
	.4byte _0809EA70 @ case 4
	.4byte _0809EA80 @ case 5
_0809EA40:
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r1, r4, #0
	orrs r0, r1
	b _0809EA8A
_0809EA50:
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r0, [r2]
	movs r4, #0x80
	lsls r4, r4, #2
	adds r1, r4, #0
	orrs r0, r1
	b _0809EA8A
_0809EA60:
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0809EA6C @ =0x0000FEFF
	b _0809EA88
	.align 2, 0
_0809EA6C: .4byte 0x0000FEFF
_0809EA70:
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0809EA7C @ =0x0000FDFF
	b _0809EA88
	.align 2, 0
_0809EA7C: .4byte 0x0000FDFF
_0809EA80:
	movs r2, #0x80
	lsls r2, r2, #0x13
	ldrh r1, [r2]
	ldr r0, _0809EA94 @ =0x0000FCFF
_0809EA88:
	ands r0, r1
_0809EA8A:
	strh r0, [r2]
	movs r0, #0
	strb r0, [r3, #0x11]
	b _0809EA9C
	.align 2, 0
_0809EA94: .4byte 0x0000FCFF
_0809EA98:
	movs r0, #0
	strb r0, [r1, #0x11]
_0809EA9C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_9eaa4
unk_9eaa4: @ 0x0809EAA4
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start FileSelectInput
FileSelectInput: @ 0x0809EAB0
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	movs r7, #0
	bl FileSelectProcessOam
	ldr r0, _0809EAD4 @ =gNonGameplayRam
	movs r1, #0xa
	ldrsh r0, [r0, r1]
	cmp r0, #0x22
	bls _0809EAC8
	bl _0809F50A
_0809EAC8:
	lsls r0, r0, #2
	ldr r1, _0809EAD8 @ =_0809EADC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809EAD4: .4byte gNonGameplayRam
_0809EAD8: .4byte _0809EADC
_0809EADC: @ jump table
	.4byte _0809EB68 @ case 0
	.4byte _0809EBB0 @ case 1
	.4byte _0809EC88 @ case 2
	.4byte _0809ECF8 @ case 3
	.4byte _0809ECC8 @ case 4
	.4byte _0809ED9A @ case 5
	.4byte _0809EF3C @ case 6
	.4byte _0809EDB8 @ case 7
	.4byte _0809EF24 @ case 8
	.4byte _0809EDD4 @ case 9
	.4byte _0809EE42 @ case 10
	.4byte _0809EE82 @ case 11
	.4byte _0809EEA0 @ case 12
	.4byte _0809EEDE @ case 13
	.4byte _0809EF24 @ case 14
	.4byte _0809EF3C @ case 15
	.4byte _0809EF54 @ case 16
	.4byte _0809EFE0 @ case 17
	.4byte _0809F042 @ case 18
	.4byte _0809F068 @ case 19
	.4byte _0809F0E4 @ case 20
	.4byte _0809F124 @ case 21
	.4byte _0809F162 @ case 22
	.4byte _0809F1A2 @ case 23
	.4byte _0809F1EC @ case 24
	.4byte _0809F24A @ case 25
	.4byte _0809F2B6 @ case 26
	.4byte _0809F2E4 @ case 27
	.4byte _0809F374 @ case 28
	.4byte _0809F3B2 @ case 29
	.4byte _0809F3EA @ case 30
	.4byte _0809F418 @ case 31
	.4byte _0809F446 @ case 32
	.4byte _0809F4AA @ case 33
	.4byte _0809F508 @ case 34
_0809EB68:
	ldr r0, _0809EB8C @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	beq _0809EB94
	ldr r1, _0809EB90 @ =gNonGameplayRam
	ldrb r0, [r1, #0xd]
	cmp r0, #3
	bne _0809EB80
	bl _0809F50A
_0809EB80:
	cmp r0, #4
	beq _0809EBA2
	movs r0, #1
	strh r0, [r1, #0xa]
	bl _0809F50A
	.align 2, 0
_0809EB8C: .4byte gChangedInput
_0809EB90: .4byte gNonGameplayRam
_0809EB94:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0809EBA0
	bl _0809F50A
_0809EBA0:
	ldr r1, _0809EBAC @ =gNonGameplayRam
_0809EBA2:
	movs r0, #0x22
	strh r0, [r1, #0xa]
	bl _0809F50A
	.align 2, 0
_0809EBAC: .4byte gNonGameplayRam
_0809EBB0:
	ldr r1, _0809EBE8 @ =gNonGameplayRam
	ldrb r0, [r1, #0xc]
	adds r0, #1
	strb r0, [r1, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r1, #0
	cmp r0, #1
	bne _0809EBF4
	strh r0, [r4, #8]
	ldr r1, _0809EBEC @ =0x0879EC68
	ldr r0, _0809EBF0 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #4]
	str r0, [r4, #4]
	movs r0, #2
	bl FileSelectDrawText
	movs r0, #0xb
	movs r1, #0x52
	movs r2, #0x76
	b _0809F2FC
	.align 2, 0
_0809EBE8: .4byte gNonGameplayRam
_0809EBEC: .4byte 0x0879EC68
_0809EBF0: .4byte 0x03000011
_0809EBF4:
	cmp r0, #0xc
	beq _0809EBFC
	bl _0809F50A
_0809EBFC:
	ldr r2, _0809EC34 @ =0x03000B94
	ldrb r1, [r4, #0xd]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r1, r0, r2
	movs r0, #0x10
	ldrsb r0, [r1, r0]
	cmp r0, #1
	beq _0809EC1E
	movs r0, #0x11
	ldrsb r0, [r1, r0]
	cmp r0, #1
	beq _0809EC1E
	ldrb r0, [r1]
	cmp r0, #1
	bne _0809EC48
_0809EC1E:
	ldr r1, _0809EC38 @ =0x040000D4
	ldr r0, _0809EC3C @ =0x02000340
	str r0, [r1]
	ldr r0, _0809EC40 @ =0x0600EB40
	str r0, [r1, #4]
	ldr r0, _0809EC44 @ =0x84000040
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r0, #3
	b _0809EC5A
	.align 2, 0
_0809EC34: .4byte 0x03000B94
_0809EC38: .4byte 0x040000D4
_0809EC3C: .4byte 0x02000340
_0809EC40: .4byte 0x0600EB40
_0809EC44: .4byte 0x84000040
_0809EC48:
	ldr r1, _0809EC78 @ =0x040000D4
	ldr r0, _0809EC7C @ =0x02000800
	str r0, [r1]
	ldr r0, _0809EC80 @ =0x0600EB40
	str r0, [r1, #4]
	ldr r0, _0809EC84 @ =0x84000040
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	movs r0, #2
_0809EC5A:
	strh r0, [r4, #0xa]
	movs r0, #0
	strb r0, [r4, #0xc]
	strb r0, [r4, #0xe]
	movs r0, #2
	movs r1, #0x16
	movs r2, #0x67
	movs r3, #1
	bl FileSelectSetupOam
	movs r0, #3
	strb r0, [r4, #0x11]
	bl _0809F50A
	.align 2, 0
_0809EC78: .4byte 0x040000D4
_0809EC7C: .4byte 0x02000800
_0809EC80: .4byte 0x0600EB40
_0809EC84: .4byte 0x84000040
_0809EC88:
	ldr r0, _0809ECBC @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0809ED04
	movs r4, #9
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	bne _0809ECA2
	bl _0809F50A
_0809ECA2:
	ldr r2, _0809ECC0 @ =0x03000B94
	ldr r3, _0809ECC4 @ =gNonGameplayRam
	ldrb r1, [r3, #0xd]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrb r0, [r0, #0x10]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	beq _0809ED74
	b _0809ED54
	.align 2, 0
_0809ECBC: .4byte gChangedInput
_0809ECC0: .4byte 0x03000B94
_0809ECC4: .4byte gNonGameplayRam
_0809ECC8:
	ldr r4, _0809ECE8 @ =gNonGameplayRam
	ldrb r0, [r4, #0xc]
	adds r0, #1
	movs r1, #0
	strb r0, [r4, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809ECEC
	movs r0, #2
	bl FileSelectDestroyOamOfType
	movs r0, #4
	strb r0, [r4, #0x11]
	bl _0809F50A
	.align 2, 0
_0809ECE8: .4byte gNonGameplayRam
_0809ECEC:
	cmp r0, #0xc
	beq _0809ECF4
	bl _0809F50A
_0809ECF4:
	bl sub_0809F502
_0809ECF8:
	ldr r0, _0809ED10 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0809ED18
_0809ED04:
	ldr r1, _0809ED14 @ =gNonGameplayRam
	movs r0, #4
	strh r0, [r1, #0xa]
	bl _0809F50A
	.align 2, 0
_0809ED10: .4byte gChangedInput
_0809ED14: .4byte gNonGameplayRam
_0809ED18:
	movs r4, #9
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	bne _0809ED26
	bl _0809F50A
_0809ED26:
	ldr r3, _0809ED5C @ =gNonGameplayRam
	ldrb r0, [r3, #0xe]
	cmp r0, #0
	bne _0809ED82
	ldr r2, _0809ED60 @ =0x03000B94
	ldrb r1, [r3, #0xd]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r1, r0, r2
	ldrb r0, [r1]
	cmp r0, #0
	bne _0809ED64
	movs r0, #0x10
	ldrsb r0, [r1, r0]
	cmp r0, #1
	beq _0809ED74
	movs r0, #0x11
	ldrsb r0, [r1, r0]
	cmp r0, #1
	beq _0809ED54
	bl _0809F50A
_0809ED54:
	movs r0, #5
	strh r0, [r3, #0xa]
	bl _0809F50A
	.align 2, 0
_0809ED5C: .4byte gNonGameplayRam
_0809ED60: .4byte 0x03000B94
_0809ED64:
	cmp r0, #1
	beq _0809ED6C
	bl _0809F50A
_0809ED6C:
	movs r0, #0x10
	ldrsb r0, [r1, r0]
	cmp r0, #1
	bne _0809ED7A
_0809ED74:
	strh r4, [r3, #0xa]
	bl _0809F50A
_0809ED7A:
	movs r0, #7
	strh r0, [r3, #0xa]
	bl _0809F50A
_0809ED82:
	cmp r0, #1
	bne _0809ED8C
	movs r1, #0
	movs r0, #0x10
	b _0809EF1E
_0809ED8C:
	cmp r0, #2
	beq _0809ED94
	bl _0809F50A
_0809ED94:
	movs r0, #0x1b
	strh r0, [r3, #0xa]
	b _0809F50A
_0809ED9A:
	ldr r2, _0809EDB4 @ =gNonGameplayRam
	ldrb r0, [r2, #0xc]
	adds r0, #1
	strb r0, [r2, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x2a
	beq _0809EDAC
	b _0809F50A
_0809EDAC:
	movs r1, #0
	movs r0, #6
	b _0809F4A4
	.align 2, 0
_0809EDB4: .4byte gNonGameplayRam
_0809EDB8:
	ldr r2, _0809EDD0 @ =gNonGameplayRam
	ldrb r0, [r2, #0xc]
	adds r0, #1
	strb r0, [r2, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x2a
	beq _0809EDCA
	b _0809F50A
_0809EDCA:
	movs r1, #0
	movs r0, #8
	b _0809F4A4
	.align 2, 0
_0809EDD0: .4byte gNonGameplayRam
_0809EDD4:
	ldr r4, _0809EDF4 @ =gNonGameplayRam
	ldrb r0, [r4, #0xc]
	adds r0, #1
	movs r1, #0
	strb r0, [r4, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809EDF8
	movs r0, #0x17
	movs r1, #0x9c
	movs r2, #0x78
	movs r3, #1
	bl FileSelectSetupOam
	b _0809F3CA
	.align 2, 0
_0809EDF4: .4byte gNonGameplayRam
_0809EDF8:
	cmp r0, #2
	bne _0809EDFE
	b _0809F4D8
_0809EDFE:
	cmp r0, #3
	bne _0809EE24
	movs r0, #0x18
	strh r0, [r4, #8]
	ldr r1, _0809EE1C @ =0x0879EC68
	ldr r0, _0809EE20 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x60]
	str r0, [r4, #4]
	b _0809F32C
	.align 2, 0
_0809EE1C: .4byte 0x0879EC68
_0809EE20: .4byte 0x03000011
_0809EE24:
	cmp r0, #0xc
	beq _0809EE2A
	b _0809F50A
_0809EE2A:
	strb r1, [r4, #0xc]
	movs r0, #0xa
	strh r0, [r4, #0xa]
	movs r0, #0x18
	movs r1, #0x66
	movs r2, #0x69
	movs r3, #1
	bl FileSelectSetupOam
	movs r0, #1
	strb r0, [r4, #0x11]
	b _0809F50A
_0809EE42:
	ldr r0, _0809EE58 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0809EE60
	ldr r1, _0809EE5C @ =gNonGameplayRam
	movs r0, #0xb
	strh r0, [r1, #0xa]
	b _0809F50A
	.align 2, 0
_0809EE58: .4byte gChangedInput
_0809EE5C: .4byte gNonGameplayRam
_0809EE60:
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	bne _0809EE6A
	b _0809F50A
_0809EE6A:
	ldr r1, _0809EE78 @ =gNonGameplayRam
	ldrb r0, [r1, #0x10]
	cmp r0, #0
	bne _0809EE7C
	movs r0, #0xc
	strh r0, [r1, #0xa]
	b _0809F50A
	.align 2, 0
_0809EE78: .4byte gNonGameplayRam
_0809EE7C:
	movs r0, #0xd
	strh r0, [r1, #0xa]
	b _0809F50A
_0809EE82:
	ldr r4, _0809EE9C @ =gNonGameplayRam
	ldrb r0, [r4, #0xc]
	adds r0, #1
	movs r1, #0
	strb r0, [r4, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	beq _0809EE96
	b _0809F3DA
_0809EE96:
	movs r0, #0x18
	b _0809F3C6
	.align 2, 0
_0809EE9C: .4byte gNonGameplayRam
_0809EEA0:
	ldr r3, _0809EED0 @ =gNonGameplayRam
	ldrb r0, [r3, #0xc]
	adds r0, #1
	strb r0, [r3, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x2a
	beq _0809EEB2
	b _0809F50A
_0809EEB2:
	movs r0, #0
	strb r0, [r3, #0xc]
	ldr r2, _0809EED4 @ =0x03000B94
	ldrb r1, [r3, #0xd]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #1
	bne _0809EED8
	movs r0, #0xe
	strh r0, [r3, #0xa]
	b _0809F50A
	.align 2, 0
_0809EED0: .4byte gNonGameplayRam
_0809EED4: .4byte 0x03000B94
_0809EED8:
	movs r0, #0xf
	strh r0, [r3, #0xa]
	b _0809F50A
_0809EEDE:
	ldr r3, _0809EF0C @ =gNonGameplayRam
	ldrb r0, [r3, #0xc]
	adds r0, #1
	movs r4, #0
	strb r0, [r3, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809EF14
	ldr r2, _0809EF10 @ =0x03000B94
	ldrb r1, [r3, #0xd]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	strb r4, [r0]
	ldrb r1, [r3, #0xd]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	strb r4, [r0, #0x11]
	b _0809F50A
	.align 2, 0
_0809EF0C: .4byte gNonGameplayRam
_0809EF10: .4byte 0x03000B94
_0809EF14:
	cmp r0, #0x2a
	beq _0809EF1A
	b _0809F50A
_0809EF1A:
	movs r1, #0
	movs r0, #0xf
_0809EF1E:
	strh r0, [r3, #0xa]
	strb r1, [r3, #0xc]
	b _0809F50A
_0809EF24:
	ldr r0, _0809EF34 @ =0x03000B8D
	ldr r1, _0809EF38 @ =gNonGameplayRam
	ldrb r1, [r1, #0xd]
	strb r1, [r0]
	bl Sram_CheckLoadSaveFile
	movs r7, #2
	b _0809F50A
	.align 2, 0
_0809EF34: .4byte 0x03000B8D
_0809EF38: .4byte gNonGameplayRam
_0809EF3C:
	ldr r0, _0809EF4C @ =0x03000B8D
	ldr r1, _0809EF50 @ =gNonGameplayRam
	ldrb r1, [r1, #0xd]
	strb r1, [r0]
	bl Sram_CheckLoadSaveFile
	movs r7, #1
	b _0809F50A
	.align 2, 0
_0809EF4C: .4byte 0x03000B8D
_0809EF50: .4byte gNonGameplayRam
_0809EF54:
	ldr r2, _0809EF6C @ =gNonGameplayRam
	ldrb r0, [r2, #0xc]
	adds r0, #1
	strb r0, [r2, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809EF70
	movs r0, #2
	strb r0, [r2, #0x11]
	movs r0, #0xc
	b _0809F2F8
	.align 2, 0
_0809EF6C: .4byte gNonGameplayRam
_0809EF70:
	cmp r0, #2
	bne _0809EF7A
	movs r0, #0
	str r0, [sp]
	b _0809F4DA
_0809EF7A:
	cmp r0, #3
	bne _0809EFA0
	movs r0, #2
	strh r0, [r2, #8]
	ldr r1, _0809EF98 @ =0x0879EC68
	ldr r0, _0809EF9C @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #8]
	str r0, [r2, #4]
	b _0809F32C
	.align 2, 0
_0809EF98: .4byte 0x0879EC68
_0809EF9C: .4byte 0x03000011
_0809EFA0:
	cmp r0, #0xc
	beq _0809EFA6
	b _0809F50A
_0809EFA6:
	movs r0, #0
	movs r1, #0x11
	strh r1, [r2, #0xa]
	strb r0, [r2, #0xc]
	strb r0, [r2, #0xf]
	ldrb r0, [r2, #0xd]
	cmp r0, #0
	bne _0809EFC8
	movs r0, #1
	strb r0, [r2, #0xf]
	movs r0, #3
	movs r1, #0x84
	movs r2, #0x30
	movs r3, #1
	bl FileSelectSetupOam
	b _0809EFD4
_0809EFC8:
	movs r0, #3
	movs r1, #0x84
	movs r2, #0x30
	movs r3, #1
	bl FileSelectSetupOam
_0809EFD4:
	ldr r1, _0809EFDC @ =gNonGameplayRam
	movs r0, #1
	strb r0, [r1, #0x11]
	b _0809F50A
	.align 2, 0
_0809EFDC: .4byte gNonGameplayRam
_0809EFE0:
	ldr r0, _0809EFF4 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0809EFFC
	ldr r1, _0809EFF8 @ =gNonGameplayRam
	movs r0, #0x12
	strh r0, [r1, #0xa]
	b _0809F50A
	.align 2, 0
_0809EFF4: .4byte gChangedInput
_0809EFF8: .4byte gNonGameplayRam
_0809EFFC:
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	bne _0809F006
	b _0809F50A
_0809F006:
	ldr r2, _0809F034 @ =0x03000B94
	ldr r3, _0809F038 @ =gNonGameplayRam
	ldrb r1, [r3, #0xf]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r1, r0, r2
	movs r0, #0x10
	ldrsb r0, [r1, r0]
	adds r4, r3, #0
	cmp r0, #1
	beq _0809F02C
	movs r0, #0x11
	ldrsb r0, [r1, r0]
	cmp r0, #1
	beq _0809F02C
	ldrb r0, [r1]
	cmp r0, #1
	bne _0809F03C
_0809F02C:
	movs r0, #0x13
	strh r0, [r4, #0xa]
	b _0809F50A
	.align 2, 0
_0809F034: .4byte 0x03000B94
_0809F038: .4byte gNonGameplayRam
_0809F03C:
	movs r0, #0x14
	strh r0, [r3, #0xa]
	b _0809F50A
_0809F042:
	ldr r4, _0809F058 @ =gNonGameplayRam
	ldrb r0, [r4, #0xc]
	adds r0, #1
	strb r0, [r4, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809F05C
	movs r0, #3
	b _0809F3C6
	.align 2, 0
_0809F058: .4byte gNonGameplayRam
_0809F05C:
	cmp r0, #0xc
	beq _0809F062
	b _0809F50A
_0809F062:
	movs r0, #0
	strb r0, [r4, #0xc]
	b _0809F3E4
_0809F068:
	ldr r2, _0809F084 @ =gNonGameplayRam
	ldrb r0, [r2, #0xc]
	adds r0, #1
	movs r3, #0
	strb r0, [r2, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809F088
	movs r0, #2
	strb r0, [r2, #0x11]
	str r3, [sp]
	b _0809F4DA
	.align 2, 0
_0809F084: .4byte gNonGameplayRam
_0809F088:
	cmp r0, #2
	bne _0809F0B0
	movs r0, #3
	strh r0, [r2, #8]
	ldr r1, _0809F0A8 @ =0x0879EC68
	ldr r0, _0809F0AC @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0xc]
	str r0, [r2, #4]
	b _0809F32C
	.align 2, 0
_0809F0A8: .4byte 0x0879EC68
_0809F0AC: .4byte 0x03000011
_0809F0B0:
	cmp r0, #4
	beq _0809F0B6
	b _0809F50A
_0809F0B6:
	movs r1, #1
	strb r1, [r2, #0x11]
	strb r3, [r2, #0xc]
	movs r0, #0x16
	strh r0, [r2, #0xa]
	strb r1, [r2, #0x10]
	ldr r1, _0809F0DC @ =0x0873DBB0
	ldr r0, _0809F0E0 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r1, #1
	adds r0, r0, r1
	ldrb r1, [r0]
	movs r0, #4
	movs r2, #0x91
	b _0809F2FC
	.align 2, 0
_0809F0DC: .4byte 0x0873DBB0
_0809F0E0: .4byte 0x03000011
_0809F0E4:
	ldr r2, _0809F120 @ =gNonGameplayRam
	ldrb r0, [r2, #0xc]
	adds r0, #1
	strb r0, [r2, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809F0F6
	b _0809F25A
_0809F0F6:
	cmp r0, #2
	bne _0809F0FC
	b _0809F278
_0809F0FC:
	cmp r0, #3
	bne _0809F102
	b _0809F286
_0809F102:
	cmp r0, #4
	bne _0809F108
	b _0809F294
_0809F108:
	cmp r0, #6
	bne _0809F10E
	b _0809F2A2
_0809F10E:
	cmp r0, #0xc
	beq _0809F114
	b _0809F50A
_0809F114:
	movs r0, #0
	strb r0, [r2, #0xc]
	movs r0, #0x15
	strh r0, [r2, #0xa]
	b _0809F50A
	.align 2, 0
_0809F120: .4byte gNonGameplayRam
_0809F124:
	ldr r1, _0809F148 @ =gNonGameplayRam
	ldrb r0, [r1, #0xc]
	adds r0, #1
	movs r2, #0
	strb r0, [r1, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809F14C
	movs r0, #5
	strb r0, [r1, #0x11]
	movs r0, #2
	bl FileSelectDestroyOamOfType
	movs r0, #3
	bl FileSelectDestroyOamOfType
	b _0809F50A
	.align 2, 0
_0809F148: .4byte gNonGameplayRam
_0809F14C:
	cmp r0, #4
	bne _0809F152
	b _0809F50A
_0809F152:
	cmp r0, #0xc
	beq _0809F158
	b _0809F50A
_0809F158:
	strb r2, [r1, #0xf]
	strb r2, [r1, #0xe]
	strb r2, [r1, #0xc]
	strh r2, [r1, #0xa]
	b _0809F50A
_0809F162:
	ldr r0, _0809F178 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0809F180
	ldr r1, _0809F17C @ =gNonGameplayRam
	movs r0, #0x17
	strh r0, [r1, #0xa]
	b _0809F50A
	.align 2, 0
_0809F178: .4byte gChangedInput
_0809F17C: .4byte gNonGameplayRam
_0809F180:
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	bne _0809F18A
	b _0809F50A
_0809F18A:
	ldr r1, _0809F198 @ =gNonGameplayRam
	ldrb r0, [r1, #0x10]
	cmp r0, #0
	bne _0809F19C
	movs r0, #0x19
	strh r0, [r1, #0xa]
	b _0809F50A
	.align 2, 0
_0809F198: .4byte gNonGameplayRam
_0809F19C:
	movs r0, #0x18
	strh r0, [r1, #0xa]
	b _0809F50A
_0809F1A2:
	ldr r4, _0809F1B8 @ =gNonGameplayRam
	ldrb r0, [r4, #0xc]
	adds r0, #1
	strb r0, [r4, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809F1BC
	movs r0, #4
	b _0809F3C6
	.align 2, 0
_0809F1B8: .4byte gNonGameplayRam
_0809F1BC:
	cmp r0, #2
	bne _0809F1C6
	movs r0, #0
	str r0, [sp]
	b _0809F4DA
_0809F1C6:
	cmp r0, #3
	bne _0809F234
	movs r0, #2
	strh r0, [r4, #8]
	ldr r1, _0809F1E4 @ =0x0879EC68
	ldr r0, _0809F1E8 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #8]
	str r0, [r4, #4]
	b _0809F32C
	.align 2, 0
_0809F1E4: .4byte 0x0879EC68
_0809F1E8: .4byte 0x03000011
_0809F1EC:
	ldr r4, _0809F200 @ =gNonGameplayRam
	ldrb r0, [r4, #0xc]
	adds r0, #1
	strb r0, [r4, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #9
	bne _0809F204
	movs r0, #4
	b _0809F3C6
	.align 2, 0
_0809F200: .4byte gNonGameplayRam
_0809F204:
	cmp r0, #0xa
	bne _0809F20E
	movs r0, #0
	str r0, [sp]
	b _0809F4DA
_0809F20E:
	cmp r0, #0xb
	bne _0809F234
	movs r0, #2
	strh r0, [r4, #8]
	ldr r1, _0809F22C @ =0x0879EC68
	ldr r0, _0809F230 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #8]
	str r0, [r4, #4]
	b _0809F32C
	.align 2, 0
_0809F22C: .4byte 0x0879EC68
_0809F230: .4byte 0x03000011
_0809F234:
	cmp r0, #0xc
	beq _0809F23A
	b _0809F50A
_0809F23A:
	movs r0, #1
	strb r0, [r4, #0x11]
	movs r1, #0
	movs r0, #0x11
	strh r0, [r4, #0xa]
	strb r1, [r4, #0xc]
	strb r1, [r4, #0x10]
	b _0809F50A
_0809F24A:
	ldr r2, _0809F26C @ =gNonGameplayRam
	ldrb r0, [r2, #0xc]
	adds r0, #1
	strb r0, [r2, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809F274
_0809F25A:
	ldr r0, _0809F270 @ =0x03000B8D
	ldrb r1, [r2, #0xd]
	strb r1, [r0]
	ldrb r0, [r2, #0xf]
	movs r1, #0
	bl Sram_CopyFile
	b _0809F50A
	.align 2, 0
_0809F26C: .4byte gNonGameplayRam
_0809F270: .4byte 0x03000B8D
_0809F274:
	cmp r0, #2
	bne _0809F282
_0809F278:
	ldrb r0, [r2, #0xf]
	movs r1, #1
	bl Sram_CopyFile
	b _0809F50A
_0809F282:
	cmp r0, #3
	bne _0809F290
_0809F286:
	ldrb r0, [r2, #0xf]
	movs r1, #2
	bl Sram_CopyFile
	b _0809F50A
_0809F290:
	cmp r0, #4
	bne _0809F29E
_0809F294:
	ldrb r0, [r2, #0xf]
	movs r1, #3
	bl Sram_CopyFile
	b _0809F50A
_0809F29E:
	cmp r0, #0xb
	bne _0809F2AA
_0809F2A2:
	ldrb r0, [r2, #0xf]
	bl FileSelectDrawFileInfo
	b _0809F50A
_0809F2AA:
	cmp r0, #0xc
	beq _0809F2B0
	b _0809F50A
_0809F2B0:
	movs r1, #0
	movs r0, #0x1a
	b _0809F4A4
_0809F2B6:
	ldr r4, _0809F2D8 @ =gNonGameplayRam
	ldrb r0, [r4, #0xc]
	adds r0, #1
	movs r1, #0
	strb r0, [r4, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809F2DC
	movs r0, #2
	bl FileSelectDestroyOamOfType
	movs r0, #3
	bl FileSelectDestroyOamOfType
	movs r0, #4
	b _0809F4C4
	.align 2, 0
_0809F2D8: .4byte gNonGameplayRam
_0809F2DC:
	cmp r0, #2
	bne _0809F2E2
	b _0809F4D8
_0809F2E2:
	b _0809F4F8
_0809F2E4:
	ldr r5, _0809F304 @ =gNonGameplayRam
	ldrb r0, [r5, #0xc]
	adds r0, #1
	movs r6, #0
	strb r0, [r5, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809F308
	movs r0, #0xd
_0809F2F8:
	movs r1, #0x9c
	movs r2, #0x78
_0809F2FC:
	movs r3, #1
	bl FileSelectSetupOam
	b _0809F50A
	.align 2, 0
_0809F304: .4byte gNonGameplayRam
_0809F308:
	cmp r0, #2
	bne _0809F310
	str r6, [sp]
	b _0809F4DA
_0809F310:
	cmp r0, #3
	bne _0809F33C
	movs r0, #4
	strh r0, [r5, #8]
	ldr r1, _0809F334 @ =0x0879EC68
	ldr r0, _0809F338 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0, #0x10]
	str r0, [r5, #4]
_0809F32C:
	movs r0, #3
	bl FileSelectDrawText
	b _0809F50A
	.align 2, 0
_0809F334: .4byte 0x0879EC68
_0809F338: .4byte 0x03000011
_0809F33C:
	cmp r0, #0xc
	beq _0809F342
	b _0809F50A
_0809F342:
	movs r4, #1
	strb r4, [r5, #0x10]
	ldr r1, _0809F36C @ =0x0873DBBE
	ldr r0, _0809F370 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r1, #1
	adds r0, r0, r1
	ldrb r1, [r0]
	movs r0, #5
	movs r2, #0x91
	movs r3, #1
	bl FileSelectSetupOam
	strb r4, [r5, #0x11]
	strb r6, [r5, #0xc]
	movs r0, #0x1c
	strh r0, [r5, #0xa]
	b _0809F50A
	.align 2, 0
_0809F36C: .4byte 0x0873DBBE
_0809F370: .4byte 0x03000011
_0809F374:
	ldr r0, _0809F388 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0809F390
	ldr r1, _0809F38C @ =gNonGameplayRam
	movs r0, #0x1d
	strh r0, [r1, #0xa]
	b _0809F50A
	.align 2, 0
_0809F388: .4byte gChangedInput
_0809F38C: .4byte gNonGameplayRam
_0809F390:
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	bne _0809F39A
	b _0809F50A
_0809F39A:
	ldr r1, _0809F3A8 @ =gNonGameplayRam
	ldrb r0, [r1, #0x10]
	cmp r0, #0
	bne _0809F3AC
	movs r0, #0x20
	strh r0, [r1, #0xa]
	b _0809F50A
	.align 2, 0
_0809F3A8: .4byte gNonGameplayRam
_0809F3AC:
	movs r0, #0x1e
	strh r0, [r1, #0xa]
	b _0809F50A
_0809F3B2:
	ldr r4, _0809F3D0 @ =gNonGameplayRam
	ldrb r0, [r4, #0xc]
	adds r0, #1
	movs r1, #0
	strb r0, [r4, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809F3D4
	movs r0, #5
_0809F3C6:
	bl FileSelectDestroyOamOfType
_0809F3CA:
	movs r0, #2
	strb r0, [r4, #0x11]
	b _0809F50A
	.align 2, 0
_0809F3D0: .4byte gNonGameplayRam
_0809F3D4:
	cmp r0, #2
	bne _0809F3DA
	b _0809F4D8
_0809F3DA:
	cmp r0, #0xc
	beq _0809F3E0
	b _0809F50A
_0809F3E0:
	strb r1, [r4, #0xc]
	strb r1, [r4, #0x10]
_0809F3E4:
	movs r0, #3
	strh r0, [r4, #0xa]
	b _0809F50A
_0809F3EA:
	ldr r4, _0809F414 @ =gNonGameplayRam
	ldrb r0, [r4, #0xc]
	adds r0, #1
	movs r5, #0
	strb r0, [r4, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	beq _0809F3FE
	b _0809F50A
_0809F3FE:
	movs r0, #5
	bl FileSelectDestroyOamOfType
	movs r0, #2
	strb r0, [r4, #0x11]
	strb r5, [r4, #0xc]
	strb r5, [r4, #0x10]
	movs r0, #0x1f
	strh r0, [r4, #0xa]
	b _0809F50A
	.align 2, 0
_0809F414: .4byte gNonGameplayRam
_0809F418:
	ldr r1, _0809F434 @ =gNonGameplayRam
	ldrb r0, [r1, #0xc]
	adds r0, #1
	movs r2, #0
	strb r0, [r1, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #6
	beq _0809F50A
	cmp r0, #0xb
	bne _0809F438
	str r2, [sp]
	b _0809F4DA
	.align 2, 0
_0809F434: .4byte gNonGameplayRam
_0809F438:
	cmp r0, #0xc
	bne _0809F50A
	strb r2, [r1, #0xc]
	strb r2, [r1, #0x10]
	movs r0, #3
	strh r0, [r1, #0xa]
	b _0809F50A
_0809F446:
	ldr r2, _0809F464 @ =gNonGameplayRam
	ldrb r0, [r2, #0xc]
	adds r0, #1
	strb r0, [r2, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809F46C
	ldr r1, _0809F468 @ =0x03000B8D
	ldrb r0, [r2, #0xd]
	strb r0, [r1]
	movs r0, #0
	bl Sram_EraseFile
	b _0809F50A
	.align 2, 0
_0809F464: .4byte gNonGameplayRam
_0809F468: .4byte 0x03000B8D
_0809F46C:
	cmp r0, #2
	bne _0809F478
	movs r0, #1
	bl Sram_EraseFile
	b _0809F50A
_0809F478:
	cmp r0, #3
	bne _0809F484
	movs r0, #2
	bl Sram_EraseFile
	b _0809F50A
_0809F484:
	cmp r0, #4
	bne _0809F490
	movs r0, #3
	bl Sram_EraseFile
	b _0809F50A
_0809F490:
	cmp r0, #0xb
	bne _0809F49C
	ldrb r0, [r2, #0xd]
	bl FileSelectDrawFileInfo
	b _0809F50A
_0809F49C:
	cmp r0, #0xc
	bne _0809F50A
	movs r1, #0
	movs r0, #0x21
_0809F4A4:
	strh r0, [r2, #0xa]
	strb r1, [r2, #0xc]
	b _0809F50A
_0809F4AA:
	ldr r4, _0809F4D0 @ =gNonGameplayRam
	ldrb r0, [r4, #0xc]
	adds r0, #1
	movs r1, #0
	strb r0, [r4, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809F4D4
	movs r0, #2
	bl FileSelectDestroyOamOfType
	movs r0, #5
_0809F4C4:
	bl FileSelectDestroyOamOfType
	movs r0, #5
	strb r0, [r4, #0x11]
	b _0809F50A
	.align 2, 0
_0809F4D0: .4byte gNonGameplayRam
_0809F4D4:
	cmp r0, #2
	bne _0809F4F8
_0809F4D8:
	str r1, [sp]
_0809F4DA:
	ldr r1, _0809F4EC @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r0, _0809F4F0 @ =0x0600C800
	str r0, [r1, #4]
	ldr r0, _0809F4F4 @ =0x85000600
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _0809F50A
	.align 2, 0
_0809F4EC: .4byte 0x040000D4
_0809F4F0: .4byte 0x0600C800
_0809F4F4: .4byte 0x85000600
_0809F4F8:
	cmp r0, #0xc
	bne _0809F50A
	strb r1, [r4, #0x10]
	strb r1, [r4, #0xf]
	strb r1, [r4, #0xe]

	non_word_aligned_thumb_func_start sub_0809F502
sub_0809F502: @ 0x0809F502
	strb r1, [r4, #0xc]
	strh r1, [r4, #0xa]
	b _0809F50A
_0809F508:
	movs r7, #3
_0809F50A:
	bl FileSelectDrawAllOam
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start FileSelectSetupOam
FileSelectSetupOam: @ 0x0809F518
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	movs r4, #0x16
	ldr r1, _0809F574 @ =gNonGameplayRam
	movs r2, #0x9a
	lsls r2, r2, #2
	adds r0, r1, r2
	ldrb r0, [r0, #0x1c]
	adds r5, r1, #0
	cmp r0, #0
	beq _0809F564
	adds r6, r5, #0
_0809F546:
	lsls r0, r4, #0x18
	movs r1, #0xff
	lsls r1, r1, #0x18
	adds r0, r0, r1
	lsrs r4, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0
	blt _0809F56E
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	ldrb r0, [r0, #0x1c]
	cmp r0, #0
	bne _0809F546
_0809F564:
	lsls r0, r4, #0x18
	asrs r2, r0, #0x18
	adds r6, r0, #0
	cmp r2, #0
	bge _0809F578
_0809F56E:
	movs r0, #0x17
	b _0809F91A
	.align 2, 0
_0809F574: .4byte gNonGameplayRam
_0809F578:
	movs r0, #0
	str r0, [sp]
	ldr r1, _0809F5C4 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r4, r0, #2
	ldr r2, _0809F5C8 @ =0x0300149C
	mov ip, r2
	adds r0, r4, r2
	str r0, [r1, #4]
	ldr r0, _0809F5CC @ =0x85000007
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	mov r0, ip
	subs r0, #0x18
	adds r1, r4, r0
	movs r7, #0
	mov r0, sb
	strh r0, [r1, #0x18]
	mov r2, r8
	strh r2, [r1, #0x1a]
	strb r3, [r1, #0x1c]
	movs r2, #1
	strb r2, [r1, #0x1d]
	cmp r3, #1
	bne _0809F5D8
	mov r0, ip
	adds r0, #0x14
	adds r0, r4, r0
	ldr r1, _0809F5D0 @ =0x08740A48
	str r1, [r0]
	mov r0, ip
	adds r0, #0x18
	adds r0, r4, r0
	ldr r1, _0809F5D4 @ =FileSelectProcessSamusHead
	b _0809F916
	.align 2, 0
_0809F5C4: .4byte 0x040000D4
_0809F5C8: .4byte 0x0300149C
_0809F5CC: .4byte 0x85000007
_0809F5D0: .4byte 0x08740A48
_0809F5D4: .4byte FileSelectProcessSamusHead
_0809F5D8:
	cmp r3, #2
	bne _0809F5F8
	mov r0, ip
	adds r0, #0x14
	adds r0, r4, r0
	ldr r1, _0809F5F0 @ =0x08740B48
	str r1, [r0]
	mov r0, ip
	adds r0, #0x18
	adds r0, r4, r0
	ldr r1, _0809F5F4 @ =FileSelectProcessCursor
	b _0809F916
	.align 2, 0
_0809F5F0: .4byte 0x08740B48
_0809F5F4: .4byte FileSelectProcessCursor
_0809F5F8:
	cmp r3, #3
	bne _0809F620
	adds r0, r1, #0
	adds r0, #0x23
	strb r2, [r0]
	strb r7, [r1, #0x1d]
	mov r0, ip
	adds r0, #0x14
	adds r0, r4, r0
	ldr r1, _0809F618 @ =0x08740AB8
	str r1, [r0]
	mov r0, ip
	adds r0, #0x18
	adds r0, r4, r0
	ldr r1, _0809F61C @ =FileSelectProcessDeleteArrow
	b _0809F916
	.align 2, 0
_0809F618: .4byte 0x08740AB8
_0809F61C: .4byte FileSelectProcessDeleteArrow
_0809F620:
	cmp r3, #4
	bne _0809F640
	mov r0, ip
	adds r0, #0x14
	adds r0, r4, r0
	ldr r1, _0809F638 @ =0x08740B48
	str r1, [r0]
	mov r0, ip
	adds r0, #0x18
	adds r0, r4, r0
	ldr r1, _0809F63C @ =unk_9fddc
	b _0809F916
	.align 2, 0
_0809F638: .4byte 0x08740B48
_0809F63C: .4byte unk_9fddc
_0809F640:
	cmp r3, #5
	bne _0809F660
	mov r0, ip
	adds r0, #0x14
	adds r0, r4, r0
	ldr r1, _0809F658 @ =0x08740B48
	str r1, [r0]
	mov r0, ip
	adds r0, #0x18
	adds r0, r4, r0
	ldr r1, _0809F65C @ =unk_9ff00
	b _0809F916
	.align 2, 0
_0809F658: .4byte 0x08740B48
_0809F65C: .4byte unk_9ff00
_0809F660:
	cmp r3, #6
	bne _0809F688
	adds r1, #0x23
	movs r0, #3
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x14
	adds r0, r4, r0
	ldr r1, _0809F680 @ =0x087407E0
	str r1, [r0]
	mov r0, ip
	adds r0, #0x18
	adds r0, r4, r0
	ldr r1, _0809F684 @ =FileSelectProcessAudioLogos
	b _0809F916
	.align 2, 0
_0809F680: .4byte 0x087407E0
_0809F684: .4byte FileSelectProcessAudioLogos
_0809F688:
	cmp r3, #7
	bne _0809F6BC
	adds r1, #0x23
	movs r0, #2
	strb r0, [r1]
	mov r1, ip
	adds r1, #0x14
	adds r1, r4, r1
	ldr r2, _0809F6B0 @ =0x0879E890
	ldr r0, _0809F6B4 @ =0x03000B8D
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r1]
	mov r0, ip
	adds r0, #0x18
	adds r0, r4, r0
	ldr r1, _0809F6B8 @ =FileSelectProcessFileOverlay
	b _0809F916
	.align 2, 0
_0809F6B0: .4byte 0x0879E890
_0809F6B4: .4byte 0x03000B8D
_0809F6B8: .4byte FileSelectProcessFileOverlay
_0809F6BC:
	cmp r3, #8
	bne _0809F6E4
	adds r1, #0x23
	movs r0, #2
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x14
	adds r0, r4, r0
	ldr r1, _0809F6DC @ =0x087408E0
	str r1, [r0]
	mov r0, ip
	adds r0, #0x18
	adds r0, r4, r0
	ldr r1, _0809F6E0 @ =unk_a016c
	b _0809F916
	.align 2, 0
_0809F6DC: .4byte 0x087408E0
_0809F6E0: .4byte unk_a016c
_0809F6E4:
	cmp r3, #9
	bne _0809F70C
	strb r7, [r1, #0x1d]
	adds r1, #0x23
	movs r0, #3
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x14
	adds r0, r4, r0
	ldr r1, _0809F704 @ =0x087408F0
	str r1, [r0]
	mov r0, ip
	adds r0, #0x18
	adds r0, r4, r0
	ldr r1, _0809F708 @ =FileSelectProcessAudioSelect
	b _0809F916
	.align 2, 0
_0809F704: .4byte 0x087408F0
_0809F708: .4byte FileSelectProcessAudioSelect
_0809F70C:
	cmp r3, #0xa
	bne _0809F72C
	mov r0, ip
	adds r0, #0x14
	adds r0, r4, r0
	ldr r1, _0809F724 @ =0x08740880
	str r1, [r0]
	mov r0, ip
	adds r0, #0x18
	adds r0, r4, r0
	ldr r1, _0809F728 @ =unk_a01cc
	b _0809F916
	.align 2, 0
_0809F724: .4byte 0x08740880
_0809F728: .4byte unk_a01cc
_0809F72C:
	cmp r3, #0xb
	bne _0809F76C
	movs r0, #0xfe
	lsls r0, r0, #1
	bl SoundPlay
	ldr r3, _0809F760 @ =gNonGameplayRam
	asrs r0, r6, #0x18
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	adds r0, r1, r3
	adds r0, #0x23
	movs r2, #2
	strb r2, [r0]
	adds r0, r3, #0
	adds r0, #0x2c
	adds r0, r1, r0
	ldr r2, _0809F764 @ =0x08740918
	str r2, [r0]
	adds r3, #0x30
	adds r1, r1, r3
	ldr r0, _0809F768 @ =FileSelectProcessFileActionPanel
	str r0, [r1]
	b _0809F918
	.align 2, 0
_0809F760: .4byte gNonGameplayRam
_0809F764: .4byte 0x08740918
_0809F768: .4byte FileSelectProcessFileActionPanel
_0809F76C:
	cmp r3, #0xc
	bne _0809F7AC
	movs r0, #0xfe
	lsls r0, r0, #1
	bl SoundPlay
	ldr r3, _0809F7A0 @ =gNonGameplayRam
	asrs r0, r6, #0x18
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	adds r0, r1, r3
	adds r0, #0x23
	movs r2, #1
	strb r2, [r0]
	adds r0, r3, #0
	adds r0, #0x2c
	adds r0, r1, r0
	ldr r2, _0809F7A4 @ =0x08740978
	str r2, [r0]
	adds r3, #0x30
	adds r1, r1, r3
	ldr r0, _0809F7A8 @ =FileSelectProcessCopyFilePanel
	str r0, [r1]
	b _0809F918
	.align 2, 0
_0809F7A0: .4byte gNonGameplayRam
_0809F7A4: .4byte 0x08740978
_0809F7A8: .4byte FileSelectProcessCopyFilePanel
_0809F7AC:
	cmp r3, #0xd
	bne _0809F7EC
	movs r0, #0xfe
	lsls r0, r0, #1
	bl SoundPlay
	ldr r3, _0809F7E0 @ =gNonGameplayRam
	asrs r0, r6, #0x18
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	adds r0, r1, r3
	adds r0, #0x23
	movs r2, #1
	strb r2, [r0]
	adds r0, r3, #0
	adds r0, #0x2c
	adds r0, r1, r0
	ldr r2, _0809F7E4 @ =0x08740978
	str r2, [r0]
	adds r3, #0x30
	adds r1, r1, r3
	ldr r0, _0809F7E8 @ =FileSelectProcessEraseFilePanel
	str r0, [r1]
	b _0809F918
	.align 2, 0
_0809F7E0: .4byte gNonGameplayRam
_0809F7E4: .4byte 0x08740978
_0809F7E8: .4byte FileSelectProcessEraseFilePanel
_0809F7EC:
	cmp r3, #0xe
	bne _0809F810
	asrs r1, r6, #0x18
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r1, r0, r5
	adds r1, #0x23
	movs r2, #3
	strb r2, [r1]
	adds r1, r5, #0
	adds r1, #0x30
	adds r0, r0, r1
	ldr r1, _0809F80C @ =unk_a0518
	b _0809F916
	.align 2, 0
_0809F80C: .4byte unk_a0518
_0809F810:
	cmp r3, #0xf
	bne _0809F834
	asrs r1, r6, #0x18
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r1, r0, r5
	adds r1, #0x23
	movs r2, #3
	strb r2, [r1]
	adds r1, r5, #0
	adds r1, #0x30
	adds r0, r0, r1
	ldr r1, _0809F830 @ =unk_a0518
	b _0809F916
	.align 2, 0
_0809F830: .4byte unk_a0518
_0809F834:
	cmp r3, #0x10
	bne _0809F858
	asrs r1, r6, #0x18
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r1, r0, r5
	adds r1, #0x23
	movs r2, #3
	strb r2, [r1]
	adds r1, r5, #0
	adds r1, #0x30
	adds r0, r0, r1
	ldr r1, _0809F854 @ =unk_a0518
	b _0809F916
	.align 2, 0
_0809F854: .4byte unk_a0518
_0809F858:
	cmp r3, #0x11
	bne _0809F87C
	asrs r0, r6, #0x18
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	adds r0, r1, r5
	adds r0, #0x23
	movs r2, #2
	strb r2, [r0]
	adds r0, r5, #0
	adds r0, #0x2c
	adds r0, r1, r0
	ldr r2, _0809F878 @ =0x087409A0
	b _0809F8A0
	.align 2, 0
_0809F878: .4byte 0x087409A0
_0809F87C:
	cmp r3, #0x14
	beq _0809F888
	cmp r3, #0x15
	beq _0809F888
	cmp r3, #0x16
	bne _0809F8B8
_0809F888:
	asrs r0, r6, #0x18
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	adds r0, r1, r5
	adds r0, #0x23
	movs r2, #3
	strb r2, [r0]
	adds r0, r5, #0
	adds r0, #0x2c
	adds r0, r1, r0
	ldr r2, _0809F8B0 @ =0x08740B98
_0809F8A0:
	str r2, [r0]
	adds r0, r5, #0
	adds r0, #0x30
	adds r1, r1, r0
	ldr r0, _0809F8B4 @ =unk_a0518
	str r0, [r1]
	b _0809F918
	.align 2, 0
_0809F8B0: .4byte 0x08740B98
_0809F8B4: .4byte unk_a0518
_0809F8B8:
	cmp r3, #0x17
	bne _0809F8F8
	movs r0, #0xfe
	lsls r0, r0, #1
	bl SoundPlay
	ldr r3, _0809F8EC @ =gNonGameplayRam
	asrs r0, r6, #0x18
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	adds r0, r1, r3
	adds r0, #0x23
	movs r2, #1
	strb r2, [r0]
	adds r0, r3, #0
	adds r0, #0x2c
	adds r0, r1, r0
	ldr r2, _0809F8F0 @ =0x08740978
	str r2, [r0]
	adds r3, #0x30
	adds r1, r1, r3
	ldr r0, _0809F8F4 @ =unk_a039c
	str r0, [r1]
	b _0809F918
	.align 2, 0
_0809F8EC: .4byte gNonGameplayRam
_0809F8F0: .4byte 0x08740978
_0809F8F4: .4byte unk_a039c
_0809F8F8:
	cmp r3, #0x18
	bne _0809F918
	asrs r1, r6, #0x18
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r1, r5, #0
	adds r1, #0x2c
	adds r1, r0, r1
	ldr r2, _0809F928 @ =0x08740B48
	str r2, [r1]
	adds r1, r5, #0
	adds r1, #0x30
	adds r0, r0, r1
	ldr r1, _0809F92C @ =unk_a0424
_0809F916:
	str r1, [r0]
_0809F918:
	lsrs r0, r6, #0x18
_0809F91A:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809F928: .4byte 0x08740B48
_0809F92C: .4byte unk_a0424

	thumb_func_start FileSelectProcessSamusHead
FileSelectProcessSamusHead: @ 0x0809F930
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #9]
	cmp r0, #0
	bne _0809FA2C
	ldr r0, _0809F958 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0809F994
	ldr r1, _0809F95C @ =gNonGameplayRam
	ldrb r0, [r1, #0xd]
	cmp r0, #3
	beq _0809F974
	cmp r0, #3
	ble _0809F960
	cmp r0, #4
	beq _0809F984
	b _0809F9F6
	.align 2, 0
_0809F958: .4byte gChangedInput
_0809F95C: .4byte gNonGameplayRam
_0809F960:
	cmp r0, #1
	blt _0809F9F6
	movs r0, #0xf
	strh r0, [r4]
	ldrh r0, [r4, #2]
	subs r0, #0x10
	strh r0, [r4, #2]
	ldrb r0, [r1, #0xd]
	subs r0, #1
	b _0809F9D0
_0809F974:
	movs r0, #0xf
	strh r0, [r4]
	ldrh r0, [r4, #2]
	subs r0, #0x25
	strh r0, [r4, #2]
	ldrb r0, [r1, #0xd]
	subs r0, #1
	b _0809F9D0
_0809F984:
	movs r0, #0xf
	strh r0, [r4]
	ldrh r0, [r4, #2]
	subs r0, #0x28
	strh r0, [r4, #2]
	ldrb r0, [r1, #0xd]
	subs r0, #1
	b _0809F9D0
_0809F994:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0809F9F6
	ldr r1, _0809F9B0 @ =gNonGameplayRam
	ldrb r0, [r1, #0xd]
	cmp r0, #2
	beq _0809F9C2
	cmp r0, #2
	ble _0809F9B4
	cmp r0, #3
	beq _0809F9E0
	b _0809F9F6
	.align 2, 0
_0809F9B0: .4byte gNonGameplayRam
_0809F9B4:
	cmp r0, #0
	blt _0809F9F6
	movs r0, #0xf
	strh r0, [r4]
	ldrh r0, [r4, #2]
	adds r0, #0x10
	b _0809F9CA
_0809F9C2:
	movs r0, #0xf
	strh r0, [r4]
	ldrh r0, [r4, #2]
	adds r0, #0x25
_0809F9CA:
	strh r0, [r4, #2]
	ldrb r0, [r1, #0xd]
	adds r0, #1
_0809F9D0:
	strb r0, [r1, #0xd]
	ldr r0, _0809F9DC @ =0x000001F9
	bl SoundPlay
	b _0809F9F6
	.align 2, 0
_0809F9DC: .4byte 0x000001F9
_0809F9E0:
	movs r0, #0xf
	strh r0, [r4]
	ldrh r0, [r4, #2]
	adds r0, #0x28
	strh r0, [r4, #2]
	ldrb r0, [r1, #0xd]
	adds r0, #1
	strb r0, [r1, #0xd]
	ldr r0, _0809FA1C @ =0x000001F9
	bl SoundPlay
_0809F9F6:
	ldr r0, _0809FA20 @ =gNonGameplayRam
	ldrb r0, [r0, #0xd]
	cmp r0, #3
	beq _0809FACC
	ldr r0, _0809FA24 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	beq _0809FACC
	movs r0, #0
	strb r0, [r4, #7]
	strb r0, [r4, #6]
	movs r0, #0x64
	strb r0, [r4, #9]
	ldr r0, _0809FA28 @ =0x000001FB
	bl SoundPlay
	b _0809FACC
	.align 2, 0
_0809FA1C: .4byte 0x000001F9
_0809FA20: .4byte gNonGameplayRam
_0809FA24: .4byte gChangedInput
_0809FA28: .4byte 0x000001FB
_0809FA2C:
	cmp r0, #1
	bne _0809FA60
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _0809FA4C
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0809FA4C
	strb r1, [r4, #7]
	movs r0, #0x64
	strb r0, [r4, #9]
_0809FA4C:
	ldr r0, _0809FA5C @ =gNonGameplayRam
	ldrb r0, [r0, #0xc]
	cmp r0, #0xb
	bne _0809FACC
	movs r0, #0x64
	strb r0, [r4, #9]
	b _0809FACC
	.align 2, 0
_0809FA5C: .4byte gNonGameplayRam
_0809FA60:
	cmp r0, #0x64
	bne _0809FAB4
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r1, [r4, #7]
	ldr r0, _0809FA88 @ =gNonGameplayRam
	movs r2, #0xa
	ldrsh r1, [r0, r2]
	cmp r1, #0
	bne _0809FA90
	strb r1, [r4, #7]
	strb r1, [r4, #6]
	ldr r0, _0809FA8C @ =0x08740A48
	str r0, [r4, #0x14]
	strb r1, [r4, #9]
	b _0809FACC
	.align 2, 0
_0809FA88: .4byte gNonGameplayRam
_0809FA8C: .4byte 0x08740A48
_0809FA90:
	cmp r1, #5
	beq _0809FAA0
	cmp r1, #7
	beq _0809FAA0
	cmp r1, #0xc
	beq _0809FAA0
	cmp r1, #0xd
	bne _0809FACC
_0809FAA0:
	movs r0, #0
	strb r0, [r4, #7]
	strb r0, [r4, #6]
	ldr r0, _0809FAB0 @ =0x08740A70
	str r0, [r4, #0x14]
	movs r0, #0xc8
	strb r0, [r4, #9]
	b _0809FACC
	.align 2, 0
_0809FAB0: .4byte 0x08740A70
_0809FAB4:
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _0809FACC
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0809FACC
	strb r1, [r4, #7]
_0809FACC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start FileSelectProcessCursor
FileSelectProcessCursor: @ 0x0809FAD4
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #9]
	cmp r0, #0
	beq _0809FAE0
	b _0809FC20
_0809FAE0:
	ldr r3, _0809FB20 @ =gNonGameplayRam
	movs r0, #0xa
	ldrsh r1, [r3, r0]
	cmp r1, #2
	bne _0809FB50
	ldr r0, _0809FB24 @ =gChangedInput
	ldrh r2, [r0]
	ands r1, r2
	cmp r1, #0
	beq _0809FAF6
	b _0809FC48
_0809FAF6:
	movs r0, #9
	ands r0, r2
	cmp r0, #0
	bne _0809FB00
	b _0809FC82
_0809FB00:
	ldr r2, _0809FB28 @ =0x03000B94
	ldrb r1, [r3, #0xd]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrb r0, [r0, #0x10]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0809FB30
	ldr r0, _0809FB2C @ =0x000001FB
	bl SoundPlay
	b _0809FB38
	.align 2, 0
_0809FB20: .4byte gNonGameplayRam
_0809FB24: .4byte gChangedInput
_0809FB28: .4byte 0x03000B94
_0809FB2C: .4byte 0x000001FB
_0809FB30:
	movs r0, #0xff
	lsls r0, r0, #1
	bl SoundPlay
_0809FB38:
	ldr r1, _0809FB48 @ =gNonGameplayRam
	movs r0, #0
	strb r0, [r1, #0xe]
	strb r0, [r4, #7]
	strb r0, [r4, #6]
	ldr r0, _0809FB4C @ =0x08740B70
	str r0, [r4, #0x14]
	b _0809FC48
	.align 2, 0
_0809FB48: .4byte gNonGameplayRam
_0809FB4C: .4byte 0x08740B70
_0809FB50:
	cmp r1, #3
	beq _0809FB56
	b _0809FC82
_0809FB56:
	ldr r0, _0809FB7C @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0809FB84
	ldrb r0, [r3, #0xe]
	cmp r0, #0
	beq _0809FBA2
	subs r0, #1
	strb r0, [r3, #0xe]
	ldrh r0, [r4, #2]
	subs r0, #0x10
	strh r0, [r4, #2]
	ldr r0, _0809FB80 @ =0x000001F9
	bl SoundPlay
	b _0809FBA2
	.align 2, 0
_0809FB7C: .4byte gChangedInput
_0809FB80: .4byte 0x000001F9
_0809FB84:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0809FBA2
	ldrb r0, [r3, #0xe]
	cmp r0, #1
	bhi _0809FBA2
	adds r0, #1
	strb r0, [r3, #0xe]
	ldrh r0, [r4, #2]
	adds r0, #0x10
	strh r0, [r4, #2]
	ldr r0, _0809FBEC @ =0x000001F9
	bl SoundPlay
_0809FBA2:
	ldr r0, _0809FBF0 @ =gChangedInput
	ldrh r2, [r0]
	movs r0, #2
	ands r0, r2
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _0809FC48
	movs r0, #9
	ands r0, r2
	cmp r0, #0
	beq _0809FC82
	strb r1, [r4, #7]
	strb r1, [r4, #6]
	ldr r0, _0809FBF4 @ =0x08740B70
	str r0, [r4, #0x14]
	ldr r1, _0809FBF8 @ =gNonGameplayRam
	ldrb r0, [r1, #0xe]
	cmp r0, #0
	bne _0809FC0E
	movs r0, #0x64
	strb r0, [r4, #9]
	ldr r2, _0809FBFC @ =0x03000B94
	ldrb r1, [r1, #0xd]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrb r0, [r0, #0x10]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0809FC04
	ldr r0, _0809FC00 @ =0x000001FB
	bl SoundPlay
	b _0809FC82
	.align 2, 0
_0809FBEC: .4byte 0x000001F9
_0809FBF0: .4byte gChangedInput
_0809FBF4: .4byte 0x08740B70
_0809FBF8: .4byte gNonGameplayRam
_0809FBFC: .4byte 0x03000B94
_0809FC00: .4byte 0x000001FB
_0809FC04:
	movs r0, #0xff
	lsls r0, r0, #1
	bl SoundPlay
	b _0809FC82
_0809FC0E:
	ldr r0, _0809FC1C @ =0x000001FB
	bl SoundPlay
	movs r0, #1
	strb r0, [r4, #9]
	b _0809FC82
	.align 2, 0
_0809FC1C: .4byte 0x000001FB
_0809FC20:
	cmp r0, #1
	bne _0809FC54
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _0809FC40
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0809FC40
	strb r1, [r4, #7]
	movs r0, #0x64
	strb r0, [r4, #9]
_0809FC40:
	ldr r0, _0809FC50 @ =gNonGameplayRam
	ldrb r0, [r0, #0xc]
	cmp r0, #0xb
	bne _0809FC82
_0809FC48:
	movs r0, #0x64
	strb r0, [r4, #9]
	b _0809FC82
	.align 2, 0
_0809FC50: .4byte gNonGameplayRam
_0809FC54:
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _0809FC6C
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0809FC6C
	strb r1, [r4, #7]
_0809FC6C:
	ldr r0, _0809FC88 @ =gNonGameplayRam
	movs r1, #0xa
	ldrsh r0, [r0, r1]
	cmp r0, #3
	bne _0809FC82
	movs r1, #0
	strb r1, [r4, #7]
	strb r1, [r4, #6]
	ldr r0, _0809FC8C @ =0x08740B48
	str r0, [r4, #0x14]
	strb r1, [r4, #9]
_0809FC82:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809FC88: .4byte gNonGameplayRam
_0809FC8C: .4byte 0x08740B48

	thumb_func_start FileSelectProcessDeleteArrow
FileSelectProcessDeleteArrow: @ 0x0809FC90
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r7, #0
	movs r6, #0
	ldrb r0, [r4, #9]
	cmp r0, #0
	bne _0809FD7C
	movs r0, #1
	strb r0, [r4, #5]
	ldr r1, _0809FCD0 @ =gChangedInput
	ldrh r2, [r1]
	movs r0, #0x40
	ands r0, r2
	mov ip, r1
	cmp r0, #0
	beq _0809FCDC
	ldr r0, _0809FCD4 @ =gNonGameplayRam
	ldrb r1, [r0, #0xf]
	adds r5, r0, #0
	cmp r1, #0
	beq _0809FCC0
	subs r0, r1, #1
	strb r0, [r5, #0xf]
	movs r6, #1
_0809FCC0:
	ldrb r0, [r5, #0xf]
	ldrb r1, [r5, #0xd]
	cmp r1, r0
	bne _0809FD12
	cmp r1, #0
	bne _0809FCD8
	adds r0, #1
	b _0809FD00
	.align 2, 0
_0809FCD0: .4byte gChangedInput
_0809FCD4: .4byte gNonGameplayRam
_0809FCD8:
	subs r0, #1
	b _0809FD0E
_0809FCDC:
	movs r0, #0x80
	ands r0, r2
	ldr r5, _0809FD08 @ =gNonGameplayRam
	cmp r0, #0
	beq _0809FD12
	ldrb r0, [r5, #0xf]
	cmp r0, #1
	bhi _0809FCF2
	adds r0, #1
	strb r0, [r5, #0xf]
	movs r6, #1
_0809FCF2:
	ldrb r0, [r5, #0xf]
	ldrb r1, [r5, #0xd]
	cmp r1, r0
	bne _0809FD12
	cmp r1, #2
	bne _0809FD0C
	subs r0, #1
_0809FD00:
	strb r0, [r5, #0xf]
	movs r6, #0
	b _0809FD12
	.align 2, 0
_0809FD08: .4byte gNonGameplayRam
_0809FD0C:
	adds r0, #1
_0809FD0E:
	strb r0, [r5, #0xf]
	movs r6, #1
_0809FD12:
	ldr r3, _0809FD70 @ =0x0879E8A4
	adds r2, r5, #0
	ldrb r1, [r2, #0xd]
	lsls r0, r1, #1
	adds r0, r0, r1
	ldrb r2, [r2, #0xf]
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r3
	ldr r0, [r0]
	str r0, [r4, #0x14]
	mov r0, ip
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	bne _0809FD88
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	beq _0809FDA4
	strb r2, [r4, #7]
	strb r2, [r4, #6]
	movs r0, #1
	strb r0, [r4, #9]
	ldr r2, _0809FD74 @ =0x03000B94
	ldrb r1, [r5, #0xf]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r2, r0, r2
	movs r0, #0x10
	ldrsb r0, [r2, r0]
	cmp r0, #1
	beq _0809FD6A
	movs r0, #0x11
	ldrsb r0, [r2, r0]
	cmp r0, #1
	beq _0809FD6A
	ldrb r0, [r2]
	cmp r0, #1
	bne _0809FD78
_0809FD6A:
	movs r7, #1
	b _0809FDA4
	.align 2, 0
_0809FD70: .4byte 0x0879E8A4
_0809FD74: .4byte 0x03000B94
_0809FD78:
	movs r7, #2
	b _0809FDA4
_0809FD7C:
	cmp r0, #1
	bne _0809FD94
	ldr r0, _0809FD90 @ =gNonGameplayRam
	ldrb r0, [r0, #0xc]
	cmp r0, #0xb
	bne _0809FDA4
_0809FD88:
	movs r0, #0x64
	strb r0, [r4, #9]
	b _0809FDA4
	.align 2, 0
_0809FD90: .4byte gNonGameplayRam
_0809FD94:
	ldr r0, _0809FDBC @ =gNonGameplayRam
	movs r1, #0xa
	ldrsh r0, [r0, r1]
	cmp r0, #0x11
	bne _0809FDA4
	strb r7, [r4, #7]
	strb r7, [r4, #6]
	strb r7, [r4, #9]
_0809FDA4:
	cmp r6, #0
	beq _0809FDAE
	ldr r0, _0809FDC0 @ =0x000001F9
	bl SoundPlay
_0809FDAE:
	cmp r7, #1
	bne _0809FDC8
	ldr r0, _0809FDC4 @ =0x000001FB
	bl SoundPlay
	b _0809FDD2
	.align 2, 0
_0809FDBC: .4byte gNonGameplayRam
_0809FDC0: .4byte 0x000001F9
_0809FDC4: .4byte 0x000001FB
_0809FDC8:
	cmp r7, #2
	bne _0809FDD2
	ldr r0, _0809FDD8 @ =0x00000207
	bl SoundPlay
_0809FDD2:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809FDD8: .4byte 0x00000207

	thumb_func_start unk_9fddc
unk_9fddc: @ 0x0809FDDC
	push {r4, lr}
	adds r4, r0, #0
	ldrb r2, [r4, #9]
	cmp r2, #0
	bne _0809FEAC
	ldr r3, _0809FE1C @ =gNonGameplayRam
	ldrb r0, [r3, #0x10]
	cmp r0, #0
	bne _0809FE2C
	ldr r0, _0809FE20 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0809FE58
	movs r0, #1
	strb r0, [r3, #0x10]
	ldr r1, _0809FE24 @ =0x0873DBB0
	ldr r0, _0809FE28 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r1, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r4]
	movs r0, #0xfd
	lsls r0, r0, #1
	bl SoundPlay
	b _0809FE58
	.align 2, 0
_0809FE1C: .4byte gNonGameplayRam
_0809FE20: .4byte gChangedInput
_0809FE24: .4byte 0x0873DBB0
_0809FE28: .4byte 0x03000011
_0809FE2C:
	cmp r0, #1
	bne _0809FE58
	ldr r0, _0809FE80 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0809FE58
	strb r2, [r3, #0x10]
	ldr r1, _0809FE84 @ =0x0873DBB0
	ldr r0, _0809FE88 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r4]
	movs r0, #0xfd
	lsls r0, r0, #1
	bl SoundPlay
_0809FE58:
	ldr r0, _0809FE80 @ =gChangedInput
	ldrh r2, [r0]
	movs r0, #2
	ands r0, r2
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _0809FED6
	movs r0, #9
	ands r0, r2
	cmp r0, #0
	beq _0809FEF8
	strb r1, [r4, #7]
	strb r1, [r4, #6]
	ldr r0, _0809FE8C @ =gNonGameplayRam
	ldrb r0, [r0, #0x10]
	cmp r0, #0
	bne _0809FE94
	ldr r0, _0809FE90 @ =0x00000207
	b _0809FE96
	.align 2, 0
_0809FE80: .4byte gChangedInput
_0809FE84: .4byte 0x0873DBB0
_0809FE88: .4byte 0x03000011
_0809FE8C: .4byte gNonGameplayRam
_0809FE90: .4byte 0x00000207
_0809FE94:
	ldr r0, _0809FEA4 @ =0x000001FB
_0809FE96:
	bl SoundPlay
	ldr r0, _0809FEA8 @ =0x08740B70
	str r0, [r4, #0x14]
	movs r0, #1
	strb r0, [r4, #9]
	b _0809FEF8
	.align 2, 0
_0809FEA4: .4byte 0x000001FB
_0809FEA8: .4byte 0x08740B70
_0809FEAC:
	cmp r2, #1
	bne _0809FEE0
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _0809FEC8
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0809FEC8
	strb r1, [r4, #7]
_0809FEC8:
	ldr r0, _0809FEDC @ =gNonGameplayRam
	ldrb r0, [r0, #0xc]
	cmp r0, #0xb
	bne _0809FEF8
	movs r0, #0
	strb r0, [r4, #7]
	strb r0, [r4, #6]
_0809FED6:
	movs r0, #0x64
	strb r0, [r4, #9]
	b _0809FEF8
	.align 2, 0
_0809FEDC: .4byte gNonGameplayRam
_0809FEE0:
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _0809FEF8
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0809FEF8
	strb r1, [r4, #7]
_0809FEF8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_9ff00
unk_9ff00: @ 0x0809FF00
	push {r4, lr}
	adds r4, r0, #0
	ldrb r2, [r4, #9]
	cmp r2, #0
	bne _0809FFD0
	ldr r3, _0809FF40 @ =gNonGameplayRam
	ldrb r0, [r3, #0x10]
	cmp r0, #0
	bne _0809FF50
	ldr r0, _0809FF44 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0809FF7C
	movs r0, #1
	strb r0, [r3, #0x10]
	ldr r1, _0809FF48 @ =0x0873DBBE
	ldr r0, _0809FF4C @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r1, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r4]
	movs r0, #0xfd
	lsls r0, r0, #1
	bl SoundPlay
	b _0809FF7C
	.align 2, 0
_0809FF40: .4byte gNonGameplayRam
_0809FF44: .4byte gChangedInput
_0809FF48: .4byte 0x0873DBBE
_0809FF4C: .4byte 0x03000011
_0809FF50:
	cmp r0, #1
	bne _0809FF7C
	ldr r0, _0809FFA8 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0809FF7C
	strb r2, [r3, #0x10]
	ldr r1, _0809FFAC @ =0x0873DBBE
	ldr r0, _0809FFB0 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r4]
	movs r0, #0xfd
	lsls r0, r0, #1
	bl SoundPlay
_0809FF7C:
	ldr r0, _0809FFA8 @ =gChangedInput
	ldrh r2, [r0]
	movs r0, #2
	ands r0, r2
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _0809FFFA
	movs r0, #9
	ands r0, r2
	cmp r0, #0
	beq _080A001C
	strb r1, [r4, #7]
	strb r1, [r4, #6]
	ldr r0, _0809FFB4 @ =gNonGameplayRam
	ldrb r0, [r0, #0x10]
	cmp r0, #0
	bne _0809FFB8
	movs r0, #0x82
	lsls r0, r0, #2
	b _0809FFBA
	.align 2, 0
_0809FFA8: .4byte gChangedInput
_0809FFAC: .4byte 0x0873DBBE
_0809FFB0: .4byte 0x03000011
_0809FFB4: .4byte gNonGameplayRam
_0809FFB8:
	ldr r0, _0809FFC8 @ =0x000001FB
_0809FFBA:
	bl SoundPlay
	ldr r0, _0809FFCC @ =0x08740B70
	str r0, [r4, #0x14]
	movs r0, #1
	strb r0, [r4, #9]
	b _080A001C
	.align 2, 0
_0809FFC8: .4byte 0x000001FB
_0809FFCC: .4byte 0x08740B70
_0809FFD0:
	cmp r2, #1
	bne _080A0004
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _0809FFEC
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _0809FFEC
	strb r1, [r4, #7]
_0809FFEC:
	ldr r0, _080A0000 @ =gNonGameplayRam
	ldrb r0, [r0, #0xc]
	cmp r0, #0xb
	bne _080A001C
	movs r0, #0
	strb r0, [r4, #7]
	strb r0, [r4, #6]
_0809FFFA:
	movs r0, #0x64
	strb r0, [r4, #9]
	b _080A001C
	.align 2, 0
_080A0000: .4byte gNonGameplayRam
_080A0004:
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _080A001C
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _080A001C
	strb r1, [r4, #7]
_080A001C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start FileSelectProcessAudioLogos
FileSelectProcessAudioLogos: @ 0x080A0024
	push {lr}
	adds r2, r0, #0
	ldr r0, _080A0064 @ =gNonGameplayRam
	ldrb r0, [r0, #0xd]
	cmp r0, #3
	bne _080A00B8
	ldrb r3, [r2, #9]
	cmp r3, #0
	bne _080A0078
	ldr r0, _080A0068 @ =0x087407C0
	str r0, [r2, #0x14]
	ldr r0, _080A006C @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A00DA
	movs r0, #1
	strb r0, [r2, #9]
	ldr r0, _080A0070 @ =0x087407D0
	str r0, [r2, #0x14]
	strb r3, [r2, #7]
	strb r3, [r2, #6]
	movs r0, #0x80
	lsls r0, r0, #0x12
	bl unk_24ec
	ldr r0, _080A0074 @ =0x00000206
	bl SoundPlay
	b _080A00DA
	.align 2, 0
_080A0064: .4byte gNonGameplayRam
_080A0068: .4byte 0x087407C0
_080A006C: .4byte gChangedInput
_080A0070: .4byte 0x087407D0
_080A0074: .4byte 0x00000206
_080A0078:
	cmp r3, #1
	bne _080A00DA
	ldr r0, _080A00AC @ =0x087407D0
	str r0, [r2, #0x14]
	ldr r0, _080A00B0 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080A00DA
	movs r1, #0
	strb r1, [r2, #9]
	ldr r0, _080A00B4 @ =0x087407C0
	str r0, [r2, #0x14]
	strb r1, [r2, #7]
	strb r1, [r2, #6]
	movs r0, #0x80
	lsls r0, r0, #0x11
	bl unk_24ec
	movs r0, #0xfd
	lsls r0, r0, #1
	bl SoundPlay
	b _080A00DA
	.align 2, 0
_080A00AC: .4byte 0x087407D0
_080A00B0: .4byte gChangedInput
_080A00B4: .4byte 0x087407C0
_080A00B8:
	ldrb r1, [r2, #9]
	cmp r1, #0
	bne _080A00CC
	ldr r0, _080A00C8 @ =0x087407E0
	str r0, [r2, #0x14]
	strb r1, [r2, #7]
	strb r1, [r2, #6]
	b _080A00DA
	.align 2, 0
_080A00C8: .4byte 0x087407E0
_080A00CC:
	cmp r1, #1
	bne _080A00DA
	ldr r0, _080A00E0 @ =0x087407F0
	str r0, [r2, #0x14]
	movs r0, #0
	strb r0, [r2, #7]
	strb r0, [r2, #6]
_080A00DA:
	pop {r0}
	bx r0
	.align 2, 0
_080A00E0: .4byte 0x087407F0

	thumb_func_start FileSelectProcessAudioSelect
FileSelectProcessAudioSelect: @ 0x080A00E4
	push {lr}
	adds r2, r0, #0
	ldr r0, _080A0110 @ =gNonGameplayRam
	ldrb r0, [r0, #0xd]
	cmp r0, #3
	bne _080A0138
	movs r3, #1
	strb r3, [r2, #5]
	ldrb r0, [r2, #9]
	cmp r0, #0
	bne _080A0118
	ldr r0, _080A0114 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A0140
	strb r3, [r2, #9]
	movs r0, #0xaa
	strh r0, [r2]
	b _080A0140
	.align 2, 0
_080A0110: .4byte gNonGameplayRam
_080A0114: .4byte gChangedInput
_080A0118:
	cmp r0, #1
	bne _080A0140
	ldr r0, _080A0134 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080A0140
	movs r0, #0
	strb r0, [r2, #9]
	movs r0, #0x66
	strh r0, [r2]
	b _080A0140
	.align 2, 0
_080A0134: .4byte gChangedInput
_080A0138:
	movs r0, #0
	strb r0, [r2, #7]
	strb r0, [r2, #6]
	strb r0, [r2, #5]
_080A0140:
	pop {r0}
	bx r0

	thumb_func_start FileSelectProcessFileOverlay
FileSelectProcessFileOverlay: @ 0x080A0144
	push {lr}
	adds r2, r0, #0
	ldr r1, _080A0164 @ =gNonGameplayRam
	movs r3, #0xa
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bne _080A015E
	ldr r0, _080A0168 @ =0x0879E890
	ldrb r1, [r1, #0xd]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1]
	str r0, [r2, #0x14]
_080A015E:
	pop {r0}
	bx r0
	.align 2, 0
_080A0164: .4byte gNonGameplayRam
_080A0168: .4byte 0x0879E890

	thumb_func_start unk_a016c
unk_a016c: @ 0x080A016C
	push {lr}
	adds r2, r0, #0
	ldr r1, _080A0190 @ =gNonGameplayRam
	movs r0, #0xa
	ldrsh r3, [r1, r0]
	cmp r3, #0
	bne _080A01C6
	ldr r0, _080A0194 @ =0x087408E0
	str r0, [r2, #0x14]
	ldrb r1, [r1, #0xd]
	cmp r1, #2
	bhi _080A01C4
	movs r0, #1
	strb r0, [r2, #5]
	cmp r1, #0
	bne _080A0198
	movs r0, #0x31
	b _080A01A6
	.align 2, 0
_080A0190: .4byte gNonGameplayRam
_080A0194: .4byte 0x087408E0
_080A0198:
	cmp r1, #1
	bne _080A01A0
	movs r0, #0x41
	b _080A01A6
_080A01A0:
	cmp r1, #2
	bne _080A01A8
	movs r0, #0x51
_080A01A6:
	strh r0, [r2, #2]
_080A01A8:
	ldr r0, _080A01BC @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #9
	ands r0, r1
	cmp r0, #0
	beq _080A01C6
	ldr r0, _080A01C0 @ =0x087408D0
	str r0, [r2, #0x14]
	b _080A01C6
	.align 2, 0
_080A01BC: .4byte gChangedInput
_080A01C0: .4byte 0x087408D0
_080A01C4:
	strb r3, [r2, #5]
_080A01C6:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_a01cc
unk_a01cc: @ 0x080A01CC
	bx lr
	.align 2, 0

	thumb_func_start FileSelectProcessFileActionPanel
FileSelectProcessFileActionPanel: @ 0x080A01D0
	push {r4, lr}
	adds r4, r0, #0
	ldrb r2, [r4, #9]
	cmp r2, #0
	bne _080A0204
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #7]
	cmp r0, r3
	bne _080A0266
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _080A0266
	strb r2, [r4, #7]
	strb r2, [r4, #6]
	ldr r0, _080A0200 @ =0x08740940
	str r0, [r4, #0x14]
	movs r0, #1
	strb r0, [r4, #9]
	b _080A0266
	.align 2, 0
_080A0200: .4byte 0x08740940
_080A0204:
	cmp r2, #1
	bne _080A0248
	ldr r0, _080A021C @ =gNonGameplayRam
	movs r1, #0xa
	ldrsh r0, [r0, r1]
	cmp r0, #0x15
	beq _080A0228
	cmp r0, #0x15
	bgt _080A0220
	cmp r0, #4
	beq _080A0228
	b _080A0266
	.align 2, 0
_080A021C: .4byte gNonGameplayRam
_080A0220:
	cmp r0, #0x1a
	beq _080A0228
	cmp r0, #0x21
	bne _080A0266
_080A0228:
	ldr r0, _080A0240 @ =0x000001FD
	bl SoundPlay
	movs r0, #0
	strb r0, [r4, #7]
	strb r0, [r4, #6]
	ldr r0, _080A0244 @ =0x08740950
	str r0, [r4, #0x14]
	movs r0, #2
	strb r0, [r4, #9]
	b _080A0266
	.align 2, 0
_080A0240: .4byte 0x000001FD
_080A0244: .4byte 0x08740950
_080A0248:
	cmp r2, #2
	bne _080A0266
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _080A0266
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _080A0266
	strb r1, [r4, #4]
	strb r1, [r4, #5]
_080A0266:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start FileSelectProcessCopyFilePanel
FileSelectProcessCopyFilePanel: @ 0x080A026C
	push {r4, lr}
	adds r4, r0, #0
	ldrb r2, [r4, #9]
	cmp r2, #0
	bne _080A02A0
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #7]
	cmp r0, r3
	bne _080A02FE
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _080A02FE
	strb r2, [r4, #7]
	strb r2, [r4, #6]
	ldr r0, _080A029C @ =0x087409A0
	str r0, [r4, #0x14]
	movs r0, #1
	strb r0, [r4, #9]
	b _080A02FE
	.align 2, 0
_080A029C: .4byte 0x087409A0
_080A02A0:
	cmp r2, #1
	bne _080A02E0
	ldr r0, _080A02B8 @ =gNonGameplayRam
	movs r1, #0xa
	ldrsh r0, [r0, r1]
	cmp r0, #0x15
	beq _080A02C0
	cmp r0, #0x15
	bgt _080A02BC
	cmp r0, #0x12
	beq _080A02C0
	b _080A02FE
	.align 2, 0
_080A02B8: .4byte gNonGameplayRam
_080A02BC:
	cmp r0, #0x1a
	bne _080A02FE
_080A02C0:
	ldr r0, _080A02D8 @ =0x000001FD
	bl SoundPlay
	movs r0, #0
	strb r0, [r4, #7]
	strb r0, [r4, #6]
	ldr r0, _080A02DC @ =0x087409B0
	str r0, [r4, #0x14]
	movs r0, #2
	strb r0, [r4, #9]
	b _080A02FE
	.align 2, 0
_080A02D8: .4byte 0x000001FD
_080A02DC: .4byte 0x087409B0
_080A02E0:
	cmp r2, #2
	bne _080A02FE
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _080A02FE
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _080A02FE
	strb r1, [r4, #4]
	strb r1, [r4, #5]
_080A02FE:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start FileSelectProcessEraseFilePanel
FileSelectProcessEraseFilePanel: @ 0x080A0304
	push {r4, lr}
	adds r4, r0, #0
	ldrb r2, [r4, #9]
	cmp r2, #0
	bne _080A0338
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #7]
	cmp r0, r3
	bne _080A0396
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _080A0396
	strb r2, [r4, #7]
	strb r2, [r4, #6]
	ldr r0, _080A0334 @ =0x087409A0
	str r0, [r4, #0x14]
	movs r0, #1
	strb r0, [r4, #9]
	b _080A0396
	.align 2, 0
_080A0334: .4byte 0x087409A0
_080A0338:
	cmp r2, #1
	bne _080A0378
	ldr r0, _080A0350 @ =gNonGameplayRam
	movs r1, #0xa
	ldrsh r0, [r0, r1]
	cmp r0, #0x1f
	beq _080A0358
	cmp r0, #0x1f
	bgt _080A0354
	cmp r0, #0x1d
	beq _080A0358
	b _080A0396
	.align 2, 0
_080A0350: .4byte gNonGameplayRam
_080A0354:
	cmp r0, #0x21
	bne _080A0396
_080A0358:
	ldr r0, _080A0370 @ =0x000001FD
	bl SoundPlay
	movs r0, #0
	strb r0, [r4, #7]
	strb r0, [r4, #6]
	ldr r0, _080A0374 @ =0x087409B0
	str r0, [r4, #0x14]
	movs r0, #2
	strb r0, [r4, #9]
	b _080A0396
	.align 2, 0
_080A0370: .4byte 0x000001FD
_080A0374: .4byte 0x087409B0
_080A0378:
	cmp r2, #2
	bne _080A0396
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _080A0396
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _080A0396
	strb r1, [r4, #4]
	strb r1, [r4, #5]
_080A0396:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start unk_a039c
unk_a039c: @ 0x080A039C
	push {r4, lr}
	adds r4, r0, #0
	ldrb r2, [r4, #9]
	cmp r2, #0
	bne _080A03D0
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r3, [r4, #7]
	cmp r0, r3
	bne _080A041E
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _080A041E
	strb r2, [r4, #7]
	strb r2, [r4, #6]
	ldr r0, _080A03CC @ =0x087409A0
	str r0, [r4, #0x14]
	movs r0, #1
	strb r0, [r4, #9]
	b _080A041E
	.align 2, 0
_080A03CC: .4byte 0x087409A0
_080A03D0:
	cmp r2, #1
	bne _080A0400
	ldr r0, _080A03F4 @ =gNonGameplayRam
	movs r1, #0xa
	ldrsh r0, [r0, r1]
	cmp r0, #0xb
	bne _080A041E
	ldr r0, _080A03F8 @ =0x000001FD
	bl SoundPlay
	movs r0, #0
	strb r0, [r4, #7]
	strb r0, [r4, #6]
	ldr r0, _080A03FC @ =0x087409B0
	str r0, [r4, #0x14]
	movs r0, #2
	strb r0, [r4, #9]
	b _080A041E
	.align 2, 0
_080A03F4: .4byte gNonGameplayRam
_080A03F8: .4byte 0x000001FD
_080A03FC: .4byte 0x087409B0
_080A0400:
	cmp r2, #2
	bne _080A041E
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _080A041E
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _080A041E
	strb r1, [r4, #4]
	strb r1, [r4, #5]
_080A041E:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start unk_a0424
unk_a0424: @ 0x080A0424
	push {r4, lr}
	adds r4, r0, #0
	ldrb r2, [r4, #9]
	cmp r2, #0
	bne _080A04C4
	ldr r3, _080A0454 @ =gNonGameplayRam
	ldrb r0, [r3, #0x10]
	cmp r0, #0
	bne _080A045C
	ldr r0, _080A0458 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080A047A
	movs r0, #1
	strb r0, [r3, #0x10]
	movs r0, #0x79
	strh r0, [r4, #2]
	movs r0, #0xfd
	lsls r0, r0, #1
	bl SoundPlay
	b _080A047A
	.align 2, 0
_080A0454: .4byte gNonGameplayRam
_080A0458: .4byte gChangedInput
_080A045C:
	cmp r0, #1
	bne _080A047A
	ldr r0, _080A04AC @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080A047A
	strb r2, [r3, #0x10]
	movs r0, #0x69
	strh r0, [r4, #2]
	movs r0, #0xfd
	lsls r0, r0, #1
	bl SoundPlay
_080A047A:
	ldr r0, _080A04AC @ =gChangedInput
	ldrh r2, [r0]
	movs r0, #2
	ands r0, r2
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _080A04EE
	movs r0, #9
	ands r0, r2
	cmp r0, #0
	beq _080A0510
	strb r1, [r4, #7]
	strb r1, [r4, #6]
	movs r0, #0xff
	lsls r0, r0, #1
	bl SoundPlay
	ldr r0, _080A04B0 @ =gNonGameplayRam
	ldrb r0, [r0, #0x10]
	cmp r0, #0
	bne _080A04B8
	ldr r0, _080A04B4 @ =0x08740B70
	str r0, [r4, #0x14]
	b _080A04EE
	.align 2, 0
_080A04AC: .4byte gChangedInput
_080A04B0: .4byte gNonGameplayRam
_080A04B4: .4byte 0x08740B70
_080A04B8:
	ldr r0, _080A04C0 @ =0x08740B70
	str r0, [r4, #0x14]
	b _080A04EE
	.align 2, 0
_080A04C0: .4byte 0x08740B70
_080A04C4:
	cmp r2, #1
	bne _080A04F8
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _080A04E0
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _080A04E0
	strb r1, [r4, #7]
_080A04E0:
	ldr r0, _080A04F4 @ =gNonGameplayRam
	ldrb r0, [r0, #0xc]
	cmp r0, #0xb
	bne _080A0510
	movs r0, #0
	strb r0, [r4, #7]
	strb r0, [r4, #6]
_080A04EE:
	movs r0, #0x64
	strb r0, [r4, #9]
	b _080A0510
	.align 2, 0
_080A04F4: .4byte gNonGameplayRam
_080A04F8:
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	ldrb r0, [r1, #4]
	ldrb r2, [r4, #7]
	cmp r0, r2
	bne _080A0510
	ldrb r1, [r1, #0xc]
	cmp r1, #0
	bne _080A0510
	strb r1, [r4, #7]
_080A0510:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start unk_a0518
unk_a0518: @ 0x080A0518
	bx lr
	.align 2, 0

	thumb_func_start FileSelectDrawFileInfo
FileSelectDrawFileInfo: @ 0x080A051C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	lsls r0, r0, #2
	add r0, sl
	lsls r0, r0, #2
	ldr r1, _080A0548 @ =0x03000B94
	adds r0, r0, r1
	mov sb, r0
	adds r2, r1, #0
	mov r0, sl
	cmp r0, #0
	bne _080A0550
	ldr r7, _080A054C @ =0x060088C0
	b _080A0562
	.align 2, 0
_080A0548: .4byte 0x03000B94
_080A054C: .4byte 0x060088C0
_080A0550:
	mov r1, sl
	cmp r1, #1
	bne _080A0560
	ldr r7, _080A055C @ =0x060090C0
	b _080A0562
	.align 2, 0
_080A055C: .4byte 0x060090C0
_080A0560:
	ldr r7, _080A05A8 @ =0x060098C0
_080A0562:
	str r7, [sp, #0x38]
	ldr r5, _080A05AC @ =gNonGameplayRam
	movs r1, #0
	movs r0, #0
	strh r0, [r5]
	strb r1, [r5, #0x13]
	mov r3, sb
	ldrb r4, [r3]
	mov r0, sl
	lsls r0, r0, #2
	str r0, [sp, #0x40]
	cmp r4, #0
	beq _080A057E
	b _080A0694
_080A057E:
	add r0, sl
	lsls r0, r0, #2
	adds r1, r0, r2
	movs r0, #0x10
	ldrsb r0, [r1, r0]
	cmp r0, #1
	beq _080A0594
	movs r0, #0x11
	ldrsb r0, [r1, r0]
	cmp r0, #1
	bne _080A05B0
_080A0594:
	movs r2, #0xa8
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0x63
	strh r0, [r1]
	movs r3, #0xa7
	lsls r3, r3, #2
	adds r3, r3, r5
	mov sb, r3
	b _080A0694
	.align 2, 0
_080A05A8: .4byte 0x060098C0
_080A05AC: .4byte gNonGameplayRam
_080A05B0:
	mov r0, sl
	adds r0, #0xe
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FileSelectDestroyOamOfType
	mov r0, sl
	adds r0, #0x14
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl FileSelectDestroyOamOfType
	str r4, [sp, #0x34]
	ldr r0, _080A061C @ =0x040000D4
	add r1, sp, #0x34
	str r1, [r0]
	str r7, [r0, #4]
	ldr r2, _080A0620 @ =0x850000C0
	str r2, [r0, #8]
	ldr r3, [r0, #8]
	str r4, [sp, #0x34]
	str r1, [r0]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r7, r3
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r0, [r0, #8]
	ldr r1, _080A0624 @ =0x0879EC84
	ldr r0, _080A0628 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r4, [r0]
	movs r0, #8
	strh r0, [r5]
	ldrh r0, [r4]
	movs r1, #0xff
	lsls r1, r1, #8
	cmp r0, r1
	bne _080A060A
	b _080A0A08
_080A060A:
	mov r8, r5
	mov sb, r1
_080A060E:
	cmp r0, #0x5a
	bne _080A062C
	ldrh r0, [r4]
	bl GetCharacterWidth
	adds r5, r0, #2
	b _080A063C
	.align 2, 0
_080A061C: .4byte 0x040000D4
_080A0620: .4byte 0x850000C0
_080A0624: .4byte 0x0879EC84
_080A0628: .4byte 0x03000011
_080A062C:
	cmp r0, #0x40
	bne _080A063A
	mov r0, r8
	ldrb r1, [r0, #0x13]
	movs r0, #8
	subs r5, r0, r1
	b _080A063C
_080A063A:
	movs r5, #8
_080A063C:
	mov r1, r8
	ldrh r0, [r1]
	lsls r0, r0, #5
	ldr r2, [sp, #0x38]
	adds r7, r0, r2
	ldrh r0, [r4]
	lsls r2, r5, #0x18
	lsrs r2, r2, #0x18
	ldrb r3, [r1, #0x13]
	movs r1, #0
	str r1, [sp]
	adds r1, r7, #0
	bl DrawCharacter
	mov r3, r8
	ldrb r0, [r3, #0x13]
	adds r0, r0, r5
	strb r0, [r3, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r6, r4, #2
	cmp r0, #7
	bls _080A0686
	ldr r5, _080A0690 @ =gNonGameplayRam
	ldrb r4, [r5, #0x13]
	ldrh r3, [r5]
_080A0670:
	adds r2, r4, #0
	subs r2, #8
	adds r4, r2, #0
	adds r1, r3, #1
	adds r3, r1, #0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bhi _080A0670
	strh r1, [r5]
	strb r2, [r5, #0x13]
_080A0686:
	adds r4, r6, #0
	ldrh r0, [r4]
	cmp r0, sb
	bne _080A060E
	b _080A0A08
	.align 2, 0
_080A0690: .4byte gNonGameplayRam
_080A0694:
	ldr r0, _080A07F4 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r0, #0xfa
	lsls r0, r0, #2
	mov r2, sb
	ldrh r1, [r2, #4]
	bl DivArmDiv
	add r4, sp, #0x14
	str r0, [sp, #0x14]
	mov r3, sb
	ldrh r1, [r3, #4]
	movs r0, #0x64
	bl DivArmDiv
	add r5, sp, #0x24
	str r0, [r4, #4]
	str r0, [sp, #0x24]
	ldr r1, [r4, #4]
	movs r0, #0xa
	bl DivArmMod
	str r0, [r4, #4]
	str r0, [r5, #4]
	mov r0, sb
	ldrh r1, [r0, #4]
	movs r0, #0xa
	bl DivArmDiv
	adds r1, r0, #0
	str r1, [r4, #8]
	movs r0, #0xa
	bl DivArmMod
	str r0, [r4, #8]
	mov r2, sb
	ldrh r1, [r2, #4]
	str r1, [r4, #0xc]
	movs r0, #0xa
	bl DivArmMod
	str r0, [r4, #0xc]
	movs r6, #2
	mov r3, sl
	adds r3, #0xe
	str r3, [sp, #0x44]
	mov r0, sl
	adds r0, #0x14
	str r0, [sp, #0x4c]
	add r1, sp, #0x34
	mov ip, r1
	mov r8, r5
	mov r2, sl
	lsls r2, r2, #4
	str r2, [sp, #0x48]
	ldr r1, _080A07F8 @ =0x040000D4
	ldr r4, _080A07FC @ =0x84000008
	movs r2, #0x80
	lsls r2, r2, #3
	ldr r5, _080A0800 @ =0x08682FAC
_080A0710:
	lsls r0, r6, #2
	add r0, sp
	adds r0, #0x14
	ldr r0, [r0]
	adds r0, #0x50
	lsls r0, r0, #5
	adds r3, r0, r5
	str r3, [r1]
	str r7, [r1, #4]
	str r4, [r1, #8]
	ldr r0, [r1, #8]
	adds r0, r3, r2
	str r0, [r1]
	adds r0, r7, r2
	str r0, [r1, #4]
	str r4, [r1, #8]
	ldr r0, [r1, #8]
	adds r7, #0x20
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #3
	bls _080A0710
	movs r1, #0
	str r1, [sp, #0x34]
	ldr r5, _080A07F8 @ =0x040000D4
	mov r3, ip
	str r3, [r5]
	str r7, [r5, #4]
	ldr r0, _080A0804 @ =0x85000080
	str r0, [r5, #8]
	ldr r2, [r5, #8]
	str r1, [sp, #0x34]
	str r3, [r5]
	movs r1, #0x80
	lsls r1, r1, #3
	adds r4, r7, r1
	str r4, [r5, #4]
	str r0, [r5, #8]
	ldr r0, [r5, #8]
	mov r2, r8
	ldr r1, [r2, #4]
	movs r0, #2
	bl DivArmMod
	mov r3, r8
	str r0, [r3, #4]
	mov r0, sb
	ldrh r1, [r0, #6]
	movs r0, #0x64
	bl DivArmDiv
	adds r1, r0, #0
	mov r2, r8
	str r1, [r2, #8]
	movs r0, #0xa
	bl DivArmMod
	adds r1, r0, #0
	mov r3, r8
	str r1, [r3, #0xc]
	movs r0, #2
	bl DivArmMod
	mov r1, r8
	str r0, [r1, #0xc]
	adds r3, r7, #0
	adds r7, r4, #0
	movs r6, #0
	ldr r0, [sp, #0x24]
	ldr r1, [r1, #4]
	subs r0, r0, r1
	cmp r6, r0
	bge _080A07D2
	adds r2, r5, #0
	mov r4, r8
	ldr r0, _080A0808 @ =0x0873DB64
	mov ip, r0
	ldr r5, _080A07FC @ =0x84000008
_080A07AE:
	cmp r6, #0xa
	bne _080A07B6
	ldr r1, _080A080C @ =0xFFFFFB60
	adds r7, r7, r1
_080A07B6:
	mov r0, ip
	str r0, [r2]
	str r7, [r2, #4]
	str r5, [r2, #8]
	ldr r0, [r2, #8]
	adds r7, #0x20
	adds r0, r6, #2
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [sp, #0x24]
	ldr r1, [r4, #4]
	subs r0, r0, r1
	cmp r6, r0
	blt _080A07AE
_080A07D2:
	mov r1, r8
	ldr r0, [r1, #4]
	cmp r0, #1
	bne _080A082A
	cmp r6, #0xa
	bne _080A07E2
	ldr r2, _080A080C @ =0xFFFFFB60
	adds r7, r7, r2
_080A07E2:
	mov r0, r8
	ldr r1, [r0, #8]
	ldr r0, [sp, #0x24]
	cmp r1, r0
	bne _080A0814
	ldr r1, _080A07F8 @ =0x040000D4
	ldr r0, _080A0810 @ =0x0873DB04
	b _080A0818
	.align 2, 0
_080A07F4: .4byte 0x03000011
_080A07F8: .4byte 0x040000D4
_080A07FC: .4byte 0x84000008
_080A0800: .4byte 0x08682FAC
_080A0804: .4byte 0x85000080
_080A0808: .4byte 0x0873DB64
_080A080C: .4byte 0xFFFFFB60
_080A0810: .4byte 0x0873DB04
_080A0814:
	ldr r1, _080A0A18 @ =0x040000D4
	ldr r0, _080A0A1C @ =0x0873DB44
_080A0818:
	str r0, [r1]
	str r7, [r1, #4]
	ldr r0, _080A0A20 @ =0x84000008
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	adds r0, r6, #2
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r7, #0x20
_080A082A:
	mov r1, r8
	ldr r0, [r1, #8]
	ldr r1, [r1, #0xc]
	subs r0, r0, r1
	adds r3, #0xc0
	str r3, [sp, #0x3c]
	cmp r6, r0
	bge _080A0866
	ldr r2, _080A0A24 @ =0xFFFFFB60
	mov ip, r2
	ldr r2, _080A0A18 @ =0x040000D4
	mov r3, r8
	ldr r5, _080A0A28 @ =0x0873DB24
	ldr r4, _080A0A20 @ =0x84000008
_080A0846:
	cmp r6, #0xa
	bne _080A084C
	add r7, ip
_080A084C:
	str r5, [r2]
	str r7, [r2, #4]
	str r4, [r2, #8]
	ldr r0, [r2, #8]
	adds r7, #0x20
	adds r0, r6, #2
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, [r3, #8]
	ldr r1, [r3, #0xc]
	subs r0, r0, r1
	cmp r6, r0
	blt _080A0846
_080A0866:
	mov r3, r8
	ldr r0, [r3, #0xc]
	cmp r0, #1
	bne _080A088A
	ldr r0, [r3, #8]
	cmp r6, r0
	bge _080A088A
	cmp r6, #0xa
	bne _080A087C
	ldr r0, _080A0A24 @ =0xFFFFFB60
	adds r7, r7, r0
_080A087C:
	ldr r1, _080A0A18 @ =0x040000D4
	ldr r0, _080A0A2C @ =0x0873DAE4
	str r0, [r1]
	str r7, [r1, #4]
	ldr r0, _080A0A20 @ =0x84000008
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_080A088A:
	ldr r7, [sp, #0x3c]
	mov r2, sb
	ldrb r1, [r2, #0xd]
	movs r0, #0xa
	bl DivArmDiv
	adds r1, r0, #0
	str r1, [sp, #4]
	movs r0, #0xa
	bl DivArmMod
	str r0, [sp, #4]
	mov r3, sb
	ldrb r1, [r3, #0xd]
	str r1, [sp, #8]
	movs r0, #0xa
	bl DivArmMod
	str r0, [sp, #8]
	movs r6, #0
	ldr r5, _080A0A30 @ =0x08682FAC
	ldr r1, _080A0A18 @ =0x040000D4
	ldr r4, _080A0A20 @ =0x84000008
	movs r2, #0x80
	lsls r2, r2, #3
_080A08BC:
	lsls r0, r6, #2
	add r0, sp
	adds r0, #4
	ldr r0, [r0]
	adds r0, #0x50
	lsls r0, r0, #5
	adds r3, r0, r5
	str r3, [r1]
	str r7, [r1, #4]
	str r4, [r1, #8]
	ldr r0, [r1, #8]
	adds r0, r3, r2
	str r0, [r1]
	adds r0, r7, r2
	str r0, [r1, #4]
	str r4, [r1, #8]
	ldr r0, [r1, #8]
	adds r7, #0x20
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #1
	bls _080A08BC
	ldr r6, _080A0A34 @ =gNonGameplayRam
	movs r4, #0
	movs r0, #0xa
	strh r0, [r6]
	lsls r0, r0, #5
	ldr r1, [sp, #0x38]
	adds r7, r1, r0
	movs r0, #0x5a
	bl GetCharacterWidth
	adds r5, r0, #3
	lsls r2, r5, #0x18
	lsrs r2, r2, #0x18
	ldrb r3, [r6, #0x13]
	str r4, [sp]
	movs r0, #0x5a
	adds r1, r7, #0
	bl DrawCharacter
	ldrb r0, [r6, #0x13]
	adds r2, r0, r5
	strb r2, [r6, #0x13]
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _080A0938
	adds r5, r6, #0
	ldrh r4, [r5]
_080A0922:
	adds r3, r2, #0
	subs r3, #8
	adds r2, r3, #0
	adds r1, r4, #1
	adds r4, r1, #0
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bhi _080A0922
	strh r1, [r5]
	strb r3, [r5, #0x13]
_080A0938:
	mov r2, sb
	ldrb r1, [r2, #0xe]
	movs r0, #0xa
	bl DivArmDiv
	adds r1, r0, #0
	str r1, [sp, #4]
	movs r0, #0xa
	bl DivArmMod
	str r0, [sp, #4]
	mov r3, sb
	ldrb r1, [r3, #0xe]
	str r1, [sp, #8]
	movs r0, #0xa
	bl DivArmMod
	str r0, [sp, #8]
	movs r6, #0
	ldr r0, _080A0A34 @ =gNonGameplayRam
	mov r8, r0
_080A0962:
	mov r1, r8
	ldrh r0, [r1]
	lsls r0, r0, #5
	ldr r2, [sp, #0x38]
	adds r7, r0, r2
	lsls r0, r6, #2
	add r0, sp
	adds r0, #4
	ldr r0, [r0]
	adds r0, #0x50
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrb r3, [r1, #0x13]
	movs r1, #0
	str r1, [sp]
	adds r1, r7, #0
	movs r2, #8
	bl DrawCharacter
	mov r3, r8
	ldrb r0, [r3, #0x13]
	adds r0, #8
	strb r0, [r3, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r6, #1
	cmp r0, #7
	bls _080A09B6
	ldr r5, _080A0A34 @ =gNonGameplayRam
	ldrb r4, [r5, #0x13]
	ldrh r3, [r5]
_080A09A0:
	adds r2, r4, #0
	subs r2, #8
	adds r4, r2, #0
	adds r1, r3, #1
	adds r3, r1, #0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bhi _080A09A0
	strh r1, [r5]
	strb r2, [r5, #0x13]
_080A09B6:
	lsls r0, r6, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #1
	bls _080A0962
	ldr r0, [sp, #0x44]
	lsls r4, r0, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	bl FileSelectDestroyOamOfType
	ldr r2, [sp, #0x48]
	adds r2, #0x20
	mov r1, sb
	ldrb r3, [r1, #2]
	adds r0, r4, #0
	movs r1, #0x9d
	bl FileSelectSetUpAreaNameOam
	ldr r2, [sp, #0x4c]
	lsls r0, r2, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl FileSelectDestroyOamOfType
	ldr r1, _080A0A38 @ =0x03000B94
	ldr r0, [sp, #0x40]
	add r0, sl
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrb r0, [r0, #0x10]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080A0A08
	ldr r2, [sp, #0x48]
	adds r2, #0x28
	adds r0, r4, #0
	movs r1, #0xdc
	movs r3, #1
	bl FileSelectSetupOam
_080A0A08:
	add sp, #0x50
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A0A18: .4byte 0x040000D4
_080A0A1C: .4byte 0x0873DB44
_080A0A20: .4byte 0x84000008
_080A0A24: .4byte 0xFFFFFB60
_080A0A28: .4byte 0x0873DB24
_080A0A2C: .4byte 0x0873DAE4
_080A0A30: .4byte 0x08682FAC
_080A0A34: .4byte gNonGameplayRam
_080A0A38: .4byte 0x03000B94

	thumb_func_start FileSelectDrawText
FileSelectDrawText: @ 0x080A0A3C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldr r0, _080A0A74 @ =gNonGameplayRam
	movs r2, #0
	movs r1, #0
	strh r1, [r0, #2]
	strh r1, [r0]
	strb r2, [r0, #0x13]
	ldrh r1, [r0, #8]
	adds r2, r0, #0
	cmp r1, #0x18
	bne _080A0A80
	ldr r1, _080A0A78 @ =0x0879E928
	ldr r0, _080A0A7C @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r7, [r0, #0x14]
	b _080A0A98
	.align 2, 0
_080A0A74: .4byte gNonGameplayRam
_080A0A78: .4byte 0x0879E928
_080A0A7C: .4byte 0x03000011
_080A0A80:
	ldr r1, _080A0AA4 @ =0x0879E928
	ldr r0, _080A0AA8 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r1, [r2, #8]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r7, [r1]
_080A0A98:
	cmp r3, #1
	bne _080A0AB0
	ldr r0, _080A0AAC @ =0x06008000
	mov sb, r0
	movs r4, #6
	b _080A0AC6
	.align 2, 0
_080A0AA4: .4byte 0x0879E928
_080A0AA8: .4byte 0x03000011
_080A0AAC: .4byte 0x06008000
_080A0AB0:
	cmp r3, #2
	bne _080A0ABC
	ldr r0, _080A0AB8 @ =0x0600B000
	b _080A0AC2
	.align 2, 0
_080A0AB8: .4byte 0x0600B000
_080A0ABC:
	cmp r3, #3
	bne _080A0AC8
	ldr r0, _080A0AFC @ =0x0600C800
_080A0AC2:
	mov sb, r0
	movs r4, #0
_080A0AC6:
	mov r8, r4
_080A0AC8:
	adds r6, r2, #0
	ldr r0, [r6, #4]
	ldrh r0, [r0]
	movs r1, #0xff
	lsls r1, r1, #8
	cmp r0, r1
	beq _080A0B6E
	mov sl, r1
_080A0AD8:
	ldr r1, [r6, #4]
	ldrh r0, [r1]
	movs r2, #0xfe
	lsls r2, r2, #8
	cmp r0, r2
	bne _080A0B00
	movs r1, #0
	movs r0, #0
	strh r0, [r6]
	ldrh r0, [r6, #2]
	adds r0, #2
	strh r0, [r6, #2]
	strb r1, [r6, #0x13]
	adds r7, #2
	movs r4, #0
	mov r8, r4
	b _080A0B5E
	.align 2, 0
_080A0AFC: .4byte 0x0600C800
_080A0B00:
	ldrh r4, [r6]
	lsls r4, r4, #5
	ldrh r0, [r6, #2]
	lsls r0, r0, #0xa
	adds r4, r4, r0
	add r4, sb
	ldrh r0, [r7]
	lsls r0, r0, #5
	adds r4, r4, r0
	str r4, [sp, #4]
	ldrh r0, [r1]
	bl GetCharacterWidth
	adds r5, r0, #0
	ldr r0, [r6, #4]
	ldrh r0, [r0]
	lsls r2, r5, #0x18
	lsrs r2, r2, #0x18
	ldrb r3, [r6, #0x13]
	mov r4, r8
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp]
	ldr r1, [sp, #4]
	bl DrawCharacter
	ldrb r0, [r6, #0x13]
	adds r0, r0, r5
	strb r0, [r6, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _080A0B5E
	ldr r5, _080A0B80 @ =gNonGameplayRam
	ldrb r4, [r5, #0x13]
	ldrh r3, [r5]
_080A0B48:
	adds r2, r4, #0
	subs r2, #8
	adds r4, r2, #0
	adds r1, r3, #1
	adds r3, r1, #0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bhi _080A0B48
	strh r1, [r5]
	strb r2, [r5, #0x13]
_080A0B5E:
	ldr r1, _080A0B80 @ =gNonGameplayRam
	ldr r2, [r1, #4]
	adds r0, r2, #2
	str r0, [r1, #4]
	adds r6, r1, #0
	ldrh r0, [r2, #2]
	cmp r0, sl
	bne _080A0AD8
_080A0B6E:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A0B80: .4byte gNonGameplayRam

	thumb_func_start FileSelectProcessCorruptedFile
FileSelectProcessCorruptedFile: @ 0x080A0B84
	push {r4, r5, lr}
	sub sp, #4
	movs r5, #0
	bl FileSelectProcessOam
	ldr r0, _080A0BA4 @ =gNonGameplayRam
	ldrb r0, [r0, #0x14]
	cmp r0, #7
	bls _080A0B98
	b _080A0DF0
_080A0B98:
	lsls r0, r0, #2
	ldr r1, _080A0BA8 @ =_080A0BAC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A0BA4: .4byte gNonGameplayRam
_080A0BA8: .4byte _080A0BAC
_080A0BAC: @ jump table
	.4byte _080A0BCC @ case 0
	.4byte _080A0C64 @ case 1
	.4byte _080A0C8A @ case 2
	.4byte _080A0CCC @ case 3
	.4byte _080A0CF8 @ case 4
	.4byte _080A0D60 @ case 5
	.4byte _080A0DA4 @ case 6
	.4byte _080A0DE8 @ case 7
_080A0BCC:
	ldr r1, _080A0BE4 @ =gNonGameplayRam
	ldrb r0, [r1, #0xc]
	adds r0, #1
	strb r0, [r1, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080A0BE8
	movs r0, #1
	bl FileSelectDrawText
	b _080A0DF0
	.align 2, 0
_080A0BE4: .4byte gNonGameplayRam
_080A0BE8:
	cmp r0, #2
	bne _080A0C08
	ldr r0, _080A0BFC @ =0x03000B94
	ldrb r0, [r0, #1]
	cmp r0, #0
	bne _080A0C00
	movs r0, #0
	bl FileSelectDrawFileInfo
	b _080A0DF0
	.align 2, 0
_080A0BFC: .4byte 0x03000B94
_080A0C00:
	movs r0, #0
	bl FileSelectDrawFileCorruptedText
	b _080A0DF0
_080A0C08:
	cmp r0, #3
	bne _080A0C28
	ldr r0, _080A0C1C @ =0x03000B94
	ldrb r0, [r0, #0x15]
	cmp r0, #0
	bne _080A0C20
	movs r0, #1
	bl FileSelectDrawFileInfo
	b _080A0DF0
	.align 2, 0
_080A0C1C: .4byte 0x03000B94
_080A0C20:
	movs r0, #1
	bl FileSelectDrawFileCorruptedText
	b _080A0DF0
_080A0C28:
	cmp r0, #4
	beq _080A0C2E
	b _080A0DF0
_080A0C2E:
	ldr r0, _080A0C40 @ =0x03000B94
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _080A0C44
	movs r0, #2
	bl FileSelectDrawFileInfo
	b _080A0C4A
	.align 2, 0
_080A0C40: .4byte 0x03000B94
_080A0C44:
	movs r0, #2
	bl FileSelectDrawFileCorruptedText
_080A0C4A:
	ldr r2, _080A0C5C @ =gNonGameplayRam
	movs r0, #0
	strb r0, [r2, #0xc]
	ldr r1, _080A0C60 @ =gWrittenToBldy
	movs r0, #0xe
	strh r0, [r1]
	movs r0, #1
	strb r0, [r2, #0x14]
	b _080A0DF0
	.align 2, 0
_080A0C5C: .4byte gNonGameplayRam
_080A0C60: .4byte gWrittenToBldy
_080A0C64:
	ldr r1, _080A0C74 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _080A0C78
	subs r0, #1
	strh r0, [r1]
	b _080A0DF0
	.align 2, 0
_080A0C74: .4byte gWrittenToBldy
_080A0C78:
	ldr r1, _080A0C80 @ =gNonGameplayRam
	movs r0, #2
	strb r0, [r1, #0x14]
	b _080A0DF0
	.align 2, 0
_080A0C80: .4byte gNonGameplayRam
_080A0C84:
	movs r0, #3
	strb r0, [r4, #0x14]
	b _080A0CB4
_080A0C8A:
	ldr r0, _080A0CC4 @ =gNonGameplayRam
	ldrb r1, [r0, #0x15]
	adds r4, r0, #0
	cmp r1, #2
	bhi _080A0CB4
	ldr r3, _080A0CC8 @ =0x03000B94
	adds r2, r4, #0
_080A0C98:
	ldrb r1, [r2, #0x15]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrb r0, [r0, #1]
	cmp r0, #0
	bne _080A0C84
	adds r0, r1, #1
	strb r0, [r4, #0x15]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _080A0C98
_080A0CB4:
	ldrb r0, [r4, #0x15]
	cmp r0, #3
	beq _080A0CBC
	b _080A0DF0
_080A0CBC:
	movs r0, #7
	strb r0, [r4, #0x14]
	b _080A0DF0
	.align 2, 0
_080A0CC4: .4byte gNonGameplayRam
_080A0CC8: .4byte 0x03000B94
_080A0CCC:
	ldr r1, _080A0CF4 @ =gNonGameplayRam
	ldrb r0, [r1, #0xc]
	adds r0, #1
	strb r0, [r1, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xa
	beq _080A0CDE
	b _080A0DF0
_080A0CDE:
	movs r0, #4
	strb r0, [r1, #0x14]
	movs r0, #0
	strb r0, [r1, #0xc]
	movs r0, #0x11
	movs r1, #0x7a
	movs r2, #0x44
	movs r3, #0
	bl FileSelectSetupOam
	b _080A0DF0
	.align 2, 0
_080A0CF4: .4byte gNonGameplayRam
_080A0CF8:
	ldr r2, _080A0D14 @ =0x03000B94
	ldr r1, _080A0D18 @ =gNonGameplayRam
	ldrb r3, [r1, #0x15]
	lsls r0, r3, #2
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrb r0, [r0, #1]
	adds r4, r1, #0
	cmp r0, #1
	bne _080A0D1C
	adds r0, r3, #5
	b _080A0D20
	.align 2, 0
_080A0D14: .4byte 0x03000B94
_080A0D18: .4byte gNonGameplayRam
_080A0D1C:
	adds r0, r3, #0
	adds r0, #8
_080A0D20:
	strh r0, [r4, #8]
	ldr r1, _080A0D58 @ =0x0879EC68
	ldr r0, _080A0D5C @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r1, [r4, #8]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1]
	str r0, [r4, #4]
	movs r0, #2
	bl FileSelectDrawCorruptionText
	movs r0, #0xa
	movs r1, #0x78
	movs r2, #0x64
	movs r3, #0
	bl FileSelectSetupOam
	movs r0, #3
	strb r0, [r4, #0x11]
	movs r0, #5
	strb r0, [r4, #0x14]
	b _080A0DF0
	.align 2, 0
_080A0D58: .4byte 0x0879EC68
_080A0D5C: .4byte 0x03000011
_080A0D60:
	ldr r0, _080A0D98 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080A0DF0
	movs r0, #0xa
	bl FileSelectDestroyOamOfType
	movs r0, #0x11
	bl FileSelectDestroyOamOfType
	ldr r0, _080A0D9C @ =0x000001FB
	bl SoundPlay
	ldr r4, _080A0DA0 @ =gNonGameplayRam
	movs r0, #4
	strb r0, [r4, #0x11]
	ldrb r0, [r4, #0x15]
	bl Sram_SetCurrentFile
	ldrb r0, [r4, #0x15]
	bl FileSelectDrawFileInfo
	movs r0, #6
	strb r0, [r4, #0x14]
	b _080A0DF0
	.align 2, 0
_080A0D98: .4byte gChangedInput
_080A0D9C: .4byte 0x000001FB
_080A0DA0: .4byte gNonGameplayRam
_080A0DA4:
	ldr r1, _080A0DCC @ =gNonGameplayRam
	ldrb r0, [r1, #0xc]
	adds r0, #1
	movs r2, #0
	strb r0, [r1, #0xc]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080A0DDC
	str r2, [sp]
	ldr r1, _080A0DD0 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r0, _080A0DD4 @ =0x0600B000
	str r0, [r1, #4]
	ldr r0, _080A0DD8 @ =0x85000600
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _080A0DF0
	.align 2, 0
_080A0DCC: .4byte gNonGameplayRam
_080A0DD0: .4byte 0x040000D4
_080A0DD4: .4byte 0x0600B000
_080A0DD8: .4byte 0x85000600
_080A0DDC:
	cmp r0, #0xa
	bne _080A0DF0
	movs r0, #2
	strb r0, [r1, #0x14]
	strb r2, [r1, #0xc]
	b _080A0DF0
_080A0DE8:
	ldr r1, _080A0E00 @ =gNonGameplayRam
	movs r0, #0
	strb r0, [r1, #0xc]
	movs r5, #1
_080A0DF0:
	bl FileSelectDrawAllOam
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A0E00: .4byte gNonGameplayRam

	thumb_func_start FileSelectDrawFileCorruptedText
FileSelectDrawFileCorruptedText: @ 0x080A0E04
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080A0E20
	ldr r6, _080A0E1C @ =0x060088C0
	b _080A0E2E
	.align 2, 0
_080A0E1C: .4byte 0x060088C0
_080A0E20:
	cmp r0, #1
	bne _080A0E2C
	ldr r6, _080A0E28 @ =0x060090C0
	b _080A0E2E
	.align 2, 0
_080A0E28: .4byte 0x060090C0
_080A0E2C:
	ldr r6, _080A0E90 @ =0x060098C0
_080A0E2E:
	mov r8, r6
	ldr r4, _080A0E94 @ =gNonGameplayRam
	movs r0, #0
	movs r1, #0
	strh r1, [r4]
	strb r0, [r4, #0x13]
	str r1, [sp, #4]
	ldr r0, _080A0E98 @ =0x040000D4
	add r2, sp, #4
	str r2, [r0]
	str r6, [r0, #4]
	ldr r2, _080A0E9C @ =0x850000C0
	str r2, [r0, #8]
	ldr r3, [r0, #8]
	str r1, [sp, #4]
	add r3, sp, #4
	str r3, [r0]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r6, r3
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r0, [r0, #8]
	ldr r1, _080A0EA0 @ =0x0879EC84
	ldr r0, _080A0EA4 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r5, [r0]
	movs r0, #8
	strh r0, [r4]
	ldrh r0, [r5]
	movs r1, #0xff
	lsls r1, r1, #8
	cmp r0, r1
	beq _080A0F04
	adds r7, r4, #0
	mov sb, r1
_080A0E80:
	cmp r0, #0x5a
	bne _080A0EA8
	ldrh r0, [r5]
	bl GetCharacterWidth
	adds r4, r0, #3
	b _080A0EB6
	.align 2, 0
_080A0E90: .4byte 0x060098C0
_080A0E94: .4byte gNonGameplayRam
_080A0E98: .4byte 0x040000D4
_080A0E9C: .4byte 0x850000C0
_080A0EA0: .4byte 0x0879EC84
_080A0EA4: .4byte 0x03000011
_080A0EA8:
	cmp r0, #0x40
	bne _080A0EB4
	ldrb r1, [r7, #0x13]
	movs r0, #8
	subs r4, r0, r1
	b _080A0EB6
_080A0EB4:
	movs r4, #8
_080A0EB6:
	ldrh r0, [r7]
	lsls r0, r0, #5
	mov r1, r8
	adds r6, r0, r1
	ldrh r0, [r5]
	lsls r2, r4, #0x18
	lsrs r2, r2, #0x18
	ldrb r3, [r7, #0x13]
	movs r1, #0
	str r1, [sp]
	adds r1, r6, #0
	bl DrawCharacter
	ldrb r0, [r7, #0x13]
	adds r0, r0, r4
	strb r0, [r7, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r6, r5, #2
	cmp r0, #7
	bls _080A0EFC
	ldr r5, _080A0F14 @ =gNonGameplayRam
	ldrb r4, [r5, #0x13]
	ldrh r3, [r5]
_080A0EE6:
	adds r2, r4, #0
	subs r2, #8
	adds r4, r2, #0
	adds r1, r3, #1
	adds r3, r1, #0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bhi _080A0EE6
	strh r1, [r5]
	strb r2, [r5, #0x13]
_080A0EFC:
	adds r5, r6, #0
	ldrh r0, [r5]
	cmp r0, sb
	bne _080A0E80
_080A0F04:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A0F14: .4byte gNonGameplayRam

	thumb_func_start FileSelectDrawCorruptionText
FileSelectDrawCorruptionText: @ 0x080A0F18
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r4, r3, #0
	ldr r0, _080A0F40 @ =gNonGameplayRam
	movs r2, #0
	movs r1, #0
	strh r1, [r0, #2]
	strh r1, [r0]
	strb r2, [r0, #0x13]
	cmp r3, #1
	bne _080A0F48
	ldr r7, _080A0F44 @ =0x06008000
	b _080A0F5A
	.align 2, 0
_080A0F40: .4byte gNonGameplayRam
_080A0F44: .4byte 0x06008000
_080A0F48:
	cmp r3, #2
	bne _080A0F54
	ldr r7, _080A0F50 @ =0x0600B000
	b _080A0F5A
	.align 2, 0
_080A0F50: .4byte 0x0600B000
_080A0F54:
	cmp r4, #3
	bne _080A0F5A
	ldr r7, _080A0F8C @ =0x0600C800
_080A0F5A:
	adds r6, r0, #0
	ldr r0, [r6, #4]
	ldrh r0, [r0]
	movs r1, #0xff
	lsls r1, r1, #8
	cmp r0, r1
	beq _080A0FF2
	movs r0, #0xfe
	lsls r0, r0, #8
	mov sl, r0
	movs r0, #0
	mov sb, r0
	mov r8, r1
_080A0F74:
	ldr r1, [r6, #4]
	ldrh r0, [r1]
	cmp r0, sl
	bne _080A0F90
	movs r0, #0
	strh r0, [r6]
	ldrh r0, [r6, #2]
	adds r0, #2
	strh r0, [r6, #2]
	mov r0, sb
	strb r0, [r6, #0x13]
	b _080A0FE2
	.align 2, 0
_080A0F8C: .4byte 0x0600C800
_080A0F90:
	ldrh r4, [r6]
	lsls r4, r4, #5
	ldrh r0, [r6, #2]
	lsls r0, r0, #0xa
	adds r4, r4, r0
	adds r4, r4, r7
	ldrh r0, [r1]
	bl GetCharacterWidth
	adds r5, r0, #0
	ldr r0, [r6, #4]
	ldrh r0, [r0]
	lsls r2, r5, #0x18
	lsrs r2, r2, #0x18
	ldrb r3, [r6, #0x13]
	movs r1, #0
	str r1, [sp]
	adds r1, r4, #0
	bl DrawCharacter
	ldrb r0, [r6, #0x13]
	adds r0, r0, r5
	strb r0, [r6, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _080A0FE2
	ldr r5, _080A1004 @ =gNonGameplayRam
	ldrb r4, [r5, #0x13]
	ldrh r3, [r5]
_080A0FCC:
	adds r2, r4, #0
	subs r2, #8
	adds r4, r2, #0
	adds r1, r3, #1
	adds r3, r1, #0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bhi _080A0FCC
	strh r1, [r5]
	strb r2, [r5, #0x13]
_080A0FE2:
	ldr r1, _080A1004 @ =gNonGameplayRam
	ldr r2, [r1, #4]
	adds r0, r2, #2
	str r0, [r1, #4]
	adds r6, r1, #0
	ldrh r0, [r2, #2]
	cmp r0, r8
	bne _080A0F74
_080A0FF2:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A1004: .4byte gNonGameplayRam

	thumb_func_start FileSelectDestroyOamOfType
FileSelectDestroyOamOfType: @ 0x080A1008
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r2, #0
	ldr r5, _080A1028 @ =gNonGameplayRam
	movs r3, #0
_080A1014:
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #2
	adds r1, r0, r5
	ldrb r0, [r1, #0x1c]
	cmp r0, r4
	bne _080A102C
	strb r3, [r1, #0x1c]
	strb r3, [r1, #0x1d]
	b _080A1036
	.align 2, 0
_080A1028: .4byte gNonGameplayRam
_080A102C:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0x16
	bls _080A1014
_080A1036:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start FileSelectSetUpAreaNameOam
FileSelectSetUpAreaNameOam: @ 0x080A103C
	push {r4, lr}
	adds r4, r3, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #1
	bl FileSelectSetupOam
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	lsls r4, r4, #0x10
	asrs r0, r4, #0x10
	cmp r0, #6
	bls _080A1064
	b _080A1198
_080A1064:
	lsls r0, r0, #2
	ldr r1, _080A1070 @ =_080A1074
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A1070: .4byte _080A1074
_080A1074: @ jump table
	.4byte _080A1198 @ case 0
	.4byte _080A1090 @ case 1
	.4byte _080A10BC @ case 2
	.4byte _080A10E8 @ case 3
	.4byte _080A1114 @ case 4
	.4byte _080A1140 @ case 5
	.4byte _080A116C @ case 6
_080A1090:
	ldr r0, _080A10B0 @ =gNonGameplayRam
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r1, r1, #2
	adds r0, #0x2c
	adds r1, r1, r0
	ldr r3, _080A10B4 @ =0x0879E944
	ldr r0, _080A10B8 @ =0x03000011
	movs r2, #0
	ldrsb r2, [r0, r2]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #2
	adds r3, #4
	b _080A11B2
	.align 2, 0
_080A10B0: .4byte gNonGameplayRam
_080A10B4: .4byte 0x0879E944
_080A10B8: .4byte 0x03000011
_080A10BC:
	ldr r0, _080A10DC @ =gNonGameplayRam
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r1, r1, #2
	adds r0, #0x2c
	adds r1, r1, r0
	ldr r3, _080A10E0 @ =0x0879E944
	ldr r0, _080A10E4 @ =0x03000011
	movs r2, #0
	ldrsb r2, [r0, r2]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #2
	adds r3, #8
	b _080A11B2
	.align 2, 0
_080A10DC: .4byte gNonGameplayRam
_080A10E0: .4byte 0x0879E944
_080A10E4: .4byte 0x03000011
_080A10E8:
	ldr r0, _080A1108 @ =gNonGameplayRam
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r1, r1, #2
	adds r0, #0x2c
	adds r1, r1, r0
	ldr r3, _080A110C @ =0x0879E944
	ldr r0, _080A1110 @ =0x03000011
	movs r2, #0
	ldrsb r2, [r0, r2]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #2
	adds r3, #0xc
	b _080A11B2
	.align 2, 0
_080A1108: .4byte gNonGameplayRam
_080A110C: .4byte 0x0879E944
_080A1110: .4byte 0x03000011
_080A1114:
	ldr r0, _080A1134 @ =gNonGameplayRam
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r1, r1, #2
	adds r0, #0x2c
	adds r1, r1, r0
	ldr r3, _080A1138 @ =0x0879E944
	ldr r0, _080A113C @ =0x03000011
	movs r2, #0
	ldrsb r2, [r0, r2]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #2
	adds r3, #0x10
	b _080A11B2
	.align 2, 0
_080A1134: .4byte gNonGameplayRam
_080A1138: .4byte 0x0879E944
_080A113C: .4byte 0x03000011
_080A1140:
	ldr r0, _080A1160 @ =gNonGameplayRam
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r1, r1, #2
	adds r0, #0x2c
	adds r1, r1, r0
	ldr r3, _080A1164 @ =0x0879E944
	ldr r0, _080A1168 @ =0x03000011
	movs r2, #0
	ldrsb r2, [r0, r2]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #2
	adds r3, #0x14
	b _080A11B2
	.align 2, 0
_080A1160: .4byte gNonGameplayRam
_080A1164: .4byte 0x0879E944
_080A1168: .4byte 0x03000011
_080A116C:
	ldr r0, _080A118C @ =gNonGameplayRam
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r1, r1, #2
	adds r0, #0x2c
	adds r1, r1, r0
	ldr r3, _080A1190 @ =0x0879E944
	ldr r0, _080A1194 @ =0x03000011
	movs r2, #0
	ldrsb r2, [r0, r2]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #2
	adds r3, #0x18
	b _080A11B2
	.align 2, 0
_080A118C: .4byte gNonGameplayRam
_080A1190: .4byte 0x0879E944
_080A1194: .4byte 0x03000011
_080A1198:
	ldr r0, _080A11C0 @ =gNonGameplayRam
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r1, r1, #2
	adds r0, #0x2c
	adds r1, r1, r0
	ldr r3, _080A11C4 @ =0x0879E944
	ldr r0, _080A11C8 @ =0x03000011
	movs r2, #0
	ldrsb r2, [r0, r2]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #2
_080A11B2:
	adds r0, r0, r3
	ldr r0, [r0]
	str r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A11C0: .4byte gNonGameplayRam
_080A11C4: .4byte 0x0879E944
_080A11C8: .4byte 0x03000011

	thumb_func_start FileSelectProcessOam
FileSelectProcessOam: @ 0x080A11CC
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r5, _080A1204 @ =gNonGameplayRam
	adds r6, r5, #0
	adds r6, #0x18
_080A11D6:
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r2, r0, #2
	adds r0, r2, r5
	ldrb r0, [r0, #0x1c]
	cmp r0, #0
	beq _080A11F2
	adds r1, r5, #0
	adds r1, #0x30
	adds r1, r2, r1
	adds r0, r2, r6
	ldr r1, [r1]
	bl _call_via_r1
_080A11F2:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x16
	bls _080A11D6
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080A1204: .4byte gNonGameplayRam

	thumb_func_start FileSelectDrawAllOam
FileSelectDrawAllOam: @ 0x080A1208
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r5, _080A1240 @ =gNonGameplayRam
	adds r6, r5, #0
	adds r6, #0x18
_080A1212:
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r1, r0, #2
	adds r0, r1, r5
	ldrb r0, [r0, #0x1d]
	cmp r0, #0
	beq _080A1226
	adds r0, r1, r6
	bl FileSelectDrawOam
_080A1226:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x16
	bls _080A1212
	bl ResetFreeOam
	ldr r1, _080A1244 @ =gNextOamSlot
	movs r0, #0
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080A1240: .4byte gNonGameplayRam
_080A1244: .4byte gNextOamSlot

	thumb_func_start FileSelectDrawOam
FileSelectDrawOam: @ 0x080A1248
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r2, _080A1308 @ =gNextOamSlot
	ldrb r0, [r2]
	lsls r0, r0, #3
	ldr r1, _080A130C @ =gOamData
	adds r7, r0, r1
	ldrb r4, [r5, #6]
	lsls r1, r4, #3
	ldr r0, [r5, #0x14]
	adds r3, r0, r1
	ldrb r0, [r3, #4]
	ldrb r2, [r5, #7]
	cmp r0, r2
	bne _080A1278
	adds r0, r4, #1
	movs r1, #0
	strb r0, [r5, #6]
	strb r1, [r5, #7]
	adds r3, #8
_080A1278:
	ldrb r1, [r3, #4]
	cmp r1, #0
	bne _080A1286
	ldrb r0, [r5, #6]
	lsls r0, r0, #3
	subs r3, r3, r0
	strb r1, [r5, #6]
_080A1286:
	ldr r6, [r3]
	ldrh r3, [r6]
	mov sl, r3
	adds r6, #2
	movs r4, #0
	mov sb, r4
	cmp sb, sl
	blt _080A1298
	b _080A139C
_080A1298:
	ldrh r0, [r6]
	mov r8, r0
	adds r6, #2
	ldrh r1, [r6]
	mov ip, r1
	adds r6, #2
	strh r0, [r7]
	adds r7, #2
	strh r1, [r7]
	adds r7, #2
	ldrh r0, [r6]
	strh r0, [r7]
	adds r6, #2
	adds r7, #2
	ldr r2, _080A1308 @ =gNextOamSlot
	ldrb r0, [r2]
	mov r4, sb
	adds r3, r0, r4
	ldrb r1, [r5, #0xc]
	cmp r1, #1
	bne _080A1318
	lsls r4, r3, #3
	ldr r0, _080A130C @ =gOamData
	adds r2, r4, r0
	ldrb r3, [r2, #3]
	lsls r0, r3, #0x1b
	lsrs r0, r0, #0x1f
	eors r0, r1
	movs r1, #1
	ands r0, r1
	lsls r0, r0, #4
	movs r1, #0x11
	rsbs r1, r1, #0
	ands r1, r3
	orrs r1, r0
	strb r1, [r2, #3]
	lsrs r1, r1, #6
	ldrb r0, [r2, #1]
	lsrs r0, r0, #6
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r2, _080A1310 @ =0x0873DBA4
	adds r1, r1, r2
	ldrb r0, [r1]
	lsls r0, r0, #3
	add r0, ip
	ldrh r1, [r5]
	subs r2, r1, r0
	ldr r3, _080A1314 @ =0x000001FF
	ands r2, r3
	ldrh r0, [r5, #2]
	mov r3, r8
	adds r1, r3, r0
	movs r0, #0xff
	ands r1, r0
	b _080A132E
	.align 2, 0
_080A1308: .4byte gNextOamSlot
_080A130C: .4byte gOamData
_080A1310: .4byte 0x0873DBA4
_080A1314: .4byte 0x000001FF
_080A1318:
	ldrh r0, [r5, #2]
	mov r4, r8
	adds r1, r4, r0
	movs r0, #0xff
	ands r1, r0
	ldrh r0, [r5]
	mov r4, ip
	adds r2, r4, r0
	ldr r0, _080A13B8 @ =0x000001FF
	ands r2, r0
	lsls r4, r3, #3
_080A132E:
	ldr r0, _080A13BC @ =gOamData
	adds r3, r4, r0
	strb r1, [r3]
	ldr r1, _080A13B8 @ =0x000001FF
	ands r2, r1
	ldrh r1, [r3, #2]
	ldr r0, _080A13C0 @ =0xFFFFFE00
	ands r0, r1
	orrs r0, r2
	strh r0, [r3, #2]
	ldrb r1, [r5, #0xb]
	movs r2, #3
	ands r1, r2
	lsls r1, r1, #2
	ldrb r2, [r3, #5]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3, #5]
	lsrs r2, r0, #4
	ldrb r4, [r5, #0xd]
	adds r2, r2, r4
	lsls r2, r2, #4
	movs r1, #0xf
	ands r0, r1
	orrs r0, r2
	strb r0, [r3, #5]
	ldrh r2, [r3, #4]
	lsls r1, r2, #0x16
	lsrs r1, r1, #0x16
	ldrh r0, [r5, #0xe]
	adds r1, r1, r0
	ldr r4, _080A13C4 @ =0x000003FF
	adds r0, r4, #0
	ands r1, r0
	ldr r0, _080A13C8 @ =0xFFFFFC00
	ands r0, r2
	orrs r0, r1
	strh r0, [r3, #4]
	ldrb r1, [r5, #0xa]
	movs r0, #3
	ands r1, r0
	lsls r1, r1, #2
	ldrb r2, [r3, #1]
	subs r0, #0x10
	ands r0, r2
	orrs r0, r1
	strb r0, [r3, #1]
	adds r7, #2
	movs r1, #1
	add sb, r1
	cmp sb, sl
	bge _080A139C
	b _080A1298
_080A139C:
	ldr r2, _080A13CC @ =gNextOamSlot
	ldrb r0, [r2]
	add r0, sl
	strb r0, [r2]
	ldrb r0, [r5, #7]
	adds r0, #1
	strb r0, [r5, #7]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A13B8: .4byte 0x000001FF
_080A13BC: .4byte gOamData
_080A13C0: .4byte 0xFFFFFE00
_080A13C4: .4byte 0x000003FF
_080A13C8: .4byte 0xFFFFFC00
_080A13CC: .4byte gNextOamSlot

	thumb_func_start SetLanguage
SetLanguage: @ 0x080A13D0
	ldr r1, _080A13DC @ =0x03000011
	movs r0, #2
	strb r0, [r1]
	movs r0, #1
	bx lr
	.align 2, 0
_080A13DC: .4byte 0x03000011

	thumb_func_start unk_a13e0
unk_a13e0: @ 0x080A13E0
	push {r4, lr}
	ldr r4, _080A1454 @ =0x04000208
	movs r1, #0
	strh r1, [r4]
	ldr r3, _080A1458 @ =0x04000004
	ldrh r2, [r3]
	ldr r0, _080A145C @ =0x0000FFEF
	ands r0, r2
	strh r0, [r3]
	ldr r3, _080A1460 @ =0x04000200
	ldrh r2, [r3]
	ldr r0, _080A1464 @ =0x0000FFFD
	ands r0, r2
	strh r0, [r3]
	movs r0, #1
	strh r0, [r4]
	movs r3, #0x80
	lsls r3, r3, #0x13
	strh r1, [r3]
	ldr r2, _080A1468 @ =0x04000050
	movs r0, #0xff
	strh r0, [r2]
	ldr r0, _080A146C @ =gWrittenToBldy
	movs r2, #0x10
	strh r2, [r0]
	ldr r0, _080A1470 @ =0x04000054
	strh r2, [r0]
	subs r0, #0x46
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	adds r0, #8
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	strh r1, [r3]
	ldr r0, _080A1474 @ =unk_a1478
	bl CallbackSetVBlank
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A1454: .4byte 0x04000208
_080A1458: .4byte 0x04000004
_080A145C: .4byte 0x0000FFEF
_080A1460: .4byte 0x04000200
_080A1464: .4byte 0x0000FFFD
_080A1468: .4byte 0x04000050
_080A146C: .4byte gWrittenToBldy
_080A1470: .4byte 0x04000054
_080A1474: .4byte unk_a1478

	thumb_func_start unk_a1478
unk_a1478: @ 0x080A1478
	bx lr
	.align 2, 0

	thumb_func_start unk_a147c
unk_a147c: @ 0x080A147C
	movs r0, #1
	bx lr

	thumb_func_start EndingDrawIgtAndCompletionPercentage
EndingDrawIgtAndCompletionPercentage: @ 0x080A1480
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	movs r1, #0
	ldr r0, _080A1548 @ =gInGameTimer
	ldrb r4, [r0]
	ldr r7, _080A154C @ =0x0874E650
	ldr r2, _080A1550 @ =0x0874E8D0
	mov ip, r2
	ldr r5, _080A1554 @ =gNonGameplayRam
	mov r8, r5
	cmp r4, #9
	ble _080A14A4
_080A149C:
	subs r4, #0xa
	adds r1, #1
	cmp r4, #9
	bgt _080A149C
_080A14A4:
	movs r6, #0
	ldrb r5, [r0, #1]
	lsls r4, r4, #6
	mov sb, r4
	cmp r5, #9
	ble _080A14B8
_080A14B0:
	subs r5, #0xa
	adds r6, #1
	cmp r5, #9
	bgt _080A14B0
_080A14B8:
	cmp r1, #0
	beq _080A14DC
	lsls r3, r1, #6
	ldr r0, _080A1558 @ =0x040000D4
	adds r1, r3, r7
	str r1, [r0]
	ldr r1, _080A155C @ =0x06010000
	str r1, [r0, #4]
	ldr r2, _080A1560 @ =0x80000020
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	mov r4, ip
	adds r1, r3, r4
	str r1, [r0]
	ldr r1, _080A1564 @ =0x06010400
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r0, [r0, #8]
_080A14DC:
	mov r3, sb
	ldr r0, _080A1558 @ =0x040000D4
	adds r1, r3, r7
	str r1, [r0]
	ldr r1, _080A1568 @ =0x06010040
	str r1, [r0, #4]
	ldr r2, _080A1560 @ =0x80000020
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	mov r4, ip
	adds r1, r3, r4
	str r1, [r0]
	ldr r1, _080A156C @ =0x06010440
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	lsls r3, r6, #6
	adds r1, r3, r7
	str r1, [r0]
	ldr r1, _080A1570 @ =0x060100A0
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	adds r1, r3, r4
	str r1, [r0]
	ldr r1, _080A1574 @ =0x060104A0
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	lsls r3, r5, #6
	adds r1, r3, r7
	str r1, [r0]
	ldr r1, _080A1578 @ =0x060100E0
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	adds r1, r3, r4
	str r1, [r0]
	ldr r1, _080A157C @ =0x060104E0
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r0, [r0, #8]
	movs r1, #0
	movs r4, #0
	mov r0, r8
	adds r0, #0x9a
	ldrb r6, [r0]
	cmp r6, #0x63
	ble _080A1584
_080A153E:
	subs r6, #0x64
	adds r1, #1
	cmp r6, #0x63
	bgt _080A153E
	b _080A1584
	.align 2, 0
_080A1548: .4byte gInGameTimer
_080A154C: .4byte 0x0874E650
_080A1550: .4byte 0x0874E8D0
_080A1554: .4byte gNonGameplayRam
_080A1558: .4byte 0x040000D4
_080A155C: .4byte 0x06010000
_080A1560: .4byte 0x80000020
_080A1564: .4byte 0x06010400
_080A1568: .4byte 0x06010040
_080A156C: .4byte 0x06010440
_080A1570: .4byte 0x060100A0
_080A1574: .4byte 0x060104A0
_080A1578: .4byte 0x060100E0
_080A157C: .4byte 0x060104E0
_080A1580:
	subs r6, #0xa
	adds r4, #1
_080A1584:
	cmp r6, #9
	bgt _080A1580
	cmp r1, #0
	beq _080A15C0
	lsls r3, r1, #6
	ldr r0, _080A15B0 @ =0x040000D4
	adds r1, r3, r7
	str r1, [r0]
	ldr r1, _080A15B4 @ =0x06010120
	str r1, [r0, #4]
	ldr r2, _080A15B8 @ =0x80000020
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	mov r5, ip
	adds r1, r3, r5
	str r1, [r0]
	ldr r1, _080A15BC @ =0x06010520
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r0, [r0, #8]
	b _080A15C4
	.align 2, 0
_080A15B0: .4byte 0x040000D4
_080A15B4: .4byte 0x06010120
_080A15B8: .4byte 0x80000020
_080A15BC: .4byte 0x06010520
_080A15C0:
	cmp r4, #0
	beq _080A15E4
_080A15C4:
	lsls r3, r4, #6
	ldr r0, _080A1610 @ =0x040000D4
	adds r1, r3, r7
	str r1, [r0]
	ldr r1, _080A1614 @ =0x06010160
	str r1, [r0, #4]
	ldr r2, _080A1618 @ =0x80000020
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	mov r4, ip
	adds r1, r3, r4
	str r1, [r0]
	ldr r1, _080A161C @ =0x06010560
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r0, [r0, #8]
_080A15E4:
	lsls r3, r6, #6
	ldr r0, _080A1610 @ =0x040000D4
	adds r1, r3, r7
	str r1, [r0]
	ldr r1, _080A1620 @ =0x060101A0
	str r1, [r0, #4]
	ldr r2, _080A1618 @ =0x80000020
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	mov r5, ip
	adds r1, r3, r5
	str r1, [r0]
	ldr r1, _080A1624 @ =0x060105A0
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r0, [r0, #8]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A1610: .4byte 0x040000D4
_080A1614: .4byte 0x06010160
_080A1618: .4byte 0x80000020
_080A161C: .4byte 0x06010560
_080A1620: .4byte 0x060101A0
_080A1624: .4byte 0x060105A0

	thumb_func_start EndingImageUpdateLettersSpawnDelay
EndingImageUpdateLettersSpawnDelay: @ 0x080A1628
	push {r4, lr}
	adds r3, r0, #0
	ldr r1, _080A1660 @ =gNonGameplayRam
	movs r2, #0x92
	lsls r2, r2, #1
	adds r0, r1, r2
	adds r2, r3, r0
	ldrb r0, [r2]
	cmp r0, #0
	beq _080A165A
	movs r4, #0xa1
	lsls r4, r4, #1
	adds r0, r1, r4
	adds r1, r3, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080A165A
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A165A
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
_080A165A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A1660: .4byte gNonGameplayRam

	thumb_func_start EndingImageLoadTextOam
EndingImageLoadTextOam: @ 0x080A1664
	push {r4, r5, r6, r7, lr}
	adds r1, r0, #0
	ldr r0, _080A1680 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	beq _080A175C
	cmp r0, #4
	bgt _080A1684
	cmp r0, #3
	beq _080A1692
	b _080A1A28
	.align 2, 0
_080A1680: .4byte 0x03000011
_080A1684:
	cmp r0, #5
	bne _080A168A
	b _080A1828
_080A168A:
	cmp r0, #6
	bne _080A1690
	b _080A195C
_080A1690:
	b _080A1A28
_080A1692:
	cmp r1, #0
	bne _080A16F8
	ldr r1, _080A16F0 @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x9b
	movs r0, #0x13
	strb r0, [r2]
	movs r3, #0
	adds r5, r1, #0
	movs r7, #0x18
	ldr r2, _080A16F4 @ =0x0874DE94
	movs r0, #0x95
	lsls r0, r0, #1
	adds r4, r5, r0
	movs r1, #0xb3
	lsls r1, r1, #1
	adds r6, r5, r1
	adds r0, #0x60
	adds r0, r0, r5
	mov ip, r0
_080A16BA:
	ldrb r0, [r2]
	strb r0, [r4]
	ldrb r0, [r2, #1]
	strb r0, [r4, #0x1e]
	ldrb r0, [r2, #2]
	strb r0, [r6]
	ldrh r0, [r2, #4]
	mov r1, ip
	strh r0, [r1]
	ldrh r0, [r2, #6]
	strh r0, [r1, #0x3c]
	movs r1, #0xfc
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r7, r0
	ldr r1, [r2, #8]
	str r1, [r0]
	adds r7, #4
	movs r0, #2
	add ip, r0
	adds r2, #0xc
	adds r4, #1
	adds r6, #1
	adds r3, #1
	cmp r3, #0xc
	ble _080A16BA
	b _080A1B50
	.align 2, 0
_080A16F0: .4byte gNonGameplayRam
_080A16F4: .4byte 0x0874DE94
_080A16F8:
	ldr r1, _080A1754 @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x9b
	movs r0, #0x14
	strb r0, [r2]
	movs r3, #0
	adds r5, r1, #0
	movs r7, #0x18
	ldr r2, _080A1758 @ =0x0874DF30
	movs r1, #0x95
	lsls r1, r1, #1
	adds r4, r5, r1
	movs r0, #0xb3
	lsls r0, r0, #1
	adds r6, r5, r0
	adds r1, #0x60
	adds r1, r1, r5
	mov ip, r1
_080A171C:
	ldrb r0, [r2]
	strb r0, [r4]
	ldrb r0, [r2, #1]
	strb r0, [r4, #0x1e]
	ldrb r0, [r2, #2]
	strb r0, [r6]
	ldrh r0, [r2, #4]
	mov r1, ip
	strh r0, [r1]
	ldrh r0, [r2, #6]
	strh r0, [r1, #0x3c]
	movs r1, #0xfc
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r7, r0
	ldr r1, [r2, #8]
	str r1, [r0]
	adds r7, #4
	movs r0, #2
	add ip, r0
	adds r2, #0xc
	adds r4, #1
	adds r6, #1
	adds r3, #1
	cmp r3, #0xd
	ble _080A171C
	b _080A1B50
	.align 2, 0
_080A1754: .4byte gNonGameplayRam
_080A1758: .4byte 0x0874DF30
_080A175C:
	cmp r1, #0
	bne _080A17C4
	ldr r1, _080A17BC @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x9b
	movs r0, #0x16
	strb r0, [r2]
	movs r3, #0
	adds r5, r1, #0
	movs r7, #0x18
	ldr r2, _080A17C0 @ =0x0874E020
	movs r1, #0x95
	lsls r1, r1, #1
	adds r4, r5, r1
	movs r0, #0xb3
	lsls r0, r0, #1
	adds r6, r5, r0
	adds r1, #0x60
	adds r1, r1, r5
	mov ip, r1
_080A1784:
	ldrb r0, [r2]
	strb r0, [r4]
	ldrb r0, [r2, #1]
	strb r0, [r4, #0x1e]
	ldrb r0, [r2, #2]
	strb r0, [r6]
	ldrh r0, [r2, #4]
	mov r1, ip
	strh r0, [r1]
	ldrh r0, [r2, #6]
	strh r0, [r1, #0x3c]
	movs r1, #0xfc
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r7, r0
	ldr r1, [r2, #8]
	str r1, [r0]
	adds r7, #4
	movs r0, #2
	add ip, r0
	adds r2, #0xc
	adds r4, #1
	adds r6, #1
	adds r3, #1
	cmp r3, #0xf
	ble _080A1784
	b _080A1B50
	.align 2, 0
_080A17BC: .4byte gNonGameplayRam
_080A17C0: .4byte 0x0874E020
_080A17C4:
	ldr r1, _080A1820 @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x9b
	movs r0, #0x1a
	strb r0, [r2]
	movs r3, #0
	adds r5, r1, #0
	movs r7, #0x18
	ldr r2, _080A1824 @ =0x0874E0E0
	movs r1, #0x95
	lsls r1, r1, #1
	adds r4, r5, r1
	movs r0, #0xb3
	lsls r0, r0, #1
	adds r6, r5, r0
	adds r1, #0x60
	adds r1, r1, r5
	mov ip, r1
_080A17E8:
	ldrb r0, [r2]
	strb r0, [r4]
	ldrb r0, [r2, #1]
	strb r0, [r4, #0x1e]
	ldrb r0, [r2, #2]
	strb r0, [r6]
	ldrh r0, [r2, #4]
	mov r1, ip
	strh r0, [r1]
	ldrh r0, [r2, #6]
	strh r0, [r1, #0x3c]
	movs r1, #0xfc
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r7, r0
	ldr r1, [r2, #8]
	str r1, [r0]
	adds r7, #4
	movs r0, #2
	add ip, r0
	adds r2, #0xc
	adds r4, #1
	adds r6, #1
	adds r3, #1
	cmp r3, #0x13
	ble _080A17E8
	b _080A1B50
	.align 2, 0
_080A1820: .4byte gNonGameplayRam
_080A1824: .4byte 0x0874E0E0
_080A1828:
	cmp r1, #0
	bne _080A1890
	ldr r1, _080A1888 @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x9b
	movs r0, #0x18
	strb r0, [r2]
	movs r3, #0
	adds r5, r1, #0
	movs r7, #0x18
	ldr r2, _080A188C @ =0x0874E218
	movs r1, #0x95
	lsls r1, r1, #1
	adds r4, r5, r1
	movs r0, #0xb3
	lsls r0, r0, #1
	adds r6, r5, r0
	adds r1, #0x60
	adds r1, r1, r5
	mov ip, r1
_080A1850:
	ldrb r0, [r2]
	strb r0, [r4]
	ldrb r0, [r2, #1]
	strb r0, [r4, #0x1e]
	ldrb r0, [r2, #2]
	strb r0, [r6]
	ldrh r0, [r2, #4]
	mov r1, ip
	strh r0, [r1]
	ldrh r0, [r2, #6]
	strh r0, [r1, #0x3c]
	movs r1, #0xfc
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r7, r0
	ldr r1, [r2, #8]
	str r1, [r0]
	adds r7, #4
	movs r0, #2
	add ip, r0
	adds r2, #0xc
	adds r4, #1
	adds r6, #1
	adds r3, #1
	cmp r3, #0x11
	ble _080A1850
	b _080A1B50
	.align 2, 0
_080A1888: .4byte gNonGameplayRam
_080A188C: .4byte 0x0874E218
_080A1890:
	cmp r1, #1
	bne _080A18F8
	ldr r1, _080A18F0 @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x9b
	movs r0, #0x11
	strb r0, [r2]
	movs r3, #0
	adds r5, r1, #0
	movs r7, #0x18
	ldr r2, _080A18F4 @ =0x0874E2F0
	movs r1, #0x95
	lsls r1, r1, #1
	adds r4, r5, r1
	movs r0, #0xb3
	lsls r0, r0, #1
	adds r6, r5, r0
	adds r1, #0x60
	adds r1, r1, r5
	mov ip, r1
_080A18B8:
	ldrb r0, [r2]
	strb r0, [r4]
	ldrb r0, [r2, #1]
	strb r0, [r4, #0x1e]
	ldrb r0, [r2, #2]
	strb r0, [r6]
	ldrh r0, [r2, #4]
	mov r1, ip
	strh r0, [r1]
	ldrh r0, [r2, #6]
	strh r0, [r1, #0x3c]
	movs r1, #0xfc
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r7, r0
	ldr r1, [r2, #8]
	str r1, [r0]
	adds r7, #4
	movs r0, #2
	add ip, r0
	adds r2, #0xc
	adds r4, #1
	adds r6, #1
	adds r3, #1
	cmp r3, #0xa
	ble _080A18B8
	b _080A1B50
	.align 2, 0
_080A18F0: .4byte gNonGameplayRam
_080A18F4: .4byte 0x0874E2F0
_080A18F8:
	ldr r1, _080A1954 @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x9b
	movs r0, #0x17
	strb r0, [r2]
	movs r3, #0
	adds r5, r1, #0
	movs r7, #0x18
	ldr r2, _080A1958 @ =0x0874E374
	movs r1, #0x95
	lsls r1, r1, #1
	adds r4, r5, r1
	movs r0, #0xb3
	lsls r0, r0, #1
	adds r6, r5, r0
	adds r1, #0x60
	adds r1, r1, r5
	mov ip, r1
_080A191C:
	ldrb r0, [r2]
	strb r0, [r4]
	ldrb r0, [r2, #1]
	strb r0, [r4, #0x1e]
	ldrb r0, [r2, #2]
	strb r0, [r6]
	ldrh r0, [r2, #4]
	mov r1, ip
	strh r0, [r1]
	ldrh r0, [r2, #6]
	strh r0, [r1, #0x3c]
	movs r1, #0xfc
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r7, r0
	ldr r1, [r2, #8]
	str r1, [r0]
	adds r7, #4
	movs r0, #2
	add ip, r0
	adds r2, #0xc
	adds r4, #1
	adds r6, #1
	adds r3, #1
	cmp r3, #0x10
	ble _080A191C
	b _080A1B50
	.align 2, 0
_080A1954: .4byte gNonGameplayRam
_080A1958: .4byte 0x0874E374
_080A195C:
	cmp r1, #0
	bne _080A19C4
	ldr r1, _080A19BC @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x9b
	movs r0, #0x15
	strb r0, [r2]
	movs r3, #0
	adds r5, r1, #0
	movs r7, #0x18
	ldr r2, _080A19C0 @ =0x0874E488
	movs r1, #0x95
	lsls r1, r1, #1
	adds r4, r5, r1
	movs r0, #0xb3
	lsls r0, r0, #1
	adds r6, r5, r0
	adds r1, #0x60
	adds r1, r1, r5
	mov ip, r1
_080A1984:
	ldrb r0, [r2]
	strb r0, [r4]
	ldrb r0, [r2, #1]
	strb r0, [r4, #0x1e]
	ldrb r0, [r2, #2]
	strb r0, [r6]
	ldrh r0, [r2, #4]
	mov r1, ip
	strh r0, [r1]
	ldrh r0, [r2, #6]
	strh r0, [r1, #0x3c]
	movs r1, #0xfc
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r7, r0
	ldr r1, [r2, #8]
	str r1, [r0]
	adds r7, #4
	movs r0, #2
	add ip, r0
	adds r2, #0xc
	adds r4, #1
	adds r6, #1
	adds r3, #1
	cmp r3, #0xe
	ble _080A1984
	b _080A1B50
	.align 2, 0
_080A19BC: .4byte gNonGameplayRam
_080A19C0: .4byte 0x0874E488
_080A19C4:
	ldr r1, _080A1A20 @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x9b
	movs r0, #0x19
	strb r0, [r2]
	movs r3, #0
	adds r5, r1, #0
	movs r7, #0x18
	ldr r2, _080A1A24 @ =0x0874E53C
	movs r1, #0x95
	lsls r1, r1, #1
	adds r4, r5, r1
	movs r0, #0xb3
	lsls r0, r0, #1
	adds r6, r5, r0
	adds r1, #0x60
	adds r1, r1, r5
	mov ip, r1
_080A19E8:
	ldrb r0, [r2]
	strb r0, [r4]
	ldrb r0, [r2, #1]
	strb r0, [r4, #0x1e]
	ldrb r0, [r2, #2]
	strb r0, [r6]
	ldrh r0, [r2, #4]
	mov r1, ip
	strh r0, [r1]
	ldrh r0, [r2, #6]
	strh r0, [r1, #0x3c]
	movs r1, #0xfc
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r7, r0
	ldr r1, [r2, #8]
	str r1, [r0]
	adds r7, #4
	movs r0, #2
	add ip, r0
	adds r2, #0xc
	adds r4, #1
	adds r6, #1
	adds r3, #1
	cmp r3, #0x12
	ble _080A19E8
	b _080A1B50
	.align 2, 0
_080A1A20: .4byte gNonGameplayRam
_080A1A24: .4byte 0x0874E53C
_080A1A28:
	cmp r1, #0
	bne _080A1A90
	ldr r1, _080A1A88 @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x9b
	movs r0, #0xf
	strb r0, [r2]
	movs r3, #0
	adds r5, r1, #0
	movs r7, #0x18
	ldr r2, _080A1A8C @ =0x0874DC90
	movs r1, #0x95
	lsls r1, r1, #1
	adds r4, r5, r1
	movs r0, #0xb3
	lsls r0, r0, #1
	adds r6, r5, r0
	adds r1, #0x60
	adds r1, r1, r5
	mov ip, r1
_080A1A50:
	ldrb r0, [r2]
	strb r0, [r4]
	ldrb r0, [r2, #1]
	strb r0, [r4, #0x1e]
	ldrb r0, [r2, #2]
	strb r0, [r6]
	ldrh r0, [r2, #4]
	mov r1, ip
	strh r0, [r1]
	ldrh r0, [r2, #6]
	strh r0, [r1, #0x3c]
	movs r1, #0xfc
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r7, r0
	ldr r1, [r2, #8]
	str r1, [r0]
	adds r7, #4
	movs r0, #2
	add ip, r0
	adds r2, #0xc
	adds r4, #1
	adds r6, #1
	adds r3, #1
	cmp r3, #8
	ble _080A1A50
	b _080A1B50
	.align 2, 0
_080A1A88: .4byte gNonGameplayRam
_080A1A8C: .4byte 0x0874DC90
_080A1A90:
	cmp r1, #1
	bne _080A1AF8
	ldr r1, _080A1AF0 @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x9b
	movs r0, #0x11
	strb r0, [r2]
	movs r3, #0
	adds r5, r1, #0
	movs r7, #0x18
	ldr r2, _080A1AF4 @ =0x0874DCFC
	movs r1, #0x95
	lsls r1, r1, #1
	adds r4, r5, r1
	movs r0, #0xb3
	lsls r0, r0, #1
	adds r6, r5, r0
	adds r1, #0x60
	adds r1, r1, r5
	mov ip, r1
_080A1AB8:
	ldrb r0, [r2]
	strb r0, [r4]
	ldrb r0, [r2, #1]
	strb r0, [r4, #0x1e]
	ldrb r0, [r2, #2]
	strb r0, [r6]
	ldrh r0, [r2, #4]
	mov r1, ip
	strh r0, [r1]
	ldrh r0, [r2, #6]
	strh r0, [r1, #0x3c]
	movs r1, #0xfc
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r7, r0
	ldr r1, [r2, #8]
	str r1, [r0]
	adds r7, #4
	movs r0, #2
	add ip, r0
	adds r2, #0xc
	adds r4, #1
	adds r6, #1
	adds r3, #1
	cmp r3, #0xa
	ble _080A1AB8
	b _080A1B50
	.align 2, 0
_080A1AF0: .4byte gNonGameplayRam
_080A1AF4: .4byte 0x0874DCFC
_080A1AF8:
	ldr r1, _080A1B58 @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x9b
	movs r0, #0x17
	strb r0, [r2]
	movs r3, #0
	adds r5, r1, #0
	movs r7, #0x18
	ldr r2, _080A1B5C @ =0x0874DD80
	movs r1, #0x95
	lsls r1, r1, #1
	adds r4, r5, r1
	movs r0, #0xb3
	lsls r0, r0, #1
	adds r6, r5, r0
	adds r1, #0x60
	adds r1, r1, r5
	mov ip, r1
_080A1B1C:
	ldrb r0, [r2]
	strb r0, [r4]
	ldrb r0, [r2, #1]
	strb r0, [r4, #0x1e]
	ldrb r0, [r2, #2]
	strb r0, [r6]
	ldrh r0, [r2, #4]
	mov r1, ip
	strh r0, [r1]
	ldrh r0, [r2, #6]
	strh r0, [r1, #0x3c]
	movs r1, #0xfc
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r7, r0
	ldr r1, [r2, #8]
	str r1, [r0]
	adds r7, #4
	movs r0, #2
	add ip, r0
	adds r2, #0xc
	adds r4, #1
	adds r6, #1
	adds r3, #1
	cmp r3, #0x10
	ble _080A1B1C
_080A1B50:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A1B58: .4byte gNonGameplayRam
_080A1B5C: .4byte 0x0874DD80

	thumb_func_start EndingImageDisplayLinePermanently
EndingImageDisplayLinePermanently: @ 0x080A1B60
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r0, _080A1B7C @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	beq _080A1BA4
	cmp r0, #4
	bgt _080A1B80
	cmp r0, #3
	beq _080A1B8A
	b _080A1BEC
	.align 2, 0
_080A1B7C: .4byte 0x03000011
_080A1B80:
	cmp r0, #5
	beq _080A1BBC
	cmp r0, #6
	beq _080A1BD4
	b _080A1BEC
_080A1B8A:
	ldr r0, _080A1B9C @ =gNonGameplayRam
	mov ip, r0
	movs r1, #0x92
	lsls r1, r1, #1
	add r1, ip
	adds r1, r6, r1
	ldr r5, _080A1BA0 @ =0x0874DE4C
	b _080A1BFA
	.align 2, 0
_080A1B9C: .4byte gNonGameplayRam
_080A1BA0: .4byte 0x0874DE4C
_080A1BA4:
	ldr r0, _080A1BB4 @ =gNonGameplayRam
	mov ip, r0
	movs r1, #0x92
	lsls r1, r1, #1
	add r1, ip
	adds r1, r6, r1
	ldr r5, _080A1BB8 @ =0x0874DFD8
	b _080A1BFA
	.align 2, 0
_080A1BB4: .4byte gNonGameplayRam
_080A1BB8: .4byte 0x0874DFD8
_080A1BBC:
	ldr r0, _080A1BCC @ =gNonGameplayRam
	mov ip, r0
	movs r1, #0x92
	lsls r1, r1, #1
	add r1, ip
	adds r1, r6, r1
	ldr r5, _080A1BD0 @ =0x0874E1D0
	b _080A1BFA
	.align 2, 0
_080A1BCC: .4byte gNonGameplayRam
_080A1BD0: .4byte 0x0874E1D0
_080A1BD4:
	ldr r0, _080A1BE4 @ =gNonGameplayRam
	mov ip, r0
	movs r1, #0x92
	lsls r1, r1, #1
	add r1, ip
	adds r1, r6, r1
	ldr r5, _080A1BE8 @ =0x0874E440
	b _080A1BFA
	.align 2, 0
_080A1BE4: .4byte gNonGameplayRam
_080A1BE8: .4byte 0x0874E440
_080A1BEC:
	ldr r0, _080A1C7C @ =gNonGameplayRam
	mov ip, r0
	movs r1, #0x92
	lsls r1, r1, #1
	add r1, ip
	adds r1, r6, r1
	ldr r5, _080A1C80 @ =0x0874DC48
_080A1BFA:
	lsls r3, r6, #1
	adds r4, r3, r6
	lsls r4, r4, #2
	adds r2, r4, r5
	ldrb r0, [r2]
	strb r0, [r1]
	movs r0, #0xa1
	lsls r0, r0, #1
	add r0, ip
	adds r0, r6, r0
	ldrb r1, [r2, #1]
	strb r1, [r0]
	movs r0, #0xb0
	lsls r0, r0, #1
	add r0, ip
	adds r0, r6, r0
	ldrb r1, [r2, #2]
	strb r1, [r0]
	movs r0, #0xbf
	lsls r0, r0, #1
	add r0, ip
	adds r0, r3, r0
	ldrh r1, [r2, #4]
	strh r1, [r0]
	movs r0, #0xdd
	lsls r0, r0, #1
	add r0, ip
	adds r3, r3, r0
	ldrh r0, [r2, #6]
	strh r0, [r3]
	lsls r1, r6, #2
	movs r0, #0xfc
	lsls r0, r0, #1
	add r0, ip
	adds r1, r1, r0
	adds r5, #8
	adds r4, r4, r5
	ldr r0, [r4]
	str r0, [r1]
	mov r1, ip
	movs r3, #0
	adds r2, r1, #0
	adds r2, #0x9b
	ldrb r0, [r2]
	subs r0, #6
	cmp r3, r0
	bge _080A1C70
	movs r5, #0
	adds r4, r2, #0
	movs r0, #0x95
	lsls r0, r0, #1
	adds r2, r1, r0
_080A1C62:
	strb r5, [r2]
	adds r2, #1
	adds r3, #1
	ldrb r0, [r4]
	subs r0, #6
	cmp r3, r0
	blt _080A1C62
_080A1C70:
	adds r1, #0x9b
	movs r0, #6
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080A1C7C: .4byte gNonGameplayRam
_080A1C80: .4byte 0x0874DC48

	thumb_func_start CreditsSubroutine
CreditsSubroutine: @ 0x080A1C84
	push {r4, r5, lr}
	movs r5, #0
	ldr r0, _080A1CA4 @ =gNonGameplayRam
	strb r5, [r0]
	ldr r0, _080A1CA8 @ =gNextOamSlot
	strb r5, [r0]
	ldr r4, _080A1CAC @ =gSubGameMode1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080A1CC0
	cmp r0, #1
	bgt _080A1CB0
	cmp r0, #0
	beq _080A1CBA
	b _080A1CF2
	.align 2, 0
_080A1CA4: .4byte gNonGameplayRam
_080A1CA8: .4byte gNextOamSlot
_080A1CAC: .4byte gSubGameMode1
_080A1CB0:
	cmp r0, #2
	beq _080A1CE0
	cmp r0, #3
	beq _080A1CF0
	b _080A1CF2
_080A1CBA:
	bl CreditsInit
	b _080A1CE8
_080A1CC0:
	ldr r1, _080A1CD0 @ =gWrittenToBldy
	ldrh r0, [r1]
	cmp r0, #0
	beq _080A1CD4
	subs r0, #1
	strh r0, [r1]
	b _080A1CF2
	.align 2, 0
_080A1CD0: .4byte gWrittenToBldy
_080A1CD4:
	ldr r0, _080A1CDC @ =0x04000050
	strh r5, [r0]
	b _080A1CE8
	.align 2, 0
_080A1CDC: .4byte 0x04000050
_080A1CE0:
	bl CreditsProcess
	cmp r0, #0
	beq _080A1CF2
_080A1CE8:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _080A1CF2
_080A1CF0:
	movs r5, #1
_080A1CF2:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start unk_a1cfc
unk_a1cfc: @ 0x080A1CFC
	push {lr}
	bl UpdateAudio
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start CreditsVblank
CreditsVblank: @ 0x080A1D08
	push {lr}
	ldr r0, _080A1D58 @ =gNonGameplayRam
	mov ip, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080A1D40
	ldr r1, _080A1D5C @ =0x040000D4
	mov r0, ip
	adds r0, #0xa
	str r0, [r1]
	adds r0, #0x82
	ldr r0, [r0]
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r0, r0, r3
	str r0, [r1, #4]
	ldr r2, _080A1D60 @ =0x80000020
	str r2, [r1, #8]
	ldr r0, [r1, #8]
	mov r0, ip
	adds r0, #0x4a
	str r0, [r1]
	adds r0, #0x46
	ldr r0, [r0]
	adds r0, r0, r3
	str r0, [r1, #4]
	str r2, [r1, #8]
	ldr r0, [r1, #8]
_080A1D40:
	ldr r1, _080A1D64 @ =0x04000054
	ldr r0, _080A1D68 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	subs r1, #0x42
	ldr r0, _080A1D6C @ =0x03001226
	ldrh r0, [r0]
	lsls r0, r0, #0x13
	lsrs r0, r0, #0x17
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_080A1D58: .4byte gNonGameplayRam
_080A1D5C: .4byte 0x040000D4
_080A1D60: .4byte 0x80000020
_080A1D64: .4byte 0x04000054
_080A1D68: .4byte gWrittenToBldy
_080A1D6C: .4byte 0x03001226

	thumb_func_start SamusPosingVblank
SamusPosingVblank: @ 0x080A1D70
	ldr r1, _080A1DA8 @ =0x040000D4
	ldr r0, _080A1DAC @ =gOamData
	str r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _080A1DB0 @ =0x84000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	subs r1, #0x80
	ldr r0, _080A1DB4 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r2, _080A1DB8 @ =0x04000012
	ldr r0, _080A1DBC @ =0x03001226
	ldrh r0, [r0]
	lsrs r0, r0, #4
	ldr r3, _080A1DC0 @ =0x000001FF
	adds r1, r3, #0
	ands r0, r1
	strh r0, [r2]
	adds r2, #8
	ldr r0, _080A1DC4 @ =0x0300122E
	ldrh r0, [r0]
	lsrs r0, r0, #4
	ands r0, r1
	strh r0, [r2]
	bx lr
	.align 2, 0
_080A1DA8: .4byte 0x040000D4
_080A1DAC: .4byte gOamData
_080A1DB0: .4byte 0x84000100
_080A1DB4: .4byte gWrittenToBldy
_080A1DB8: .4byte 0x04000012
_080A1DBC: .4byte 0x03001226
_080A1DC0: .4byte 0x000001FF
_080A1DC4: .4byte 0x0300122E

	thumb_func_start EndingImageVblank
EndingImageVblank: @ 0x080A1DC8
	push {r4, r5, lr}
	ldr r4, _080A1E38 @ =0x040000D4
	ldr r0, _080A1E3C @ =gOamData
	str r0, [r4]
	movs r0, #0xe0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _080A1E40 @ =0x84000100
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r5, _080A1E44 @ =gNonGameplayRam
	ldrb r0, [r5]
	cmp r0, #0
	beq _080A1E0E
	adds r3, r5, #0
	adds r3, #0xa
	str r3, [r4]
	adds r0, r5, #0
	adds r0, #0x8c
	ldr r0, [r0]
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r0, r0, r2
	str r0, [r4, #4]
	ldr r1, _080A1E48 @ =0x80000020
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	str r3, [r4]
	adds r0, r5, #0
	adds r0, #0x90
	ldr r0, [r0]
	adds r0, r0, r2
	str r0, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
_080A1E0E:
	ldr r1, _080A1E4C @ =0x04000054
	ldr r0, _080A1E50 @ =gWrittenToBldy
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r2, _080A1E54 @ =0x04000012
	ldr r0, _080A1E58 @ =0x03001226
	ldrh r0, [r0]
	lsrs r0, r0, #4
	ldr r3, _080A1E5C @ =0x000001FF
	adds r1, r3, #0
	ands r0, r1
	strh r0, [r2]
	adds r2, #4
	ldr r0, _080A1E60 @ =gBg1YPosition
	ldrh r0, [r0]
	lsrs r0, r0, #4
	ands r0, r1
	strh r0, [r2]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A1E38: .4byte 0x040000D4
_080A1E3C: .4byte gOamData
_080A1E40: .4byte 0x84000100
_080A1E44: .4byte gNonGameplayRam
_080A1E48: .4byte 0x80000020
_080A1E4C: .4byte 0x04000054
_080A1E50: .4byte gWrittenToBldy
_080A1E54: .4byte 0x04000012
_080A1E58: .4byte 0x03001226
_080A1E5C: .4byte 0x000001FF
_080A1E60: .4byte gBg1YPosition

	thumb_func_start SamusPosingHblankCode
SamusPosingHblankCode: @ 0x080A1E64
	ldr r0, _080A1E80 @ =0x04000006
	ldr r2, _080A1E84 @ =gNonGameplayRam
	ldrh r0, [r0]
	ldrh r1, [r2, #6]
	adds r0, r0, r1
	movs r1, #0x7f
	ands r0, r1
	ldr r1, _080A1E88 @ =0x04000010
	adds r2, #0xa4
	adds r0, r0, r2
	ldrb r0, [r0]
	strh r0, [r1]
	bx lr
	.align 2, 0
_080A1E80: .4byte 0x04000006
_080A1E84: .4byte gNonGameplayRam
_080A1E88: .4byte 0x04000010

	thumb_func_start CreditsInit
CreditsInit: @ 0x080A1E8C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	ldr r3, _080A1FD0 @ =0x04000208
	movs r6, #0
	strh r6, [r3]
	ldr r2, _080A1FD4 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _080A1FD8 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _080A1FDC @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _080A1FE0 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	mov sb, r0
	strh r0, [r3]
	ldr r0, _080A1FE4 @ =unk_a1cfc
	bl CallbackSetVBlank
	movs r1, #0x80
	lsls r1, r1, #0x13
	mov r8, r1
	strh r6, [r1]
	movs r5, #0
	str r5, [sp]
	ldr r4, _080A1FE8 @ =0x040000D4
	mov r2, sp
	str r2, [r4]
	ldr r7, _080A1FEC @ =gNonGameplayRam
	str r7, [r4, #4]
	ldr r0, _080A1FF0 @ =0x85000150
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	bl ClearGfxRam
	ldr r1, _080A1FF4 @ =0x08747900
	str r1, [r4]
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r2, _080A1FF8 @ =0x80000400
	str r2, [r4, #8]
	ldr r0, [r4, #8]
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r1, r3
	str r0, [r4]
	ldr r0, _080A1FFC @ =0x06000800
	str r0, [r4, #4]
	str r2, [r4, #8]
	ldr r0, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #5
	adds r1, r1, r0
	str r1, [r4]
	ldr r0, _080A2000 @ =0x06001000
	str r0, [r4, #4]
	ldr r0, _080A2004 @ =0x80000200
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080A2008 @ =0x08748D00
	str r0, [r4]
	ldr r0, _080A200C @ =0x06001400
	str r0, [r4, #4]
	ldr r0, _080A2010 @ =0x800000E0
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080A2014 @ =0x08748EC0
	str r0, [r4]
	ldr r0, _080A2018 @ =0x06001800
	str r0, [r4, #4]
	ldr r1, _080A201C @ =0x80000120
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080A2020 @ =0x08749100
	str r0, [r4]
	ldr r0, _080A2024 @ =0x06001C00
	str r0, [r4, #4]
	ldr r0, _080A2028 @ =0x80000160
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080A202C @ =0x087493C0
	str r0, [r4]
	ldr r0, _080A2030 @ =0x06002000
	str r0, [r4, #4]
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080A2034 @ =0x087478A0
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _080A2038 @ =0x80000030
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r1, _080A203C @ =0x04000008
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	movs r3, #0x88
	lsls r3, r3, #5
	adds r0, r3, #0
	mov r1, r8
	strh r0, [r1]
	ldr r0, _080A2040 @ =gNextOamSlot
	strb r6, [r0]
	bl ResetFreeOam
	ldr r0, _080A2044 @ =0x03001224
	strh r5, [r0]
	ldr r0, _080A2048 @ =0x03001226
	strh r5, [r0]
	ldr r0, _080A204C @ =gBg1XPosition
	strh r5, [r0]
	ldr r0, _080A2050 @ =gBg1YPosition
	strh r5, [r0]
	ldr r0, _080A2054 @ =0x0300122C
	strh r5, [r0]
	ldr r0, _080A2058 @ =0x0300122E
	strh r5, [r0]
	ldr r0, _080A205C @ =0x03001230
	strh r5, [r0]
	ldr r0, _080A2060 @ =0x03001232
	strh r5, [r0]
	ldr r0, _080A2064 @ =0x04000010
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	strh r5, [r0]
	movs r0, #0x80
	strh r0, [r7, #8]
	ldr r2, _080A2068 @ =gInGameTimer
	ldrb r1, [r2]
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldrb r2, [r2, #1]
	adds r0, r0, r2
	cmp r0, #0x77
	bgt _080A206C
	adds r1, r7, #0
	adds r1, #0x99
	movs r0, #2
	strb r0, [r1]
	b _080A2078
	.align 2, 0
_080A1FD0: .4byte 0x04000208
_080A1FD4: .4byte 0x04000004
_080A1FD8: .4byte 0x0000FFEF
_080A1FDC: .4byte 0x04000200
_080A1FE0: .4byte 0x0000FFFD
_080A1FE4: .4byte unk_a1cfc
_080A1FE8: .4byte 0x040000D4
_080A1FEC: .4byte gNonGameplayRam
_080A1FF0: .4byte 0x85000150
_080A1FF4: .4byte 0x08747900
_080A1FF8: .4byte 0x80000400
_080A1FFC: .4byte 0x06000800
_080A2000: .4byte 0x06001000
_080A2004: .4byte 0x80000200
_080A2008: .4byte 0x08748D00
_080A200C: .4byte 0x06001400
_080A2010: .4byte 0x800000E0
_080A2014: .4byte 0x08748EC0
_080A2018: .4byte 0x06001800
_080A201C: .4byte 0x80000120
_080A2020: .4byte 0x08749100
_080A2024: .4byte 0x06001C00
_080A2028: .4byte 0x80000160
_080A202C: .4byte 0x087493C0
_080A2030: .4byte 0x06002000
_080A2034: .4byte 0x087478A0
_080A2038: .4byte 0x80000030
_080A203C: .4byte 0x04000008
_080A2040: .4byte gNextOamSlot
_080A2044: .4byte 0x03001224
_080A2048: .4byte 0x03001226
_080A204C: .4byte gBg1XPosition
_080A2050: .4byte gBg1YPosition
_080A2054: .4byte 0x0300122C
_080A2058: .4byte 0x0300122E
_080A205C: .4byte 0x03001230
_080A2060: .4byte 0x03001232
_080A2064: .4byte 0x04000010
_080A2068: .4byte gInGameTimer
_080A206C:
	cmp r0, #0xef
	bgt _080A2078
	adds r0, r7, #0
	adds r0, #0x99
	mov r2, sb
	strb r2, [r0]
_080A2078:
	ldr r5, _080A20E0 @ =gEquipment
	ldrh r0, [r5, #2]
	subs r0, #0x63
	movs r1, #0x64
	bl __divsi3
	adds r4, r0, #0
	cmp r4, #0
	bge _080A208C
	movs r4, #0
_080A208C:
	ldrh r0, [r5, #6]
	subs r0, #0xa
	movs r1, #5
	bl __divsi3
	adds r3, r0, #0
	cmp r3, #0
	bge _080A209E
	movs r3, #0
_080A209E:
	ldrb r0, [r5, #9]
	subs r0, #0xa
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r2, r0, #1
	cmp r2, #0
	bge _080A20AE
	movs r2, #0
_080A20AE:
	ldr r1, _080A20E4 @ =gNonGameplayRam
	adds r0, r4, r3
	adds r0, r0, r2
	adds r1, #0x9a
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x64
	bls _080A20C4
	movs r0, #0x64
	strb r0, [r1]
_080A20C4:
	movs r0, #0x55
	movs r1, #0xe
	bl PlayMusic
	ldr r0, _080A20E8 @ =CreditsVblank
	bl CallbackSetVBlank
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A20E0: .4byte gEquipment
_080A20E4: .4byte gNonGameplayRam
_080A20E8: .4byte CreditsVblank

	thumb_func_start CreditsProcess
CreditsProcess: @ 0x080A20EC
	push {r4, r5, r6, r7, lr}
	movs r7, #0
	ldr r1, _080A2108 @ =gNonGameplayRam
	ldrb r0, [r1, #1]
	adds r4, r1, #0
	cmp r0, #9
	bls _080A20FC
	b _080A22D8
_080A20FC:
	lsls r0, r0, #2
	ldr r1, _080A210C @ =_080A2110
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A2108: .4byte gNonGameplayRam
_080A210C: .4byte _080A2110
_080A2110: @ jump table
	.4byte _080A2138 @ case 0
	.4byte _080A21C4 @ case 1
	.4byte _080A2218 @ case 2
	.4byte _080A224E @ case 3
	.4byte _080A227C @ case 4
	.4byte _080A2218 @ case 5
	.4byte _080A22AC @ case 6
	.4byte _080A227C @ case 7
	.4byte _080A2218 @ case 8
	.4byte _080A22D0 @ case 9
_080A2138:
	ldrh r1, [r4, #8]
	cmp r1, #0x7f
	bls _080A21AA
	movs r0, #0x7f
	ands r0, r1
	strh r0, [r4, #8]
	ldrh r0, [r4, #2]
	ldrh r1, [r4, #4]
	cmp r0, r1
	bne _080A21A4
	ldrh r0, [r4, #6]
	bl CreditsDisplayLine
	adds r6, r0, #0
	cmp r6, #9
	bne _080A2160
	ldrb r0, [r4, #1]
	adds r0, #1
	strb r0, [r4, #1]
	b _080A21A4
_080A2160:
	ldrh r0, [r4, #4]
	lsls r3, r0, #6
	movs r2, #0xa0
	lsls r2, r2, #3
	adds r0, r3, r2
	ldr r2, _080A21BC @ =0x000007FF
	cmp r0, r2
	ble _080A2172
	ands r0, r2
_080A2172:
	adds r1, r4, #0
	adds r1, #0x8c
	movs r5, #0x80
	lsls r5, r5, #8
	adds r0, r0, r5
	str r0, [r1]
	movs r1, #0xa8
	lsls r1, r1, #3
	adds r0, r3, r1
	cmp r0, r2
	ble _080A218A
	ands r0, r2
_080A218A:
	adds r1, r4, #0
	adds r1, #0x90
	adds r0, r0, r5
	str r0, [r1]
	ldrh r0, [r4, #4]
	adds r0, r0, r6
	strh r0, [r4, #4]
	ldrh r0, [r4, #6]
	adds r0, #1
	strh r0, [r4, #6]
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
_080A21A4:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
_080A21AA:
	ldrh r0, [r4, #8]
	adds r0, #9
	strh r0, [r4, #8]
	ldr r1, _080A21C0 @ =0x03001226
	ldrh r0, [r1]
	adds r0, #9
	strh r0, [r1]
	b _080A22D8
	.align 2, 0
_080A21BC: .4byte 0x000007FF
_080A21C0: .4byte 0x03001226
_080A21C4:
	ldr r0, _080A2208 @ =gNonGameplayRam
	movs r3, #0
	adds r2, r0, #0
	adds r2, #0x4a
	adds r0, #0xa
	movs r1, #0x1f
_080A21D0:
	strh r3, [r0]
	strh r3, [r2]
	adds r2, #2
	adds r0, #2
	subs r1, #1
	cmp r1, #0
	bge _080A21D0
	adds r2, r4, #0
	adds r2, #0x94
	ldrh r0, [r2]
	adds r1, r0, #1
	strh r1, [r2]
	lsls r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #0x12
	cmp r0, r1
	bls _080A22D8
	ldr r1, _080A220C @ =0x04000050
	ldr r3, _080A2210 @ =0x00001FDF
	adds r0, r3, #0
	strh r0, [r1]
	ldr r1, _080A2214 @ =gWrittenToBldy
	movs r0, #0
	strh r0, [r1]
	movs r0, #0
	strh r0, [r2]
	b _080A22C2
	.align 2, 0
_080A2208: .4byte gNonGameplayRam
_080A220C: .4byte 0x04000050
_080A2210: .4byte 0x00001FDF
_080A2214: .4byte gWrittenToBldy
_080A2218:
	ldr r5, _080A2238 @ =gWrittenToBldy
	ldrh r3, [r5]
	cmp r3, #0xf
	bhi _080A223C
	adds r1, r4, #0
	adds r1, #0x94
	ldrh r2, [r1]
	adds r0, r2, #1
	strh r0, [r1]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _080A22D8
	adds r0, r3, #1
	strh r0, [r5]
	b _080A22D8
	.align 2, 0
_080A2238: .4byte gWrittenToBldy
_080A223C:
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r0, #0
	strh r0, [r1]
	adds r1, r4, #0
	adds r1, #0x94
	movs r0, #0
	strh r0, [r1]
	b _080A22C2
_080A224E:
	ldr r1, _080A2274 @ =0x0879ECA0
	adds r0, r4, #0
	adds r0, #0x98
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl _call_via_r0
	cmp r0, #0
	beq _080A226A
	ldrb r0, [r4, #1]
	adds r0, #1
	strb r0, [r4, #1]
_080A226A:
	ldr r1, _080A2278 @ =0x0300122E
	ldrh r0, [r1]
	adds r0, #4
	strh r0, [r1]
	b _080A22D8
	.align 2, 0
_080A2274: .4byte 0x0879ECA0
_080A2278: .4byte 0x0300122E
_080A227C:
	ldr r1, _080A22A0 @ =0x04000050
	ldr r2, _080A22A4 @ =0x00001FDF
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _080A22A8 @ =gWrittenToBldy
	movs r1, #0
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0x94
	movs r0, #0
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x97
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	b _080A22C2
	.align 2, 0
_080A22A0: .4byte 0x04000050
_080A22A4: .4byte 0x00001FDF
_080A22A8: .4byte gWrittenToBldy
_080A22AC:
	ldr r1, _080A22CC @ =0x0879ECBC
	adds r0, r4, #0
	adds r0, #0x98
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl _call_via_r0
	cmp r0, #0
	beq _080A22D8
_080A22C2:
	ldrb r0, [r4, #1]
	adds r0, #1
	strb r0, [r4, #1]
	b _080A22D8
	.align 2, 0
_080A22CC: .4byte 0x0879ECBC
_080A22D0:
	adds r7, #1
	movs r0, #0x1e
	bl FadeMusic
_080A22D8:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start CreditsDisplayLine
CreditsDisplayLine: @ 0x080A22E0
	push {r4, r5, r6, lr}
	ldr r4, _080A231C @ =0x0874B0B0
	lsls r1, r0, #3
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r4, r1, r4
	ldr r0, _080A2320 @ =gNonGameplayRam
	movs r3, #0
	adds r1, r0, #0
	adds r1, #0x4a
	adds r0, #0xa
	movs r2, #0x1f
_080A22F8:
	strh r3, [r0]
	strh r3, [r1]
	adds r1, #2
	adds r0, #2
	subs r2, #1
	cmp r2, #0
	bge _080A22F8
	movs r2, #0
	ldrb r0, [r4]
	cmp r0, #0xd
	bls _080A2310
	b _080A2544
_080A2310:
	lsls r0, r0, #2
	ldr r1, _080A2324 @ =_080A2328
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A231C: .4byte 0x0874B0B0
_080A2320: .4byte gNonGameplayRam
_080A2324: .4byte _080A2328
_080A2328: @ jump table
	.4byte _080A2360 @ case 0
	.4byte _080A23CA @ case 1
	.4byte _080A24AC @ case 2
	.4byte _080A2544 @ case 3
	.4byte _080A2544 @ case 4
	.4byte _080A2450 @ case 5
	.4byte _080A2436 @ case 6
	.4byte _080A2544 @ case 7
	.4byte _080A2544 @ case 8
	.4byte _080A2544 @ case 9
	.4byte _080A243A @ case 10
	.4byte _080A2458 @ case 11
	.4byte _080A2474 @ case 12
	.4byte _080A2490 @ case 13
_080A2360:
	adds r0, r4, #1
	adds r3, r0, r2
	ldrb r0, [r3]
	cmp r0, #0
	beq _080A2450
	ldr r1, _080A2394 @ =gNonGameplayRam
	lsls r0, r2, #1
	adds r0, #0xa
	adds r1, r0, r1
	ldr r6, _080A2398 @ =0x0000101B
	ldr r5, _080A239C @ =0x0000101C
	ldr r4, _080A23A0 @ =0x0000101D
_080A2378:
	ldrb r2, [r3]
	adds r0, r2, #0
	subs r0, #0x41
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x19
	bhi _080A23A4
	movs r2, #0xfc
	lsls r2, r2, #4
	adds r0, r2, #0
	ldrb r2, [r3]
	adds r0, r0, r2
	strh r0, [r1]
	b _080A23BE
	.align 2, 0
_080A2394: .4byte gNonGameplayRam
_080A2398: .4byte 0x0000101B
_080A239C: .4byte 0x0000101C
_080A23A0: .4byte 0x0000101D
_080A23A4:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x2e
	bne _080A23B0
	strh r6, [r1]
	b _080A23BE
_080A23B0:
	cmp r0, #0x2c
	bne _080A23B8
	strh r5, [r1]
	b _080A23BE
_080A23B8:
	cmp r0, #0x26
	bne _080A23BE
	strh r4, [r1]
_080A23BE:
	adds r3, #1
	adds r1, #2
	ldrb r0, [r3]
	cmp r0, #0
	bne _080A2378
	b _080A2450
_080A23CA:
	adds r0, r4, #1
	adds r3, r0, r2
	ldrb r0, [r3]
	cmp r0, #0
	beq _080A2450
	ldr r1, _080A2400 @ =gNonGameplayRam
	lsls r0, r2, #1
	adds r0, #0xa
	adds r1, r0, r1
	ldr r6, _080A2404 @ =0x0000201B
	ldr r5, _080A2408 @ =0x0000201C
	ldr r4, _080A240C @ =0x0000201D
_080A23E2:
	ldrb r2, [r3]
	adds r0, r2, #0
	subs r0, #0x41
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x19
	bhi _080A2410
	movs r2, #0xfe
	lsls r2, r2, #5
	adds r0, r2, #0
	ldrb r2, [r3]
	adds r0, r0, r2
	strh r0, [r1]
	b _080A242A
	.align 2, 0
_080A2400: .4byte gNonGameplayRam
_080A2404: .4byte 0x0000201B
_080A2408: .4byte 0x0000201C
_080A240C: .4byte 0x0000201D
_080A2410:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x2e
	bne _080A241C
	strh r6, [r1]
	b _080A242A
_080A241C:
	cmp r0, #0x2c
	bne _080A2424
	strh r5, [r1]
	b _080A242A
_080A2424:
	cmp r0, #0x26
	bne _080A242A
	strh r4, [r1]
_080A242A:
	adds r3, #1
	adds r1, #2
	ldrb r0, [r3]
	cmp r0, #0
	bne _080A23E2
	b _080A2450
_080A2436:
	movs r5, #9
	b _080A2544
_080A243A:
	movs r2, #8
	ldr r0, _080A2454 @ =gNonGameplayRam
	adds r1, r0, #0
	adds r1, #0x1a
_080A2442:
	adds r0, r2, #0
	adds r0, #0x98
	strh r0, [r1]
	adds r1, #2
	adds r2, #1
	cmp r2, #0x15
	ble _080A2442
_080A2450:
	movs r5, #1
	b _080A2544
	.align 2, 0
_080A2454: .4byte gNonGameplayRam
_080A2458:
	movs r2, #6
	ldr r0, _080A2470 @ =gNonGameplayRam
	adds r1, r0, #0
	adds r1, #0x16
_080A2460:
	adds r0, r2, #0
	adds r0, #0xba
	strh r0, [r1]
	adds r1, #2
	adds r2, #1
	cmp r2, #0x17
	ble _080A2460
	b _080A2450
	.align 2, 0
_080A2470: .4byte gNonGameplayRam
_080A2474:
	movs r2, #4
	ldr r0, _080A248C @ =gNonGameplayRam
	adds r1, r0, #0
	adds r1, #0x12
_080A247C:
	adds r0, r2, #0
	adds r0, #0xdc
	strh r0, [r1]
	adds r1, #2
	adds r2, #1
	cmp r2, #0x19
	ble _080A247C
	b _080A2450
	.align 2, 0
_080A248C: .4byte gNonGameplayRam
_080A2490:
	movs r2, #6
	ldr r0, _080A24A8 @ =gNonGameplayRam
	adds r1, r0, #0
	adds r1, #0x16
_080A2498:
	adds r0, r2, #0
	adds r0, #0xfa
	strh r0, [r1]
	adds r1, #2
	adds r2, #1
	cmp r2, #0x17
	ble _080A2498
	b _080A2450
	.align 2, 0
_080A24A8: .4byte gNonGameplayRam
_080A24AC:
	adds r0, r4, #1
	adds r1, r0, r2
	ldrb r0, [r1]
	cmp r0, #0
	beq _080A2542
	ldr r0, _080A24E8 @ =gNonGameplayRam
	adds r4, r1, #0
	lsls r1, r2, #1
	adds r2, r1, #0
	adds r2, #0x4a
	adds r2, r2, r0
	adds r1, #0xa
	adds r1, r1, r0
	ldr r3, _080A24EC @ =0x0000FFFF
	adds r5, r3, #0
_080A24CA:
	ldrb r3, [r4]
	adds r0, r3, #0
	subs r0, #0x41
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x19
	bhi _080A24F4
	ldr r3, _080A24F0 @ =0x0000FFDF
	adds r0, r3, #0
	ldrb r3, [r4]
	adds r0, r0, r3
	strh r0, [r1]
	ldrb r3, [r4]
	adds r0, r5, r3
	b _080A2534
	.align 2, 0
_080A24E8: .4byte gNonGameplayRam
_080A24EC: .4byte 0x0000FFFF
_080A24F0: .4byte 0x0000FFDF
_080A24F4:
	adds r0, r3, #0
	subs r0, #0x61
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x19
	bhi _080A250C
	ldrb r3, [r4]
	adds r0, r5, r3
	strh r0, [r1]
	ldrb r0, [r4]
	adds r0, #0x1f
	b _080A2534
_080A250C:
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x2e
	bne _080A2518
	movs r0, #0x5b
	b _080A2534
_080A2518:
	cmp r0, #0x2c
	bne _080A2520
	movs r0, #0x5c
	b _080A2534
_080A2520:
	cmp r0, #0x2d
	bne _080A252A
	movs r0, #0x3a
	strh r0, [r1]
	b _080A2536
_080A252A:
	cmp r0, #0x2b
	bne _080A2536
	movs r0, #0x7a
	strh r0, [r1]
	movs r0, #0x9a
_080A2534:
	strh r0, [r2]
_080A2536:
	adds r4, #1
	adds r2, #2
	adds r1, #2
	ldrb r0, [r4]
	cmp r0, #0
	bne _080A24CA
_080A2542:
	movs r5, #2
_080A2544:
	adds r0, r5, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start SamusPosingInit
SamusPosingInit: @ 0x080A254C
	push {r4, r5, r6, lr}
	ldr r0, _080A2634 @ =unk_a1cfc
	bl CallbackSetVBlank
	movs r5, #0x80
	lsls r5, r5, #0x13
	movs r6, #0
	strh r6, [r5]
	ldr r0, _080A2638 @ =0x0874EB50
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _080A263C @ =0x087535E0
	ldr r1, _080A2640 @ =0x0600E800
	bl LZ77UncompVram
	ldr r0, _080A2644 @ =0x08753FF8
	ldr r1, _080A2648 @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _080A264C @ =0x08754D4C
	ldr r1, _080A2650 @ =0x06009000
	bl LZ77UncompVram
	ldr r0, _080A2654 @ =0x0875DB50
	ldr r1, _080A2658 @ =0x0600F800
	bl LZ77UncompVram
	ldr r0, _080A265C @ =0x0875ED6C
	ldr r1, _080A2660 @ =0x06010000
	bl LZ77UncompVram
	ldr r4, _080A2664 @ =0x040000D4
	ldr r0, _080A2668 @ =0x08749600
	str r0, [r4]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r4, #4]
	ldr r0, _080A266C @ =0x80000060
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080A2670 @ =0x087496C0
	str r0, [r4]
	ldr r0, _080A2674 @ =0x050000C0
	str r0, [r4, #4]
	ldr r0, _080A2678 @ =0x800000A0
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r0, _080A267C @ =0x08749A80
	str r0, [r4]
	ldr r0, _080A2680 @ =0x05000200
	str r0, [r4, #4]
	ldr r0, _080A2684 @ =0x80000100
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r1, _080A2688 @ =0x04000008
	ldr r2, _080A268C @ =0x00001F08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	subs r2, #0xff
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _080A2690 @ =0x00001D02
	adds r0, r2, #0
	strh r0, [r1]
	movs r1, #0xa8
	lsls r1, r1, #5
	adds r0, r1, #0
	strh r0, [r5]
	ldr r1, _080A2694 @ =0x04000050
	ldr r2, _080A2698 @ =0x00001FDF
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _080A269C @ =0x03001226
	strh r6, [r0]
	ldr r0, _080A26A0 @ =0x083C94D0
	str r0, [r4]
	ldr r5, _080A26A4 @ =0x03001528
	str r5, [r4, #4]
	ldr r0, _080A26A8 @ =0x80000040
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	adds r1, r5, #0
	subs r1, #0xa4
	movs r0, #0
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	adds r1, #0x98
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r0, _080A26AC @ =SamusPosingVblank
	bl CallbackSetVBlank
	ldr r0, _080A26B0 @ =SamusPosingHblankCode
	str r0, [r4]
	movs r1, #0xe6
	lsls r1, r1, #1
	adds r0, r5, r1
	str r0, [r4, #4]
	ldr r0, _080A26B4 @ =0x80000020
	str r0, [r4, #8]
	ldr r0, [r4, #8]
	ldr r2, _080A26B8 @ =0x000001CD
	adds r0, r5, r2
	bl CallbackSetHBlank
	movs r0, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A2634: .4byte unk_a1cfc
_080A2638: .4byte 0x0874EB50
_080A263C: .4byte 0x087535E0
_080A2640: .4byte 0x0600E800
_080A2644: .4byte 0x08753FF8
_080A2648: .4byte 0x06008000
_080A264C: .4byte 0x08754D4C
_080A2650: .4byte 0x06009000
_080A2654: .4byte 0x0875DB50
_080A2658: .4byte 0x0600F800
_080A265C: .4byte 0x0875ED6C
_080A2660: .4byte 0x06010000
_080A2664: .4byte 0x040000D4
_080A2668: .4byte 0x08749600
_080A266C: .4byte 0x80000060
_080A2670: .4byte 0x087496C0
_080A2674: .4byte 0x050000C0
_080A2678: .4byte 0x800000A0
_080A267C: .4byte 0x08749A80
_080A2680: .4byte 0x05000200
_080A2684: .4byte 0x80000100
_080A2688: .4byte 0x04000008
_080A268C: .4byte 0x00001F08
_080A2690: .4byte 0x00001D02
_080A2694: .4byte 0x04000050
_080A2698: .4byte 0x00001FDF
_080A269C: .4byte 0x03001226
_080A26A0: .4byte 0x083C94D0
_080A26A4: .4byte 0x03001528
_080A26A8: .4byte 0x80000040
_080A26AC: .4byte SamusPosingVblank
_080A26B0: .4byte SamusPosingHblankCode
_080A26B4: .4byte 0x80000020
_080A26B8: .4byte 0x000001CD

	thumb_func_start CreditsFadeIn
CreditsFadeIn: @ 0x080A26BC
	push {r4, lr}
	ldr r4, _080A26E4 @ =gWrittenToBldy
	ldrh r2, [r4]
	adds r1, r2, #0
	cmp r1, #0
	beq _080A26EC
	ldr r0, _080A26E8 @ =gNonGameplayRam
	adds r3, r0, #0
	adds r3, #0x97
	ldrb r1, [r3]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A26DC
	subs r0, r2, #1
	strh r0, [r4]
_080A26DC:
	adds r0, r1, #1
	strb r0, [r3]
	b _080A2702
	.align 2, 0
_080A26E4: .4byte gWrittenToBldy
_080A26E8: .4byte gNonGameplayRam
_080A26EC:
	ldr r0, _080A270C @ =0x04000050
	movs r3, #0
	strh r1, [r0]
	ldr r1, _080A2710 @ =gNonGameplayRam
	adds r2, r1, #0
	adds r2, #0x98
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	adds r1, #0x97
	strb r3, [r1]
_080A2702:
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A270C: .4byte 0x04000050
_080A2710: .4byte gNonGameplayRam

	thumb_func_start SamusPosing
SamusPosing: @ 0x080A2714
	push {lr}
	ldr r3, _080A2738 @ =gNonGameplayRam
	adds r0, r3, #0
	adds r0, #0x94
	ldrh r1, [r0]
	adds r2, r1, #1
	strh r2, [r0]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	cmp r1, #2
	beq _080A2788
	cmp r1, #2
	bgt _080A273C
	cmp r1, #0
	beq _080A2746
	cmp r1, #1
	beq _080A2768
	b _080A288C
	.align 2, 0
_080A2738: .4byte gNonGameplayRam
_080A273C:
	cmp r1, #0x32
	beq _080A27B8
	cmp r1, #0x64
	beq _080A281C
	b _080A288C
_080A2746:
	adds r0, r3, #0
	adds r0, #0x98
	ldrb r0, [r0]
	subs r3, r0, #2
	movs r1, #1
	ands r0, r1
	movs r2, #0xa8
	lsls r2, r2, #8
	cmp r0, #0
	beq _080A275E
	movs r2, #0x80
	lsls r2, r2, #8
_080A275E:
	ldr r1, _080A2764 @ =0x0874E620
	b _080A27A2
	.align 2, 0
_080A2764: .4byte 0x0874E620
_080A2768:
	adds r0, r3, #0
	adds r0, #0x98
	ldrb r0, [r0]
	subs r3, r0, #2
	ands r0, r1
	movs r2, #0xb8
	lsls r2, r2, #8
	cmp r0, #0
	beq _080A277E
	movs r2, #0x90
	lsls r2, r2, #8
_080A277E:
	ldr r1, _080A2784 @ =0x0874E630
	b _080A27A2
	.align 2, 0
_080A2784: .4byte 0x0874E630
_080A2788:
	adds r0, r3, #0
	adds r0, #0x98
	ldrb r0, [r0]
	subs r3, r0, #2
	movs r1, #1
	ands r0, r1
	movs r2, #0xf0
	lsls r2, r2, #8
	cmp r0, #0
	beq _080A27A0
	movs r2, #0xf8
	lsls r2, r2, #8
_080A27A0:
	ldr r1, _080A27B4 @ =0x0874E640
_080A27A2:
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	adds r1, r2, r1
	bl LZ77UncompVram
	b _080A288C
	.align 2, 0
_080A27B4: .4byte 0x0874E640
_080A27B8:
	ldr r1, _080A27E0 @ =0x03001220
	movs r0, #0x10
	strh r0, [r1]
	ldr r1, _080A27E4 @ =0x03001222
	movs r0, #0
	strh r0, [r1]
	ldr r1, _080A27E8 @ =0x04000052
	movs r0, #0x10
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x98
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A27F4
	ldr r1, _080A27EC @ =0x04000050
	ldr r2, _080A27F0 @ =0x00000542
	b _080A27F8
	.align 2, 0
_080A27E0: .4byte 0x03001220
_080A27E4: .4byte 0x03001222
_080A27E8: .4byte 0x04000052
_080A27EC: .4byte 0x04000050
_080A27F0: .4byte 0x00000542
_080A27F4:
	ldr r1, _080A2810 @ =0x04000050
	ldr r2, _080A2814 @ =0x00000641
_080A27F8:
	adds r0, r2, #0
	strh r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xb8
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r1, _080A2818 @ =gNonGameplayRam
	movs r0, #1
	strh r0, [r1, #2]
	b _080A288C
	.align 2, 0
_080A2810: .4byte 0x04000050
_080A2814: .4byte 0x00000641
_080A2818: .4byte gNonGameplayRam
_080A281C:
	ldr r1, _080A284C @ =0x04000050
	movs r0, #0
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x98
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A2854
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xa8
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #8
	ldr r2, _080A2850 @ =0x00001F08
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	subs r2, #0xff
	b _080A286C
	.align 2, 0
_080A284C: .4byte 0x04000050
_080A2850: .4byte 0x00001F08
_080A2854:
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xb0
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #8
	ldr r2, _080A28D4 @ =0x00001F09
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _080A28D8 @ =0x00001E08
_080A286C:
	adds r0, r2, #0
	strh r0, [r1]
	ldr r3, _080A28DC @ =gNonGameplayRam
	movs r2, #0
	movs r1, #0
	strh r1, [r3, #2]
	adds r0, r3, #0
	adds r0, #0x94
	strh r1, [r0]
	adds r0, #3
	strb r2, [r0]
	adds r1, r3, #0
	adds r1, #0x98
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080A288C:
	ldr r1, _080A28DC @ =gNonGameplayRam
	ldrh r0, [r1, #2]
	cmp r0, #1
	bne _080A28CE
	adds r2, r1, #0
	adds r2, #0x97
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _080A28CE
	movs r0, #0
	strb r0, [r2]
	ldr r2, _080A28E0 @ =0x03001220
	ldrh r0, [r2]
	cmp r0, #0
	beq _080A28B6
	subs r0, #1
	strh r0, [r2]
_080A28B6:
	ldr r1, _080A28E4 @ =0x03001222
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _080A28C2
	adds r0, #1
	strh r0, [r1]
_080A28C2:
	ldr r0, _080A28E8 @ =0x04000052
	ldrh r1, [r1]
	lsls r1, r1, #8
	ldrh r2, [r2]
	orrs r1, r2
	strh r1, [r0]
_080A28CE:
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A28D4: .4byte 0x00001F09
_080A28D8: .4byte 0x00001E08
_080A28DC: .4byte gNonGameplayRam
_080A28E0: .4byte 0x03001220
_080A28E4: .4byte 0x03001222
_080A28E8: .4byte 0x04000052

	thumb_func_start SamusPosingTransforming
SamusPosingTransforming: @ 0x080A28EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	movs r0, #0
	mov sl, r0
	ldr r4, _080A2928 @ =gNonGameplayRam
	adds r0, r4, #0
	adds r0, #0x94
	ldrh r1, [r0]
	adds r2, r1, #1
	strh r2, [r0]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	cmp r1, #0x8e
	bne _080A2910
	b _080A2AC0
_080A2910:
	cmp r1, #0x8e
	bgt _080A293E
	cmp r1, #0x65
	beq _080A29E4
	cmp r1, #0x65
	bgt _080A292C
	cmp r1, #0x32
	beq _080A2978
	cmp r1, #0x64
	beq _080A29C0
	b _080A2C0C
	.align 2, 0
_080A2928: .4byte gNonGameplayRam
_080A292C:
	cmp r1, #0x8c
	bne _080A2932
	b _080A2A50
_080A2932:
	cmp r1, #0x8c
	ble _080A2938
	b _080A2A94
_080A2938:
	cmp r1, #0x6e
	beq _080A2A10
	b _080A2C0C
_080A293E:
	cmp r1, #0xaa
	bne _080A2944
	b _080A2B58
_080A2944:
	cmp r1, #0xaa
	bgt _080A2956
	cmp r1, #0x8f
	bne _080A294E
	b _080A2AEC
_080A294E:
	cmp r1, #0x90
	bne _080A2954
	b _080A2B18
_080A2954:
	b _080A2C0C
_080A2956:
	movs r0, #0x87
	lsls r0, r0, #1
	cmp r1, r0
	bne _080A2960
	b _080A2BD8
_080A2960:
	cmp r1, r0
	bgt _080A296C
	cmp r1, #0xdc
	bne _080A296A
	b _080A2B8C
_080A296A:
	b _080A2C0C
_080A296C:
	movs r0, #0xcd
	lsls r0, r0, #1
	cmp r1, r0
	bne _080A2976
	b _080A2C08
_080A2976:
	b _080A2C0C
_080A2978:
	ldr r1, _080A29AC @ =0x03001220
	movs r0, #0x10
	strh r0, [r1]
	ldr r0, _080A29B0 @ =0x03001222
	mov r1, sl
	strh r1, [r0]
	ldr r1, _080A29B4 @ =0x04000052
	movs r0, #0x10
	strh r0, [r1]
	subs r1, #2
	ldr r2, _080A29B8 @ =0x00001441
	adds r0, r2, #0
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x9b
	movs r1, #1
	strb r1, [r0]
	adds r0, #2
	strb r1, [r0]
	adds r2, r4, #0
	adds r2, #0xa0
	ldr r0, _080A29BC @ =0x08749C80
	str r0, [r2]
	strh r1, [r4, #2]
	b _080A2C0C
	.align 2, 0
_080A29AC: .4byte 0x03001220
_080A29B0: .4byte 0x03001222
_080A29B4: .4byte 0x04000052
_080A29B8: .4byte 0x00001441
_080A29BC: .4byte 0x08749C80
_080A29C0:
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r3, #0xa0
	lsls r3, r3, #5
	adds r0, r3, #0
	strh r0, [r1]
	ldr r0, _080A29E0 @ =0x04000050
	movs r1, #0
	mov r2, sl
	strh r2, [r0]
	adds r0, r4, #0
	adds r0, #0x9d
	strb r1, [r0]
	strh r2, [r4, #2]
	b _080A2C0C
	.align 2, 0
_080A29E0: .4byte 0x04000050
_080A29E4:
	adds r0, r4, #0
	adds r0, #0x99
	ldrb r0, [r0]
	cmp r0, #0
	bne _080A29F0
	b _080A2C0C
_080A29F0:
	ldr r0, _080A2A04 @ =0x08753E80
	ldr r1, _080A2A08 @ =0x0600F800
	bl LZ77UncompVram
	ldr r1, _080A2A0C @ =0x04000008
	movs r3, #0xf8
	lsls r3, r3, #5
	adds r0, r3, #0
	strh r0, [r1]
	b _080A2C0C
	.align 2, 0
_080A2A04: .4byte 0x08753E80
_080A2A08: .4byte 0x0600F800
_080A2A0C: .4byte 0x04000008
_080A2A10:
	adds r0, r4, #0
	adds r0, #0x99
	ldrb r0, [r0]
	cmp r0, #0
	bne _080A2A1C
	b _080A2C0C
_080A2A1C:
	ldr r3, _080A2A44 @ =0x04000208
	mov r0, sl
	strh r0, [r3]
	ldr r2, _080A2A48 @ =0x04000004
	ldrh r0, [r2]
	movs r1, #0x10
	orrs r0, r1
	strh r0, [r2]
	ldr r2, _080A2A4C @ =0x04000200
	ldrh r0, [r2]
	movs r1, #2
	orrs r0, r1
	strh r0, [r2]
	movs r1, #1
	strh r1, [r3]
	adds r0, r4, #0
	adds r0, #0x96
	strb r1, [r0]
	b _080A2C0C
	.align 2, 0
_080A2A44: .4byte 0x04000208
_080A2A48: .4byte 0x04000004
_080A2A4C: .4byte 0x04000200
_080A2A50:
	adds r0, r4, #0
	adds r0, #0x99
	ldrb r0, [r0]
	cmp r0, #0
	bne _080A2A5C
	b _080A2C0C
_080A2A5C:
	ldr r0, _080A2A88 @ =0x04000040
	mov r1, sl
	strh r1, [r0]
	adds r0, #4
	strh r1, [r0]
	adds r0, #4
	strh r1, [r0]
	ldr r1, _080A2A8C @ =0x0400004A
	ldr r2, _080A2A90 @ =0x00002326
	adds r0, r2, #0
	strh r0, [r1]
	subs r1, #0x4a
	movs r3, #0xb5
	lsls r3, r3, #8
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, r4, #0
	adds r1, #0x9c
	movs r0, #2
	strb r0, [r1]
	b _080A2C0C
	.align 2, 0
_080A2A88: .4byte 0x04000040
_080A2A8C: .4byte 0x0400004A
_080A2A90: .4byte 0x00002326
_080A2A94:
	adds r0, r4, #0
	adds r0, #0x99
	ldrb r0, [r0]
	cmp r0, #1
	bne _080A2AA8
	ldr r0, _080A2AA4 @ =0x0875BE54
	b _080A2AB0
	.align 2, 0
_080A2AA4: .4byte 0x0875BE54
_080A2AA8:
	cmp r0, #0
	bne _080A2AAE
	b _080A2C0C
_080A2AAE:
	ldr r0, _080A2AB8 @ =0x0875CE48
_080A2AB0:
	ldr r1, _080A2ABC @ =0x06008000
	bl LZ77UncompVram
	b _080A2C0C
	.align 2, 0
_080A2AB8: .4byte 0x0875CE48
_080A2ABC: .4byte 0x06008000
_080A2AC0:
	adds r0, r4, #0
	adds r0, #0x99
	ldrb r0, [r0]
	cmp r0, #1
	bne _080A2AD4
	ldr r0, _080A2AD0 @ =0x0875CC58
	b _080A2ADC
	.align 2, 0
_080A2AD0: .4byte 0x0875CC58
_080A2AD4:
	cmp r0, #0
	bne _080A2ADA
	b _080A2C0C
_080A2ADA:
	ldr r0, _080A2AE4 @ =0x0875D960
_080A2ADC:
	ldr r1, _080A2AE8 @ =0x06009000
	bl LZ77UncompVram
	b _080A2C0C
	.align 2, 0
_080A2AE4: .4byte 0x0875D960
_080A2AE8: .4byte 0x06009000
_080A2AEC:
	adds r0, r4, #0
	adds r0, #0x99
	ldrb r0, [r0]
	cmp r0, #1
	bne _080A2B00
	ldr r0, _080A2AFC @ =0x0875E990
	b _080A2B08
	.align 2, 0
_080A2AFC: .4byte 0x0875E990
_080A2B00:
	cmp r0, #0
	bne _080A2B06
	b _080A2C0C
_080A2B06:
	ldr r0, _080A2B10 @ =0x0875EB94
_080A2B08:
	ldr r1, _080A2B14 @ =0x0600F000
	bl LZ77UncompVram
	b _080A2C0C
	.align 2, 0
_080A2B10: .4byte 0x0875EB94
_080A2B14: .4byte 0x0600F000
_080A2B18:
	adds r0, r4, #0
	adds r0, #0x99
	ldrb r0, [r0]
	cmp r0, #1
	bne _080A2B30
	ldr r1, _080A2B28 @ =0x040000D4
	ldr r0, _080A2B2C @ =0x08749800
	b _080A2B38
	.align 2, 0
_080A2B28: .4byte 0x040000D4
_080A2B2C: .4byte 0x08749800
_080A2B30:
	cmp r0, #0
	beq _080A2C0C
	ldr r1, _080A2B48 @ =0x040000D4
	ldr r0, _080A2B4C @ =0x08749940
_080A2B38:
	str r0, [r1]
	ldr r0, _080A2B50 @ =0x050000C0
	str r0, [r1, #4]
	ldr r0, _080A2B54 @ =0x800000A0
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _080A2C0C
	.align 2, 0
_080A2B48: .4byte 0x040000D4
_080A2B4C: .4byte 0x08749940
_080A2B50: .4byte 0x050000C0
_080A2B54: .4byte 0x800000A0
_080A2B58:
	adds r0, r4, #0
	adds r0, #0x99
	ldrb r0, [r0]
	cmp r0, #1
	bne _080A2B70
	adds r1, r4, #0
	adds r1, #0xa0
	ldr r0, _080A2B6C @ =0x08749D18
	str r0, [r1]
	b _080A2C0C
	.align 2, 0
_080A2B6C: .4byte 0x08749D18
_080A2B70:
	cmp r0, #0
	beq _080A2C0C
	adds r1, r4, #0
	adds r1, #0xa0
	ldr r0, _080A2B84 @ =0x08749D3E
	str r0, [r1]
	ldr r1, _080A2B88 @ =0x04000014
	movs r0, #4
	strh r0, [r1]
	b _080A2C0C
	.align 2, 0
_080A2B84: .4byte 0x08749D3E
_080A2B88: .4byte 0x04000014
_080A2B8C:
	adds r0, r4, #0
	adds r0, #0x99
	ldrb r0, [r0]
	cmp r0, #0
	beq _080A2C0C
	ldr r1, _080A2BC8 @ =0x03001220
	movs r0, #0x10
	strh r0, [r1]
	ldr r0, _080A2BCC @ =0x03001222
	movs r2, #0
	mov r1, sl
	strh r1, [r0]
	ldr r1, _080A2BD0 @ =0x04000052
	movs r0, #0x10
	strh r0, [r1]
	subs r1, #2
	ldr r3, _080A2BD4 @ =0x00000651
	adds r0, r3, #0
	strh r0, [r1]
	subs r1, #0x50
	movs r3, #0xb7
	lsls r3, r3, #8
	adds r0, r3, #0
	strh r0, [r1]
	movs r0, #1
	strh r0, [r4, #2]
	adds r0, r4, #0
	adds r0, #0x97
	strb r2, [r0]
	b _080A2C0C
	.align 2, 0
_080A2BC8: .4byte 0x03001220
_080A2BCC: .4byte 0x03001222
_080A2BD0: .4byte 0x04000052
_080A2BD4: .4byte 0x00000651
_080A2BD8:
	adds r0, r4, #0
	adds r0, #0x99
	ldrb r0, [r0]
	cmp r0, #0
	beq _080A2C0C
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r2, #0xc0
	lsls r2, r2, #3
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _080A2C04 @ =0x04000050
	movs r1, #0
	mov r3, sl
	strh r3, [r0]
	adds r0, r4, #0
	adds r0, #0x9b
	strb r1, [r0]
	strh r3, [r4, #2]
	subs r0, #5
	strb r1, [r0]
	b _080A2C0C
	.align 2, 0
_080A2C04: .4byte 0x04000050
_080A2C08:
	movs r0, #1
	mov sl, r0
_080A2C0C:
	ldr r0, _080A2D10 @ =gNonGameplayRam
	ldrh r1, [r0, #2]
	adds r3, r0, #0
	cmp r1, #1
	bne _080A2C50
	adds r2, r3, #0
	adds r2, #0x97
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _080A2C50
	movs r0, #0
	strb r0, [r2]
	ldr r2, _080A2D14 @ =0x03001220
	ldrh r0, [r2]
	cmp r0, #0
	beq _080A2C38
	subs r0, #1
	strh r0, [r2]
_080A2C38:
	ldr r1, _080A2D18 @ =0x03001222
	ldrh r0, [r1]
	cmp r0, #0xf
	bhi _080A2C44
	adds r0, #1
	strh r0, [r1]
_080A2C44:
	ldr r0, _080A2D1C @ =0x04000052
	ldrh r1, [r1]
	lsls r1, r1, #8
	ldrh r2, [r2]
	orrs r1, r2
	strh r1, [r0]
_080A2C50:
	adds r1, r3, #0
	adds r0, r1, #0
	adds r0, #0x96
	ldrb r0, [r0]
	cmp r0, #0
	beq _080A2C62
	ldrh r0, [r1, #6]
	adds r0, #1
	strh r0, [r1, #6]
_080A2C62:
	ldr r5, _080A2D20 @ =gOamData
	movs r1, #0
	mov sb, r1
	adds r0, r3, #0
	adds r0, #0x9b
	ldrb r0, [r0]
	cmp r0, #0
	beq _080A2CF6
	adds r0, r3, #0
	adds r0, #0xa0
	ldr r4, [r0]
	ldrh r0, [r4]
	adds r4, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	movs r6, #0
	cmp r6, sb
	bhs _080A2CF6
	mov ip, r3
	movs r7, #3
	movs r2, #0xd
	rsbs r2, r2, #0
	mov r8, r2
_080A2C92:
	ldrh r0, [r4]
	adds r4, #2
	strh r0, [r5]
	adds r5, #2
	lsls r3, r6, #3
	ldr r1, _080A2D20 @ =gOamData
	adds r3, r3, r1
	adds r0, #0x4c
	strb r0, [r3]
	mov r0, ip
	adds r0, #0x9c
	ldrb r1, [r0]
	ands r1, r7
	lsls r1, r1, #2
	ldrb r2, [r3, #1]
	mov r0, r8
	ands r0, r2
	orrs r0, r1
	strb r0, [r3, #1]
	ldrh r0, [r4]
	adds r4, #2
	strh r0, [r5]
	adds r5, #2
	adds r1, r0, #0
	adds r1, #0x82
	ldr r0, _080A2D24 @ =0x000001FF
	ands r1, r0
	ldrh r2, [r3, #2]
	ldr r0, _080A2D28 @ =0xFFFFFE00
	ands r0, r2
	orrs r0, r1
	strh r0, [r3, #2]
	ldrh r0, [r4]
	strh r0, [r5]
	adds r4, #2
	ldr r2, _080A2D2C @ =0x03001521
	ldrb r1, [r2]
	ands r1, r7
	lsls r1, r1, #2
	ldrb r2, [r3, #5]
	mov r0, r8
	ands r0, r2
	orrs r0, r1
	strb r0, [r3, #5]
	adds r5, #4
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, sb
	blo _080A2C92
_080A2CF6:
	mov r0, sb
	ldr r3, _080A2D30 @ =gNextOamSlot
	strb r0, [r3]
	bl ResetFreeOam
	mov r0, sl
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A2D10: .4byte gNonGameplayRam
_080A2D14: .4byte 0x03001220
_080A2D18: .4byte 0x03001222
_080A2D1C: .4byte 0x04000052
_080A2D20: .4byte gOamData
_080A2D24: .4byte 0x000001FF
_080A2D28: .4byte 0xFFFFFE00
_080A2D2C: .4byte 0x03001521
_080A2D30: .4byte gNextOamSlot

	thumb_func_start EndingImageInit
EndingImageInit: @ 0x080A2D34
	push {r4, lr}
	ldr r3, _080A2D7C @ =0x04000208
	movs r4, #0
	strh r4, [r3]
	ldr r2, _080A2D80 @ =0x04000004
	ldrh r1, [r2]
	ldr r0, _080A2D84 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
	ldr r2, _080A2D88 @ =0x04000200
	ldrh r1, [r2]
	ldr r0, _080A2D8C @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	movs r0, #1
	strh r0, [r3]
	ldr r0, _080A2D90 @ =unk_a1cfc
	bl CallbackSetVBlank
	movs r0, #0x80
	lsls r0, r0, #0x13
	strh r4, [r0]
	ldr r2, _080A2D94 @ =gNonGameplayRam
	adds r0, r2, #0
	adds r0, #0x9a
	ldrb r0, [r0]
	cmp r0, #0x63
	bls _080A2D98
	movs r1, #3
	adds r0, r2, #0
	adds r0, #0x99
	ldrb r0, [r0]
	cmp r0, #2
	bne _080A2D9E
	movs r1, #4
	b _080A2D9E
	.align 2, 0
_080A2D7C: .4byte 0x04000208
_080A2D80: .4byte 0x04000004
_080A2D84: .4byte 0x0000FFEF
_080A2D88: .4byte 0x04000200
_080A2D8C: .4byte 0x0000FFFD
_080A2D90: .4byte unk_a1cfc
_080A2D94: .4byte gNonGameplayRam
_080A2D98:
	adds r0, r2, #0
	adds r0, #0x99
	ldrb r1, [r0]
_080A2D9E:
	cmp r1, #1
	beq _080A2E04
	cmp r1, #1
	bgt _080A2DAC
	cmp r1, #0
	beq _080A2DB6
	b _080A2EE8
_080A2DAC:
	cmp r1, #2
	beq _080A2E50
	cmp r1, #3
	beq _080A2E9C
	b _080A2EE8
_080A2DB6:
	ldr r0, _080A2DE0 @ =0x08761A88
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _080A2DE4 @ =0x08767278
	ldr r1, _080A2DE8 @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _080A2DEC @ =0x0878FD10
	ldr r1, _080A2DF0 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _080A2DF4 @ =0x087905AC
	ldr r1, _080A2DF8 @ =0x0600F800
	bl LZ77UncompVram
	ldr r1, _080A2DFC @ =0x040000D4
	ldr r0, _080A2E00 @ =0x08749D58
	b _080A2F0E
	.align 2, 0
_080A2DE0: .4byte 0x08761A88
_080A2DE4: .4byte 0x08767278
_080A2DE8: .4byte 0x06008000
_080A2DEC: .4byte 0x0878FD10
_080A2DF0: .4byte 0x0600F000
_080A2DF4: .4byte 0x087905AC
_080A2DF8: .4byte 0x0600F800
_080A2DFC: .4byte 0x040000D4
_080A2E00: .4byte 0x08749D58
_080A2E04:
	ldr r0, _080A2E2C @ =0x0876A454
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _080A2E30 @ =0x08770084
	ldr r1, _080A2E34 @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _080A2E38 @ =0x08790B6C
	ldr r1, _080A2E3C @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _080A2E40 @ =0x08791408
	ldr r1, _080A2E44 @ =0x0600F800
	bl LZ77UncompVram
	ldr r1, _080A2E48 @ =0x040000D4
	ldr r0, _080A2E4C @ =0x08749F58
	b _080A2F0E
	.align 2, 0
_080A2E2C: .4byte 0x0876A454
_080A2E30: .4byte 0x08770084
_080A2E34: .4byte 0x06008000
_080A2E38: .4byte 0x08790B6C
_080A2E3C: .4byte 0x0600F000
_080A2E40: .4byte 0x08791408
_080A2E44: .4byte 0x0600F800
_080A2E48: .4byte 0x040000D4
_080A2E4C: .4byte 0x08749F58
_080A2E50:
	ldr r0, _080A2E78 @ =0x08772F2C
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _080A2E7C @ =0x087788B8
	ldr r1, _080A2E80 @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _080A2E84 @ =0x087919C8
	ldr r1, _080A2E88 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _080A2E8C @ =0x08792264
	ldr r1, _080A2E90 @ =0x0600F800
	bl LZ77UncompVram
	ldr r1, _080A2E94 @ =0x040000D4
	ldr r0, _080A2E98 @ =0x0874A158
	b _080A2F0E
	.align 2, 0
_080A2E78: .4byte 0x08772F2C
_080A2E7C: .4byte 0x087788B8
_080A2E80: .4byte 0x06008000
_080A2E84: .4byte 0x087919C8
_080A2E88: .4byte 0x0600F000
_080A2E8C: .4byte 0x08792264
_080A2E90: .4byte 0x0600F800
_080A2E94: .4byte 0x040000D4
_080A2E98: .4byte 0x0874A158
_080A2E9C:
	ldr r0, _080A2EC4 @ =0x0877BC2C
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _080A2EC8 @ =0x08781F9C
	ldr r1, _080A2ECC @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _080A2ED0 @ =0x08792824
	ldr r1, _080A2ED4 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _080A2ED8 @ =0x087930C0
	ldr r1, _080A2EDC @ =0x0600F800
	bl LZ77UncompVram
	ldr r1, _080A2EE0 @ =0x040000D4
	ldr r0, _080A2EE4 @ =0x0874A358
	b _080A2F0E
	.align 2, 0
_080A2EC4: .4byte 0x0877BC2C
_080A2EC8: .4byte 0x08781F9C
_080A2ECC: .4byte 0x06008000
_080A2ED0: .4byte 0x08792824
_080A2ED4: .4byte 0x0600F000
_080A2ED8: .4byte 0x087930C0
_080A2EDC: .4byte 0x0600F800
_080A2EE0: .4byte 0x040000D4
_080A2EE4: .4byte 0x0874A358
_080A2EE8:
	ldr r0, _080A2F34 @ =0x08785B44
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl LZ77UncompVram
	ldr r0, _080A2F38 @ =0x0878C650
	ldr r1, _080A2F3C @ =0x06008000
	bl LZ77UncompVram
	ldr r0, _080A2F40 @ =0x08793684
	ldr r1, _080A2F44 @ =0x0600F000
	bl LZ77UncompVram
	ldr r0, _080A2F48 @ =0x08793F20
	ldr r1, _080A2F4C @ =0x0600F800
	bl LZ77UncompVram
	ldr r1, _080A2F50 @ =0x040000D4
	ldr r0, _080A2F54 @ =0x0874A558
_080A2F0E:
	str r0, [r1]
	movs r0, #0xa0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _080A2F58 @ =0x80000100
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _080A2F5C @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	beq _080A2F74
	cmp r0, #4
	bgt _080A2F60
	cmp r0, #3
	beq _080A2F6A
	b _080A2F98
	.align 2, 0
_080A2F34: .4byte 0x08785B44
_080A2F38: .4byte 0x0878C650
_080A2F3C: .4byte 0x06008000
_080A2F40: .4byte 0x08793684
_080A2F44: .4byte 0x0600F000
_080A2F48: .4byte 0x08793F20
_080A2F4C: .4byte 0x0600F800
_080A2F50: .4byte 0x040000D4
_080A2F54: .4byte 0x0874A558
_080A2F58: .4byte 0x80000100
_080A2F5C: .4byte 0x03000011
_080A2F60:
	cmp r0, #5
	beq _080A2F7C
	cmp r0, #6
	beq _080A2F84
	b _080A2F98
_080A2F6A:
	ldr r0, _080A2F70 @ =0x08798FBC
	b _080A2F86
	.align 2, 0
_080A2F70: .4byte 0x08798FBC
_080A2F74:
	ldr r0, _080A2F78 @ =0x087957A8
	b _080A2F86
	.align 2, 0
_080A2F78: .4byte 0x087957A8
_080A2F7C:
	ldr r0, _080A2F80 @ =0x087969F4
	b _080A2F86
	.align 2, 0
_080A2F80: .4byte 0x087969F4
_080A2F84:
	ldr r0, _080A2F90 @ =0x08797D08
_080A2F86:
	ldr r1, _080A2F94 @ =0x06010000
	bl LZ77UncompVram
	b _080A2FA0
	.align 2, 0
_080A2F90: .4byte 0x08797D08
_080A2F94: .4byte 0x06010000
_080A2F98:
	ldr r0, _080A305C @ =0x087944E4
	ldr r1, _080A3060 @ =0x06010000
	bl LZ77UncompVram
_080A2FA0:
	ldr r1, _080A3064 @ =0x040000D4
	ldr r0, _080A3068 @ =0x0874A758
	str r0, [r1]
	ldr r0, _080A306C @ =0x05000200
	str r0, [r1, #4]
	ldr r0, _080A3070 @ =0x80000040
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	subs r1, #0xcc
	ldr r2, _080A3074 @ =0x00001E01
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r3, _080A3078 @ =0x00001F08
	adds r0, r3, #0
	strh r0, [r1]
	subs r1, #0xa
	movs r2, #0x98
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #0x50
	adds r3, #0xd7
	adds r0, r3, #0
	strh r0, [r1]
	ldr r1, _080A307C @ =gNextOamSlot
	movs r0, #0
	strb r0, [r1]
	bl ResetFreeOam
	ldr r1, _080A3080 @ =0x03001224
	movs r0, #0
	strh r0, [r1]
	ldr r2, _080A3084 @ =0x03001226
	movs r3, #0x80
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	ldr r1, _080A3088 @ =gBg1XPosition
	strh r0, [r1]
	ldr r1, _080A308C @ =gBg1YPosition
	strh r0, [r1]
	ldr r1, _080A3090 @ =0x0300122C
	strh r0, [r1]
	ldr r1, _080A3094 @ =0x0300122E
	strh r0, [r1]
	ldr r1, _080A3098 @ =0x03001230
	strh r0, [r1]
	ldr r1, _080A309C @ =0x03001232
	strh r0, [r1]
	ldr r1, _080A30A0 @ =0x04000010
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r2, _080A30A4 @ =gNonGameplayRam
	movs r1, #0
	movs r0, #0x80
	strh r0, [r2, #8]
	strh r1, [r2, #2]
	strh r1, [r2, #4]
	strh r1, [r2, #6]
	adds r1, r2, #0
	adds r1, #0x98
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r1, #0x1f
	movs r0, #0x1f
	adds r2, #0x48
_080A3042:
	strh r1, [r2]
	subs r2, #2
	subs r0, #1
	cmp r0, #0
	bge _080A3042
	ldr r0, _080A30A8 @ =EndingImageVblank
	bl CallbackSetVBlank
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A305C: .4byte 0x087944E4
_080A3060: .4byte 0x06010000
_080A3064: .4byte 0x040000D4
_080A3068: .4byte 0x0874A758
_080A306C: .4byte 0x05000200
_080A3070: .4byte 0x80000040
_080A3074: .4byte 0x00001E01
_080A3078: .4byte 0x00001F08
_080A307C: .4byte gNextOamSlot
_080A3080: .4byte 0x03001224
_080A3084: .4byte 0x03001226
_080A3088: .4byte gBg1XPosition
_080A308C: .4byte gBg1YPosition
_080A3090: .4byte 0x0300122C
_080A3094: .4byte 0x0300122E
_080A3098: .4byte 0x03001230
_080A309C: .4byte 0x03001232
_080A30A0: .4byte 0x04000010
_080A30A4: .4byte gNonGameplayRam
_080A30A8: .4byte EndingImageVblank

	thumb_func_start EndingImage
EndingImage: @ 0x080A30AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	movs r0, #0
	str r0, [sp]
	ldr r0, _080A30D4 @ =0x03000011
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #5
	beq _080A30DC
	cmp r0, #5
	bgt _080A30D8
	cmp r0, #3
	blt _080A30DC
	b _080A3106
	.align 2, 0
_080A30D4: .4byte 0x03000011
_080A30D8:
	cmp r0, #6
	beq _080A3106
_080A30DC:
	ldr r0, _080A30F0 @ =gNonGameplayRam
	adds r0, #0x94
	ldrh r1, [r0]
	ldr r0, _080A30F4 @ =0x00000177
	cmp r1, r0
	bne _080A30F8
	movs r0, #2
	bl EndingImageDisplayLinePermanently
	b _080A3106
	.align 2, 0
_080A30F0: .4byte gNonGameplayRam
_080A30F4: .4byte 0x00000177
_080A30F8:
	movs r0, #0xbe
	lsls r0, r0, #1
	cmp r1, r0
	bne _080A3106
	movs r0, #2
	bl EndingImageLoadTextOam
_080A3106:
	ldr r4, _080A3130 @ =gNonGameplayRam
	adds r3, r4, #0
	adds r3, #0x94
	ldrh r2, [r3]
	adds r0, r2, #1
	strh r0, [r3]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	movs r0, #0xa5
	lsls r0, r0, #1
	cmp r1, r0
	beq _080A3196
	cmp r1, r0
	bgt _080A313E
	cmp r1, #0x1e
	beq _080A3176
	cmp r1, #0x1e
	bgt _080A3134
	cmp r1, #0
	beq _080A316C
	b _080A31D2
	.align 2, 0
_080A3130: .4byte gNonGameplayRam
_080A3134:
	cmp r1, #0x6e
	beq _080A3186
	cmp r1, #0xb4
	beq _080A318E
	b _080A31D2
_080A313E:
	movs r0, #0xc3
	lsls r0, r0, #2
	cmp r1, r0
	beq _080A31AE
	cmp r1, r0
	bgt _080A315A
	movs r0, #0xe6
	lsls r0, r0, #1
	cmp r1, r0
	beq _080A319E
	adds r0, #0x46
	cmp r1, r0
	beq _080A31A6
	b _080A31D2
_080A315A:
	movs r0, #0xac
	lsls r0, r0, #3
	cmp r1, r0
	beq _080A31B6
	movs r0, #0xd0
	lsls r0, r0, #3
	cmp r1, r0
	beq _080A31CC
	b _080A31D2
_080A316C:
	bl EndingDrawIgtAndCompletionPercentage
	movs r0, #1
	strh r0, [r4, #2]
	b _080A31D2
_080A3176:
	movs r0, #0
	bl EndingImageLoadTextOam
	adds r1, r4, #0
	adds r1, #0x97
	movs r0, #1
	strb r0, [r1]
	b _080A31D2
_080A3186:
	movs r0, #0
	bl EndingImageDisplayLinePermanently
	b _080A31D2
_080A318E:
	movs r0, #1
	bl EndingImageDisplayLinePermanently
	b _080A31D2
_080A3196:
	movs r0, #1
	bl EndingImageLoadTextOam
	b _080A31D2
_080A319E:
	movs r0, #3
	bl EndingImageDisplayLinePermanently
	b _080A31D2
_080A31A6:
	movs r0, #4
	bl EndingImageDisplayLinePermanently
	b _080A31D2
_080A31AE:
	movs r0, #5
	bl EndingImageDisplayLinePermanently
	b _080A31D2
_080A31B6:
	ldr r0, _080A31C8 @ =gChangedInput
	ldrh r1, [r0]
	movs r0, #0xb
	ands r0, r1
	cmp r0, #0
	bne _080A31D2
	strh r2, [r3]
	b _080A31D2
	.align 2, 0
_080A31C8: .4byte gChangedInput
_080A31CC:
	ldr r1, [sp]
	adds r1, #1
	str r1, [sp]
_080A31D2:
	ldr r1, _080A32A8 @ =gNonGameplayRam
	ldrh r0, [r1, #2]
	mov ip, r1
	cmp r0, #1
	bne _080A3246
	ldrh r1, [r1, #8]
	cmp r1, #0x7f
	bls _080A3214
	movs r0, #0x7f
	ands r0, r1
	mov r4, ip
	strh r0, [r4, #8]
	mov r2, ip
	adds r2, #0x8c
	ldrh r1, [r4, #4]
	lsls r1, r1, #6
	ldr r0, _080A32AC @ =0x0000FFC0
	subs r0, r0, r1
	str r0, [r2]
	adds r2, #4
	ldrh r1, [r4, #4]
	lsls r1, r1, #6
	ldr r0, _080A32B0 @ =0x0000FF80
	subs r0, r0, r1
	str r0, [r2]
	ldrh r0, [r4, #4]
	adds r0, #1
	movs r1, #0x1f
	ands r0, r1
	strh r0, [r4, #4]
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
_080A3214:
	ldr r3, _080A32B4 @ =0x03001226
	ldrh r0, [r3]
	subs r2, r0, #6
	strh r2, [r3]
	ldr r1, _080A32B8 @ =gBg1YPosition
	ldrh r0, [r1]
	subs r0, #6
	strh r0, [r1]
	mov r1, ip
	ldrh r0, [r1, #8]
	adds r0, #6
	movs r1, #0
	mov r4, ip
	strh r0, [r4, #8]
	lsls r0, r2, #0x10
	cmp r0, #0
	beq _080A3240
	movs r0, #0x80
	lsls r0, r0, #8
	ands r2, r0
	cmp r2, #0
	beq _080A3246
_080A3240:
	strh r1, [r3]
	mov r0, ip
	strh r1, [r0, #2]
_080A3246:
	mov r0, ip
	adds r0, #0x97
	ldrb r0, [r0]
	cmp r0, #1
	bne _080A326C
	movs r6, #6
	mov r0, ip
	adds r0, #0x9b
	ldrb r1, [r0]
	cmp r6, r1
	bge _080A326C
	adds r4, r0, #0
_080A325E:
	adds r0, r6, #0
	bl EndingImageUpdateLettersSpawnDelay
	adds r6, #1
	ldrb r0, [r4]
	cmp r6, r0
	blt _080A325E
_080A326C:
	ldr r1, _080A32A8 @ =gNonGameplayRam
	adds r0, r1, #0
	adds r0, #0x94
	ldrh r2, [r0]
	ldr r0, _080A32BC @ =0x00000564
	mov ip, r1
	cmp r2, r0
	bls _080A327E
	b _080A3404
_080A327E:
	ldr r0, _080A32C0 @ =0x00000329
	cmp r2, r0
	bls _080A3294
	ldr r0, _080A32C4 @ =gButtonInput
	ldrh r1, [r0]
	movs r0, #0xc0
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080A3294
	b _080A3404
_080A3294:
	ldr r5, _080A32C8 @ =gOamData
	ldr r2, _080A32CC @ =gNextOamSlot
	ldrb r1, [r2]
	lsls r0, r1, #3
	adds r5, r0, r5
	mov r8, r1
	mov r6, r8
	movs r4, #0
	b _080A33F0
	.align 2, 0
_080A32A8: .4byte gNonGameplayRam
_080A32AC: .4byte 0x0000FFC0
_080A32B0: .4byte 0x0000FF80
_080A32B4: .4byte 0x03001226
_080A32B8: .4byte gBg1YPosition
_080A32BC: .4byte 0x00000564
_080A32C0: .4byte 0x00000329
_080A32C4: .4byte gButtonInput
_080A32C8: .4byte gOamData
_080A32CC: .4byte gNextOamSlot
_080A32D0:
	movs r1, #0x92
	lsls r1, r1, #1
	adds r0, r3, r1
	adds r0, r4, r0
	ldrb r0, [r0]
	adds r1, r4, #1
	str r1, [sp, #4]
	cmp r0, #1
	bhi _080A32E4
	b _080A33EE
_080A32E4:
	movs r1, #0xb0
	lsls r1, r1, #1
	adds r0, r3, r1
	adds r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0x3f
	bhi _080A32F6
	adds r0, #1
	strb r0, [r1]
_080A32F6:
	movs r7, #0
	cmp r4, #5
	ble _080A3314
	ldrb r0, [r1]
	cmp r0, #3
	bhi _080A3306
_080A3302:
	movs r7, #3
	b _080A3362
_080A3306:
	cmp r0, #7
	bhi _080A330E
_080A330A:
	movs r7, #2
	b _080A3362
_080A330E:
	cmp r0, #0xb
	bhi _080A3362
	b _080A3360
_080A3314:
	cmp r4, #5
	bne _080A3362
	ldr r0, _080A3338 @ =0x00000165
	adds r1, r3, r0
	ldrb r0, [r1]
	cmp r0, #0x3f
	bls _080A3324
	strb r7, [r1]
_080A3324:
	ldrb r0, [r1]
	lsrs r0, r0, #3
	cmp r0, #7
	bhi _080A3362
	lsls r0, r0, #2
	ldr r1, _080A333C @ =_080A3340
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A3338: .4byte 0x00000165
_080A333C: .4byte _080A3340
_080A3340: @ jump table
	.4byte _080A3302 @ case 0
	.4byte _080A330A @ case 1
	.4byte _080A3360 @ case 2
	.4byte _080A3362 @ case 3
	.4byte _080A3362 @ case 4
	.4byte _080A3360 @ case 5
	.4byte _080A330A @ case 6
	.4byte _080A3302 @ case 7
_080A3360:
	movs r7, #1
_080A3362:
	lsls r0, r4, #2
	movs r1, #0xfc
	lsls r1, r1, #1
	add r1, ip
	adds r0, r0, r1
	ldr r3, [r0]
	ldrh r2, [r3]
	adds r3, #2
	movs r0, #0xff
	ands r2, r0
	add r8, r2
	adds r1, r4, #1
	str r1, [sp, #4]
	cmp r6, r8
	bge _080A33EE
	ldr r2, _080A341C @ =gOamData
	lsls r1, r4, #1
	adds r0, #0xbb
	add r0, ip
	adds r0, r0, r1
	mov sl, r0
	lsls r0, r6, #3
	adds r4, r0, r2
	movs r0, #0xbf
	lsls r0, r0, #1
	add r0, ip
	adds r1, r1, r0
	mov sb, r1
	mov r0, r8
	subs r6, r0, r6
_080A339E:
	ldrh r2, [r3]
	adds r3, #2
	strh r2, [r5]
	adds r5, #2
	mov r1, sl
	ldrb r0, [r1]
	adds r0, r0, r2
	strb r0, [r4]
	ldrh r2, [r3]
	adds r3, #2
	strh r2, [r5]
	adds r5, #2
	mov r0, sb
	ldrh r1, [r0]
	adds r1, r2, r1
	ldr r0, _080A3420 @ =0x000001FF
	ands r1, r0
	ldrh r2, [r4, #2]
	ldr r0, _080A3424 @ =0xFFFFFE00
	ands r0, r2
	orrs r0, r1
	strh r0, [r4, #2]
	ldrh r0, [r3]
	strh r0, [r5]
	adds r3, #2
	ldrb r1, [r4, #5]
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r0, r1
	lsls r2, r7, #4
	movs r1, #0xf
	ands r0, r1
	orrs r0, r2
	strb r0, [r4, #5]
	adds r5, #4
	adds r4, #8
	subs r6, #1
	cmp r6, #0
	bne _080A339E
	mov r6, r8
_080A33EE:
	ldr r4, [sp, #4]
_080A33F0:
	mov r3, ip
	adds r0, r3, #0
	adds r0, #0x9b
	ldrb r0, [r0]
	cmp r4, r0
	bge _080A33FE
	b _080A32D0
_080A33FE:
	mov r4, r8
	ldr r1, _080A3428 @ =gNextOamSlot
	strb r4, [r1]
_080A3404:
	bl ResetFreeOam
	ldr r0, [sp]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A341C: .4byte gOamData
_080A3420: .4byte 0x000001FF
_080A3424: .4byte 0xFFFFFE00
_080A3428: .4byte gNextOamSlot
